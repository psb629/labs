echo auto-generated by afni_proc.py, Tue Jan 10 14:40:43 2023
auto-generated by afni_proc.py, Tue Jan 10 14:40:43 2023
echo (version 7.17, July 16, 2021)
(version 7.17, July 16, 2021)
echo execution started: `date`
date
execution started: Tue Jan 10 02:40:44 PM KST 2023
afni -ver
Precompiled binary linux_ubuntu_16_64: Jul 28 2021 (Version AFNI_21.2.04 'Nerva')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   27 Jul 2021
if ( 0 ) then
if ( 0 > 0 ) then
set subj = GP35
endif
set output_dir = /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2
if ( -d /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir -p /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2
mkdir /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/stimuli
3dcopy /mnt/ext5/GP/fmri_data/raw_data/GP35/day1/MPRAGE.GP35.nii /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/MPRAGE.GP35
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dTcat -prefix /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/blip_forward /mnt/ext5/GP/fmri_data/raw_data/GP35/day2/dist_AP.GP35.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.1 s
3dTcat -prefix /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/blip_reverse /mnt/ext5/GP/fmri_data/raw_data/GP35/day2/dist_PA.GP35.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.4 s
3dTcat -prefix /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/pb00.GP35.r01.tcat /mnt/ext5/GP/fmri_data/raw_data/GP35/day2/func.GP35.r01.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 115.3 s
3dTcat -prefix /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/pb00.GP35.r02.tcat /mnt/ext5/GP/fmri_data/raw_data/GP35/day2/func.GP35.r02.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 63.2 s
3dTcat -prefix /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/pb00.GP35.r03.tcat /mnt/ext5/GP/fmri_data/raw_data/GP35/day2/func.GP35.r03.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 60.6 s
set tr_counts = ( 1096 1096 1096 )
cd /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.GP35.r01.tcat+orig.HEAD pb00.GP35.r02.tcat+orig.HEAD pb00.GP35.r03.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 7.7 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 35.6 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 33.6 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GP35.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1194.1 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GP35.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1194.1 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GP35.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1194.1 MB)

-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

3dUnifize -prefix MPRAGE.GP35_unif -GM MPRAGE.GP35+orig
++ 3dUnifize: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + Pre-processing: ADV................UW[s254714]Gm
++ Output dataset ./MPRAGE.GP35_unif+orig.BRIK
++ ===== Elapsed = 19.6 sec
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 4 -legendre pb00.GP35.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 64129 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GP35.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 64179 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GP35.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 64194 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 1096 1096 1096 -index_to_run_tr 76
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
set minoutrun = 01
set minouttr = 76
echo min outlier: run 01, TR 76
tee out.min_outlier.txt
min outlier: run 01, TR 76
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.GP35.r01.despike pb00.GP35.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GP35.r01.tcat+orig
++ processing all 571206 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #8
++ start OpenMP thread #12
++ start OpenMP thread #3
++ start OpenMP thread #9
++ start OpenMP thread #1
++ start OpenMP thread #2
++ start OpenMP thread #10
++ start OpenMP thread #14
++ start OpenMP thread #5
++ start OpenMP thread #11
++ start OpenMP thread #4
++ start OpenMP thread #13
++ start OpenMP thread #7
++ start OpenMP thread #6
....................................................................................................................................................................................................................................................
++ Elapsed despike time =  10s 448ms

++ FINAL: 412740448 data points, 16650740 edits [4.034%], 1519537 big edits [0.368%]
++ Output dataset ./pb01.GP35.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GP35.r02.despike pb00.GP35.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GP35.r02.tcat+orig
++ processing all 571206 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #14
++ start OpenMP thread #2
++ start OpenMP thread #8
++ start OpenMP thread #3
++ start OpenMP thread #9
++ start OpenMP thread #4
++ start OpenMP thread #10
++ start OpenMP thread #11
++ start OpenMP thread #13
++ start OpenMP thread #6
++ start OpenMP thread #12
++ start OpenMP thread #7
++ start OpenMP thread #5
....................................................................................................................................................................................................................................................
++ Elapsed despike time =  10s 390ms

++ FINAL: 412740448 data points, 16541438 edits [4.008%], 1588563 big edits [0.385%]
++ Output dataset ./pb01.GP35.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GP35.r03.despike pb00.GP35.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GP35.r03.tcat+orig
++ processing all 571206 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #6
++ start OpenMP thread #11
++ start OpenMP thread #7
++ start OpenMP thread #1
++ start OpenMP thread #4
++ start OpenMP thread #12
++ start OpenMP thread #13
++ start OpenMP thread #5
++ start OpenMP thread #10
++ start OpenMP thread #3
++ start OpenMP thread #9
++ start OpenMP thread #14
++ start OpenMP thread #8
++ start OpenMP thread #2
....................................................................................................................................................................................................................................................
++ Elapsed despike time =  10s 449ms

++ FINAL: 412740448 data points, 17814047 edits [4.316%], 2272407 big edits [0.551%]
++ Output dataset ./pb01.GP35.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.GP35.r01.tshift pb01.GP35.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GP35.r02.tshift pb01.GP35.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GP35.r03.tshift pb01.GP35.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTstat -median -prefix rm.blip.med.fwd blip_forward+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.fwd+orig.BRIK
3dTstat -median -prefix rm.blip.med.rev blip_reverse+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.rev+orig.BRIK
3dAutomask -apply_prefix rm.blip.med.masked.fwd rm.blip.med.fwd+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.fwd+orig
++ Forming automask
 + Fixed clip level = 2711.333008
 + Used gradual clip level = 2573.760010 .. 2888.620605
 + Number voxels above clip level = 73460
 + Clustering voxels ...
 + Largest cluster has 70726 voxels
 + Clustering voxels ...
 + Largest cluster has 70398 voxels
 + Filled   304 voxels in small holes; now have 70702 voxels
 + Filled     2 voxels in large holes; now have 70704 voxels
 + Clustering voxels ...
 + Largest cluster has 70703 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 500503 voxels
 + Mask now has 70703 voxels
++ 70703 voxels in the mask [out of 571206: 12.38%]
++ first  16 x-planes are zero [from R]
++ last   16 x-planes are zero [from L]
++ first  18 y-planes are zero [from A]
++ last   18 y-planes are zero [from P]
++ first   6 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dAutomask -apply_prefix rm.blip.med.masked.rev rm.blip.med.rev+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.rev+orig
++ Forming automask
 + Fixed clip level = 2671.595215
 + Used gradual clip level = 2472.273682 .. 3022.681152
 + Number voxels above clip level = 73259
 + Clustering voxels ...
 + Largest cluster has 71799 voxels
 + Clustering voxels ...
 + Largest cluster has 69573 voxels
 + Filled   214 voxels in small holes; now have 69787 voxels
 + Filled     3 voxels in large holes; now have 69790 voxels
 + Clustering voxels ...
 + Largest cluster has 69787 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 501368 voxels
 + Mask now has 69838 voxels
++ 69838 voxels in the mask [out of 571206: 12.23%]
++ first  15 x-planes are zero [from R]
++ last   16 x-planes are zero [from L]
++ first  16 y-planes are zero [from A]
++ last   17 y-planes are zero [from P]
++ first   6 z-planes are zero [from I]
++ last   13 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dQwarp -plusminus -pmNAMES Rev For -pblur 0.05 0.05 -blur -1 -1 -noweight -minpatch 9 -source rm.blip.med.masked.rev+orig -base rm.blip.med.masked.fwd+orig -prefix blip_warp
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=3 ytop=3  zbot=4 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=./rm.blip.med.masked.fwd+orig.HEAD  source=./rm.blip.med.masked.rev+orig.HEAD
++ AFNI warpomatic start: 89 x 99 x 81 volume ; autobbox = 8..80 13..87 0..75
lev=0 0..88 4..96 0..80: [first cost=-1.57655] ...... done [cost=-1.74951]
lev=1 patch=67x69x61: [first cost=-1.62788] ........ done [cost:-1.67440 ; 8 patches optimized, 0 skipped]
lev=2 patch=51x53x45: [first cost=-1.59299] ....................... done [cost:-1.68072 ; 23 patches optimized, 4 skipped]
lev=3 patch=37x39x35: [first cost=-1.59645] ..................... done [cost:-1.68274 ; 46 patches optimized, 18 skipped]
lev=4 patch=29x29x25: [first cost=-1.63883] .................. done [cost:-1.70908 ; 98 patches optimized, 52 skipped]
lev=5 patch=21x23x19: [first cost=-1.70908] .................... done [cost:-1.80420 ; 233 patches optimized, 159 skipped]
lev=6 patch=15x17x15: [first cost=-1.72502]  +      cubic12 patch 070..084 036..052 037..051 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x1853800  xbot=0x182c350  xtop=0x1872bf0  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
................ done [cost:-1.80262 ; 546 patches optimized, 354 skipped]
lev=7 patch=11x13x11: [first cost=-1.81177] ............. +      cubic12 patch 073..083 039..051 030..040 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x1853800  xbot=0x182c350  xtop=0x1872bf0  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.................. +      cubic12 patch 055..065 075..087 050..060 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x1853800  xbot=0x182c350  xtop=0x1872bf0  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
........ done [cost:-1.90835 ; 1518 patches optimized, 1407 skipped]
lev=8 patch=9x9x9: [first cost=-1.90782] . +      cubic12 patch 071..079 062..070 034..042 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x1853800  xbot=0x182c350  xtop=0x1872bf0  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
... +      cubic12 patch 067..075 034..042 046..054 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x1853800  xbot=0x182c350  xtop=0x1872bf0  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 +      cubic12 patch 067..075 022..030 034..042 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x1853800  xbot=0x182c350  xtop=0x1872bf0  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
............... +      cubic12 patch 055..063 046..054 062..070 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x1853800  xbot=0x182c350  xtop=0x1872bf0  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
........... +      cubic12 patch 043..051 038..046 006..014 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x1853800  xbot=0x182c350  xtop=0x1872bf0  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
... +      cubic12 patch 039..047 018..026 058..066 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x1853800  xbot=0x182c350  xtop=0x1872bf0  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
..... +      cubic12 patch 031..039 062..070 000..010 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x1853800  xbot=0x182c350  xtop=0x1872bf0  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
...................... +      cubic12 patch 011..019 034..042 054..062 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x1853800  xbot=0x182c350  xtop=0x1872bf0  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
. done [cost:-1.98417 ; 3321 patches optimized, 2835 skipped]
++ ====== total number of parameters 'optimized' = 69705
 +      initial unpenalized cost = -1.57655
 +        final unpenalized cost = -2.01148
 +        final penalized   cost = -1.98417
++ Output dataset ./blip_warp_Rev+orig.BRIK
++ Output dataset ./blip_warp_For+orig.BRIK
++ Output dataset ./blip_warp_Rev_WARP+orig.BRIK
++ Output dataset ./blip_warp_For_WARP+orig.BRIK
++ ===== clock time = 36s 322ms
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.fwd+orig -prefix blip_med_for
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for+orig.BRIK
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.masked.fwd+orig -prefix blip_med_for_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for_masked+orig.BRIK
3dNwarpApply -quintic -nwarp blip_warp_Rev_WARP+orig -source rm.blip.med.masked.rev+orig -prefix blip_med_rev_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.rev+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_rev_masked+orig.BRIK
foreach run ( 01 02 03 )
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GP35.r01.tshift+orig -prefix pb03.GP35.r01.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GP35.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GP35.r01.blip+orig.BRIK
++ total Elapsed time = 110.7 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GP35.r02.tshift+orig -prefix pb03.GP35.r02.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GP35.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GP35.r02.blip+orig.BRIK
++ total Elapsed time = 32.2 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GP35.r03.tshift+orig -prefix pb03.GP35.r03.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GP35.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GP35.r03.blip+orig.BRIK
++ total Elapsed time = 36.4 sec
end
3dbucket -prefix vr_base_min_outlier pb03.GP35.r01.blip+orig[76]
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
align_epi_anat.py -anat2epi -anat MPRAGE.GP35_unif+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off -tshift off
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./MPRAGE.GP35_unif+orig
#++ Multi-cost is lpa
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GP35_unif*
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GP35_unif+orig ./MPRAGE.GP35_unif_unflipped+orig
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./MPRAGE.GP35_unif_unflipped+orig -prefix ./MPRAGE.GP35_unif_unflipped_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 96, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 108, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 120, avoid_vent -1
Warning 3dSkullStrip: Stubborn intersection remaining at smoothing of 120. Ignoring it.#Script is running (command trimmed):
  3dinfo ./MPRAGE.GP35_unif_unflipped_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/MPRAGE.GP35_unif_unflipped_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/vr_base_min_outlier+orig is not oblique
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_ts ./vr_base_min_outlier+orig'[0]'
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_min_outlier_ts_ns ./__tt_vr_base_min_outlier_ts+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 1924.525024
 + Used gradual clip level = 1786.628540 .. 2107.940674
 + Number voxels above clip level = 65805
 + Clustering voxels ...
 + Largest cluster has 63971 voxels
 + Clustering voxels ...
 + Largest cluster has 63800 voxels
 + Filled   223 voxels in small holes; now have 64023 voxels
 + Filled     2 voxels in large holes; now have 64025 voxels
 + Clustering voxels ...
 + Largest cluster has 64025 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 507181 voxels
 + Mask now has 64025 voxels
++ 64025 voxels in the mask [out of 571206: 11.21%]
++ first  16 x-planes are zero [from R]
++ last   17 x-planes are zero [from L]
++ first  19 y-planes are zero [from A]
++ last   17 y-planes are zero [from P]
++ first   6 z-planes are zero [from I]
++ last   14 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_min_outlier_ts_ns+orig
#++ Applying threshold of 4519.280273 on /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/vr_base_min_outlier_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_min_outlier_ts_ns_wt -a ./vr_base_min_outlier_ts_ns+orig -expr 'min(1,(a/4519.280273))'
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpa -wtprefix ./MPRAGE.GP35_unif_unflipped_ns_al_junk_wtal -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GP35_unif_unflipped_ns+orig -prefix ./MPRAGE.GP35_unif_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GP35_unif_al_junk_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GP35_unif_unflipped_ns+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1563680 voxels in -source_automask+2
++ largeness ==> set -twobest 29
++ Zero-pad: zbot=5 ztop=0
++ 64025 voxels [10.5%] in weight mask
++ Number of points for matching = 64025
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.806 50.319 40.032 (index)
 + source center of mass = 110.346 142.493 138.602 (index)
 + source-target CM = -1.049 -3.114 -9.287 (xyz)
 + estimated center of mass shifts = -1.049 -3.114 -9.287
++ shift param auto-range: -71.7..69.6 -82.3..76.1 -76.5..57.9
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.048531 .. 8.951469  center = -1.048531
 + Range param#2 [y-shift] = -13.114494 .. 6.885506  center = -3.114494
 + Range param#3 [z-shift] = -19.287071 .. 0.712929  center = -9.287071
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.048531 .. 38.951469  center = -1.048531
 + Range param#2 [y-shift] = -43.114494 .. 36.885506  center = -3.114494
 + Range param#3 [z-shift] = -49.287071 .. 30.712929  center = -9.287071
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -41.049 ..   38.951
 +       y-shift =  -43.114 ..   36.886
 +       z-shift =  -49.287 ..   30.713
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 1563680 [out of 15493632] voxels
 + base mask has 81603 [out of 609801] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=0 usiz=526.325
 + - copying weight image
 + - using 64025 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 54580 total points stored in 107 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+191)*64 params [top5=*o+-.]:#o++oo*[#6=0.945698] *-++.*[#13=0.942521] *+*[#24=0.934733] **[#31=0.919637] *+oo$.
 + - best 88 costs found:
   o= 0 v= 0.919637:   5.62  -9.78 -15.95  -7.50  -7.50   7.50  [grid]
   o= 1 v= 0.925805:   5.62  -9.78 -15.95  -7.50  -7.50  -7.50  [grid]
   o= 2 v= 0.931539:   5.62   3.55 -15.95  -7.50   7.50  -7.50  [grid]
   o= 3 v= 0.934733:  -7.72  -9.78 -15.95   7.50  -7.50   7.50  [grid]
   o= 4 v= 0.937175:  15.61 -10.77  -5.41  28.00 -35.67 -41.90  [rand]
   o= 5 v= 0.938708:  -7.72  -9.78 -15.95  -7.50  -7.50   7.50  [grid]
   o= 6 v= 0.939611:  -7.72   3.55  -2.62  -7.50  -7.50  30.00  [grid]
   o= 7 v= 0.939626:  23.84 -19.30   3.15   8.31 -30.13  11.21  [rand]
   o= 8 v= 0.940031:  -7.72  23.55  -2.62   7.50  30.00   7.50  [grid]
   o= 9 v= 0.940334:  -7.72   3.55 -15.95  -7.50   7.50  30.00  [grid]
   o=10 v= 0.941068:  -6.21  -8.03 -16.48  -8.66  24.65  35.61  [rand]
   o=11 v= 0.941469:  -7.72   3.55  -2.62  -7.50   7.50  30.00  [grid]
   o=12 v= 0.941831: -22.09  -7.14  -4.98 -37.69 -26.76   3.08  [rand]
   o=13 v= 0.941878: -24.96   3.82   4.64 -13.51  15.92  -9.43  [rand]
   o=14 v= 0.941957:   5.62   3.55 -15.95  -7.50   7.50 -30.00  [grid]
   o=15 v= 0.942115: -15.25   6.34  -4.45 -15.99 -13.53  29.93  [rand]
   o=16 v= 0.942396: -15.25   6.34 -14.13 -15.99  13.53  29.93  [rand]
   o=17 v= 0.942521:   5.62   3.55 -15.95  -7.50   7.50   7.50  [grid]
   o=18 v= 0.942745:   5.62   3.55 -15.95   7.50   7.50 -30.00  [grid]
   o=19 v= 0.943945: -17.70 -10.77  -5.41 -28.00 -35.67  41.90  [rand]
   o=20 v= 0.944269:   5.62   3.55 -15.95 -30.00   7.50   7.50  [grid]
   o=21 v= 0.944938:  25.62   3.55  -2.62   7.50 -30.00 -30.00  [grid]
   o=22 v= 0.945200:  22.86   3.82   4.64 -13.51  15.92  -9.43  [rand]
   o=23 v= 0.945211:  -7.72  -9.78 -15.95  -7.50  30.00  30.00  [grid]
   o=24 v= 0.945318:  13.91   8.04   1.17  35.95  25.02   2.65  [rand]
   o=25 v= 0.945322:  13.16   6.34  -4.45 -15.99 -13.53 -29.93  [rand]
   o=26 v= 0.945689: -10.87  21.64   2.10   3.10  34.36  -2.55  [rand]
   o=27 v= 0.945698:  -7.72   3.55 -15.95   7.50   7.50   7.50  [grid]
   o=28 v= 0.945966:   5.62  -9.78 -15.95   7.50  -7.50  -7.50  [grid]
   o=29 v= 0.946043: -19.54   2.74   5.31 -16.04   3.33 -12.13  [rand]
   o=30 v= 0.946422: -22.09  -7.14 -13.60 -37.69 -26.76   3.08  [rand]
   o=31 v= 0.947250: -12.65   1.44 -13.18 -24.53 -29.49  26.10  [rand]
   o=32 v= 0.947480: -10.87  21.64   2.10  -3.10  34.36   2.55  [rand]
   o=33 v= 0.947755:  23.15   7.22  -4.76  27.51 -29.30 -27.65  [rand]
   o=34 v= 0.947835:   9.94 -26.04  -3.55 -28.14  -8.73 -34.43  [rand]
   o=35 v= 0.948002:  25.62  23.55  -2.62 -30.00  30.00   7.50  [grid]
   o=36 v= 0.948021:  25.62   3.55  -2.62  30.00 -30.00 -30.00  [grid]
   o=37 v= 0.948111:   3.03  -9.34 -17.08   4.32 -22.85  18.95  [rand]
   o=38 v= 0.948140:  -7.72  23.55  -2.62  30.00  30.00 -30.00  [grid]
   o=39 v= 0.948350:  -7.72  -9.78 -15.95   7.50  -7.50  30.00  [grid]
   o=40 v= 0.948617:  22.86   3.82   4.64  13.51  15.92   9.43  [rand]
   o=41 v= 0.948664:   5.62   3.55  17.38   7.50   7.50  30.00  [grid]
   o=42 v= 0.948783:   5.62   3.55 -15.95 -30.00  -7.50   7.50  [grid]
   o=43 v= 0.949054:   5.62  -9.78  17.38  30.00  -7.50  30.00  [grid]
   o=44 v= 0.949066:  25.62   3.55  -2.62  -7.50 -30.00 -30.00  [grid]
   o=45 v= 0.949263:  26.64   3.85  -1.65  12.39 -19.61 -33.02  [rand]
   o=46 v= 0.949444:   8.77  21.64   2.10  -3.10  34.36  -2.55  [rand]
   o=47 v= 0.949980:  13.16   6.34  -4.45  15.99 -13.53 -29.93  [rand]
   o=48 v= 0.950111:   5.62   3.55 -15.95 -30.00  -7.50  -7.50  [grid]
   o=49 v= 0.950125: -22.09   0.91  -4.98 -37.69 -26.76   3.08  [rand]
   o=50 v= 0.950132: -11.04  30.94  -2.77  -9.05  41.60  20.37  [rand]
   o=51 v= 0.950173:   5.62   3.55  17.38 -30.00 -30.00   7.50  [grid]
   o=52 v= 0.950179:  25.43  17.11  -1.36 -38.82 -40.03 -41.87  [rand]
   o=53 v= 0.950180:  -7.72  -9.78 -15.95   7.50  -7.50  -7.50  [grid]
   o=54 v= 0.950296:   5.62   3.55  -2.62 -30.00   7.50  30.00  [grid]
   o=55 v= 0.950651: -11.51  24.15  12.21 -34.95   5.03  42.69  [rand]
   o=56 v= 0.950894:  -7.72   3.55 -15.95  30.00   7.50   7.50  [grid]
   o=57 v= 0.950911:  -7.72  -9.78  -2.62   7.50   7.50  30.00  [grid]
   o=58 v= 0.951011:   4.12   1.80 -16.48  -8.66  24.65  35.61  [rand]
   o=59 v= 0.951049:   5.62   3.55 -15.95   7.50   7.50  -7.50  [grid]
   o=60 v= 0.951102:  -7.72  23.55  -2.62   7.50  30.00  -7.50  [grid]
   o=61 v= 0.951237:  -7.72  -9.78  -2.62  -7.50  -7.50  30.00  [grid]
   o=62 v= 0.951261:  -7.72 -29.78  -2.62  30.00   7.50  30.00  [grid]
   o=63 v= 0.951323:  27.35  -5.90  -1.96  25.02 -41.04 -18.77  [rand]
   o=64 v= 0.951352: -10.87  21.64   2.10   3.10  34.36   2.55  [rand]
   o=65 v= 0.951359:  25.80  31.92  -2.73  42.20  39.43 -22.96  [rand]
   o=66 v= 0.951362:  -7.72  -9.78 -15.95  30.00  -7.50   7.50  [grid]
   o=67 v= 0.951398: -27.72   3.55  -2.62   7.50   7.50  -7.50  [grid]
   o=68 v= 0.951424:   5.62   3.55  17.38   7.50  -7.50  30.00  [grid]
   o=69 v= 0.951476:  -7.72   3.55  -2.62 -30.00   7.50  30.00  [grid]
   o=70 v= 0.951479:  -7.72   3.55  -2.62 -30.00  -7.50  30.00  [grid]
   o=71 v= 0.951557: -19.54   2.74 -23.88 -16.04   3.33  12.13  [rand]
   o=72 v= 0.951647:  -7.72  -9.78 -15.95 -30.00  -7.50 -30.00  [grid]
   o=73 v= 0.951712:   5.62   3.55  17.38  -7.50   7.50  30.00  [grid]
   o=74 v= 0.951720:   4.12   1.80  -2.10  -8.66  24.65  35.61  [rand]
   o=75 v= 0.951741:   1.40   0.59 -30.27  11.43  -3.92   7.36  [rand]
   o=76 v= 0.951804:  25.62  -9.78  -2.62   7.50  -7.50  -7.50  [grid]
   o=77 v= 0.951826: -22.09  -7.14  -4.98 -37.69 -26.76  -3.08  [rand]
   o=78 v= 0.951867: -10.87  21.64   2.10  -3.10  34.36  -2.55  [rand]
   o=79 v= 0.951883: -27.72  -9.78  17.38 -30.00 -30.00  30.00  [grid]
   o=80 v= 0.952031:  -7.72  -9.78 -15.95  -7.50   7.50  30.00  [grid]
   o=81 v= 0.952117:   1.04   1.58   4.43 -19.83 -35.86 -24.18  [rand]
   o=82 v= 0.952147:   5.84   5.96  -5.81 -42.18 -25.76  19.54  [rand]
   o=83 v= 0.952152:   5.62   3.55 -15.95  -7.50  -7.50  -7.50  [grid]
   o=84 v= 0.952195:   9.28  25.70   5.72  30.67  17.79 -20.52  [rand]
   o=85 v= 0.952212:   2.72  19.92   0.83 -23.55  35.33  17.13  [rand]
   o=86 v= 0.952265:  -7.72  -9.78  -2.62   7.50  -7.50  30.00  [grid]
   o=87 v= 0.952316:  25.62   3.55  -2.62  -7.50  -7.50 -30.00  [grid]
 + - A little optimization:*[#16328=0.910727] *[#16330=0.899695] *[#16339=0.89883] *[#16340=0.897122] *[#16343=0.894921] *[#16344=0.893539] *[#16345=0.893452] *[#16346=0.892891] *[#16348=0.891216] *[#16349=0.890125] *[#16350=0.890055] *[#16352=0.888824] *[#16353=0.888733] *[#16358=0.887618] *[#16361=0.887566] *[#16364=0.887337] *[#16365=0.887138] *[#16366=0.88702] *[#16369=0.88687] *[#16370=0.886824] *[#16371=0.886662] *[#16373=0.886657] *[#16374=0.886601] *[#16375=0.886491] *[#16380=0.886395] *[#16381=0.886213] *[#16382=0.885865] *[#16383=0.885592] *[#16386=0.88546] *[#16387=0.885267] *[#16388=0.884977] *[#16389=0.884876] *[#16390=0.884849] *[#16391=0.884834] *[#16392=0.884774] *[#16394=0.884725] *[#16396=0.88466] *[#16397=0.884657] *[#16398=0.884623] *[#16399=0.884601] .*[#16449=0.884598] *[#16452=0.884411] *[#16453=0.884222] *[#16454=0.884128] *[#16459=0.884037] *[#16460=0.883984] *[#16461=0.883964] *[#16464=0.883961] *[#16467=0.883946] *[#16469=0.883944] .......................................................................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.884601:   1.96  -8.22 -15.30  -4.52  -7.88   2.31  [grid]  [f=82]
  *o= 1 v= 0.883944:   1.31  -8.21 -15.47  -4.24  -8.07   2.97  [grid]  [f=66]
   o= 2 v= 0.912010:   6.85   3.03 -11.04  -4.97   6.77 -10.89  [grid]  [f=60]
   o= 3 v= 0.905896:  -2.99  -7.22 -16.87   0.46  -8.61   5.27  [grid]  [f=83]
   o= 4 v= 0.923219:  15.89  -6.96  -6.04  24.73 -33.27 -44.64  [rand]  [f=73]
   o= 5 v= 0.883963:   1.17  -8.25 -15.48  -4.23  -8.04   3.09  [grid]  [f=79]
   o= 6 v= 0.938292:  -8.11   3.25  -2.32  -6.52  -8.15  29.15  [grid]  [f=42]
   o= 7 v= 0.935791:  23.09 -19.17   4.48   9.03 -26.84  11.34  [rand]  [f=52]
   o= 8 v= 0.933718:  -8.86  23.76  -3.41   5.51  30.28   7.06  [grid]  [f=76]
   o= 9 v= 0.904055:  -4.99   0.88  -9.83 -17.60   7.51  42.94  [grid]  [f=70]
   o=10 v= 0.933706:  -4.50  -6.19 -16.72  -6.49  25.59  32.14  [rand]  [f=64]
   o=11 v= 0.916026:  -6.73   2.29  -7.80 -12.66  10.63  33.50  [grid]  [f=75]
   o=12 v= 0.928519: -20.22  -5.69  -7.65 -36.12 -21.65   7.19  [rand]  [f=76]
   o=13 v= 0.931303: -23.79   2.75   2.92 -12.37  13.05 -11.95  [rand]  [f=67]
   o=14 v= 0.929609:   5.95   3.99 -15.23  -5.53   8.26 -24.00  [grid]  [f=51]
   o=15 v= 0.925178: -12.83   5.16  -5.28  -9.66 -14.77  23.52  [rand]  [f=58]
   o=16 v= 0.927369: -11.16   6.08 -13.11 -17.65  16.71  33.99  [rand]  [f=73]
   o=17 v= 0.908791:   1.56   0.75 -15.62  -8.26   2.27  -0.61  [grid]  [f=80]
   o=18 v= 0.930594:   8.65   1.26 -10.62   6.03   4.67 -30.90  [grid]  [f=59]
   o=19 v= 0.929415: -19.24  -7.67  -5.16 -27.93 -38.75  43.16  [rand]  [f=50]
   o=20 v= 0.922828:   5.83   1.28 -17.68 -28.36   1.95   2.64  [grid]  [f=83]
   o=21 v= 0.938738:  24.51   2.88  -1.76   8.86 -29.28 -24.81  [grid]  [f=46]
   o=22 v= 0.933570:  21.28   3.88   1.83 -12.83  14.97 -12.15  [rand]  [f=51]
   o=23 v= 0.936681:  -5.80  -8.15 -17.79  -3.28  25.83  29.79  [grid]  [f=64]
   o=24 v= 0.938248:  15.34   6.21   0.55  35.19  22.93   3.02  [rand]  [f=54]
   o=25 v= 0.931232:  13.18   6.73  -4.40  -7.37  -9.61 -27.60  [rand]  [f=63]
   o=26 v= 0.941032: -10.85  22.58   1.53   1.77  32.53  -0.62  [rand]  [f=78]
   o=27 v= 0.920335:  -9.77   2.17  -9.12   1.72   5.65   5.36  [grid]  [f=81]
   o=28 v= 0.884327:   2.86  -7.26 -14.19  -4.13  -6.53   0.91  [grid]  [f=67]
   o=29 v= 0.926025: -22.92   1.73   3.31 -15.75   4.55  -8.99  [rand]  [f=66]
   o=30 v= 0.930318: -20.16  -7.26 -11.89 -34.55 -31.75  11.24  [rand]  [f=60]
   o=31 v= 0.936169: -12.42   0.92 -10.13 -15.51 -28.05  25.38  [rand]  [f=73]
   o=32 v= 0.936145:  -7.92  22.35   1.03  -2.16  32.25   2.75  [rand]  [f=83]
   o=33 v= 0.940923:  21.36   3.36  -3.28  26.78 -27.76 -27.70  [rand]  [f=83]
   o=34 v= 0.933785:  11.98 -26.21  -5.59 -26.74  -8.03 -28.83  [rand]  [f=57]
   o=35 v= 0.939616:  21.59  22.75  -1.75 -26.88  29.11   4.82  [grid]  [f=83]
   o=36 v= 0.942110:  21.79   3.81  -2.37  29.60 -28.97 -29.34  [grid]  [f=39]
   o=37 v= 0.917860:   0.34  -9.72 -16.69   2.22 -15.67   8.26  [rand]  [f=83]
   o=38 v= 0.947568:  -6.54  23.53  -2.79  30.27  29.63 -30.39  [grid]  [f=43]
   o=39 v= 0.924119:  -4.82  -8.27 -10.71   2.01  -5.79  28.52  [grid]  [f=66]
   o=40 v= 0.938846:  24.34   7.12   2.24  12.09  15.55   9.56  [rand]  [f=55]
   o=41 v= 0.938459:   6.63   1.69  19.50   7.10   6.02  28.02  [grid]  [f=75]
   o=42 v= 0.915656:   5.31   1.45 -18.25 -21.11  -0.60   0.67  [grid]  [f=55]
   o=43 v= 0.938223:  10.42 -12.23  16.29  23.86 -13.07  28.84  [grid]  [f=66]
   o=44 v= 0.936789:  23.91   4.33  -0.97   1.04 -26.41 -27.55  [grid]  [f=77]
   o=45 v= 0.938130:  23.88   3.05  -3.75  12.58 -26.66 -24.33  [rand]  [f=60]
   o=46 v= 0.933348:   9.99  20.40   5.97  -6.26  31.13  -4.66  [rand]  [f=57]
   o=47 v= 0.935853:  13.74   4.01  -5.85  10.81 -15.58 -28.87  [rand]  [f=58]
   o=48 v= 0.913793:   5.08   0.02 -17.53 -17.81  -2.20  -0.18  [grid]  [f=68]
   o=49 v= 0.931314: -20.53  -5.81  -2.94 -32.50 -28.00   2.46  [rand]  [f=65]
   o=50 v= 0.940149:  -9.15  28.46  -3.70  -9.38  42.24  19.48  [rand]  [f=61]
   o=51 v= 0.939083:   6.41   7.05  13.78 -33.84 -29.02   1.39  [grid]  [f=58]
   o=52 v= 0.939426:  24.07  13.32  -1.45 -38.82 -39.64 -42.70  [rand]  [f=45]
   o=53 v= 0.893421:   0.41  -9.17 -17.70  -0.27 -11.80   0.45  [grid]  [f=83]
   o=54 v= 0.920832:   0.65   2.27  -4.19 -36.86   7.63  28.51  [grid]  [f=51]
   o=55 v= 0.943401: -10.30  25.70  13.11 -35.41  10.02  42.36  [rand]  [f=46]
   o=56 v= 0.936152:  -6.01  -0.59 -16.30  32.54   9.18   7.16  [grid]  [f=46]
   o=57 v= 0.932071:  -5.76  -9.92  -7.72  -0.18   1.70  34.09  [grid]  [f=70]
   o=58 v= 0.919705:   1.39  -0.89  -9.79 -12.35  17.26  44.62  [rand]  [f=83]
   o=59 v= 0.912050:   6.29   3.05 -10.54  -4.05   7.77 -11.06  [grid]  [f=63]
   o=60 v= 0.938475:  -7.88  19.24   0.79   8.63  26.80  -5.10  [grid]  [f=53]
   o=61 v= 0.922863:  -4.95  -7.77 -10.98  -0.15  -5.73  31.97  [grid]  [f=65]
   o=62 v= 0.941067:  -8.24 -33.90  -1.20  30.09   6.09  32.01  [grid]  [f=52]
   o=63 v= 0.943186:  25.43  -3.69   0.89  22.57 -41.59 -19.72  [rand]  [f=48]
   o=64 v= 0.936800:  -8.30  21.41   1.89  -1.19  30.62   0.64  [rand]  [f=65]
   o=65 v= 0.948243:  25.23  31.57  -2.51  42.38  39.34 -23.75  [rand]  [f=67]
   o=66 v= 0.943992:  -5.54  -8.68 -14.63  26.21  -5.53   5.52  [grid]  [f=62]
   o=67 v= 0.934407: -21.39   2.92  -1.79   7.23  10.83   3.41  [grid]  [f=76]
   o=68 v= 0.941263:   4.21  -2.23  16.10   6.70  -6.05  28.21  [grid]  [f=48]
   o=69 v= 0.925690:  -2.90   1.81  -6.40 -30.38   6.60  28.01  [grid]  [f=49]
   o=70 v= 0.922825: -10.76   2.56  -8.18 -23.61 -11.60  40.16  [grid]  [f=70]
   o=71 v= 0.927558: -15.07   2.63 -19.68 -16.43   0.28  18.99  [rand]  [f=75]
   o=72 v= 0.937333:  -4.27 -10.65 -12.30 -27.44 -10.79 -30.20  [grid]  [f=60]
   o=73 v= 0.940382:   5.66   3.73  19.20  -0.96   8.18  31.28  [grid]  [f=51]
   o=74 v= 0.920582:   0.90  -0.05 -10.05  -8.34  20.90  40.53  [rand]  [f=83]
   o=75 v= 0.920112:  -0.61  -0.66 -15.80   3.76   0.37   4.57  [rand]  [f=60]
   o=76 v= 0.937175:  25.75 -11.59  -4.00  17.83  -8.04 -14.31  [grid]  [f=66]
   o=77 v= 0.930796: -21.37  -5.65  -2.84 -33.45 -27.46   3.10  [rand]  [f=57]
   o=78 v= 0.940242: -10.47  21.85   0.41   3.36  29.85  -1.23  [rand]  [f=65]
   o=79 v= 0.944384: -23.99  -8.86  17.22 -29.89 -30.13  27.72  [grid]  [f=69]
   o=80 v= 0.932671:  -3.34 -11.32 -12.89  -1.82  19.86  32.29  [grid]  [f=83]
   o=81 v= 0.939395:   0.55  -0.92   6.55 -18.90 -34.47 -21.93  [rand]  [f=53]
   o=82 v= 0.934846:   3.53   5.19  -5.66 -41.93 -28.92  24.56  [rand]  [f=52]
   o=83 v= 0.898273:   3.06  -5.45 -16.24  -3.06  -6.03  -6.96  [grid]  [f=61]
   o=84 v= 0.940026:   6.57  25.89   5.56  29.84  18.10 -21.40  [rand]  [f=56]
   o=85 v= 0.941940:  -0.28  20.32   1.51 -24.15  35.28  18.89  [rand]  [f=49]
   o=86 v= 0.922994:  -4.63  -6.25 -10.61   0.07  -1.93  32.44  [grid]  [f=83]
   o=87 v= 0.942784:  22.10   3.17  -3.37  -5.99  -7.95 -32.11  [grid]  [f=45]
 + - saving # 1 for use with twobest
 + - skip # 5 for twobest: too close to set # 1
 + - skip #28 for twobest: too close to set # 1
 + - skip # 0 for twobest: too close to set # 1
 + - skip #53 for twobest: too close to set # 1
 + - saving #83 for use with twobest
 + - saving # 9 for use with twobest
 + - saving # 3 for use with twobest
 + - saving #17 for use with twobest
 + - saving # 2 for use with twobest
 + - skip #59 for twobest: too close to set # 2
 + - saving #48 for use with twobest
 + - skip #42 for twobest: too close to set #48
 + - saving #11 for use with twobest
 + - saving #37 for use with twobest
 + - saving #58 for use with twobest
 + - saving #75 for use with twobest
 + - saving #27 for use with twobest
 + - skip #74 for twobest: too close to set #58
 + - saving #54 for use with twobest
 + - saving #70 for use with twobest
 + - saving #20 for use with twobest
 + - saving #61 for use with twobest
 + - skip #86 for twobest: too close to set #61
 + - saving # 4 for use with twobest
 + - skip #39 for twobest: too close to set #61
 + - saving #15 for use with twobest
 + - saving #69 for use with twobest
 + - saving #29 for use with twobest
 + - saving #16 for use with twobest
 + - saving #71 for use with twobest
 + - saving #12 for use with twobest
 + - saving #19 for use with twobest
 + - saving #14 for use with twobest
 + - saving #30 for use with twobest
 + - saving #18 for use with twobest
 + - saving #77 for use with twobest
 + - saving #25 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 30 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=0 usiz=526.325
 + - retaining old weight image
 + - using 64025 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 54455 total points stored in 109 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.902556 [o=1 t=0]
 + -- Parameters = 1.1607 -8.5728 -15.4929 -4.5102 -7.0492 2.8038 1.0424 1.0236 0.9825 -0.0032 -0.0023 0.0035
 + - param set #2 has cost=0.890273 [o=83 t=1]
 + -- Parameters = 2.4762 -4.7030 -17.3547 -9.0360 -0.9158 0.0617 1.0421 1.0541 0.8651 -0.0129 -0.0040 -0.0295
 + - param set #3 has cost=0.913312 [o=9 t=2]
 + -- Parameters = -6.2461 1.1302 -9.6662 -15.1777 7.5694 42.7596 0.9255 0.9935 1.0287 0.0025 -0.0046 -0.0061
 + - param set #4 has cost=0.911283 [o=3 t=3]
 + -- Parameters = -1.3646 -7.3157 -16.1238 -1.3412 -7.6271 3.4818 1.0575 1.0008 0.9908 -0.0065 0.0017 0.0005
*[#22513=0.883521] *[#22516=0.882525] *[#22518=0.882286] *[#22523=0.881371] *[#22524=0.881133] *[#22529=0.880425] *[#22530=0.880059] 
 + - param set #5 has cost=0.880059 [o=17 t=4]
 + -- Parameters = 1.6353 -0.6259 -15.4157 -4.8904 0.5753 0.0788 1.0471 0.9533 0.9032 0.0070 0.0015 0.0002
 + - param set #6 has cost=0.928780 [o=2 t=5]
 + -- Parameters = 7.3031 2.9924 -11.9877 -5.5145 6.9819 -10.1973 1.0095 1.0031 0.9909 -0.0036 -0.0025 0.0162
 + - param set #7 has cost=0.929713 [o=48 t=6]
 + -- Parameters = 5.0792 0.3240 -17.7880 -17.6776 -2.1807 -0.3916 1.0007 0.9959 0.9814 0.0018 0.0032 -0.0038
 + - param set #8 has cost=0.919423 [o=11 t=7]
 + -- Parameters = -5.2371 1.4241 -9.4163 -14.3206 9.0312 40.7518 0.9405 0.9948 1.0419 -0.0007 0.0141 0.0014
 + - param set #9 has cost=0.910604 [o=37 t=8]
 + -- Parameters = 1.6388 -9.8535 -17.6184 -4.3650 -8.3591 3.6495 1.0062 1.0214 0.9582 0.0078 -0.0201 -0.0058
 + - param set #10 has cost=0.923153 [o=58 t=9]
 + -- Parameters = 1.5677 -2.0108 -10.5119 -12.1947 15.1642 44.9834 0.9957 1.0190 1.0638 -0.0026 -0.0027 -0.0064
 + - param set #11 has cost=0.912637 [o=75 t=10]
 + -- Parameters = 0.2557 -2.8944 -17.8815 -4.0337 -4.4207 -0.6284 1.0488 1.0093 0.9727 -0.0003 -0.0109 -0.0134
 + - param set #12 has cost=0.928011 [o=27 t=11]
 + -- Parameters = -8.6439 0.3736 -10.4278 1.5982 4.6050 8.4918 1.0683 1.0207 1.0075 0.0059 0.0022 0.0018
 + - param set #13 has cost=0.929425 [o=54 t=12]
 + -- Parameters = 0.7575 1.3257 -4.2658 -37.1636 4.0315 28.6339 0.9618 0.9981 0.9950 -0.0035 0.0004 -0.0049
 + - param set #14 has cost=0.931098 [o=70 t=13]
 + -- Parameters = -11.0554 1.3447 -7.8190 -23.3022 -11.6402 39.5924 1.0118 1.0261 1.0122 -0.0002 0.0228 -0.0077
 + - param set #15 has cost=0.927994 [o=20 t=14]
 + -- Parameters = 5.2722 1.6313 -17.7788 -21.3728 -0.6285 1.1767 1.0138 0.9805 1.0021 -0.0057 0.0011 -0.0062
 + - param set #16 has cost=0.930691 [o=61 t=15]
 + -- Parameters = -4.0431 -7.6814 -11.3216 0.4950 -6.2767 33.7617 0.9864 0.9935 1.0386 -0.0039 -0.0015 -0.0003
 + - param set #17 has cost=0.937608 [o=4 t=16]
 + -- Parameters = 16.2807 -7.3135 -6.0479 24.8326 -32.0234 -44.6094 0.9938 1.0226 0.9926 -0.0033 -0.0009 0.0004
 + - param set #18 has cost=0.936334 [o=15 t=17]
 + -- Parameters = -12.8191 5.4279 -5.4768 -10.1132 -14.7488 23.8670 0.9952 0.9964 1.0156 -0.0039 0.0129 -0.0016
 + - param set #19 has cost=0.939137 [o=69 t=18]
 + -- Parameters = -4.6934 3.3439 -7.1634 -28.3276 6.1679 29.7704 0.9626 0.9810 0.9991 -0.0015 0.0119 -0.0062
 + - param set #20 has cost=0.937278 [o=29 t=19]
 + -- Parameters = -22.4628 1.8425 4.0000 -16.2122 5.4965 -8.3567 0.9862 1.0116 0.9968 -0.0008 -0.0005 -0.0039
 + - param set #21 has cost=0.939919 [o=16 t=20]
 + -- Parameters = -10.6329 6.1189 -13.2668 -19.5808 16.2249 33.6446 0.9926 0.9995 1.0007 0.0006 0.0185 0.0034
 + - param set #22 has cost=0.938682 [o=71 t=21]
 + -- Parameters = -15.5371 3.2865 -19.4695 -16.1994 0.4272 19.1424 1.0069 0.9852 0.9958 0.0001 0.0040 0.0007
 + - param set #23 has cost=0.933457 [o=12 t=22]
 + -- Parameters = -20.6252 -3.7928 -7.6469 -35.2419 -22.0815 7.6835 0.9740 0.9732 0.9580 -0.0059 0.0017 -0.0041
 + - param set #24 has cost=0.933216 [o=19 t=23]
 + -- Parameters = -19.3305 -7.0540 -4.9938 -29.1346 -38.5288 43.4271 1.0087 0.9909 1.0541 0.0002 0.0023 0.0009
 + - param set #25 has cost=0.939413 [o=14 t=24]
 + -- Parameters = 6.2937 3.8795 -16.0250 -6.3886 8.2734 -23.5890 0.9800 1.0305 0.9879 0.0019 0.0009 0.0010
 + - param set #26 has cost=0.940131 [o=30 t=25]
 + -- Parameters = -20.1370 -7.2262 -11.4184 -34.9667 -32.2400 11.9021 1.0035 0.9959 0.9852 -0.0022 0.0015 -0.0035
 + - param set #27 has cost=0.943313 [o=18 t=26]
 + -- Parameters = 8.4799 1.4601 -11.7407 6.0358 4.5440 -30.9253 0.9944 1.0019 1.0107 -0.0010 -0.0000 -0.0001
 + - param set #28 has cost=0.940394 [o=77 t=27]
 + -- Parameters = -21.5688 -5.5322 -2.4680 -33.3626 -27.2993 3.3887 0.9954 0.9975 0.9962 -0.0011 0.0123 -0.0009
 + - param set #29 has cost=0.939847 [o=25 t=28]
 + -- Parameters = 13.5251 7.2740 -4.6251 -7.1752 -8.5094 -26.4834 0.9971 1.0095 0.9997 0.0025 0.0150 0.0017
*[#25024=0.878943] *[#25025=0.877873] *[#25028=0.877225] 
 + - param set #30 has cost=0.877225 [o=-1 t=-1]
 + -- Parameters = 0.2300 -3.5361 -13.7887 -3.0092 -0.0339 0.8070 1.0378 1.0195 0.9370 -0.0000 -0.0010 0.0075
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0951 
 + --- dist(#3,#1) = 0.167 
 + --- dist(#4,#1) = 0.0779 
 + --- dist(#5,#1) = 0.0925 
 + --- dist(#6,#1) = 0.0844 
 + --- dist(#7,#1) = 0.0942 
 + --- dist(#8,#1) = 0.466 
 + --- dist(#9,#1) = 0.444 
 + --- dist(#10,#1) = 0.491 
 + --- dist(#11,#1) = 0.204 
 + --- dist(#12,#1) = 0.111 
 + --- dist(#13,#1) = 0.122 
 + --- dist(#14,#1) = 0.379 
 + --- dist(#15,#1) = 0.163 
 + --- dist(#16,#1) = 0.366 
 + --- dist(#17,#1) = 0.431 
 + --- dist(#18,#1) = 0.474 
 + --- dist(#19,#1) = 0.358 
 + --- dist(#20,#1) = 0.256 
 + --- dist(#21,#1) = 0.284 
 + --- dist(#22,#1) = 0.505 
 + --- dist(#23,#1) = 0.204 
 + --- dist(#24,#1) = 0.322 
 + --- dist(#25,#1) = 0.271 
 + --- dist(#26,#1) = 0.303 
 + --- dist(#27,#1) = 0.365 
 + --- dist(#28,#1) = 0.358 
 + --- dist(#29,#1) = 0.337 
 + --- dist(#30,#1) = 0.353 
++ Start refinement #2 on 30 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=0 usiz=526.325
 + - retaining old weight image
 + - using 64025 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 54869 total points stored in 112 'TOHD(13.984)' bloks (0 duplicates)
 + - param set #1 has cost=0.894379 [o=-1 t=-1]
 + -- Parameters = 0.9091 -3.8103 -15.1417 -4.5268 0.6465 0.6085 1.0363 1.0352 0.9066 -0.0015 -0.0021 0.0083
 + - param set #2 has cost=0.895651 [o=17 t=4]
 + -- Parameters = 1.4206 -1.7889 -15.9167 -5.2707 0.8459 0.2262 1.0492 0.9851 0.8939 0.0078 -0.0019 0.0057
 + - param set #3 has cost=0.897002 [o=83 t=1]
 + -- Parameters = 1.3253 -5.6418 -16.5378 -4.7464 -0.6215 -0.0403 1.0507 1.0507 0.8768 -0.0099 -0.0076 -0.0216
 + - param set #4 has cost=0.917977 [o=1 t=0]
 + -- Parameters = 1.4389 -8.1366 -17.6156 -4.0373 -6.5891 0.2228 1.0473 1.0391 0.9338 -0.0021 0.0021 0.0053
 + - param set #5 has cost=0.903929 [o=37 t=8]
 + -- Parameters = 1.3859 -6.3858 -18.2205 -5.7183 -4.2970 0.7751 1.0637 1.0211 0.8783 -0.0183 -0.0288 -0.0293
 + - param set #6 has cost=0.904609 [o=3 t=3]
 + -- Parameters = -0.7504 -5.3608 -17.3989 -1.4300 -3.1240 -0.8439 1.0598 1.0227 0.8970 0.0055 -0.0003 -0.0043
 + - param set #7 has cost=0.902110 [o=75 t=10]
 + -- Parameters = 0.1818 -4.3723 -18.9976 -3.6221 -3.7869 -1.3128 1.0514 1.0124 0.8871 -0.0053 -0.0034 0.0155
 + - param set #8 has cost=0.926893 [o=9 t=2]
 + -- Parameters = -5.7253 1.2110 -10.1214 -15.3496 7.0949 43.7021 0.9101 0.9905 1.0567 0.0016 -0.0083 -0.0068
 + - param set #9 has cost=0.926597 [o=11 t=7]
 + -- Parameters = -5.1915 0.6942 -10.3246 -14.5128 6.4274 42.3411 0.8940 1.0082 1.0468 0.0046 0.0144 -0.0084
 + - param set #10 has cost=0.936834 [o=58 t=9]
 + -- Parameters = 1.2029 -1.7879 -10.3144 -11.9950 14.6714 44.9902 0.9836 1.0227 1.0846 -0.0018 -0.0015 -0.0074
 + - param set #11 has cost=0.938618 [o=20 t=14]
 + -- Parameters = 5.5648 2.0790 -18.4058 -21.8500 -0.6297 1.0418 1.0148 0.9709 0.9939 -0.0096 -0.0039 0.0058
 + - param set #12 has cost=0.943282 [o=27 t=11]
 + -- Parameters = -8.1831 -0.8381 -10.0612 0.5602 4.3752 8.6289 1.0757 1.0676 1.0141 0.0036 0.0065 0.0008
 + - param set #13 has cost=0.935477 [o=2 t=5]
 + -- Parameters = 6.4609 4.8612 -13.1047 -4.0225 7.2592 -10.3830 1.0215 0.9744 0.9636 -0.0081 -0.0082 0.0247
 + - param set #14 has cost=0.944812 [o=54 t=12]
 + -- Parameters = 0.3452 0.5196 -4.2925 -35.1984 2.7595 27.8476 0.9612 0.9977 1.0028 0.0007 -0.0068 -0.0208
 + - param set #15 has cost=0.937484 [o=48 t=6]
 + -- Parameters = 6.6761 1.5200 -17.9236 -17.9128 -2.3619 -0.1705 0.9910 0.9492 0.9718 -0.0022 0.0093 0.0064
 + - param set #16 has cost=0.943703 [o=61 t=15]
 + -- Parameters = -4.1027 -7.5385 -11.3904 0.3182 -6.0873 33.7105 0.9877 0.9913 1.0443 -0.0026 -0.0021 -0.0014
 + - param set #17 has cost=0.942025 [o=70 t=13]
 + -- Parameters = -10.4020 1.3839 -7.5765 -23.0673 -11.0180 39.8632 1.0148 1.0327 1.0142 -0.0005 0.0389 -0.0018
 + - param set #18 has cost=0.942677 [o=19 t=23]
 + -- Parameters = -19.5019 -5.9380 -4.7778 -29.6839 -39.0667 44.7931 1.0285 0.9777 1.0774 0.0018 0.0059 0.0005
 + - param set #19 has cost=0.943199 [o=12 t=22]
 + -- Parameters = -20.7956 -3.8806 -7.6596 -34.6706 -22.2592 8.4955 0.9789 0.9740 0.9458 -0.0073 0.0032 -0.0079
 + - param set #20 has cost=0.948897 [o=15 t=17]
 + -- Parameters = -11.6900 5.6043 -5.4162 -10.4448 -14.9245 21.9829 0.9980 0.9900 1.0336 -0.0065 0.0201 0.0079
 + - param set #21 has cost=0.950209 [o=29 t=19]
 + -- Parameters = -22.3437 1.6047 4.2239 -17.3512 3.6054 -8.3285 0.9541 1.0109 0.9878 -0.0022 0.0134 -0.0134
 + - param set #22 has cost=0.951703 [o=4 t=16]
 + -- Parameters = 16.8124 -7.5780 -6.6870 24.6931 -32.3497 -44.6663 0.9812 1.0591 0.9700 -0.0015 -0.0039 0.0070
 + - param set #23 has cost=0.942928 [o=71 t=21]
 + -- Parameters = -15.4735 5.5495 -18.8463 -15.8064 0.8496 19.3568 1.0112 0.9443 0.9942 0.0040 0.0146 -0.0015
 + - param set #24 has cost=0.943992 [o=69 t=18]
 + -- Parameters = -4.3015 3.5427 -6.8161 -28.0242 7.6902 31.1387 0.8654 1.0073 0.9903 -0.0050 0.0035 -0.0129
 + - param set #25 has cost=0.948683 [o=14 t=24]
 + -- Parameters = 6.4934 3.6050 -16.3098 -6.7263 8.2163 -24.0864 0.9720 1.0514 0.9812 -0.0003 0.0121 -0.0020
 + - param set #26 has cost=0.947674 [o=25 t=28]
 + -- Parameters = 14.0927 7.4585 -4.2742 -7.1524 -9.3792 -26.2634 0.9694 1.0138 0.9867 0.0028 0.0151 0.0001
 + - param set #27 has cost=0.955017 [o=16 t=20]
 + -- Parameters = -10.5989 6.1761 -13.1828 -19.7668 16.1173 33.8208 0.9939 1.0001 1.0005 -0.0001 0.0202 0.0023
 + - param set #28 has cost=0.950910 [o=30 t=25]
 + -- Parameters = -20.3191 -6.9649 -11.1851 -35.3994 -33.0885 11.7889 0.9978 1.0159 0.9763 -0.0026 0.0011 -0.0050
 + - param set #29 has cost=0.948451 [o=77 t=27]
 + -- Parameters = -21.8893 -3.3642 -3.5471 -33.5868 -26.1735 4.5339 0.9841 0.9834 1.0133 -0.0006 0.0147 -0.0016
 + - param set #30 has cost=0.948564 [o=18 t=26]
 + -- Parameters = 13.2498 -1.5258 -13.4970 3.1026 6.6390 -29.8469 0.9237 1.0824 0.9553 -0.0161 -0.0041 0.0091
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0721 
 + --- dist(#3,#1) = 0.135 
 + --- dist(#4,#1) = 0.0493 
 + --- dist(#5,#1) = 0.17 
 + --- dist(#6,#1) = 0.0568 
 + --- dist(#7,#1) = 0.0804 
 + --- dist(#8,#1) = 0.464 
 + --- dist(#9,#1) = 0.479 
 + --- dist(#10,#1) = 0.122 
 + --- dist(#11,#1) = 0.493 
 + --- dist(#12,#1) = 0.149 
 + --- dist(#13,#1) = 0.192 
 + --- dist(#14,#1) = 0.436 
 + --- dist(#15,#1) = 0.491 
 + --- dist(#16,#1) = 0.208 
 + --- dist(#17,#1) = 0.335 
 + --- dist(#18,#1) = 0.154 
 + --- dist(#19,#1) = 0.368 
 + --- dist(#20,#1) = 0.339 
 + --- dist(#21,#1) = 0.341 
 + --- dist(#22,#1) = 0.299 
 + --- dist(#23,#1) = 0.323 
 + --- dist(#24,#1) = 0.338 
 + --- dist(#25,#1) = 0.274 
 + --- dist(#26,#1) = 0.237 
 + --- dist(#27,#1) = 0.291 
 + --- dist(#28,#1) = 0.375 
 + --- dist(#29,#1) = 0.503 
 + --- dist(#30,#1) = 0.369 
++ Start refinement #3 on 30 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=0 usiz=526.325
 + - retaining old weight image
 + - using 64025 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 54122 total points stored in 110 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.907307 [o=-1 t=-1]
 + -- Parameters = 1.2492 -4.4559 -16.5516 -4.4555 -0.3868 -0.3685 1.0500 1.0390 0.9010 -0.0087 -0.0047 0.0203
 + - param set #2 has cost=0.910029 [o=17 t=4]
 + -- Parameters = 1.6235 -2.2280 -15.7044 -5.4924 1.3517 0.3180 1.0511 0.9962 0.8952 0.0036 -0.0059 0.0073
 + - param set #3 has cost=0.908042 [o=83 t=1]
 + -- Parameters = 1.4680 -4.6886 -16.2681 -4.8139 -0.0396 0.1392 1.0499 1.0437 0.8947 -0.0092 -0.0102 0.0049
 + - param set #4 has cost=0.906733 [o=75 t=10]
 + -- Parameters = 1.0920 -4.7547 -17.2315 -4.7644 -0.5679 0.0006 1.0474 1.0476 0.8988 -0.0099 -0.0155 0.0336
 + - param set #5 has cost=0.909132 [o=37 t=8]
 + -- Parameters = 1.5049 -4.4096 -17.1534 -4.9761 -2.2501 0.4521 1.0523 1.0134 0.8846 -0.0232 -0.0282 -0.0219
 + - param set #6 has cost=0.910724 [o=3 t=3]
 + -- Parameters = 0.2759 -5.2135 -17.1668 -3.2143 -1.1281 -0.5027 1.0463 1.0539 0.8873 0.0114 -0.0070 0.0034
 + - param set #7 has cost=0.912439 [o=1 t=0]
 + -- Parameters = 0.1234 -5.7028 -19.0382 -3.1734 -3.9088 -1.0905 1.0490 1.0389 0.8833 -0.0072 0.0025 0.0095
 + - param set #8 has cost=0.934203 [o=11 t=7]
 + -- Parameters = -5.0238 0.5753 -10.2961 -14.1907 7.0524 42.3465 0.8920 1.0094 1.0445 0.0167 0.0094 -0.0097
 + - param set #9 has cost=0.935045 [o=9 t=2]
 + -- Parameters = -5.7956 1.5389 -10.1009 -15.0495 7.0796 43.5387 0.9093 0.9912 1.0561 -0.0005 -0.0100 -0.0044
 + - param set #10 has cost=0.943569 [o=2 t=5]
 + -- Parameters = 6.9067 4.6329 -13.8649 -3.7494 7.3314 -10.1080 1.0291 0.9692 0.9447 -0.0223 -0.0045 0.0318
 + - param set #11 has cost=0.944946 [o=58 t=9]
 + -- Parameters = 1.1438 -1.7015 -10.2604 -11.9706 14.6184 44.9991 0.9844 1.0271 1.0811 0.0033 -0.0026 -0.0082
 + - param set #12 has cost=0.928022 [o=48 t=6]
 + -- Parameters = 9.3311 -0.2533 -19.4671 -16.2086 0.3786 1.0466 0.9477 0.9248 0.8478 0.0147 0.0081 0.0093
 + - param set #13 has cost=0.944989 [o=20 t=14]
 + -- Parameters = 5.6199 2.2716 -18.1628 -21.0171 -2.1123 0.4722 1.0168 0.9605 0.9725 -0.0122 -0.0038 0.0059
 + - param set #14 has cost=0.945393 [o=70 t=13]
 + -- Parameters = -10.2776 2.0344 -7.2364 -22.9886 -10.8770 39.4897 1.0420 1.0251 1.0143 -0.0024 0.0623 0.0037
 + - param set #15 has cost=0.950155 [o=19 t=23]
 + -- Parameters = -19.5100 -6.1456 -4.6520 -29.7491 -38.9767 44.7170 1.0345 0.9765 1.0942 0.0022 0.0052 0.0001
 + - param set #16 has cost=0.943853 [o=71 t=21]
 + -- Parameters = -15.5867 6.4806 -18.1343 -15.3680 2.5906 19.5847 1.0196 0.9271 0.9672 -0.0006 0.0165 -0.0058
 + - param set #17 has cost=0.949162 [o=12 t=22]
 + -- Parameters = -20.6085 -3.6401 -7.6846 -35.0350 -22.3104 8.5884 0.9826 0.9730 0.9358 -0.0081 0.0031 -0.0094
 + - param set #18 has cost=0.950622 [o=27 t=11]
 + -- Parameters = -9.2341 -1.3286 -10.5979 -2.2887 5.6344 8.4805 1.0763 1.0822 0.9918 0.0007 0.0050 -0.0040
 + - param set #19 has cost=0.952463 [o=61 t=15]
 + -- Parameters = -4.0883 -7.1910 -11.3833 -0.0702 -3.4612 33.6618 0.9828 0.9989 1.0418 -0.0010 -0.0019 -0.0007
 + - param set #20 has cost=0.949579 [o=69 t=18]
 + -- Parameters = -4.5872 3.8117 -7.1313 -27.8954 8.5872 31.8159 0.8580 1.0108 0.9806 0.0071 0.0029 -0.0150
 + - param set #21 has cost=0.954372 [o=54 t=12]
 + -- Parameters = 0.4594 0.9957 -4.1604 -34.4273 2.4364 28.0383 0.9568 0.9977 1.0033 -0.0020 -0.0010 -0.0218
 + - param set #22 has cost=0.950874 [o=25 t=28]
 + -- Parameters = 14.3412 6.4972 -4.1787 -7.8596 -9.6788 -26.4149 0.9564 1.0477 0.9853 0.0048 0.0192 0.0050
 + - param set #23 has cost=0.950609 [o=77 t=27]
 + -- Parameters = -21.4055 -2.4008 -4.7626 -34.5823 -26.1348 7.1463 0.9723 0.9636 0.9825 -0.0212 0.0137 0.0204
 + - param set #24 has cost=0.943306 [o=18 t=26]
 + -- Parameters = 11.6232 0.5553 -13.3192 6.8453 9.4339 -31.3311 0.8376 1.0624 0.9450 -0.0259 0.0073 0.0077
 + - param set #25 has cost=0.952710 [o=14 t=24]
 + -- Parameters = 6.7778 3.6137 -17.3218 -6.3649 5.6651 -24.4773 0.9350 1.0584 0.9881 -0.0191 0.0074 0.0020
 + - param set #26 has cost=0.950124 [o=15 t=17]
 + -- Parameters = -12.9486 4.7812 -5.7350 -9.0909 -14.3512 21.8531 0.8976 1.0036 1.0437 -0.0097 0.0187 0.0050
 + - param set #27 has cost=0.953577 [o=29 t=19]
 + -- Parameters = -22.1938 1.1720 5.1552 -16.1308 4.1560 -7.3185 0.9515 1.0233 1.0042 -0.0025 0.0191 -0.0158
 + - param set #28 has cost=0.943495 [o=30 t=25]
 + -- Parameters = -20.9587 -4.8580 -10.3133 -37.1934 -27.7931 14.2209 1.0040 0.9815 0.8056 0.0026 -0.0387 0.0160
 + - param set #29 has cost=0.953694 [o=4 t=16]
 + -- Parameters = 16.5275 -10.3676 -8.5262 23.9892 -32.1324 -42.9812 0.9922 1.1374 0.8857 -0.0147 -0.0237 0.0031
 + - param set #30 has cost=0.961498 [o=16 t=20]
 + -- Parameters = -10.3346 6.3044 -13.0387 -20.0045 15.7903 33.8466 0.9950 0.9996 0.9995 -0.0010 0.0222 0.0019
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.06 
 + --- dist(#3,#1) = 0.129 
 + --- dist(#4,#1) = 0.25 
 + --- dist(#5,#1) = 0.118 
 + --- dist(#6,#1) = 0.136 
 + --- dist(#7,#1) = 0.109 
 + --- dist(#8,#1) = 0.177 
 + --- dist(#9,#1) = 0.471 
 + --- dist(#10,#1) = 0.484 
 + --- dist(#11,#1) = 0.348 
 + --- dist(#12,#1) = 0.36 
 + --- dist(#13,#1) = 0.117 
 + --- dist(#14,#1) = 0.218 
 + --- dist(#15,#1) = 0.5 
 + --- dist(#16,#1) = 0.181 
 + --- dist(#17,#1) = 0.439 
 + --- dist(#18,#1) = 0.336 
 + --- dist(#19,#1) = 0.354 
 + --- dist(#20,#1) = 0.243 
 + --- dist(#21,#1) = 0.497 
 + --- dist(#22,#1) = 0.331 
 + --- dist(#23,#1) = 0.169 
 + --- dist(#24,#1) = 0.294 
 + --- dist(#25,#1) = 0.374 
 + --- dist(#26,#1) = 0.272 
 + --- dist(#27,#1) = 0.291 
 + --- dist(#28,#1) = 0.478 
 + --- dist(#29,#1) = 0.33 
 + --- dist(#30,#1) = 0.376 
 + - Total coarse refinement net CPU time = 0.0 s; 9882 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=0 usiz=526.325
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 31 cases
 + 54374 total points stored in 111 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.908405 * [o=75 t=10]
 + -- Parameters = 1.0920 -4.7547 -17.2315 -4.7644 -0.5679 0.0006 1.0474 1.0476 0.8988 -0.0099 -0.0155 0.0336
 + - cost(#2)=0.909116   [o=-1 t=-1]
 + -- Parameters = 1.2492 -4.4559 -16.5516 -4.4555 -0.3868 -0.3685 1.0500 1.0390 0.9010 -0.0087 -0.0047 0.0203
 + - cost(#3)=0.909932   [o=83 t=1]
 + -- Parameters = 1.4680 -4.6886 -16.2681 -4.8139 -0.0396 0.1392 1.0499 1.0437 0.8947 -0.0092 -0.0102 0.0049
 + - cost(#4)=0.911266   [o=37 t=8]
 + -- Parameters = 1.5049 -4.4096 -17.1534 -4.9761 -2.2501 0.4521 1.0523 1.0134 0.8846 -0.0232 -0.0282 -0.0219
 + - cost(#5)=0.912035   [o=17 t=4]
 + -- Parameters = 1.6235 -2.2280 -15.7044 -5.4924 1.3517 0.3180 1.0511 0.9962 0.8952 0.0036 -0.0059 0.0073
 + - cost(#6)=0.912564   [o=3 t=3]
 + -- Parameters = 0.2759 -5.2135 -17.1668 -3.2143 -1.1281 -0.5027 1.0463 1.0539 0.8873 0.0114 -0.0070 0.0034
 + - cost(#7)=0.914109   [o=1 t=0]
 + -- Parameters = 0.1234 -5.7028 -19.0382 -3.1734 -3.9088 -1.0905 1.0490 1.0389 0.8833 -0.0072 0.0025 0.0095
 + - cost(#8)=0.930241   [o=48 t=6]
 + -- Parameters = 9.3311 -0.2533 -19.4671 -16.2086 0.3786 1.0466 0.9477 0.9248 0.8478 0.0147 0.0081 0.0093
 + - cost(#9)=0.934692   [o=11 t=7]
 + -- Parameters = -5.0238 0.5753 -10.2961 -14.1907 7.0524 42.3465 0.8920 1.0094 1.0445 0.0167 0.0094 -0.0097
 + - cost(#10)=0.936055   [o=9 t=2]
 + -- Parameters = -5.7956 1.5389 -10.1009 -15.0495 7.0796 43.5387 0.9093 0.9912 1.0561 -0.0005 -0.0100 -0.0044
 + - cost(#11)=0.945438   [o=18 t=26]
 + -- Parameters = 11.6232 0.5553 -13.3192 6.8453 9.4339 -31.3311 0.8376 1.0624 0.9450 -0.0259 0.0073 0.0077
 + - cost(#12)=0.945476   [o=30 t=25]
 + -- Parameters = -20.9587 -4.8580 -10.3133 -37.1934 -27.7931 14.2209 1.0040 0.9815 0.8056 0.0026 -0.0387 0.0160
 + - cost(#13)=0.945855   [o=2 t=5]
 + -- Parameters = 6.9067 4.6329 -13.8649 -3.7494 7.3314 -10.1080 1.0291 0.9692 0.9447 -0.0223 -0.0045 0.0318
 + - cost(#14)=0.946019   [o=71 t=21]
 + -- Parameters = -15.5867 6.4806 -18.1343 -15.3680 2.5906 19.5847 1.0196 0.9271 0.9672 -0.0006 0.0165 -0.0058
 + - cost(#15)=0.946381   [o=58 t=9]
 + -- Parameters = 1.1438 -1.7015 -10.2604 -11.9706 14.6184 44.9991 0.9844 1.0271 1.0811 0.0033 -0.0026 -0.0082
 + - cost(#16)=0.946793   [o=20 t=14]
 + -- Parameters = 5.6199 2.2716 -18.1628 -21.0171 -2.1123 0.4722 1.0168 0.9605 0.9725 -0.0122 -0.0038 0.0059
 + - cost(#17)=0.947243   [o=70 t=13]
 + -- Parameters = -10.2776 2.0344 -7.2364 -22.9886 -10.8770 39.4897 1.0420 1.0251 1.0143 -0.0024 0.0623 0.0037
 + - cost(#18)=0.950696   [o=12 t=22]
 + -- Parameters = -20.6085 -3.6401 -7.6846 -35.0350 -22.3104 8.5884 0.9826 0.9730 0.9358 -0.0081 0.0031 -0.0094
 + - cost(#19)=0.951328   [o=69 t=18]
 + -- Parameters = -4.5872 3.8117 -7.1313 -27.8954 8.5872 31.8159 0.8580 1.0108 0.9806 0.0071 0.0029 -0.0150
 + - cost(#20)=0.952514   [o=15 t=17]
 + -- Parameters = -12.9486 4.7812 -5.7350 -9.0909 -14.3512 21.8531 0.8976 1.0036 1.0437 -0.0097 0.0187 0.0050
 + - cost(#21)=0.951766   [o=19 t=23]
 + -- Parameters = -19.5100 -6.1456 -4.6520 -29.7491 -38.9767 44.7170 1.0345 0.9765 1.0942 0.0022 0.0052 0.0001
 + - cost(#22)=0.951854   [o=77 t=27]
 + -- Parameters = -21.4055 -2.4008 -4.7626 -34.5823 -26.1348 7.1463 0.9723 0.9636 0.9825 -0.0212 0.0137 0.0204
 + - cost(#23)=0.951334   [o=27 t=11]
 + -- Parameters = -9.2341 -1.3286 -10.5979 -2.2887 5.6344 8.4805 1.0763 1.0822 0.9918 0.0007 0.0050 -0.0040
 + - cost(#24)=0.953058   [o=25 t=28]
 + -- Parameters = 14.3412 6.4972 -4.1787 -7.8596 -9.6788 -26.4149 0.9564 1.0477 0.9853 0.0048 0.0192 0.0050
 + - cost(#25)=0.954648   [o=61 t=15]
 + -- Parameters = -4.0883 -7.1910 -11.3833 -0.0702 -3.4612 33.6618 0.9828 0.9989 1.0418 -0.0010 -0.0019 -0.0007
 + - cost(#26)=0.954590   [o=14 t=24]
 + -- Parameters = 6.7778 3.6137 -17.3218 -6.3649 5.6651 -24.4773 0.9350 1.0584 0.9881 -0.0191 0.0074 0.0020
 + - cost(#27)=0.955504   [o=29 t=19]
 + -- Parameters = -22.1938 1.1720 5.1552 -16.1308 4.1560 -7.3185 0.9515 1.0233 1.0042 -0.0025 0.0191 -0.0158
 + - cost(#28)=0.955307   [o=4 t=16]
 + -- Parameters = 16.5275 -10.3676 -8.5262 23.9892 -32.1324 -42.9812 0.9922 1.1374 0.8857 -0.0147 -0.0237 0.0031
 + - cost(#29)=0.956454   [o=54 t=12]
 + -- Parameters = 0.4594 0.9957 -4.1604 -34.4273 2.4364 28.0383 0.9568 0.9977 1.0033 -0.0020 -0.0010 -0.0218
 + - cost(#30)=0.962893   [o=16 t=20]
 + -- Parameters = -10.3346 6.3044 -13.0387 -20.0045 15.7903 33.8466 0.9950 0.9996 0.9995 -0.0010 0.0222 0.0019
 + - cost(#31)=0.997586   [o=-2 t=-2]
 + -- Parameters = -1.0485 -3.1145 -9.2871 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 31 cases
 + - cost(#1)=0.907709 * [o=75 t=10]
 + -- Parameters = 1.3932 -4.4963 -17.1641 -5.3675 -0.6148 0.0617 1.0443 1.0492 0.9035 -0.0103 -0.0146 0.0369
 + - cost(#2)=0.908203   [o=-1 t=-1]
 + -- Parameters = 1.3797 -4.2637 -16.5251 -4.6330 -0.1625 -0.0886 1.0507 1.0395 0.9021 -0.0134 -0.0124 0.0245
 + - cost(#3)=0.908335   [o=83 t=1]
 + -- Parameters = 1.7810 -4.6145 -16.5587 -5.5028 0.0273 0.1652 1.0494 1.0477 0.8960 -0.0219 -0.0163 0.0182
 + - cost(#4)=0.908690   [o=37 t=8]
 + -- Parameters = 1.7760 -4.8035 -17.3600 -5.7281 -1.5425 0.4022 1.0518 1.0169 0.8813 -0.0349 -0.0304 -0.0112
 + - cost(#5)=0.909161   [o=17 t=4]
 + -- Parameters = 1.6778 -2.5243 -15.9190 -5.6049 1.4788 0.8303 1.0453 1.0036 0.8979 -0.0132 -0.0216 0.0200
 + - cost(#6)=0.910341   [o=3 t=3]
 + -- Parameters = 0.4546 -5.3122 -17.1538 -3.7145 -0.6770 -0.2484 1.0400 1.0608 0.8872 -0.0057 -0.0106 0.0088
 + - cost(#7)=0.908765   [o=1 t=0]
 + -- Parameters = 0.6379 -6.3180 -18.8865 -3.9755 -3.1632 -0.1766 1.0443 1.0553 0.8839 -0.0250 -0.0229 0.0184
 + - cost(#8)=0.927880   [o=48 t=6]
 + -- Parameters = 9.5401 -0.3038 -19.6284 -14.4626 1.1926 -0.0680 0.9328 0.9256 0.8424 0.0008 0.0038 0.0092
 + - cost(#9)=0.934433   [o=11 t=7]
 + -- Parameters = -5.0618 0.5769 -10.3196 -14.0448 7.1465 42.3402 0.8909 1.0080 1.0452 0.0239 0.0099 -0.0104
 + - cost(#10)=0.935828   [o=9 t=2]
 + -- Parameters = -5.7858 1.5681 -10.1591 -15.1138 7.2116 43.9971 0.9124 0.9947 1.0494 0.0008 -0.0135 -0.0040
 + - cost(#11)=0.941633   [o=18 t=26]
 + -- Parameters = 12.2765 -0.2043 -13.8631 4.8931 8.8673 -31.9138 0.7855 1.0821 0.9608 -0.0193 0.0238 0.0084
 + - cost(#12)=0.944780   [o=30 t=25]
 + -- Parameters = -21.2489 -5.0752 -10.2617 -36.8948 -27.5303 14.7211 1.0129 0.9840 0.8072 0.0017 -0.0536 0.0152
 + - cost(#13)=0.945041   [o=2 t=5]
 + -- Parameters = 6.8546 4.5727 -13.9796 -4.0060 7.4101 -10.0460 1.0250 0.9695 0.9461 -0.0341 -0.0107 0.0375
 + - cost(#14)=0.944300   [o=71 t=21]
 + -- Parameters = -15.7315 6.5177 -17.8441 -14.9719 3.2306 20.0122 1.0335 0.9224 0.9486 -0.0071 0.0216 -0.0060
 + - cost(#15)=0.945836   [o=58 t=9]
 + -- Parameters = 0.7885 -1.9250 -9.9526 -11.6601 14.3131 44.9915 0.9786 1.0291 1.0812 0.0033 0.0003 -0.0089
 + - cost(#16)=0.946119   [o=20 t=14]
 + -- Parameters = 5.7663 2.2131 -18.2479 -20.7783 -2.4837 0.2280 1.0219 0.9620 0.9752 -0.0210 -0.0033 0.0070
 + - cost(#17)=0.946694   [o=70 t=13]
 + -- Parameters = -10.1001 2.1831 -7.0531 -22.9239 -10.5888 39.1858 1.0473 1.0260 1.0146 -0.0054 0.0735 0.0033
 + - cost(#18)=0.950628   [o=12 t=22]
 + -- Parameters = -20.5781 -3.5797 -7.6447 -35.0676 -22.3457 8.6290 0.9831 0.9720 0.9354 -0.0076 0.0025 -0.0101
 + - cost(#19)=0.950712   [o=69 t=18]
 + -- Parameters = -4.9425 3.4067 -7.0330 -27.4231 8.9873 31.8650 0.8655 1.0146 0.9809 0.0201 0.0033 -0.0201
 + - cost(#20)=0.945060   [o=15 t=17]
 + -- Parameters = -13.7143 3.5148 -6.1742 -7.2483 -14.5144 20.2581 0.7998 1.0431 1.0309 -0.0019 0.0333 0.0269
 + - cost(#21)=0.951744   [o=19 t=23]
 + -- Parameters = -19.4879 -6.2014 -4.6781 -29.7391 -38.9558 44.6935 1.0349 0.9765 1.0940 0.0022 0.0052 0.0001
 + - cost(#22)=0.951701   [o=77 t=27]
 + -- Parameters = -21.3973 -2.2907 -4.8023 -34.4597 -26.1720 7.1974 0.9727 0.9624 0.9805 -0.0129 0.0139 0.0205
 + - cost(#23)=0.950309   [o=27 t=11]
 + -- Parameters = -9.0400 -1.2767 -10.6382 -1.9605 5.5136 8.6165 1.0675 1.0780 0.9919 -0.0004 0.0049 -0.0150
 + - cost(#24)=0.952983   [o=25 t=28]
 + -- Parameters = 14.3519 6.4463 -4.2242 -7.8759 -9.7391 -26.4307 0.9568 1.0461 0.9857 0.0042 0.0201 0.0040
 + - cost(#25)=0.952396   [o=61 t=15]
 + -- Parameters = -3.0192 -5.2565 -10.3215 -4.1717 -3.8456 34.6368 0.9622 0.9972 1.0369 -0.0015 0.0029 -0.0155
 + - cost(#26)=0.954230   [o=14 t=24]
 + -- Parameters = 6.8832 3.7113 -17.2808 -6.4235 5.9207 -24.5561 0.9370 1.0573 0.9869 -0.0247 0.0088 0.0015
 + - cost(#27)=0.955220   [o=29 t=19]
 + -- Parameters = -22.2620 1.2307 5.1655 -16.2183 4.0455 -7.3045 0.9499 1.0231 1.0049 -0.0096 0.0193 -0.0182
 + - cost(#28)=0.954570   [o=4 t=16]
 + -- Parameters = 16.1977 -10.2097 -8.6831 24.0177 -32.4106 -40.2979 0.9959 1.1386 0.8846 -0.0146 -0.0240 0.0038
 + - cost(#29)=0.956361   [o=54 t=12]
 + -- Parameters = 0.4211 1.0061 -4.2106 -34.5245 2.4124 27.9728 0.9561 0.9980 1.0031 -0.0035 0.0004 -0.0221
 + - cost(#30)=0.962513   [o=16 t=20]
 + -- Parameters = -10.2544 6.3800 -12.8897 -20.1375 15.7710 33.6854 0.9982 0.9974 1.0003 -0.0001 0.0309 0.0003
*[#35098=0.865147] *[#35105=0.85891] *[#35108=0.828198] *[#35126=0.821237] *[#35128=0.81913] *[#35129=0.815345] *[#35130=0.812081] *[#35133=0.810958] *[#35134=0.809266] *[#35135=0.809104] *[#35138=0.807793] *[#35139=0.806518] *[#35140=0.806331] *[#35141=0.805621] *[#35142=0.805218] *[#35143=0.804178] *[#35145=0.801805] *[#35146=0.800568] *[#35148=0.80018] *[#35153=0.79966] *[#35154=0.799013] *[#35155=0.798852] *[#35156=0.797716] *[#35157=0.797198] *[#35158=0.796911] *[#35161=0.796537] *[#35166=0.795333] *[#35168=0.795205] *[#35170=0.795002] *[#35171=0.794637] *[#35174=0.793977] *[#35175=0.793966] *[#35177=0.793308] *[#35181=0.792906] *[#35182=0.792444] *[#35187=0.792193] *[#35198=0.792014] *[#35199=0.792007] *[#35200=0.791457] *[#35201=0.791124] *[#35202=0.790628] *[#35213=0.790269] *[#35214=0.790174] *[#35215=0.790043] *[#35216=0.78995] *[#35219=0.789864] *[#35220=0.789829] *[#35222=0.789777] *[#35225=0.789645] *[#35227=0.789532] *[#35232=0.78946] *[#35233=0.789454] 
 + - cost(#31)=0.789454 * [o=-2 t=-2]
 + -- Parameters = 0.3091 -1.8291 -6.0044 -3.9140 0.9622 -0.6697 0.9838 0.9920 0.9694 0.0166 0.0162 0.0017
 + - case #31 [o=-2 t=-2] is now the best
 + - Initial  cost = 0.789454
 + - Initial fine Parameters = 0.3091 -1.8291 -6.0044 -3.9140 0.9622 -0.6697 0.9838 0.9920 0.9694 0.0166 0.0162 0.0017
*[#35274=0.789351] *[#35275=0.78928] *[#35276=0.789258] *[#35277=0.789251] *[#35279=0.789136] *[#35284=0.789079] *[#35285=0.789017] *[#35288=0.788896] *[#35293=0.788628] *[#35302=0.78862] *[#35304=0.788413] *[#35306=0.788379] *[#35307=0.788312] *[#35310=0.78829] *[#35311=0.78821] *[#35332=0.788129] *[#35335=0.788103] *[#35338=0.788092] *[#35339=0.787945] *[#35344=0.787735] *[#35361=0.787698] *[#35367=0.787688] *[#35370=0.787686] *[#35371=0.787685] *[#35373=0.787675] *[#35376=0.787664] *[#35377=0.787645] *[#35378=0.787639] *[#35379=0.787633] *[#35380=0.787627] *[#35383=0.787624] *[#35384=0.787617] *[#35385=0.787613] *[#35387=0.787604] *[#35388=0.787588] *[#35389=0.787574] *[#35390=0.787558] *[#35391=0.787551] *[#35394=0.787542] *[#35397=0.78753] *[#35398=0.787512] *[#35399=0.787498] *[#35402=0.787482] *[#35406=0.787472] *[#35407=0.787459] *[#35408=0.787446] *[#35409=0.787429] *[#35410=0.787405] *[#35411=0.787388] *[#35414=0.78737] *[#35417=0.787353] *[#35421=0.787348] *[#35422=0.787348] *[#35424=0.787346] *[#35426=0.787345] *[#35427=0.787344] *[#35428=0.787342] *[#35431=0.787341] *[#35434=0.787341] *[#35441=0.787339] *[#35442=0.787337] *[#35445=0.787335] *[#35448=0.787334] *[#35450=0.787333] *[#35451=0.78733] *[#35456=0.787325] *[#35459=0.787323] *[#35462=0.787319] *[#35463=0.787314] *[#35464=0.787314] *[#35466=0.787311] *[#35467=0.787308] *[#35468=0.787305] *[#35469=0.787297] *[#35472=0.787294] *[#35475=0.787282] *[#35476=0.787273] *[#35477=0.787259] *[#35478=0.787244] *[#35483=0.787241] *[#35487=0.787239] *[#35488=0.787233] *[#35492=0.787232] *[#35495=0.787231] *[#35498=0.787228] *[#35499=0.787226] *[#35502=0.787225] *[#35503=0.78722] *[#35504=0.787216] *[#35509=0.787213] *[#35518=0.78721] *[#35519=0.787209] *[#35520=0.787208] *[#35521=0.787207] *[#35526=0.787205] *[#35531=0.787204] *[#35533=0.787203] *[#35536=0.787203] *[#35538=0.787203] *[#35540=0.787203] *[#35546=0.787202] *[#35555=0.787202] *[#35556=0.787201] *[#35559=0.787201] *[#35560=0.787201] *[#35564=0.787201] *[#35565=0.787201] *[#35566=0.787201] *[#35567=0.7872] *[#35570=0.7872] *[#35571=0.7872] *[#35573=0.7872] *[#35576=0.7872] *[#35578=0.787199] *[#35583=0.787199] *[#35586=0.787199] *[#35587=0.787199] *[#35588=0.787199] *[#35590=0.787199] *[#35594=0.787199] *[#35595=0.787198] *[#35596=0.787198] *[#35597=0.787198] *[#35598=0.787198] *[#35604=0.787198] *[#35606=0.787198] *[#35607=0.787197] *[#35616=0.787197] *[#35619=0.787197] *[#35620=0.787197] *[#35621=0.787197] *[#35623=0.787197] *[#35624=0.787197] *[#35626=0.787197] *[#35627=0.787197] *[#35630=0.787196] *[#35635=0.787196] *[#35638=0.787196] *[#35640=0.787196] *[#35643=0.787196] *[#35644=0.787196] *[#35645=0.787196] *[#35648=0.787195] *[#35649=0.787195] *[#35650=0.787195] *[#35652=0.787195] *[#35655=0.787195] *[#35657=0.787195] *[#35658=0.787194] *[#35659=0.787194] *[#35660=0.787194] *[#35661=0.787194] *[#35662=0.787194] *[#35663=0.787193] *[#35665=0.787193] *[#35668=0.787193] *[#35669=0.787193] *[#35670=0.787192] *[#35671=0.787192] *[#35672=0.787191] *[#35677=0.787191] *[#35678=0.787191] *[#35679=0.787191] *[#35682=0.78719] *[#35683=0.78719] *[#35684=0.78719] *[#35685=0.787189] *[#35686=0.787189] *[#35687=0.787188] *[#35688=0.787187] *[#35689=0.787185] *[#35690=0.787184] *[#35691=0.787182] *[#35692=0.787179] *[#35693=0.787177] *[#35702=0.787177] *[#35703=0.787176] *[#35704=0.787176] *[#35705=0.787176] *[#35707=0.787175] *[#35711=0.787175] *[#35712=0.787175] *[#35713=0.787175] *[#35714=0.787175] *[#35716=0.787175] *[#35719=0.787175] *[#35721=0.787175] *[#35722=0.787174] *[#35725=0.787174] *[#35730=0.787174] *[#35731=0.787174] *[#35732=0.787174] *[#35733=0.787174] *[#35736=0.787174] *[#35743=0.787174] *[#35745=0.787174] *[#35746=0.787174] *[#35748=0.787174] *[#35749=0.787173] *[#35750=0.787173] *[#35751=0.787173] *[#35752=0.787173] *[#35754=0.787173] *[#35759=0.787173] *[#35762=0.787173] *[#35763=0.787172] *[#35764=0.787172] *[#35765=0.787172] *[#35778=0.787172] *[#35783=0.787172] *[#35788=0.787172] *[#35791=0.787172] *[#35792=0.787172] *[#35793=0.787172] *[#35797=0.787171] *[#35800=0.787171] *[#35808=0.787171] *[#35811=0.787171] *[#35814=0.787171] *[#35815=0.78717] *[#35816=0.78717] *[#35820=0.78717] *[#35823=0.78717] *[#35828=0.78717] *[#35829=0.78717] *[#35833=0.78717] *[#35852=0.78717] *[#35856=0.78717] *[#35859=0.787169] *[#35860=0.787169] *[#35864=0.787169] *[#35865=0.787169] *[#35874=0.787169] *[#35881=0.787169] *[#35883=0.787169] *[#35892=0.787169] *[#35893=0.787168] *[#35900=0.787168] *[#35903=0.787168] *[#35910=0.787168] *[#35915=0.787168] *[#35940=0.787168] *[#35943=0.787168] 
 + - Finalish cost = 0.787168 ; 726 funcs
 + - ini Finalish Parameters = 0.4945 -1.6406 -5.6840 -4.3075 0.6222 -0.2588 0.9828 0.9861 0.9544 0.0089 0.0068 -0.0051
*[#36098=0.787167] *[#36106=0.787166] *[#36109=0.787166] *[#36111=0.787166] *[#36115=0.787163] *[#36122=0.787163] *[#36126=0.787161] *[#36129=0.78716] *[#36131=0.787157] *[#36138=0.787156] *[#36139=0.787156] *[#36144=0.787156] *[#36146=0.787154] *[#36150=0.78715] *[#36153=0.787148] *[#36154=0.787146] *[#36171=0.787144] *[#36180=0.787144] *[#36194=0.787142] *[#36197=0.787142] *[#36198=0.787142] *[#36199=0.787141] *[#36202=0.78714] *[#36203=0.78714] *[#36214=0.787139] *[#36217=0.787138] *[#36226=0.787138] *[#36228=0.787138] *[#36231=0.787137] *[#36236=0.787137] *[#36237=0.787137] *[#36246=0.787137] *[#36255=0.787137] *[#36267=0.787137] *[#36278=0.787137] *[#36279=0.787137] *[#36299=0.787136] *[#36306=0.787136] *[#36338=0.787136] *[#36352=0.787136] *[#36395=0.787136] 
 + - Final    cost = 0.787136 ; 435 funcs
 + Final fine fit Parameters:
       x-shift=  0.5350   y-shift= -1.6585   z-shift= -5.7235  ...  enorm=  5.9829 mm
       z-angle= -4.3249   x-angle=  0.6522   y-angle= -0.1846  ...  total=  4.3788 deg
       x-scale=  0.9832   y-scale=  0.9863   z-scale=  0.9557  ...  vol3D=  0.9268 = base bigger than source
     y/x-shear=  0.0083 z/x-shear=  0.0050 z/y-shear= -0.0042
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.5350 -1.6585 -5.7235 -4.3249 0.6522 -0.1846 0.9832 0.9863 0.9557 0.0083 0.0050 -0.0042
++ Unloading unneeded data
++ Wrote -1Dmatrix_save ./MPRAGE.GP35_unif_al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 32.9
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_MPRAGE.GP35_unif_lr_al_junk -overwrite ./MPRAGE.GP35_unif_unflipped_ns+orig
++ processing ./MPRAGE.GP35_unif_unflipped_ns+orig ...
#Script is running (command trimmed):
  3dAllineate -lpa -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./__tt_MPRAGE.GP35_unif_lr_al_junk+orig -prefix ./MPRAGE.GP35_unif_flip_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GP35_unif_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_MPRAGE.GP35_unif_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1563680 voxels in -source_automask+2
++ largeness ==> set -twobest 29
++ Zero-pad: zbot=5 ztop=0
++ 64025 voxels [10.5%] in weight mask
++ Number of points for matching = 64025
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.806 50.319 40.032 (index)
 + source center of mass = 112.654 142.493 138.602 (index)
 + source-target CM = 1.259 -3.114 -9.287 (xyz)
 + estimated center of mass shifts = 1.259 -3.114 -9.287
++ shift param auto-range: -69.4..71.9 -82.3..76.1 -76.5..57.9
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -8.741081 .. 11.258919  center = 1.258919
 + Range param#2 [y-shift] = -13.114494 .. 6.885506  center = -3.114494
 + Range param#3 [z-shift] = -19.287071 .. 0.712929  center = -9.287071
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -38.741081 .. 41.258919  center = 1.258919
 + Range param#2 [y-shift] = -43.114494 .. 36.885506  center = -3.114494
 + Range param#3 [z-shift] = -49.287071 .. 30.712929  center = -9.287071
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -38.741 ..   41.259
 +       y-shift =  -43.114 ..   36.886
 +       z-shift =  -49.287 ..   30.713
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 1563680 [out of 15493632] voxels
 + base mask has 81603 [out of 609801] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=0 usiz=526.325
 + - copying weight image
 + - using 64025 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 54580 total points stored in 107 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+191)*64 params [top5=*o+-.]:#*[#1=0.975061] **[#2=0.962484] *+++*[#6=0.942134] *-ooooo.o*[#31=0.928795] *o..*[#63=0.927549] *-.$
 + - best 88 costs found:
   o= 0 v= 0.927549:   7.93  -9.78 -15.95  -7.50  -7.50  -7.50  [grid]
   o= 1 v= 0.928795:   7.93  -9.78 -15.95  -7.50  -7.50   7.50  [grid]
   o= 2 v= 0.930062:  -5.41  -9.78 -15.95  -7.50  -7.50   7.50  [grid]
   o= 3 v= 0.938592:  -5.41   3.55 -15.95  -7.50   7.50  30.00  [grid]
   o= 4 v= 0.940004:   7.93   3.55 -15.95   7.50   7.50 -30.00  [grid]
   o= 5 v= 0.941094:  17.91 -10.77  -5.41  28.00 -35.67 -41.90  [rand]
   o= 6 v= 0.942134:  -5.41   3.55 -15.95   7.50   7.50   7.50  [grid]
   o= 7 v= 0.942453:  -3.91  -8.03 -16.48  -8.66  24.65  35.61  [rand]
   o= 8 v= 0.942546:  -5.41   3.55  -2.62 -30.00   7.50  30.00  [grid]
   o= 9 v= 0.943208:  -5.41 -29.78  -2.62  30.00  -7.50  30.00  [grid]
   o=10 v= 0.943499:  27.93   3.55  17.38  -7.50  -7.50  30.00  [grid]
   o=11 v= 0.944152: -15.39 -10.77  -5.41 -28.00 -35.67  41.90  [rand]
   o=12 v= 0.944165: -15.39   4.54  -5.41 -28.00 -35.67  41.90  [rand]
   o=13 v= 0.944288:   5.34  -9.34 -17.08   4.32 -22.85  18.95  [rand]
   o=14 v= 0.944672:  -5.41  -9.78 -15.95   7.50  -7.50   7.50  [grid]
   o=15 v= 0.945018: -19.78  -7.14 -13.60 -37.69 -26.76   3.08  [rand]
   o=16 v= 0.945132: -12.95   6.34 -14.13 -15.99  13.53  29.93  [rand]
   o=17 v= 0.945252:   7.93   3.55  -2.62 -30.00   7.50  30.00  [grid]
   o=18 v= 0.946012:   7.93   3.55 -15.95  -7.50   7.50  -7.50  [grid]
   o=19 v= 0.946016:   7.93   3.55 -15.95 -30.00  -7.50   7.50  [grid]
   o=20 v= 0.946070:  -5.41   3.55  -2.62  -7.50   7.50  30.00  [grid]
   o=21 v= 0.946126:  27.93   3.55  -2.62   7.50  -7.50   7.50  [grid]
   o=22 v= 0.946164:  -5.41  -9.78 -15.95 -30.00  -7.50 -30.00  [grid]
   o=23 v= 0.946485:  -5.41 -29.78  -2.62  30.00   7.50  30.00  [grid]
   o=24 v= 0.947088:  -4.84   3.24   7.14  16.81 -28.15  41.40  [rand]
   o=25 v= 0.947106: -25.41   3.55  -2.62 -30.00 -30.00  30.00  [grid]
   o=26 v= 0.947845:   7.93   3.55 -15.95 -30.00   7.50   7.50  [grid]
   o=27 v= 0.948038:  -5.41   3.55  -2.62  30.00   7.50 -30.00  [grid]
   o=28 v= 0.948269:   7.93   3.55  -2.62 -30.00   7.50   7.50  [grid]
   o=29 v= 0.948383:  -5.41  -9.78 -15.95  -7.50  30.00  30.00  [grid]
   o=30 v= 0.948539:  -5.41   3.55  -2.62  30.00  -7.50 -30.00  [grid]
   o=31 v= 0.948603:  -5.41  -9.78  -2.62   7.50   7.50  30.00  [grid]
   o=32 v= 0.948764:  -5.41  23.55  -2.62  30.00  30.00 -30.00  [grid]
   o=33 v= 0.948807:  16.28  23.09 -16.19 -30.75  34.00 -35.37  [rand]
   o=34 v= 0.948858:  -5.41  -9.78  -2.62   7.50  -7.50  30.00  [grid]
   o=35 v= 0.949020: -12.95   6.34  -4.45 -15.99 -13.53  29.93  [rand]
   o=36 v= 0.949062:  27.93   3.55  -2.62   7.50   7.50   7.50  [grid]
   o=37 v= 0.949170:   7.93   3.55  -2.62  30.00   7.50  30.00  [grid]
   o=38 v= 0.949259:  -4.08 -32.87   4.39  22.21   7.92  40.02  [rand]
   o=39 v= 0.949284:   7.93   3.55 -15.95   7.50  -7.50 -30.00  [grid]
   o=40 v= 0.949347:  -5.41   3.55  -2.62  30.00 -30.00  30.00  [grid]
   o=41 v= 0.949376:  -5.41   3.55  17.38  30.00 -30.00   7.50  [grid]
   o=42 v= 0.949383:  25.17   3.82   4.64  13.51  15.92   9.43  [rand]
   o=43 v= 0.949438:   7.93  -9.78 -15.95  -7.50  -7.50 -30.00  [grid]
   o=44 v= 0.949515: -14.72  16.38  -3.56  20.53  -3.14  10.08  [rand]
   o=45 v= 0.949548: -10.34   1.44 -13.18 -24.53 -29.49  26.10  [rand]
   o=46 v= 0.949605:   5.34  -9.34 -17.08  -4.32 -22.85 -18.95  [rand]
   o=47 v= 0.949657:  -5.41   3.55  -2.62   7.50   7.50  -7.50  [grid]
   o=48 v= 0.949699: -12.95   6.34  -4.45 -15.99  13.53  29.93  [rand]
   o=49 v= 0.949733:  -5.41   3.55  -2.62  30.00  -7.50   7.50  [grid]
   o=50 v= 0.949857:  27.93   3.55  -2.62  -7.50 -30.00 -30.00  [grid]
   o=51 v= 0.950076:   7.93  -9.78 -15.95   7.50  -7.50  -7.50  [grid]
   o=52 v= 0.950112:  -2.33  33.09   7.29 -36.12  41.59 -17.14  [rand]
   o=53 v= 0.950114: -18.53  13.63   8.39   2.96  -2.59  18.65  [rand]
   o=54 v= 0.950194:  26.15 -19.30   3.15   8.31 -30.13  11.21  [rand]
   o=55 v= 0.950323:   7.93  -9.78 -15.95  -7.50   7.50   7.50  [grid]
   o=56 v= 0.950382:   6.42   1.80 -16.48   8.66  24.65  35.61  [rand]
   o=57 v= 0.950385: -13.76 -34.28   8.93  14.81 -37.49  36.90  [rand]
   o=58 v= 0.950463: -22.65   3.82   4.64 -13.51  15.92  -9.43  [rand]
   o=59 v= 0.950552: -10.34   1.44  -5.39 -24.53 -29.49  26.10  [rand]
   o=60 v= 0.950588:  -5.41   3.55 -15.95   7.50   7.50  -7.50  [grid]
   o=61 v= 0.950641:  16.28  28.06 -27.51 -14.81  37.49 -36.90  [rand]
   o=62 v= 0.950694:  26.68   4.30  17.83  -5.61 -11.01  21.77  [rand]
   o=63 v= 0.950712:   7.93   3.55 -15.95 -30.00  -7.50  -7.50  [grid]
   o=64 v= 0.950789:  -5.41  -9.78 -15.95   7.50  -7.50  30.00  [grid]
   o=65 v= 0.950967:  -5.41   3.55  -2.62   7.50   7.50  30.00  [grid]
   o=66 v= 0.951163:  -5.41   3.55 -15.95  30.00   7.50   7.50  [grid]
   o=67 v= 0.951187:   7.93   3.55  17.38   7.50  -7.50  30.00  [grid]
   o=68 v= 0.951266:  24.11  20.46 -19.70  -5.91  29.74 -29.45  [rand]
   o=69 v= 0.951378:  27.93   3.55  -2.62   7.50 -30.00 -30.00  [grid]
   o=70 v= 0.951393:  -8.56  21.64   2.10  -3.10  34.36   2.55  [rand]
   o=71 v= 0.951490: -25.41  23.55  -2.62  30.00  30.00  -7.50  [grid]
   o=72 v= 0.951502:   7.93  23.55  -2.62 -30.00  30.00   7.50  [grid]
   o=73 v= 0.951618:  25.17   3.82   4.64  13.51 -15.92   9.43  [rand]
   o=74 v= 0.951663:  -9.73 -26.04  -3.55  28.14   8.73  34.43  [rand]
   o=75 v= 0.951681:   7.93  -9.78 -15.95 -30.00   7.50  -7.50  [grid]
   o=76 v= 0.951775:  -5.41   3.55 -15.95  -7.50   7.50   7.50  [grid]
   o=77 v= 0.951805: -19.78   0.91  -4.98 -37.69 -26.76   3.08  [rand]
   o=78 v= 0.951858:  29.66  -5.90  -1.96  25.02 -41.04 -18.77  [rand]
   o=79 v= 0.951917: -26.37  22.89  -2.05  42.31  22.37 -24.19  [rand]
   o=80 v= 0.951944:  -2.83   1.72  -2.00  19.41 -35.34 -37.24  [rand]
   o=81 v= 0.952083:  -5.41   3.55  -2.62   7.50  30.00  30.00  [grid]
   o=82 v= 0.952085:  27.93   3.55  -2.62  30.00 -30.00 -30.00  [grid]
   o=83 v= 0.952142:  27.73  17.11 -17.22 -38.82  40.03 -41.87  [rand]
   o=84 v= 0.952181:  -5.41   3.55  -2.62   7.50 -30.00  30.00  [grid]
   o=85 v= 0.952215:  -5.41   3.55  17.38  30.00 -30.00  -7.50  [grid]
   o=86 v= 0.952236:  11.72  24.15  12.21  34.95   5.03 -42.69  [rand]
   o=87 v= 0.952281:  -3.91   1.80  -2.10   8.66 -24.65  35.61  [rand]
 + - A little optimization:*[#16327=0.927327] *[#16328=0.924044] *[#16330=0.922275] *[#16331=0.922274] *[#16332=0.918477] *[#16333=0.914238] *[#16339=0.913389] *[#16341=0.91026] *[#16346=0.908802] *[#16347=0.908407] *[#16350=0.90665] *[#16353=0.905716] *[#16356=0.905089] *[#16359=0.904534] *[#16362=0.903703] *[#16365=0.902781] *[#16370=0.90243] *[#16371=0.901501] *[#16374=0.900824] *[#16377=0.900755] *[#16379=0.900722] *[#16382=0.900598] *[#16384=0.90059] *[#16385=0.900568] *[#16386=0.900529] *[#16389=0.900513] *[#16391=0.900495] *[#16393=0.900486] ........................................................................................
 + - costs of the above after a little optimization:
  *o= 0 v= 0.900486:   4.54  -8.87 -14.65  -6.95  -9.88   4.46  [grid]  [f=73]
   o= 1 v= 0.906804:   6.10  -6.66 -15.30  -7.95  -6.34   2.20  [grid]  [f=51]
   o= 2 v= 0.909199:  -3.51  -8.30 -15.73  -4.62  -8.41   9.66  [grid]  [f=72]
   o= 3 v= 0.917658:  -8.49   1.07 -13.72 -11.36   5.06  28.53  [grid]  [f=61]
   o= 4 v= 0.936910:   8.61   3.36 -15.02   7.01   8.04 -30.39  [grid]  [f=43]
   o= 5 v= 0.930332:  16.28 -10.82  -7.03  20.42 -38.01 -44.86  [rand]  [f=53]
   o= 6 v= 0.917329:  -8.48   4.45 -10.24   5.21   5.19  12.35  [grid]  [f=46]
   o= 7 v= 0.941105:  -4.14  -8.55 -17.02  -9.08  22.96  35.88  [rand]  [f=45]
   o= 8 v= 0.916627:  -5.86   4.42  -5.32 -23.33  11.20  33.07  [grid]  [f=78]
   o= 9 v= 0.936897:  -4.81 -30.23  -0.42  26.52   0.21  34.92  [grid]  [f=53]
   o=10 v= 0.935375:  27.06   3.37  16.63  -4.21 -10.71  29.49  [grid]  [f=83]
   o=11 v= 0.929632: -17.07  -7.14  -6.16 -30.26 -39.39  43.37  [rand]  [f=48]
   o=12 v= 0.931188: -16.70   5.28  -1.65 -29.89 -32.54  37.69  [rand]  [f=60]
   o=13 v= 0.925666:   3.27 -11.71 -16.70   5.33 -19.53  14.61  [rand]  [f=49]
   o=14 v= 0.912808:  -1.98  -6.09 -15.01   0.71  -8.33   8.35  [grid]  [f=83]
   o=15 v= 0.931917: -18.38  -4.46 -11.67 -35.00 -26.88   9.55  [rand]  [f=56]
   o=16 v= 0.920445: -10.58   5.81  -9.77 -16.43  13.08  29.93  [rand]  [f=83]
   o=17 v= 0.917956:   4.94   3.79  -4.90 -31.03   8.46  22.35  [grid]  [f=75]
   o=18 v= 0.910610:   8.45   0.53 -15.44 -12.85   2.19  -3.98  [grid]  [f=83]
   o=19 v= 0.919085:   8.46   1.84 -15.60 -23.33  -3.99   1.89  [grid]  [f=83]
   o=20 v= 0.916609:  -5.20   0.66  -8.15  -6.52   9.57  29.93  [grid]  [f=83]
   o=21 v= 0.937878:  25.97   4.11  -9.38   6.10 -10.40   3.82  [grid]  [f=48]
   o=22 v= 0.942999:  -5.41  -9.40 -15.89 -30.09  -3.27 -30.59  [grid]  [f=34]
   o=23 v= 0.932452:  -6.17 -23.16  -4.55  28.04   4.38  32.15  [grid]  [f=53]
   o=24 v= 0.939260:  -9.89   2.74   7.69  16.15 -30.98  40.20  [rand]  [f=81]
   o=25 v= 0.928744: -20.58   2.84  -2.36 -31.24 -29.86  31.95  [grid]  [f=83]
   o=26 v= 0.929126:   7.04   1.56 -17.84 -31.52   3.29   2.65  [grid]  [f=56]
   o=27 v= 0.937529:  -0.24   2.56  -1.14  28.46   5.42 -31.16  [grid]  [f=55]
   o=28 v= 0.931819:   9.69   1.83  -2.51 -28.38   8.58  11.17  [grid]  [f=56]
   o=29 v= 0.942661:  -5.33  -8.02 -17.80  -6.00  28.97  28.68  [grid]  [f=55]
   o=30 v= 0.927168:  -4.32   1.62 -10.38  23.61 -18.61 -37.04  [grid]  [f=64]
   o=31 v= 0.929582:  -4.76  -9.70  -8.54   6.84   3.87  33.81  [grid]  [f=60]
   o=32 v= 0.942770:  -5.03  22.48  -3.96  28.82  35.40 -30.33  [grid]  [f=69]
   o=33 v= 0.942509:  18.86  22.69 -16.06 -31.06  32.52 -31.60  [rand]  [f=41]
   o=34 v= 0.930025:  -4.59 -11.28  -7.69   9.77  -9.35  28.98  [grid]  [f=50]
   o=35 v= 0.925487: -11.03  -4.85  -5.95 -13.16  -5.28  33.63  [rand]  [f=75]
   o=36 v= 0.939410:  28.35   4.79   3.34   6.38  10.60  10.16  [grid]  [f=55]
   o=37 v= 0.936526:   6.80   3.33  -2.86  24.17  15.33  30.82  [grid]  [f=59]
   o=38 v= 0.943679:  -4.34 -30.24   4.68  22.41   8.19  36.19  [rand]  [f=50]
   o=39 v= 0.936472:   9.33   6.82 -13.91   1.14  -6.19 -29.81  [grid]  [f=83]
   o=40 v= 0.941780:  -4.96   3.44   3.05  29.38 -32.70  27.43  [grid]  [f=51]
   o=41 v= 0.934267:  -4.82  -0.06  14.69  30.08 -36.19   3.03  [grid]  [f=75]
   o=42 v= 0.936112:  29.95   5.47   3.01   9.51  17.54   7.73  [rand]  [f=83]
   o=43 v= 0.932425:   2.34  -8.96 -15.16  -8.07  -9.17 -25.79  [grid]  [f=59]
   o=44 v= 0.936732: -12.77  12.94  -1.91  16.89  -1.14  10.17  [rand]  [f=83]
   o=45 v= 0.945856: -11.05   2.51 -13.14 -18.78 -29.24  26.99  [rand]  [f=48]
   o=46 v= 0.922119:   6.97  -7.82 -13.41  -7.90  -9.49 -10.45  [rand]  [f=66]
   o=47 v= 0.937175:  -6.22   5.42  -5.30  10.01   4.82  -6.23  [grid]  [f=53]
   o=48 v= 0.929439: -12.14  10.83  -4.51 -16.42  14.56  28.03  [rand]  [f=68]
   o=49 v= 0.929519:  -6.15   4.27   5.06  30.17  -8.87  13.58  [grid]  [f=54]
   o=50 v= 0.941181:  27.53   3.00   0.68  -9.68 -31.39 -32.34  [grid]  [f=48]
   o=51 v= 0.900528:   4.75  -5.54 -18.58  -7.39  -6.52  -1.13  [grid]  [f=69]
   o=52 v= 0.934087:  -3.49  32.46   6.73 -37.43  44.99 -17.42  [rand]  [f=44]
   o=53 v= 0.938431: -17.98  12.14   5.05   0.54  -4.27  22.53  [rand]  [f=82]
   o=54 v= 0.944557:  26.20 -14.97   4.08   9.08 -30.07  11.14  [rand]  [f=48]
   o=55 v= 0.903768:   6.43  -5.53 -14.63  -9.06  -4.21   2.15  [grid]  [f=83]
   o=56 v= 0.937587:   2.27   0.96 -14.79   4.02  28.08  32.25  [rand]  [f=83]
   o=57 v= 0.939190: -12.20 -30.07  10.31  19.75 -40.44  43.39  [rand]  [f=67]
   o=58 v= 0.926516: -17.47   2.24   2.05 -14.03  22.08  -3.03  [rand]  [f=83]
   o=59 v= 0.936451: -10.71   0.47  -8.41 -21.31 -25.22  20.90  [rand]  [f=64]
   o=60 v= 0.929349:  -7.10   4.57 -12.72   5.16  11.29   6.47  [grid]  [f=77]
   o=61 v= 0.941305:  17.69  27.59 -23.81 -14.19  37.92 -36.28  [rand]  [f=83]
   o=62 v= 0.930254:  26.13   2.32  14.16  -2.00 -14.75  24.59  [rand]  [f=61]
   o=63 v= 0.904769:   7.67  -1.87 -17.21 -23.71  -5.37  -1.19  [grid]  [f=81]
   o=64 v= 0.926822:  -3.98  -8.58  -9.96  12.17  -9.23  26.48  [grid]  [f=83]
   o=65 v= 0.927896:  -4.32 -10.41  -8.37   4.96   4.64  34.31  [grid]  [f=83]
   o=66 v= 0.941923:  -5.64  -0.03 -16.67  28.88   8.52   6.95  [grid]  [f=47]
   o=67 v= 0.945006:   6.60   4.20  20.58   8.92  -8.09  29.09  [grid]  [f=65]
   o=68 v= 0.939436:  19.83  18.74 -19.14  -7.35  31.50 -30.87  [rand]  [f=45]
   o=69 v= 0.943011:  29.15   3.23  -1.03   6.30 -30.09 -24.73  [grid]  [f=70]
   o=70 v= 0.927962:  -2.69  20.15   2.74  -8.28  29.97  11.11  [rand]  [f=58]
   o=71 v= 0.935996: -30.24  20.52  -4.99  35.62  22.85  -3.07  [grid]  [f=83]
   o=72 v= 0.940834:   6.22  27.16  -3.53 -30.79  27.95   5.90  [grid]  [f=52]
   o=73 v= 0.929202:  25.25  -1.02   9.53  10.11 -20.28  13.26  [rand]  [f=64]
   o=74 v= 0.931291:  -5.45 -22.51  -4.59  25.50   4.12  32.91  [rand]  [f=57]
   o=75 v= 0.922126:   9.83  -3.16 -13.67 -30.65  -1.81  -1.76  [grid]  [f=83]
   o=76 v= 0.910087:  -7.47   2.83 -11.10  -0.86   5.61  15.86  [grid]  [f=83]
   o=77 v= 0.932427: -18.95  -3.38  -9.53 -36.09 -26.41   7.26  [rand]  [f=67]
   o=78 v= 0.940230:  25.41  -6.55  -5.22  19.23 -41.03 -22.12  [rand]  [f=48]
   o=79 v= 0.938771: -23.15  18.30  -3.41  43.37  21.09 -21.52  [rand]  [f=72]
   o=80 v= 0.944359:  -0.76   2.38   0.38  22.38 -35.25 -35.52  [rand]  [f=62]
   o=81 v= 0.918944:  -5.27   0.68  -8.39   0.90  10.68  27.84  [grid]  [f=77]
   o=82 v= 0.947178:  27.85   2.16   0.29  29.72 -28.67 -32.20  [grid]  [f=68]
   o=83 v= 0.936624:  25.03  17.67 -24.36 -38.68  34.66 -40.38  [rand]  [f=60]
   o=84 v= 0.940366:  -7.67   1.43  -0.64  11.54 -25.53  27.50  [grid]  [f=48]
   o=85 v= 0.939341:  -2.79   4.57  16.33  31.07 -30.18  -5.84  [grid]  [f=58]
   o=86 v= 0.940956:  12.38  21.34  10.01  31.56   4.02 -42.83  [rand]  [f=83]
   o=87 v= 0.937411:  -4.86   0.60   1.58   5.07 -26.09  43.77  [rand]  [f=51]
 + - saving # 0 for use with twobest
 + - saving #51 for use with twobest
 + - skip #55 for twobest: too close to set #51
 + - saving #63 for use with twobest
 + - skip # 1 for twobest: too close to set # 0
 + - saving # 2 for use with twobest
 + - saving #76 for use with twobest
 + - saving #18 for use with twobest
 + - saving #14 for use with twobest
 + - saving #20 for use with twobest
 + - saving # 8 for use with twobest
 + - saving # 6 for use with twobest
 + - saving # 3 for use with twobest
 + - saving #17 for use with twobest
 + - saving #81 for use with twobest
 + - skip #19 for twobest: too close to set #63
 + - saving #16 for use with twobest
 + - saving #46 for use with twobest
 + - saving #75 for use with twobest
 + - saving #35 for use with twobest
 + - saving #13 for use with twobest
 + - saving #58 for use with twobest
 + - saving #64 for use with twobest
 + - saving #30 for use with twobest
 + - saving #65 for use with twobest
 + - saving #70 for use with twobest
 + - saving #25 for use with twobest
 + - saving #26 for use with twobest
 + - saving #73 for use with twobest
 + - saving #60 for use with twobest
 + - saving #48 for use with twobest
 + - saving #49 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 30 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=0 usiz=526.325
 + - retaining old weight image
 + - using 64025 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 54455 total points stored in 109 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.923152 [o=0 t=0]
 + -- Parameters = 4.3092 -8.8817 -15.3192 -7.6044 -10.1621 5.4946 1.0000 0.9959 0.9981 -0.0022 0.0126 -0.0053
 + - param set #2 has cost=0.911150 [o=51 t=1]
 + -- Parameters = 3.4430 -5.8141 -19.0246 -7.2121 -6.0152 -0.0920 1.0323 1.0156 0.9652 0.0079 -0.0047 0.0004
 + - param set #3 has cost=0.916083 [o=63 t=2]
 + -- Parameters = 7.2627 -0.1200 -18.1026 -21.2380 -5.3224 -0.9569 0.9959 0.9718 0.9730 -0.0085 0.0023 0.0048
 + - param set #4 has cost=0.920510 [o=2 t=3]
 + -- Parameters = -1.5150 -8.8224 -15.1074 -5.1587 -6.6588 9.4034 1.0247 1.0428 0.9826 -0.0025 -0.0003 -0.0008
 + - param set #5 has cost=0.917885 [o=76 t=4]
 + -- Parameters = -7.3752 2.8773 -11.7555 -0.2836 6.0267 14.8593 0.9661 1.0241 0.9830 -0.0019 0.0079 -0.0061
 + - param set #6 has cost=0.925012 [o=18 t=5]
 + -- Parameters = 8.3601 0.7066 -16.3774 -12.3300 1.7302 -3.1422 1.0023 0.9972 0.9652 0.0027 -0.0016 -0.0042
 + - param set #7 has cost=0.927721 [o=14 t=6]
 + -- Parameters = -1.8801 -6.4137 -15.5029 0.5825 -7.7730 8.0695 0.9960 1.0202 0.9805 -0.0061 0.0030 -0.0006
 + - param set #8 has cost=0.927046 [o=20 t=7]
 + -- Parameters = -4.3893 0.3167 -8.1811 -6.2052 9.4483 29.2630 0.9784 1.0144 0.9974 -0.0053 0.0106 -0.0061
 + - param set #9 has cost=0.931749 [o=8 t=8]
 + -- Parameters = -5.4868 5.3415 -6.2640 -22.7840 11.1294 32.6703 0.9913 0.9849 0.9850 -0.0012 0.0147 0.0058
 + - param set #10 has cost=0.920055 [o=6 t=9]
 + -- Parameters = -7.9321 2.9605 -11.9122 1.5860 5.6470 13.7284 0.9936 1.0152 0.9833 0.0123 0.0253 -0.0046
 + - param set #11 has cost=0.931405 [o=3 t=10]
 + -- Parameters = -9.3936 0.9384 -13.0736 -14.1582 4.8329 26.9642 0.9937 1.0087 0.9919 0.0042 -0.0011 0.0050
 + - param set #12 has cost=0.933487 [o=17 t=11]
 + -- Parameters = 4.9555 4.2227 -5.6041 -31.5267 7.7190 22.4510 1.0045 0.9988 0.9956 0.0150 -0.0012 0.0006
 + - param set #13 has cost=0.925136 [o=81 t=12]
 + -- Parameters = -3.4884 -1.7646 -8.8121 2.4588 8.6404 26.2070 0.9813 1.0316 1.0148 0.0043 0.0067 0.0073
 + - param set #14 has cost=0.932709 [o=16 t=13]
 + -- Parameters = -10.3265 5.6519 -8.8547 -16.3249 13.4657 29.4790 0.9950 0.9989 1.0229 0.0026 -0.0002 -0.0016
 + - param set #15 has cost=0.922383 [o=46 t=14]
 + -- Parameters = 7.5371 -6.8654 -15.6487 -9.9117 -7.6911 -1.7935 0.9634 1.0137 1.0424 0.0576 -0.0229 0.0124
 + - param set #16 has cost=0.924585 [o=75 t=15]
 + -- Parameters = 11.0858 -1.5734 -16.9536 -25.1626 -5.0829 -0.2499 0.9447 0.9917 1.0008 -0.0034 0.0061 -0.0155
 + - param set #17 has cost=0.936659 [o=35 t=16]
 + -- Parameters = -10.7744 -4.7144 -5.2935 -12.0133 -4.2316 32.7757 0.9935 1.0330 1.0129 -0.0016 0.0034 0.0013
 + - param set #18 has cost=0.943366 [o=13 t=17]
 + -- Parameters = 3.6553 -11.7782 -16.6571 5.7544 -19.7306 15.3394 0.9961 0.9975 0.9901 0.0005 0.0130 -0.0023
 + - param set #19 has cost=0.935191 [o=58 t=18]
 + -- Parameters = -17.1420 2.4752 2.3019 -14.6117 22.1298 -2.6317 1.0088 0.9979 1.0014 -0.0019 -0.0011 -0.0002
 + - param set #20 has cost=0.941492 [o=64 t=19]
 + -- Parameters = -4.2423 -9.1456 -8.6247 11.7888 -8.6731 27.3242 1.0042 1.0157 0.9946 0.0021 0.0011 0.0009
 + - param set #21 has cost=0.940135 [o=30 t=20]
 + -- Parameters = -6.0252 2.0111 -11.1530 23.4040 -18.0313 -38.8386 1.0386 1.0011 1.0312 0.0077 0.0114 0.0032
 + - param set #22 has cost=0.938138 [o=65 t=21]
 + -- Parameters = -4.2128 -10.5103 -8.3971 3.8601 4.6090 34.6848 1.0021 0.9797 1.0135 -0.0083 0.0144 0.0025
 + - param set #23 has cost=0.943001 [o=70 t=22]
 + -- Parameters = -2.8871 19.4827 2.8645 -8.8679 31.4530 11.6370 1.0157 1.0582 0.9957 -0.0036 -0.0082 0.0102
 + - param set #24 has cost=0.936451 [o=25 t=23]
 + -- Parameters = -18.4398 2.6223 -2.3254 -34.2471 -29.9470 31.4749 1.0139 0.9969 1.0500 -0.0021 0.0076 0.0039
 + - param set #25 has cost=0.931189 [o=26 t=24]
 + -- Parameters = 6.8442 2.0562 -17.6181 -30.8550 1.2905 1.6679 1.0304 0.9620 0.9843 0.0065 0.0048 -0.0152
 + - param set #26 has cost=0.929213 [o=73 t=25]
 + -- Parameters = 25.2575 -2.8108 11.3798 10.0269 -20.1716 13.1094 0.9268 1.0871 0.9808 -0.0248 0.0020 -0.0076
 + - param set #27 has cost=0.924128 [o=60 t=26]
 + -- Parameters = -7.3412 4.6021 -9.5400 -0.2934 9.8105 8.0187 0.9220 1.0102 0.9408 0.0174 0.0108 -0.0033
 + - param set #28 has cost=0.939754 [o=48 t=27]
 + -- Parameters = -12.5672 10.7345 -4.6500 -16.3235 14.8874 27.8844 1.0342 0.9945 0.9980 -0.0027 -0.0026 0.0001
 + - param set #29 has cost=0.939315 [o=49 t=28]
 + -- Parameters = -6.7674 5.2676 5.9641 30.5109 -9.7897 12.2480 1.0120 0.9907 0.9798 0.0033 0.0011 0.0021
 + - param set #30 has cost=0.916512 [o=-1 t=-1]
 + -- Parameters = 0.6437 -4.6982 -15.2940 -0.7645 -1.1296 1.8331 1.0605 1.0219 0.9321 0.0058 0.0089 -0.0145
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.156 
 + --- dist(#3,#1) = 0.0716 
 + --- dist(#4,#1) = 0.166 
 + --- dist(#5,#1) = 0.154 
 + --- dist(#6,#1) = 0.106 
 + --- dist(#7,#1) = 0.224 
 + --- dist(#8,#1) = 0.0779 
 + --- dist(#9,#1) = 0.176 
 + --- dist(#10,#1) = 0.199 
 + --- dist(#11,#1) = 0.0861 
 + --- dist(#12,#1) = 0.292 
 + --- dist(#13,#1) = 0.326 
 + --- dist(#14,#1) = 0.0907 
 + --- dist(#15,#1) = 0.38 
 + --- dist(#16,#1) = 0.263 
 + --- dist(#17,#1) = 0.301 
 + --- dist(#18,#1) = 0.364 
 + --- dist(#19,#1) = 0.329 
 + --- dist(#20,#1) = 0.27 
 + --- dist(#21,#1) = 0.313 
 + --- dist(#22,#1) = 0.351 
 + --- dist(#23,#1) = 0.365 
 + --- dist(#24,#1) = 0.386 
 + --- dist(#25,#1) = 0.419 
 + --- dist(#26,#1) = 0.311 
 + --- dist(#27,#1) = 0.431 
 + --- dist(#28,#1) = 0.305 
 + --- dist(#29,#1) = 0.416 
 + --- dist(#30,#1) = 0.171 
++ Start refinement #2 on 30 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=0 usiz=526.325
 + - retaining old weight image
 + - using 64025 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 54869 total points stored in 112 'TOHD(13.984)' bloks (0 duplicates)
 + - param set #1 has cost=0.924293 [o=51 t=1]
 + -- Parameters = 3.4208 -5.5028 -19.2702 -6.9003 -5.3243 -0.4409 1.0305 1.0249 0.9434 0.0164 -0.0066 0.0044
 + - param set #2 has cost=0.927767 [o=63 t=2]
 + -- Parameters = 7.5715 -0.2425 -18.2065 -21.1652 -4.5161 0.4820 1.0014 0.9656 0.9404 -0.0072 -0.0044 0.0104
 + - param set #3 has cost=0.919493 [o=-1 t=-1]
 + -- Parameters = 2.3153 -4.0242 -16.2116 -3.8258 2.0702 1.3861 1.0410 1.0710 0.8909 0.0058 0.0147 -0.0114
 + - param set #4 has cost=0.935054 [o=76 t=4]
 + -- Parameters = -7.7947 2.9473 -12.0641 0.0371 6.2777 14.9368 0.9627 1.0288 0.9744 0.0071 0.0029 -0.0097
 + - param set #5 has cost=0.936124 [o=6 t=9]
 + -- Parameters = -8.0969 2.4885 -12.4256 0.6788 6.0991 13.8187 0.9686 1.0389 0.9746 0.0106 0.0218 -0.0053
 + - param set #6 has cost=0.935184 [o=2 t=3]
 + -- Parameters = -1.7131 -8.7044 -15.7014 -4.5689 -7.0047 8.9158 1.0212 1.0404 0.9730 0.0068 -0.0021 -0.0008
 + - param set #7 has cost=0.932209 [o=46 t=14]
 + -- Parameters = 7.3490 -6.5866 -15.4801 -9.7523 -7.5664 -2.1484 0.9676 1.0157 1.0455 0.0653 -0.0243 0.0135
 + - param set #8 has cost=0.927229 [o=0 t=0]
 + -- Parameters = 4.1693 -7.8767 -17.4906 -9.1098 -9.1553 5.1059 1.0189 0.9880 0.9270 -0.0111 0.0158 -0.0293
 + - param set #9 has cost=0.917228 [o=60 t=26]
 + -- Parameters = -5.0033 4.4535 -14.4013 -1.2846 9.8493 7.2180 0.8906 0.9772 0.8584 0.0429 0.0075 0.0040
 + - param set #10 has cost=0.931295 [o=75 t=15]
 + -- Parameters = 10.4639 -0.2591 -17.0963 -24.5262 -4.3367 -0.0193 0.9533 0.9752 0.9404 -0.0106 0.0150 -0.0130
 + - param set #11 has cost=0.926437 [o=18 t=5]
 + -- Parameters = 6.9996 0.7783 -17.2158 -15.5973 0.5510 0.8641 0.9971 0.9404 0.9043 -0.0046 0.0157 0.0020
 + - param set #12 has cost=0.932606 [o=81 t=12]
 + -- Parameters = -2.9186 -3.4941 -10.1256 2.8710 8.9909 27.8303 0.9463 1.0773 1.0122 0.0089 0.0116 0.0152
 + - param set #13 has cost=0.939440 [o=20 t=7]
 + -- Parameters = -4.3122 -0.4845 -9.1201 -3.2591 7.9670 28.8375 0.9427 1.0408 1.0116 0.0060 0.0101 -0.0140
 + - param set #14 has cost=0.930305 [o=14 t=6]
 + -- Parameters = -0.2485 -10.2969 -17.4998 -4.0127 -8.3870 6.4398 1.0450 1.0727 0.9366 -0.0209 0.0199 -0.0206
 + - param set #15 has cost=0.942305 [o=73 t=25]
 + -- Parameters = 25.0977 -2.6968 11.1043 10.5262 -19.9188 12.3219 0.9251 1.0888 0.9774 -0.0238 0.0015 -0.0085
 + - param set #16 has cost=0.933697 [o=26 t=24]
 + -- Parameters = 7.8650 2.1472 -16.7440 -28.8570 -0.2762 2.7898 1.0422 0.9253 0.9421 -0.0214 0.0057 -0.0114
 + - param set #17 has cost=0.943932 [o=3 t=10]
 + -- Parameters = -9.5295 -0.5601 -13.8475 -13.6434 5.0688 27.1370 0.9809 1.0488 0.9645 -0.0018 -0.0018 -0.0052
 + - param set #18 has cost=0.946768 [o=8 t=8]
 + -- Parameters = -6.7468 6.0740 -6.9143 -23.0042 11.8760 34.5745 0.9866 0.9881 0.9807 0.0063 0.0155 0.0051
 + - param set #19 has cost=0.947018 [o=16 t=13]
 + -- Parameters = -10.4576 5.9819 -8.8746 -16.5316 13.5078 29.9412 0.9952 0.9981 1.0324 0.0021 0.0013 -0.0033
 + - param set #20 has cost=0.943329 [o=17 t=11]
 + -- Parameters = 5.3950 4.6728 -5.8578 -31.4949 7.8687 21.8814 1.0120 0.9918 0.9907 0.0260 -0.0029 -0.0013
 + - param set #21 has cost=0.945762 [o=58 t=18]
 + -- Parameters = -17.0445 2.1497 2.6588 -15.5860 22.5745 -3.3554 1.0170 1.0076 1.0551 -0.0074 -0.0029 -0.0082
 + - param set #22 has cost=0.941979 [o=25 t=23]
 + -- Parameters = -19.1791 1.8279 -2.0655 -36.5882 -29.5993 31.4439 1.0187 0.9482 1.0520 -0.0120 -0.0076 -0.0133
 + - param set #23 has cost=0.948349 [o=35 t=16]
 + -- Parameters = -10.6775 -4.7889 -5.3027 -11.8812 -4.0010 32.6553 0.9868 1.0338 1.0185 -0.0032 0.0033 0.0000
 + - param set #24 has cost=0.949115 [o=65 t=21]
 + -- Parameters = -5.4053 -9.2589 -7.7188 2.1372 5.4411 36.0837 1.0392 0.9832 1.0073 -0.0045 0.0155 0.0018
 + - param set #25 has cost=0.949037 [o=49 t=28]
 + -- Parameters = -7.1336 5.5654 5.7794 30.6833 -9.7115 11.7473 1.0120 0.9905 0.9844 0.0136 0.0021 0.0042
 + - param set #26 has cost=0.949956 [o=48 t=27]
 + -- Parameters = -12.4687 10.9898 -4.6355 -16.5199 14.8194 27.8928 1.0346 0.9963 0.9962 -0.0033 -0.0015 -0.0005
 + - param set #27 has cost=0.947825 [o=30 t=20]
 + -- Parameters = -5.8244 1.8387 -11.5217 23.2932 -18.3202 -39.0366 1.0217 0.9962 1.0458 0.0263 0.0146 -0.0007
 + - param set #28 has cost=0.950179 [o=64 t=19]
 + -- Parameters = -4.0097 -8.9874 -5.6449 12.1720 -8.4820 28.8871 0.9938 1.0727 0.9829 0.0037 -0.0004 0.0044
 + - param set #29 has cost=0.954032 [o=70 t=22]
 + -- Parameters = -4.3954 20.5760 1.9072 -9.3863 31.2194 9.8672 1.0389 1.0728 0.9870 -0.0111 -0.0021 0.0176
 + - param set #30 has cost=0.953927 [o=13 t=17]
 + -- Parameters = 3.4834 -11.7449 -16.3902 5.4594 -19.9584 14.7719 0.9966 0.9928 0.9941 0.0005 0.0274 -0.0051
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.216 
 + --- dist(#3,#1) = 0.201 
 + --- dist(#4,#1) = 0.214 
 + --- dist(#5,#1) = 0.243 
 + --- dist(#6,#1) = 0.225 
 + --- dist(#7,#1) = 0.287 
 + --- dist(#8,#1) = 0.258 
 + --- dist(#9,#1) = 0.269 
 + --- dist(#10,#1) = 0.229 
 + --- dist(#11,#1) = 0.306 
 + --- dist(#12,#1) = 0.167 
 + --- dist(#13,#1) = 0.188 
 + --- dist(#14,#1) = 0.167 
 + --- dist(#15,#1) = 0.24 
 + --- dist(#16,#1) = 0.438 
 + --- dist(#17,#1) = 0.376 
 + --- dist(#18,#1) = 0.336 
 + --- dist(#19,#1) = 0.221 
 + --- dist(#20,#1) = 0.283 
 + --- dist(#21,#1) = 0.304 
 + --- dist(#22,#1) = 0.252 
 + --- dist(#23,#1) = 0.514 
 + --- dist(#24,#1) = 0.283 
 + --- dist(#25,#1) = 0.355 
 + --- dist(#26,#1) = 0.321 
 + --- dist(#27,#1) = 0.23 
 + --- dist(#28,#1) = 0.241 
 + --- dist(#29,#1) = 0.331 
 + --- dist(#30,#1) = 0.243 
++ Start refinement #3 on 30 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=0 usiz=526.325
 + - retaining old weight image
 + - using 64025 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 54122 total points stored in 110 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.928870 [o=60 t=26]
 + -- Parameters = -4.9426 4.9252 -14.2752 -1.1311 10.3648 6.8954 0.8912 0.9725 0.8573 0.0542 0.0068 0.0053
 + - param set #2 has cost=0.930368 [o=-1 t=-1]
 + -- Parameters = 2.0405 -4.3623 -16.5745 -3.1204 1.9472 1.1171 1.0454 1.0798 0.8918 0.0010 0.0160 0.0020
 + - param set #3 has cost=0.931596 [o=51 t=1]
 + -- Parameters = 3.0823 -5.7323 -19.5512 -6.8452 -5.3522 -0.7722 1.0394 1.0252 0.9395 0.0228 -0.0070 0.0049
 + - param set #4 has cost=0.935291 [o=18 t=5]
 + -- Parameters = 7.8362 0.8122 -17.3366 -16.0768 -0.0141 0.1846 0.9937 0.9315 0.9067 -0.0083 0.0178 -0.0025
 + - param set #5 has cost=0.933787 [o=0 t=0]
 + -- Parameters = 3.2262 -7.6207 -17.1301 -8.5755 -8.0790 5.3011 1.0442 1.0077 0.9294 -0.0152 0.0241 -0.0299
 + - param set #6 has cost=0.936755 [o=63 t=2]
 + -- Parameters = 7.6349 -0.1676 -18.4640 -21.2435 -4.1471 0.1019 1.0002 0.9686 0.9307 -0.0112 0.0057 0.0090
 + - param set #7 has cost=0.936992 [o=14 t=6]
 + -- Parameters = 0.4947 -9.9711 -17.3485 -6.6068 -8.2656 6.2901 1.0530 1.0553 0.9359 -0.0228 0.0179 -0.0195
 + - param set #8 has cost=0.937106 [o=75 t=15]
 + -- Parameters = 10.9535 -0.0933 -17.5375 -22.6415 -3.5187 0.8771 0.9516 0.9597 0.9244 -0.0283 0.0167 -0.0086
 + - param set #9 has cost=0.940626 [o=46 t=14]
 + -- Parameters = 7.3519 -6.6557 -15.4769 -9.6998 -7.6751 -2.1228 0.9691 1.0150 1.0459 0.0656 -0.0248 0.0135
 + - param set #10 has cost=0.941709 [o=81 t=12]
 + -- Parameters = -2.9534 -4.1933 -10.2672 3.3679 6.6713 26.9472 0.9393 1.0938 1.0092 0.0114 0.0183 0.0045
 + - param set #11 has cost=0.941350 [o=26 t=24]
 + -- Parameters = 7.7599 2.5612 -16.7922 -29.3764 -0.4252 2.8141 1.0463 0.9187 0.9438 -0.0222 0.0053 -0.0111
 + - param set #12 has cost=0.945551 [o=76 t=4]
 + -- Parameters = -7.6594 2.8054 -12.5533 -0.4409 6.4582 15.3428 0.9541 1.0388 0.9647 0.0035 -0.0018 -0.0086
 + - param set #13 has cost=0.941554 [o=2 t=3]
 + -- Parameters = -2.3315 -9.4457 -17.4607 -2.8619 -7.7423 8.2395 1.0196 1.0497 0.9440 0.0111 -0.0016 -0.0073
 + - param set #14 has cost=0.947210 [o=6 t=9]
 + -- Parameters = -8.2759 2.6841 -12.4213 0.4277 6.4030 13.4627 0.9673 1.0402 0.9711 0.0103 0.0212 -0.0044
 + - param set #15 has cost=0.945920 [o=20 t=7]
 + -- Parameters = -4.3697 -1.2365 -10.1045 -2.7161 7.4751 28.5005 0.9428 1.0587 0.9896 0.0119 0.0151 -0.0196
 + - param set #16 has cost=0.948101 [o=25 t=23]
 + -- Parameters = -19.0809 1.8552 -1.9595 -36.5645 -29.5889 31.5406 1.0207 0.9480 1.0518 -0.0121 -0.0074 -0.0139
 + - param set #17 has cost=0.948751 [o=73 t=25]
 + -- Parameters = 24.9980 -2.7864 11.1111 10.1658 -19.6931 12.3952 0.9270 1.0912 0.9946 -0.0225 0.0000 -0.0112
 + - param set #18 has cost=0.952210 [o=17 t=11]
 + -- Parameters = 5.5145 4.5649 -6.1878 -31.3713 7.8100 21.2982 1.0151 0.9933 0.9900 0.0258 -0.0044 -0.0022
 + - param set #19 has cost=0.938823 [o=3 t=10]
 + -- Parameters = -9.6513 0.1064 -13.8245 -12.7292 5.1074 31.2533 0.8345 1.0462 0.9680 0.0064 -0.0097 -0.0086
 + - param set #20 has cost=0.951056 [o=58 t=18]
 + -- Parameters = -16.5679 2.5039 3.2161 -15.7309 22.2906 -2.7419 1.0238 1.0059 1.0455 -0.0068 -0.0026 -0.0093
 + - param set #21 has cost=0.951336 [o=8 t=8]
 + -- Parameters = -6.7824 6.3100 -7.6633 -21.6292 11.8960 35.1867 0.9705 1.0003 0.9678 0.0010 0.0227 0.0076
 + - param set #22 has cost=0.953356 [o=16 t=13]
 + -- Parameters = -10.3926 6.4765 -8.7584 -16.8416 13.7515 30.0383 0.9961 0.9989 1.0325 0.0028 0.0066 -0.0046
 + - param set #23 has cost=0.954989 [o=30 t=20]
 + -- Parameters = -5.6492 2.0169 -11.8098 23.4261 -17.9234 -38.9918 1.0218 0.9956 1.0377 0.0329 0.0152 -0.0028
 + - param set #24 has cost=0.953427 [o=35 t=16]
 + -- Parameters = -10.9535 -5.6657 -5.1479 -10.7479 -4.5019 32.5111 0.9721 1.0312 1.0294 -0.0035 0.0041 0.0087
 + - param set #25 has cost=0.955096 [o=49 t=28]
 + -- Parameters = -7.0475 5.9674 5.7398 31.1260 -10.7696 11.3497 1.0124 1.0022 0.9469 0.0188 0.0040 0.0093
 + - param set #26 has cost=0.956205 [o=65 t=21]
 + -- Parameters = -4.9339 -9.2298 -7.8188 2.1253 5.3301 36.3011 1.0406 0.9831 1.0051 0.0011 0.0163 0.0010
 + - param set #27 has cost=0.957874 [o=48 t=27]
 + -- Parameters = -12.0587 10.9572 -4.6645 -16.7941 14.6331 27.7925 1.0368 0.9984 0.9980 -0.0037 -0.0001 -0.0001
 + - param set #28 has cost=0.955612 [o=64 t=19]
 + -- Parameters = -4.0125 -9.0050 -5.3614 12.0935 -8.5923 29.0704 0.9958 1.0697 0.9848 0.0031 0.0008 0.0101
 + - param set #29 has cost=0.956444 [o=13 t=17]
 + -- Parameters = 3.5522 -11.8720 -16.1752 5.4965 -20.6569 14.3993 0.9950 0.9883 1.0061 0.0039 0.0386 -0.0174
 + - param set #30 has cost=0.961666 [o=70 t=22]
 + -- Parameters = -4.9683 20.0957 1.9872 -9.2308 30.9264 9.7032 1.0685 1.0806 0.9877 -0.0120 -0.0039 0.0154
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.239 
 + --- dist(#3,#1) = 0.213 
 + --- dist(#4,#1) = 0.312 
 + --- dist(#5,#1) = 0.281 
 + --- dist(#6,#1) = 0.294 
 + --- dist(#7,#1) = 0.346 
 + --- dist(#8,#1) = 0.371 
 + --- dist(#9,#1) = 0.271 
 + --- dist(#10,#1) = 0.271 
 + --- dist(#11,#1) = 0.344 
 + --- dist(#12,#1) = 0.201 
 + --- dist(#13,#1) = 0.223 
 + --- dist(#14,#1) = 0.228 
 + --- dist(#15,#1) = 0.24 
 + --- dist(#16,#1) = 0.197 
 + --- dist(#17,#1) = 0.444 
 + --- dist(#18,#1) = 0.374 
 + --- dist(#19,#1) = 0.274 
 + --- dist(#20,#1) = 0.314 
 + --- dist(#21,#1) = 0.336 
 + --- dist(#22,#1) = 0.257 
 + --- dist(#23,#1) = 0.285 
 + --- dist(#24,#1) = 0.51 
 + --- dist(#25,#1) = 0.358 
 + --- dist(#26,#1) = 0.246 
 + --- dist(#27,#1) = 0.327 
 + --- dist(#28,#1) = 0.345 
 + --- dist(#29,#1) = 0.26 
 + --- dist(#30,#1) = 0.298 
 + - Total coarse refinement net CPU time = 0.0 s; 9900 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=0 usiz=526.325
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 31 cases
 + 54374 total points stored in 111 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.931020 * [o=60 t=26]
 + -- Parameters = -4.9426 4.9252 -14.2752 -1.1311 10.3648 6.8954 0.8912 0.9725 0.8573 0.0542 0.0068 0.0053
 + - cost(#2)=0.932864   [o=-1 t=-1]
 + -- Parameters = 2.0405 -4.3623 -16.5745 -3.1204 1.9472 1.1171 1.0454 1.0798 0.8918 0.0010 0.0160 0.0020
 + - cost(#3)=0.933396   [o=51 t=1]
 + -- Parameters = 3.0823 -5.7323 -19.5512 -6.8452 -5.3522 -0.7722 1.0394 1.0252 0.9395 0.0228 -0.0070 0.0049
 + - cost(#4)=0.935351   [o=0 t=0]
 + -- Parameters = 3.2262 -7.6207 -17.1301 -8.5755 -8.0790 5.3011 1.0442 1.0077 0.9294 -0.0152 0.0241 -0.0299
 + - cost(#5)=0.937713   [o=18 t=5]
 + -- Parameters = 7.8362 0.8122 -17.3366 -16.0768 -0.0141 0.1846 0.9937 0.9315 0.9067 -0.0083 0.0178 -0.0025
 + - cost(#6)=0.938809   [o=63 t=2]
 + -- Parameters = 7.6349 -0.1676 -18.4640 -21.2435 -4.1471 0.1019 1.0002 0.9686 0.9307 -0.0112 0.0057 0.0090
 + - cost(#7)=0.938486   [o=14 t=6]
 + -- Parameters = 0.4947 -9.9711 -17.3485 -6.6068 -8.2656 6.2901 1.0530 1.0553 0.9359 -0.0228 0.0179 -0.0195
 + - cost(#8)=0.939288   [o=75 t=15]
 + -- Parameters = 10.9535 -0.0933 -17.5375 -22.6415 -3.5187 0.8771 0.9516 0.9597 0.9244 -0.0283 0.0167 -0.0086
 + - cost(#9)=0.940975   [o=3 t=10]
 + -- Parameters = -9.6513 0.1064 -13.8245 -12.7292 5.1074 31.2533 0.8345 1.0462 0.9680 0.0064 -0.0097 -0.0086
 + - cost(#10)=0.941259   [o=46 t=14]
 + -- Parameters = 7.3519 -6.6557 -15.4769 -9.6998 -7.6751 -2.1228 0.9691 1.0150 1.0459 0.0656 -0.0248 0.0135
 + - cost(#11)=0.943538   [o=26 t=24]
 + -- Parameters = 7.7599 2.5612 -16.7922 -29.3764 -0.4252 2.8141 1.0463 0.9187 0.9438 -0.0222 0.0053 -0.0111
 + - cost(#12)=0.942924   [o=2 t=3]
 + -- Parameters = -2.3315 -9.4457 -17.4607 -2.8619 -7.7423 8.2395 1.0196 1.0497 0.9440 0.0111 -0.0016 -0.0073
 + - cost(#13)=0.943455   [o=81 t=12]
 + -- Parameters = -2.9534 -4.1933 -10.2672 3.3679 6.6713 26.9472 0.9393 1.0938 1.0092 0.0114 0.0183 0.0045
 + - cost(#14)=0.947527   [o=76 t=4]
 + -- Parameters = -7.6594 2.8054 -12.5533 -0.4409 6.4582 15.3428 0.9541 1.0388 0.9647 0.0035 -0.0018 -0.0086
 + - cost(#15)=0.947512   [o=20 t=7]
 + -- Parameters = -4.3697 -1.2365 -10.1045 -2.7161 7.4751 28.5005 0.9428 1.0587 0.9896 0.0119 0.0151 -0.0196
 + - cost(#16)=0.949216   [o=6 t=9]
 + -- Parameters = -8.2759 2.6841 -12.4213 0.4277 6.4030 13.4627 0.9673 1.0402 0.9711 0.0103 0.0212 -0.0044
 + - cost(#17)=0.950817   [o=25 t=23]
 + -- Parameters = -19.0809 1.8552 -1.9595 -36.5645 -29.5889 31.5406 1.0207 0.9480 1.0518 -0.0121 -0.0074 -0.0139
 + - cost(#18)=0.950843   [o=73 t=25]
 + -- Parameters = 24.9980 -2.7864 11.1111 10.1658 -19.6931 12.3952 0.9270 1.0912 0.9946 -0.0225 0.0000 -0.0112
 + - cost(#19)=0.951025   [o=58 t=18]
 + -- Parameters = -16.5679 2.5039 3.2161 -15.7309 22.2906 -2.7419 1.0238 1.0059 1.0455 -0.0068 -0.0026 -0.0093
 + - cost(#20)=0.953722   [o=8 t=8]
 + -- Parameters = -6.7824 6.3100 -7.6633 -21.6292 11.8960 35.1867 0.9705 1.0003 0.9678 0.0010 0.0227 0.0076
 + - cost(#21)=0.954192   [o=17 t=11]
 + -- Parameters = 5.5145 4.5649 -6.1878 -31.3713 7.8100 21.2982 1.0151 0.9933 0.9900 0.0258 -0.0044 -0.0022
 + - cost(#22)=0.955182   [o=16 t=13]
 + -- Parameters = -10.3926 6.4765 -8.7584 -16.8416 13.7515 30.0383 0.9961 0.9989 1.0325 0.0028 0.0066 -0.0046
 + - cost(#23)=0.955039   [o=35 t=16]
 + -- Parameters = -10.9535 -5.6657 -5.1479 -10.7479 -4.5019 32.5111 0.9721 1.0312 1.0294 -0.0035 0.0041 0.0087
 + - cost(#24)=0.956464   [o=30 t=20]
 + -- Parameters = -5.6492 2.0169 -11.8098 23.4261 -17.9234 -38.9918 1.0218 0.9956 1.0377 0.0329 0.0152 -0.0028
 + - cost(#25)=0.956261   [o=49 t=28]
 + -- Parameters = -7.0475 5.9674 5.7398 31.1260 -10.7696 11.3497 1.0124 1.0022 0.9469 0.0188 0.0040 0.0093
 + - cost(#26)=0.955280   [o=64 t=19]
 + -- Parameters = -4.0125 -9.0050 -5.3614 12.0935 -8.5923 29.0704 0.9958 1.0697 0.9848 0.0031 0.0008 0.0101
 + - cost(#27)=0.957781   [o=65 t=21]
 + -- Parameters = -4.9339 -9.2298 -7.8188 2.1253 5.3301 36.3011 1.0406 0.9831 1.0051 0.0011 0.0163 0.0010
 + - cost(#28)=0.958163   [o=13 t=17]
 + -- Parameters = 3.5522 -11.8720 -16.1752 5.4965 -20.6569 14.3993 0.9950 0.9883 1.0061 0.0039 0.0386 -0.0174
 + - cost(#29)=0.959368   [o=48 t=27]
 + -- Parameters = -12.0587 10.9572 -4.6645 -16.7941 14.6331 27.7925 1.0368 0.9984 0.9980 -0.0037 -0.0001 -0.0001
 + - cost(#30)=0.962729   [o=70 t=22]
 + -- Parameters = -4.9683 20.0957 1.9872 -9.2308 30.9264 9.7032 1.0685 1.0806 0.9877 -0.0120 -0.0039 0.0154
 + - cost(#31)=0.984074   [o=-2 t=-2]
 + -- Parameters = 1.2589 -3.1145 -9.2871 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 31 cases
 + - cost(#1)=0.929824 * [o=60 t=26]
 + -- Parameters = -5.2308 4.9285 -13.9754 -0.9476 10.3398 7.0225 0.8993 0.9686 0.8629 0.0669 0.0049 0.0051
 + - cost(#2)=0.932278   [o=-1 t=-1]
 + -- Parameters = 2.0361 -4.3989 -16.6422 -3.1841 2.0807 1.0852 1.0448 1.0751 0.8916 -0.0070 0.0160 0.0025
 + - cost(#3)=0.933174   [o=51 t=1]
 + -- Parameters = 2.8790 -5.9564 -19.5780 -6.7481 -5.4966 -0.7532 1.0411 1.0257 0.9400 0.0228 -0.0069 0.0046
 + - cost(#4)=0.934605   [o=0 t=0]
 + -- Parameters = 3.3232 -7.6522 -17.2763 -8.6429 -7.8870 5.2896 1.0485 1.0102 0.9257 -0.0153 0.0315 -0.0297
 + - cost(#5)=0.936515   [o=18 t=5]
 + -- Parameters = 8.3214 1.2766 -17.1848 -16.1312 0.1167 -0.2903 1.0064 0.9291 0.9053 -0.0106 0.0312 -0.0047
 + - cost(#6)=0.938306   [o=63 t=2]
 + -- Parameters = 7.6577 -0.2065 -18.2819 -21.6379 -4.1938 0.0512 1.0043 0.9684 0.9325 -0.0190 0.0074 0.0092
 + - cost(#7)=0.937460   [o=14 t=6]
 + -- Parameters = 0.8871 -9.4361 -17.6407 -7.0113 -7.8181 5.9851 1.0575 1.0522 0.9259 -0.0191 0.0171 -0.0192
 + - cost(#8)=0.936837   [o=75 t=15]
 + -- Parameters = 11.4509 -0.1639 -17.9458 -20.0652 -2.5975 0.7376 0.9486 0.9463 0.9019 -0.0311 0.0269 -0.0064
 + - cost(#9)=0.940250   [o=3 t=10]
 + -- Parameters = -9.6480 0.0551 -13.8616 -12.7316 5.3383 31.3690 0.8338 1.0466 0.9904 0.0076 -0.0096 -0.0100
 + - cost(#10)=0.941188   [o=46 t=14]
 + -- Parameters = 7.3222 -6.6470 -15.4101 -9.6601 -7.6770 -2.1518 0.9696 1.0152 1.0468 0.0661 -0.0268 0.0148
 + - cost(#11)=0.943439   [o=26 t=24]
 + -- Parameters = 7.7361 2.6085 -16.7129 -29.3391 -0.4540 2.7821 1.0471 0.9173 0.9468 -0.0226 0.0046 -0.0101
 + - cost(#12)=0.942539   [o=2 t=3]
 + -- Parameters = -1.5802 -9.2849 -17.5001 -3.0341 -7.8428 7.7609 1.0289 1.0484 0.9406 0.0104 -0.0016 -0.0074
 + - cost(#13)=0.943012   [o=81 t=12]
 + -- Parameters = -2.9885 -4.3512 -10.3904 3.6511 6.4191 26.6282 0.9386 1.0949 1.0058 0.0096 0.0198 -0.0035
 + - cost(#14)=0.946920   [o=76 t=4]
 + -- Parameters = -7.8608 2.9416 -12.5920 -0.5265 6.4096 15.7029 0.9532 1.0335 0.9611 0.0026 -0.0143 -0.0090
 + - cost(#15)=0.941763   [o=20 t=7]
 + -- Parameters = -3.0425 -2.3786 -10.2030 -2.7645 7.4405 29.7672 0.9076 1.0770 0.9830 0.0198 0.0307 -0.0299
 + - cost(#16)=0.949037   [o=6 t=9]
 + -- Parameters = -8.1931 2.7654 -12.3713 0.2819 6.3819 13.4546 0.9662 1.0404 0.9716 0.0016 0.0213 -0.0050
 + - cost(#17)=0.950739   [o=25 t=23]
 + -- Parameters = -19.0974 1.8610 -1.9082 -36.5560 -29.5991 31.5531 1.0203 0.9479 1.0530 -0.0123 -0.0054 -0.0159
 + - cost(#18)=0.949820   [o=73 t=25]
 + -- Parameters = 24.8526 -2.8798 11.1535 10.0354 -20.3799 12.5376 0.9302 1.0904 0.9969 -0.0243 -0.0022 -0.0224
 + - cost(#19)=0.950483   [o=58 t=18]
 + -- Parameters = -16.0951 2.5573 3.1287 -15.7262 22.1408 -2.0213 1.0200 1.0054 1.0498 -0.0074 -0.0038 -0.0114
 + - cost(#20)=0.950864   [o=8 t=8]
 + -- Parameters = -6.8522 4.6420 -9.5792 -21.0083 9.8815 36.7108 0.9889 1.0063 0.9885 -0.0031 0.0423 0.0124
 + - cost(#21)=0.953833   [o=17 t=11]
 + -- Parameters = 5.3958 4.2040 -6.3375 -31.4115 7.3274 21.5743 1.0172 0.9934 0.9927 0.0263 -0.0114 -0.0034
 + - cost(#22)=0.955018   [o=16 t=13]
 + -- Parameters = -10.2040 6.5274 -8.6366 -17.0621 13.5451 30.0229 0.9992 0.9988 1.0333 0.0013 0.0105 -0.0080
 + - cost(#23)=0.954956   [o=35 t=16]
 + -- Parameters = -10.9878 -5.7085 -5.2528 -10.6069 -4.4017 32.4308 0.9719 1.0347 1.0278 0.0024 0.0042 0.0090
 + - cost(#24)=0.956335   [o=30 t=20]
 + -- Parameters = -5.7314 1.9106 -11.7967 23.2789 -17.9551 -38.7890 1.0220 0.9966 1.0377 0.0334 0.0113 -0.0041
 + - cost(#25)=0.955228   [o=49 t=28]
 + -- Parameters = -7.1445 6.2092 6.2660 31.3884 -10.9780 11.0713 1.0018 1.0069 0.9383 0.0312 0.0056 0.0144
 + - cost(#26)=0.955165   [o=64 t=19]
 + -- Parameters = -3.9403 -8.9622 -5.3959 12.2069 -8.4674 29.0472 0.9967 1.0721 0.9849 0.0033 0.0012 0.0104
 + - cost(#27)=0.957765   [o=65 t=21]
 + -- Parameters = -4.9649 -9.1837 -7.7760 2.0605 5.3402 36.3109 1.0411 0.9835 1.0053 0.0008 0.0163 0.0012
 + - cost(#28)=0.957577   [o=13 t=17]
 + -- Parameters = 3.6272 -12.0507 -16.2434 5.6467 -20.8985 14.5493 0.9965 0.9906 1.0023 0.0053 0.0376 -0.0278
 + - cost(#29)=0.959178   [o=48 t=27]
 + -- Parameters = -12.0289 10.9439 -4.6943 -16.7430 14.6191 27.8189 1.0425 0.9980 0.9975 -0.0052 0.0001 -0.0004
 + - cost(#30)=0.962346   [o=70 t=22]
 + -- Parameters = -4.9861 20.1075 1.9712 -9.1385 31.0925 9.8175 1.0678 1.0853 0.9855 -0.0134 -0.0119 0.0152
*[#35282=0.900483] *[#35283=0.899932] *[#35284=0.898909] *[#35285=0.898083] *[#35289=0.897889] *[#35290=0.897476] *[#35291=0.897187] *[#35295=0.89689] 
 + - cost(#31)=0.896890 * [o=-2 t=-2]
 + -- Parameters = 2.6170 -1.5202 -3.9063 -1.6779 -1.7067 0.6819 0.9323 0.9669 0.8658 -0.0091 0.0195 -0.0184
 + - case #31 [o=-2 t=-2] is now the best
 + - Initial  cost = 0.896890
 + - Initial fine Parameters = 2.6170 -1.5202 -3.9063 -1.6779 -1.7067 0.6819 0.9323 0.9669 0.8658 -0.0091 0.0195 -0.0184
*[#35319=0.895895] *[#35324=0.894528] *[#35350=0.894495] *[#35353=0.894157] *[#35354=0.894023] *[#35355=0.893935] *[#35358=0.893892] *[#35361=0.893889] *[#35367=0.893827] *[#35372=0.893639] *[#35373=0.893616] *[#35376=0.89356] *[#35378=0.893559] *[#35381=0.893535] *[#35386=0.893524] *[#35387=0.893496] *[#35396=0.893467] *[#35399=0.893458] *[#35400=0.893441] *[#35401=0.893414] *[#35406=0.893356] *[#35407=0.893344] *[#35410=0.893323] *[#35411=0.893305] *[#35414=0.893235] *[#35415=0.893188] *[#35418=0.893117] *[#35421=0.893113] *[#35422=0.8931] *[#35425=0.893014] *[#35428=0.89299] *[#35433=0.89293] *[#35438=0.892923] *[#35439=0.892905] *[#35442=0.892902] *[#35446=0.892827] *[#35447=0.89281] *[#35449=0.892809] *[#35450=0.892751] *[#35455=0.892731] *[#35456=0.892701] *[#35461=0.892688] *[#35464=0.892629] *[#35465=0.892566] *[#35466=0.892511] *[#35469=0.892476] *[#35470=0.892456] *[#35483=0.892416] *[#35489=0.8924] *[#35490=0.892396] *[#35493=0.892384] *[#35496=0.892358] *[#35497=0.892356] *[#35505=0.892325] *[#35510=0.892308] *[#35511=0.892304] *[#35513=0.892299] *[#35516=0.892293] *[#35517=0.892285] *[#35518=0.892282] *[#35519=0.892268] *[#35520=0.892267] *[#35523=0.892265] *[#35525=0.892258] *[#35526=0.892253] *[#35527=0.892251] *[#35528=0.892238] *[#35529=0.892211] *[#35530=0.892193] *[#35533=0.892181] *[#35534=0.892175] *[#35535=0.892154] *[#35536=0.892141] *[#35537=0.892118] *[#35538=0.892088] *[#35539=0.892061] *[#35542=0.892051] *[#35545=0.89203] *[#35549=0.892027] *[#35550=0.892005] *[#35551=0.891997] *[#35554=0.891992] *[#35555=0.891991] *[#35556=0.891989] *[#35557=0.891987] *[#35560=0.891986] *[#35563=0.891983] *[#35564=0.891981] *[#35566=0.891981] *[#35567=0.891979] *[#35568=0.891978] *[#35569=0.891973] *[#35572=0.891968] *[#35573=0.891962] *[#35574=0.891959] *[#35575=0.891954] *[#35576=0.89195] *[#35578=0.891948] *[#35579=0.891946] *[#35582=0.891944] *[#35584=0.891939] *[#35587=0.891937] *[#35588=0.891936] *[#35591=0.891935] *[#35592=0.891934] *[#35595=0.891933] *[#35596=0.891932] *[#35598=0.891932] *[#35599=0.891931] *[#35600=0.89193] *[#35603=0.891929] *[#35612=0.891926] *[#35613=0.891926] *[#35619=0.891925] *[#35624=0.891925] *[#35631=0.891924] *[#35632=0.891924] *[#35633=0.891923] *[#35634=0.891923] *[#35640=0.891922] *[#35643=0.891921] *[#35648=0.89192] *[#35649=0.89192] *[#35651=0.891918] *[#35660=0.891917] *[#35663=0.891917] *[#35664=0.891917] *[#35665=0.891916] *[#35668=0.891916] *[#35671=0.891914] *[#35674=0.891912] *[#35677=0.89191] *[#35678=0.89191] *[#35679=0.891909] *[#35682=0.891907] *[#35683=0.891905] *[#35684=0.891903] *[#35685=0.891902] *[#35688=0.891898] *[#35689=0.891896] *[#35690=0.891895] *[#35691=0.891894] *[#35692=0.891893] *[#35693=0.891892] *[#35698=0.891891] *[#35701=0.891889] *[#35704=0.891888] *[#35705=0.891887] *[#35708=0.891887] *[#35710=0.891886] *[#35711=0.891886] *[#35722=0.891885] *[#35725=0.891885] *[#35727=0.891884] *[#35728=0.891883] *[#35731=0.891883] *[#35736=0.891881] *[#35737=0.89188] *[#35740=0.891879] *[#35745=0.891879] *[#35752=0.891878] *[#35755=0.891878] *[#35764=0.891878] *[#35767=0.891877] *[#35772=0.891877] *[#35775=0.891877] *[#35782=0.891877] *[#35785=0.891877] *[#35788=0.891877] *[#35791=0.891877] *[#35792=0.891877] *[#35793=0.891877] *[#35794=0.891876] *[#35797=0.891876] *[#35798=0.891876] *[#35799=0.891876] *[#35804=0.891876] *[#35805=0.891876] *[#35807=0.891876] *[#35808=0.891876] *[#35810=0.891876] *[#35817=0.891876] *[#35836=0.891875] *[#35844=0.891875] 
 + - Finalish cost = 0.891875 ; 567 funcs
 + - ini Finalish Parameters = 2.2135 -1.7174 -4.3622 -1.6688 -0.7228 -0.4019 0.9453 0.9739 0.8821 -0.0447 0.0409 -0.0011
*[#36028=0.891875] *[#36030=0.891875] *[#36075=0.891875] *[#36079=0.891875] *[#36085=0.891875] 
 + - Final    cost = 0.891875 ; 270 funcs
 + Final fine fit Parameters:
       x-shift=  2.2133   y-shift= -1.7188   z-shift= -4.3633  ...  enorm=  5.1857 mm
       z-angle= -1.6695   x-angle= -0.7229   y-angle= -0.4013  ...  total=  1.8607 deg
       x-scale=  0.9453   y-scale=  0.9739   z-scale=  0.8821  ...  vol3D=  0.8121 = base bigger than source
     y/x-shear= -0.0446 z/x-shear=  0.0409 z/y-shear= -0.0011
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 2.2133 -1.7188 -4.3633 -1.6695 -0.7229 -0.4013 0.9453 0.9739 0.8821 -0.0446 0.0409 -0.0011
++ Unloading unneeded data
++ Output dataset ./MPRAGE.GP35_unif_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./MPRAGE.GP35_unif_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 29.4
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GP35_unif_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GP35_unif_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1673314 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 64025 voxels [10.5%] in weight mask
++ Number of points for matching = 64025
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.806 50.319 40.032 (index)
 + source center of mass = 109.493 134.811 91.828 (index)
 + source-target CM = -0.987 -1.278 -3.233 (xyz)
 + estimated center of mass shifts = -0.987 -1.278 -3.233
++ shift param auto-range: -71.6..69.6 -80.5..78.0 -70.4..63.9
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.987297 .. 9.012703  center = -0.987297
 + Range param#2 [y-shift] = -11.278145 .. 8.721855  center = -1.278145
 + Range param#3 [z-shift] = -13.232613 .. 6.767387  center = -3.232613
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.987297 .. 39.012703  center = -0.987297
 + Range param#2 [y-shift] = -41.278145 .. 38.721855  center = -1.278145
 + Range param#3 [z-shift] = -43.232613 .. 36.767387  center = -3.232613
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -40.987 ..   39.013
 +       y-shift =  -41.278 ..   38.722
 +       z-shift =  -43.233 ..   36.767
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1673314 [out of 11094250] voxels
 + base mask has 81603 [out of 609801] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=206.01 usiz=422.519
 + - copying weight image
 + - using 64025 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 307.134 .. 1070.99; base clip 1333.94 .. 4814
 +  - versus source range 3.42255e-05 .. 1050.56; base range 0 .. 6152.11
 + 54374 total points stored in 111 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GP35_unif_flip_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GP35_unif_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1903960 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 64025 voxels [10.5%] in weight mask
++ Number of points for matching = 64025
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.806 50.319 40.032 (index)
 + source center of mass = 109.693 134.936 90.466 (index)
 + source-target CM = -0.787 -1.152 -4.594 (xyz)
 + estimated center of mass shifts = -0.787 -1.152 -4.594
++ shift param auto-range: -71.4..69.8 -80.4..78.1 -71.8..62.6
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.786530 .. 9.213470  center = -0.786530
 + Range param#2 [y-shift] = -11.152290 .. 8.847710  center = -1.152290
 + Range param#3 [z-shift] = -14.593826 .. 5.406174  center = -4.593826
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.786530 .. 39.213470  center = -0.786530
 + Range param#2 [y-shift] = -41.152290 .. 38.847710  center = -1.152290
 + Range param#3 [z-shift] = -44.593826 .. 35.406174  center = -4.593826
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -40.787 ..   39.213
 +       y-shift =  -41.152 ..   38.848
 +       z-shift =  -44.594 ..   35.406
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1903960 [out of 11094250] voxels
 + base mask has 81603 [out of 609801] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=234.117 usiz=408.528
 + - copying weight image
 + - using 64025 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 311.668 .. 1075.32; base clip 1333.94 .. 4814
 +  - versus source range 3.86087e-08 .. 1070.66; base range 0 .. 6152.11
 + 54374 total points stored in 111 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
No flip cost is 0.785701 for lpa cost function
Flip cost is 0.893127 for lpa cost function
Data does not need flipping
#++ Creating final output: skullstripped anat data
copying from dataset /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/MPRAGE.GP35_unif_unflipped_ns+orig to /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/MPRAGE.GP35_unif_ns+orig
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GP35_unif_unflipped_ns+orig MPRAGE.GP35_unif_ns
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat MPRAGE.GP35_unif+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base \
 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off \
 -tshift off" \
 ./MPRAGE.GP35_unif_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GP35_unif*

# Finished alignment successfully

auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input MPRAGE.GP35_unif_ns+orig -skull_strip_input no -unifize_input no
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ auto_warp.py version: 0.06
# Output directory /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/awpy/
#Script is running:
  mkdir /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/awpy/
cd /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/awpy/
#Script is running (command trimmed):
  3dcopy /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/MPRAGE.GP35_unif_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#Script is running (command trimmed):
  3dcopy /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz ./base.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Aligning /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/awpy/base.nii data to /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/awpy/anat.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ anat already stripped, re-using
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_15pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 1405.490100 ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (cubic final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m -base dataset __ats_tmp__ref_base.nii_15pad+tlrc has 5 sub-bricks; will only use #0
RMS[0] = 503.21 284.323   ITER = 9/50
503.21

Warping has converged.

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
Cleanup ...
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.aff.nii
#Script is running:
  3dAttribute DELTA /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/awpy/base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.aff.nii ./base.nii
#++ Aligning /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/awpy/base.nii data to /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/awpy/anat.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.aff.nii 
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ base dataset has more than 1 sub-brick: ignoring all but the first
++ base dataset has more than 1 sub-brick: ignoring all but the first [0]
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=4 ytop=6  zbot=19 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/awpy/base.nii  source=/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/awpy/anat.aff.nii
++ AFNI warpomatic: 199 x 239 x 215 volume ; autobbox = 22..176 24..214 20..183 [clock= 4s 613ms]
lev=0 3..195 1..237 1..203: [first cost=-0.68275] ..... done [cost:-0.68275==>-0.75207]
lev=1 patch=145x177x153 [clock= 55s 147ms]........:[cost=-0.77543]:........done [cost:-0.75207==>-0.78179 ; 16 patches optimized, 0 skipped, bbox=5:194,3:235,2:201]
lev=2 patch=109x133x115 [clock= 1m 23s 896ms]........done [cost:-0.78179==>-0.81124 ; 8 patches optimized, 0 skipped, bbox=5:194,3:235,2:201]
lev=3 patch=81x99x85 [clock= 1m 32s 518ms]......done [cost:-0.81124==>-0.85376 ; 23 patches optimized, 4 skipped, bbox=5:194,3:235,2:201]
lev=4 patch=61x75x65 [clock= 1m 56s 669ms].............done [cost:-0.85376==>-0.94893 ; 88 patches optimized, 37 skipped, bbox=5:194,3:235,2:201]
lev=5 patch=45x57x49 [clock= 2m 33s 4ms]..............done [cost:-0.94893==>-1.02310 ; 169 patches optimized, 83 skipped, bbox=5:194,3:235,2:201]
lev=6 patch=35x43x37 [clock= 3m 4s 78ms]....................done [cost:-1.02310==>-1.08093 ; 438 patches optimized, 291 skipped, bbox=5:194,3:235,2:201]
lev=7 patch=25x25x25 [clock= 3m 41s 9ms].................................done [cost:-1.08093==>-1.17119 ; 1432 patches optimized, 908 skipped, bbox=5:194,3:235,2:201]
++ ====== total number of parameters 'optimized' = 26238
 +      initial unpenalized cost = -0.682748
 +        final unpenalized cost = -1.18288
 +        final penalized   cost = -1.17119
++ Output dataset ./anat.aff.qw.nii
++ Output dataset ./anat.aff.qw_WARP.nii
++ ===== clock time = 4m 27s 264ms
#++ Applying warps to /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/MPRAGE.GP35_unif_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.aff.qw_WARP.nii anat.aff.Xat.1D" -master ./base.nii -source /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/MPRAGE.GP35_unif_ns+orig -prefix ./MPRAGE.GP35_unif_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/MPRAGE.GP35_unif_ns+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./MPRAGE.GP35_unif_ns.aw.nii
++ total Elapsed time = 2.8 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input \
 MPRAGE.GP35_unif_ns+orig -skull_strip_input no -unifize_input no" \
 ./MPRAGE.GP35_unif_ns.aw.nii


3dbucket -DAFNI_NIFTI_VIEW=tlrc -prefix MPRAGE.GP35_unif_ns awpy/MPRAGE.GP35_unif_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
mv awpy/anat.aff.Xat.1D .
mv awpy/anat.aff.qw_WARP.nii .
if ( ! -f MPRAGE.GP35_unif_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb03.GP35.r01.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GP35.r01.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 71118 voxels
 + 9042 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.973  pitch=-0.593  yaw=-0.351  dS=-0.136  dL=-0.368  dP=-0.654
++ Mean: roll=-0.103  pitch=-0.270  yaw=+0.141  dS=+0.609  dL=+0.426  dP=-0.281
++ Max : roll=+0.329  pitch=+0.246  yaw=+0.703  dS=+1.509  dL=+1.274  dP=+0.136
++ Max displacements (mm) for each sub-brick:
 1.67(0.00) 1.67(0.04) 1.64(0.06) 1.59(0.10) 1.55(0.16) 1.55(0.18) 1.61(0.13) 1.61(0.18) 1.56(0.12) 1.56(0.02) 1.54(0.10) 1.54(0.06) 1.63(0.12) 1.64(0.07) 1.62(0.08) 1.62(0.07) 1.69(0.09) 1.68(0.05) 1.66(0.06) 1.64(0.05) 1.60(0.09) 1.61(0.05) 1.62(0.04) 1.59(0.09) 1.54(0.18) 1.56(0.08) 1.58(0.20) 1.56(0.35) 1.45(0.17) 1.39(0.08) 1.44(0.06) 1.43(0.04) 1.43(0.12) 1.40(0.10) 1.36(0.17) 1.29(0.13) 1.21(0.22) 1.30(0.13) 1.30(0.17) 0.92(0.51) 0.62(1.25) 0.55(0.10) 0.47(0.13) 0.43(0.06) 0.43(0.12) 0.33(0.11) 0.34(0.06) 0.25(0.17) 0.22(0.16) 0.20(0.11) 0.17(0.11) 0.17(0.06) 0.15(0.05) 0.18(0.09) 0.16(0.05) 0.15(0.05) 0.14(0.03) 0.18(0.11) 0.21(0.09) 0.21(0.11) 0.17(0.09) 0.17(0.05) 0.23(0.14) 0.27(0.14) 0.26(0.10) 0.22(0.10) 0.20(0.08) 0.26(0.15) 0.17(0.13) 0.23(0.10) 0.19(0.09) 0.21(0.18) 0.25(0.26) 0.18(0.10) 0.04(0.16) 0.04(0.04) 0.00(0.04) 0.07(0.07) 0.11(0.04) 0.12(0.06) 0.12(0.06) 0.10(0.06) 0.11(0.04) 0.11(0.06) 0.14(0.05) 0.17(0.05) 0.16(0.08) 0.16(0.08) 0.13(0.08) 0.19(0.08) 0.28(0.13) 0.30(0.05) 0.22(0.10) 0.15(0.09) 0.11(0.07) 0.12(0.14) 0.15(0.06) 0.14(0.05) 0.16(0.04) 0.20(0.06) 0.14(0.11) 0.15(0.05) 0.18(0.09) 0.19(0.17) 0.23(0.11) 0.18(0.09) 0.18(0.08) 0.19(0.05) 0.17(0.03) 0.25(0.08) 0.27(0.03) 0.23(0.12) 0.21(0.07) 0.21(0.05) 0.24(0.06) 0.25(0.03) 0.28(0.05) 0.31(0.05) 0.25(0.09) 0.34(0.14) 0.55(0.31) 0.61(0.18) 0.57(0.05) 0.50(0.11) 0.54(0.07) 0.54(0.05) 0.56(0.08) 0.58(0.04) 0.53(0.08) 0.51(0.05) 0.50(0.03) 0.51(0.05) 0.55(0.09) 0.55(0.13) 0.50(0.14) 0.45(0.15) 0.43(0.10) 0.54(0.11) 0.62(0.10) 0.58(0.09) 0.54(0.11) 0.48(0.07) 0.56(0.10) 0.56(0.09) 0.49(0.11) 0.52(0.06) 0.53(0.02) 0.55(0.05) 0.63(0.08) 0.54(0.09) 0.53(0.06) 0.61(0.21) 0.53(0.19) 0.65(0.15) 0.57(0.14) 0.56(0.07) 0.57(0.06) 0.57(0.05) 0.63(0.09) 0.78(0.19) 0.75(0.14) 0.76(0.07) 0.73(0.05) 0.81(0.10) 0.81(0.09) 0.81(0.10) 0.73(0.10) 0.72(0.04) 0.73(0.03) 0.72(0.02) 0.83(0.12) 0.81(0.10) 0.79(0.05) 0.77(0.05) 0.80(0.05) 0.79(0.02) 0.83(0.08) 0.88(0.07) 0.88(0.04) 0.83(0.07) 0.82(0.06) 0.85(0.08) 0.86(0.07) 0.91(0.11) 0.92(0.09) 0.81(0.14) 0.86(0.12) 0.81(0.14) 0.94(0.17) 0.94(0.12) 0.90(0.04) 1.01(0.14) 0.95(0.07) 1.05(0.21) 1.09(0.09) 1.03(0.11) 0.93(0.20) 1.18(0.35) 1.23(0.09) 1.25(0.12) 1.15(0.12) 1.05(0.15) 1.06(0.07) 1.05(0.03) 1.06(0.03) 1.00(0.08) 1.02(0.09) 0.95(0.10) 1.01(0.09) 0.96(0.10) 1.05(0.11) 1.02(0.11) 1.02(0.07) 1.03(0.04) 1.01(0.03) 1.04(0.06) 1.02(0.03) 1.16(0.16) 1.17(0.11) 1.11(0.08) 1.10(0.05) 1.11(0.06) 1.06(0.09) 1.09(0.08) 1.07(0.05) 1.07(0.03) 1.10(0.05) 1.06(0.06) 1.14(0.08) 1.14(0.10) 1.12(0.06) 1.11(0.02) 1.10(0.13) 1.28(0.26) 1.54(0.37) 1.16(0.42) 1.18(0.14) 1.17(0.12) 1.20(0.08) 1.24(0.08) 1.32(0.11) 1.26(0.10) 1.22(0.06) 1.20(0.05) 1.20(0.04) 1.49(0.47) 1.38(0.18) 1.25(0.27) 1.18(0.09) 1.17(0.11) 1.25(0.10) 1.23(0.07) 1.17(0.07) 1.15(0.05) 1.08(0.10) 1.07(0.06) 1.14(0.11) 1.16(0.06) 1.12(0.05) 1.09(0.07) 1.07(0.06) 1.06(0.02) 1.19(0.14) 1.14(0.15) 1.11(0.08) 1.12(0.04) 1.09(0.04) 1.19(0.12) 1.18(0.03) 1.16(0.04) 1.13(0.08) 1.11(0.05) 1.12(0.05) 1.17(0.06) 1.17(0.06) 1.08(0.10) 1.04(0.08) 1.04(0.05) 1.07(0.05) 1.13(0.10) 1.19(0.07) 1.04(0.20) 1.05(0.30) 1.12(0.16) 1.29(0.19) 1.31(0.05) 1.28(0.07) 1.31(0.05) 1.33(0.09) 1.44(0.20) 1.30(0.33) 1.11(0.20) 1.14(0.20) 1.23(0.11) 1.39(0.17) 1.33(0.09) 1.25(0.09) 1.26(0.04) 1.25(0.04) 1.30(0.07) 1.34(0.07) 1.33(0.06) 1.33(0.03) 1.33(0.04) 1.33(0.04) 1.41(0.10) 1.32(0.13) 1.36(0.11) 1.30(0.09) 1.36(0.09) 1.42(0.07) 1.39(0.05) 1.42(0.05) 1.36(0.07) 1.40(0.05) 1.42(0.04) 1.46(0.08) 1.41(0.05) 1.37(0.05) 1.35(0.03) 1.46(0.14) 1.45(0.10) 1.43(0.05) 1.44(0.03) 1.40(0.06) 1.41(0.04) 1.45(0.05) 1.55(0.13) 1.50(0.12) 1.48(0.08) 1.42(0.10) 1.45(0.10) 1.45(0.06) 1.53(0.10) 1.50(0.04) 1.44(0.07) 1.45(0.02) 1.42(0.04) 1.50(0.08) 1.58(0.12) 1.57(0.08) 1.53(0.07) 1.47(0.06) 1.53(0.10) 1.64(0.14) 1.59(0.08) 1.53(0.08) 1.45(0.11) 1.41(0.05) 1.47(0.08) 1.56(0.11) 1.48(0.09) 1.47(0.06) 1.49(0.08) 1.52(0.09) 1.57(0.12) 1.63(0.08) 1.53(0.11) 1.45(0.10) 1.46(0.05) 1.43(0.04) 1.52(0.11) 1.51(0.07) 1.58(0.10) 1.52(0.10) 1.47(0.08) 1.50(0.06) 1.50(0.05) 1.63(0.15) 1.59(0.09) 1.54(0.07) 1.52(0.04) 1.53(0.05) 1.49(0.05) 1.53(0.09) 1.48(0.09) 1.61(0.15) 1.56(0.19) 1.55(0.11) 1.52(0.07) 1.53(0.04) 1.53(0.05) 1.51(0.03) 1.57(0.12) 1.56(0.10) 1.51(0.06) 1.50(0.05) 1.51(0.07) 1.49(0.03) 1.53(0.09) 1.52(0.04) 1.53(0.03) 1.63(0.14) 1.56(0.26) 1.59(0.12) 1.56(0.10) 1.58(0.03) 1.52(0.12) 1.46(0.06) 1.44(0.06) 1.50(0.09) 1.60(0.14) 1.58(0.08) 1.62(0.25) 1.63(0.06) 1.61(0.12) 1.54(0.12) 1.45(0.11) 1.44(0.12) 1.44(0.03) 1.49(0.30) 0.84(0.85) 0.85(0.33) 1.03(0.40) 0.97(0.31) 1.07(0.16) 1.07(0.08) 1.06(0.13) 1.10(0.12) 1.11(0.04) 1.11(0.03) 1.06(0.06) 1.10(0.13) 1.05(0.13) 1.07(0.05) 1.12(0.08) 1.12(0.04) 1.20(0.10) 1.64(0.47) 1.64(0.08) 1.73(0.15) 1.59(0.20) 1.59(0.20) 1.60(0.16) 1.52(0.11) 1.43(0.18) 1.37(0.11) 1.38(0.07) 1.40(0.08) 1.36(0.09) 1.44(0.11) 1.46(0.05) 1.44(0.06) 1.44(0.06) 1.45(0.04) 1.46(0.01) 1.44(0.10) 1.46(0.03) 1.52(0.06) 1.54(0.12) 1.47(0.10) 1.46(0.06) 1.42(0.05) 1.42(0.11) 1.50(0.10) 1.44(0.07) 1.44(0.02) 1.39(0.11) 1.42(0.08) 1.46(0.07) 1.41(0.08) 1.35(0.07) 1.31(0.06) 1.41(0.15) 1.35(0.10) 1.23(0.13) 1.21(0.14) 0.89(0.87) 1.06(0.34) 0.77(0.35) 0.69(0.16) 0.65(0.04) 0.65(0.12) 0.70(0.14) 0.74(0.09) 0.84(0.14) 0.91(0.09) 0.86(0.09) 0.82(0.06) 0.77(0.12) 0.79(0.08) 0.78(0.05) 0.85(0.13) 0.84(0.04) 0.87(0.05) 0.90(0.09) 0.86(0.04) 0.87(0.03) 0.86(0.03) 0.85(0.07) 0.84(0.06) 0.91(0.09) 0.93(0.12) 0.90(0.11) 0.91(0.04) 0.91(0.06) 0.91(0.05) 0.95(0.08) 0.91(0.08) 0.99(0.12) 0.99(0.03) 0.99(0.05) 1.00(0.09) 0.97(0.04) 1.01(0.07) 1.00(0.08) 1.04(0.08) 1.21(0.20) 1.28(0.18) 1.22(0.13) 1.16(0.16) 1.14(0.06) 1.15(0.09) 1.13(0.05) 1.15(0.05) 1.13(0.02) 1.14(0.03) 1.07(0.11) 1.09(0.04) 1.16(0.14) 1.11(0.14) 1.11(0.09) 1.08(0.06) 1.12(0.05) 1.11(0.05) 1.12(0.04) 1.12(0.05) 1.12(0.04) 1.15(0.06) 1.13(0.07) 1.03(0.12) 1.01(0.19) 1.11(0.16) 0.93(0.20) 0.95(0.10) 0.97(0.04) 0.99(0.03) 1.03(0.06) 1.03(0.04) 1.02(0.06) 1.01(0.02) 1.08(0.09) 1.09(0.13) 1.11(0.04) 1.02(0.13) 1.01(0.05) 1.03(0.06) 1.01(0.03) 1.06(0.09) 1.06(0.02) 1.08(0.03) 1.15(0.09) 1.11(0.15) 1.11(0.06) 1.19(0.09) 1.46(0.35) 1.68(0.24) 1.81(0.21) 2.00(0.30) 2.13(0.39) 2.19(0.16) 2.17(0.18) 2.18(0.06) 2.21(0.08) 2.17(0.08) 2.03(0.14) 1.94(0.11) 1.77(0.17) 1.77(0.09) 1.73(0.10) 1.69(0.10) 1.77(0.14) 1.68(0.11) 1.61(0.09) 1.64(0.03) 1.60(0.09) 1.62(0.12) 1.71(0.11) 1.58(0.14) 1.22(0.53) 1.07(0.29) 1.12(0.24) 1.22(0.25) 1.43(0.26) 1.62(0.42) 1.40(0.27) 1.25(0.41) 1.28(0.11) 1.33(0.17) 1.27(0.06) 1.11(0.32) 1.00(0.12) 1.14(0.18) 0.99(0.23) 0.99(0.07) 0.94(0.09) 0.98(0.06) 1.05(0.14) 1.15(0.15) 1.21(0.10) 1.15(0.07) 1.13(0.08) 1.08(0.07) 1.14(0.06) 1.06(0.10) 1.13(0.08) 1.20(0.09) 1.20(0.08) 1.20(0.09) 1.14(0.06) 1.18(0.07) 1.18(0.01) 1.23(0.07) 1.17(0.06) 1.18(0.03) 1.14(0.06) 1.16(0.03) 1.16(0.01) 1.27(0.13) 1.23(0.10) 1.12(0.14) 1.16(0.07) 1.16(0.02) 1.12(0.04) 1.20(0.11) 1.16(0.05) 1.14(0.04) 1.17(0.06) 1.11(0.09) 1.06(0.09) 0.96(0.14) 0.94(0.08) 0.90(0.05) 0.96(0.07) 0.96(0.02) 0.99(0.04) 1.03(0.06) 1.06(0.07) 1.01(0.10) 0.93(0.11) 1.02(0.22) 1.04(0.04) 1.13(0.13) 1.12(0.10) 1.07(0.06) 1.04(0.09) 0.97(0.09) 1.01(0.07) 1.03(0.04) 1.02(0.06) 0.95(0.08) 1.03(0.08) 1.02(0.07) 1.06(0.10) 1.00(0.07) 1.01(0.07) 1.03(0.04) 1.03(0.06) 1.14(0.12) 1.15(0.04) 1.10(0.08) 1.02(0.09) 1.05(0.07) 1.01(0.05) 1.01(0.04) 1.12(0.12) 1.06(0.07) 1.06(0.04) 1.01(0.08) 1.04(0.04) 1.12(0.10) 1.10(0.09) 1.02(0.08) 1.07(0.06) 1.02(0.06) 1.02(0.03) 1.10(0.09) 1.03(0.07) 1.04(0.03) 1.03(0.04) 1.04(0.03) 1.14(0.12) 1.24(0.14) 1.11(0.15) 1.12(0.09) 1.12(0.07) 1.07(0.06) 1.25(0.33) 1.52(0.34) 1.64(0.13) 1.69(0.14) 1.57(0.12) 1.59(0.19) 1.61(0.19) 1.54(0.10) 1.52(0.08) 1.51(0.08) 1.53(0.07) 1.55(0.11) 1.41(0.22) 1.26(0.15) 1.28(0.04) 1.28(0.04) 1.33(0.06) 1.40(0.09) 1.36(0.06) 1.21(0.16) 1.17(0.06) 1.24(0.10) 1.31(0.12) 1.23(0.09) 1.20(0.07) 1.19(0.03) 1.16(0.11) 1.07(0.18) 1.03(0.47) 0.96(0.16) 0.92(0.17) 0.92(0.05) 1.04(0.14) 1.03(0.17) 1.04(0.06) 1.08(0.11) 1.02(0.10) 1.04(0.07) 1.01(0.07) 1.07(0.11) 1.04(0.05) 1.01(0.05) 0.95(0.06) 1.05(0.11) 1.03(0.04) 1.11(0.09) 1.13(0.06) 1.08(0.08) 1.04(0.06) 0.94(0.12) 1.00(0.07) 1.00(0.06) 0.99(0.02) 1.09(0.11) 1.03(0.08) 1.06(0.07) 1.07(0.08) 1.12(0.20) 1.23(0.23) 1.07(0.24) 1.05(0.04) 1.13(0.15) 1.13(0.09) 1.19(0.12) 1.20(0.08) 1.21(0.04) 1.16(0.06) 1.13(0.06) 1.09(0.09) 1.03(0.06) 1.09(0.06) 1.08(0.04) 1.13(0.06) 1.21(0.14) 1.14(0.12) 1.20(0.09) 1.18(0.05) 1.20(0.05) 1.14(0.07) 1.25(0.12) 1.26(0.10) 1.21(0.08) 1.25(0.05) 1.20(0.09) 1.23(0.05) 1.22(0.04) 1.31(0.09) 1.19(0.12) 1.25(0.12) 1.19(0.13) 1.14(0.13) 1.16(0.05) 1.12(0.07) 1.13(0.02) 1.12(0.04) 1.16(0.05) 1.21(0.11) 1.22(0.08) 1.15(0.09) 1.20(0.06) 1.11(0.09) 1.12(0.04) 1.11(0.05) 1.10(0.04) 1.13(0.05) 1.17(0.07) 1.16(0.08) 1.11(0.11) 1.16(0.08) 1.14(0.05) 1.20(0.07) 1.20(0.07) 1.26(0.11) 1.08(0.19) 1.10(0.05) 1.18(0.13) 1.15(0.06) 1.18(0.06) 1.22(0.06) 1.19(0.10) 1.14(0.08) 1.14(0.02) 1.06(0.08) 1.14(0.08) 1.14(0.03) 1.16(0.03) 1.24(0.14) 1.18(0.10) 1.19(0.04) 1.32(0.21) 1.56(0.45) 1.70(0.27) 1.73(0.15) 1.72(0.12) 1.66(0.06) 1.75(0.15) 1.67(0.11) 1.59(0.13) 1.48(0.12) 1.51(0.05) 1.46(0.07) 1.47(0.03) 1.49(0.09) 1.52(0.05) 1.56(0.07) 1.49(0.08) 1.48(0.04) 1.45(0.05) 1.48(0.07) 1.55(0.11) 1.53(0.07) 1.42(0.11) 1.46(0.06) 1.46(0.04) 1.45(0.04) 1.44(0.06) 1.51(0.10) 1.52(0.12) 1.47(0.08) 1.44(0.06) 1.40(0.05) 1.39(0.05) 1.47(0.09) 1.53(0.07) 1.47(0.12) 1.54(0.08) 1.56(0.13) 1.64(0.09) 1.73(0.12) 1.69(0.10) 1.65(0.05) 1.64(0.05) 1.65(0.04) 1.72(0.09) 1.76(0.08) 1.72(0.10) 1.67(0.06) 1.66(0.05) 1.72(0.11) 1.80(0.12) 1.78(0.06) 1.74(0.09) 1.70(0.11) 1.73(0.05) 1.74(0.07) 1.71(0.03) 1.72(0.05) 1.78(0.08) 1.83(0.10) 1.84(0.10) 1.83(0.05) 1.78(0.09) 1.76(0.06) 1.78(0.10) 1.82(0.05) 2.17(0.36) 2.42(0.27) 2.39(0.07) 2.31(0.15) 2.27(0.05) 2.28(0.04) 2.27(0.03) 2.25(0.03) 2.27(0.07) 2.32(0.13) 2.26(0.15) 2.21(0.05) 2.21(0.05) 2.20(0.03) 2.22(0.04) 2.19(0.04) 2.23(0.08) 2.21(0.11) 2.25(0.10) 2.25(0.08) 2.17(0.09) 2.14(0.04) 2.12(0.05) 2.14(0.06) 2.17(0.07) 2.21(0.09) 2.22(0.07) 2.19(0.08) 2.18(0.05) 2.16(0.06) 2.21(0.09) 2.18(0.13) 2.13(0.10) 2.10(0.04) 2.06(0.07) 1.99(0.27) 1.96(0.25) 1.98(0.13) 2.03(0.13) 2.09(0.11) 2.07(0.09) 2.08(0.04) 2.06(0.03) 2.04(0.09) 2.03(0.12) 2.05(0.10) 2.03(0.03) 1.99(0.12) 2.01(0.06) 2.02(0.05) 2.04(0.08) 2.12(0.15) 2.08(0.10) 2.06(0.09) 2.01(0.08) 2.00(0.06) 2.05(0.10) 2.07(0.04) 2.04(0.06) 1.99(0.10) 1.93(0.07) 1.94(0.05) 1.92(0.03) 1.95(0.05) 1.97(0.08) 1.99(0.12) 1.97(0.07) 2.00(0.07) 1.97(0.09) 1.99(0.08) 1.97(0.05) 2.02(0.09) 2.04(0.06) 1.98(0.08) 1.93(0.06) 1.86(0.10) 1.85(0.09) 1.85(0.13) 1.93(0.09) 2.01(0.11) 2.08(0.19) 2.16(0.18) 1.86(0.37) 1.91(0.17) 1.94(0.13) 2.07(0.15) 2.08(0.06) 1.98(0.14) 1.93(0.05) 1.90(0.07) 1.93(0.11) 1.96(0.09) 1.91(0.06) 1.76(0.16) 1.83(0.16) 1.92(0.22) 1.86(0.12) 1.94(0.13) 2.02(0.13) 2.01(0.07) 2.10(0.13) 2.10(0.15) 2.17(0.09) 2.13(0.11) 2.08(0.06) 2.03(0.13) 2.15(0.14) 2.15(0.11) 2.07(0.10) 2.11(0.08) 2.12(0.06) 2.13(0.03) 2.14(0.04) 2.16(0.05) 2.16(0.05) 2.15(0.07) 1.99(0.18) 1.75(0.44) 1.83(0.21) 1.95(0.23) 1.93(0.09) 1.93(0.09) 1.96(0.05) 2.03(0.12) 2.05(0.04) 2.07(0.05) 2.10(0.05) 2.09(0.05) 2.16(0.15) 2.23(0.13) 2.16(0.14) 2.11(0.06) 2.12(0.05) 2.11(0.04) 2.10(0.06) 2.13(0.07) 2.14(0.03) 2.11(0.08) 2.20(0.10) 2.27(0.14) 2.17(0.17) 2.16(0.05) 2.16(0.03) 2.16(0.05) 2.18(0.17) 2.34(0.24) 2.53(0.25) 2.56(0.18) 2.50(0.20) 2.42(0.10) 2.38(0.06) 2.30(0.08) 2.26(0.06) 2.23(0.08) 2.18(0.10) 2.08(0.23) 1.84(0.35) 1.45(0.48) 1.51(0.32) 1.55(0.17) 1.61(0.11) 1.63(0.05) 1.72(0.11) 1.75(0.06) 1.75(0.04) 1.75(0.05) 1.74(0.09) 1.77(0.07) 1.75(0.13) 1.78(0.07) 1.79(0.03) 1.81(0.05) 1.84(0.06) 1.86(0.03) 1.89(0.07) 1.91(0.08) 1.96(0.08) 1.88(0.13) 1.92(0.10) 1.96(0.09) 1.96(0.03) 1.95(0.06) 1.96(0.03) 1.95(0.06) 1.83(0.21) 1.84(0.05) 1.88(0.20) 1.84(0.09) 1.82(0.05) 1.81(0.04) 1.82(0.08) 1.91(0.12) 1.95(0.11) 1.85(0.20) 1.77(0.09) 1.79(0.07) 1.83(0.04) 1.98(0.17) 2.08(0.14) 1.89(0.19) 1.86(0.12) 1.84(0.06) 1.87(0.07) 1.88(0.03) 1.87(0.06) 1.97(0.11) 2.02(0.12) 1.92(0.11) 1.76(0.24) 1.73(0.05) 1.73(0.07) 1.76(0.07) 1.77(0.06) 1.84(0.08)
++ Max displacement in automask = 2.56 (mm) at sub-brick 1029
++ Max delta displ  in automask = 1.25 (mm) at sub-brick 40
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb03.GP35.r01.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GP35_unif_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master MPRAGE.GP35_unif_ns+tlrc -dxyz 2.5 -source pb02.GP35.r01.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GP35_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GP35.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 597.6 sec
3dNwarpApply -master MPRAGE.GP35_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GP35_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb03.GP35.r02.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GP35.r02.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 70743 voxels
 + 8971 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.669  pitch=-0.323  yaw=+0.252  dS=+0.840  dL=+0.423  dP=-0.827
++ Mean: roll=-0.439  pitch=-0.120  yaw=+0.754  dS=+2.075  dL=+1.004  dP=+0.007
++ Max : roll=-0.185  pitch=+0.409  yaw=+1.409  dS=+2.617  dL=+1.707  dP=+0.256
++ Max displacements (mm) for each sub-brick:
 1.94(0.00) 1.99(0.06) 2.02(0.09) 2.04(0.05) 2.04(0.06) 2.08(0.15) 2.15(0.13) 2.10(0.10) 2.06(0.14) 2.07(0.14) 2.08(0.11) 2.13(0.11) 2.14(0.11) 2.15(0.07) 2.16(0.04) 2.12(0.49) 2.22(0.54) 2.32(0.26) 2.31(0.07) 2.21(0.19) 2.16(0.14) 2.15(0.04) 2.15(0.11) 2.17(0.06) 2.17(0.08) 2.20(0.09) 2.22(0.09) 2.26(0.11) 2.67(0.56) 3.18(0.66) 3.16(0.10) 3.10(0.17) 3.16(0.14) 3.11(0.12) 3.04(0.13) 2.94(0.18) 2.96(0.04) 2.93(0.06) 2.96(0.05) 2.93(0.07) 2.94(0.11) 2.92(0.09) 2.91(0.13) 2.90(0.13) 2.96(0.10) 2.94(0.07) 2.93(0.04) 2.95(0.07) 2.96(0.05) 2.96(0.03) 2.96(0.04) 2.96(0.02) 2.96(0.03) 2.95(0.03) 2.93(0.05) 2.91(0.15) 2.95(0.14) 2.96(0.12) 2.95(0.08) 2.93(0.03) 2.93(0.06) 2.91(0.07) 2.94(0.07) 2.94(0.07) 2.97(0.07) 3.03(0.12) 3.02(0.13) 2.97(0.08) 2.94(0.11) 2.95(0.02) 2.96(0.14) 3.02(0.11) 2.97(0.08) 2.95(0.11) 2.94(0.05) 2.92(0.07) 2.96(0.14) 2.97(0.07) 2.94(0.09) 2.93(0.03) 2.94(0.06) 2.91(0.03) 2.98(0.11) 2.99(0.09) 2.95(0.09) 2.93(0.10) 2.92(0.09) 2.92(0.12) 2.93(0.12) 3.00(0.16) 3.03(0.06) 3.00(0.06) 2.96(0.06) 2.96(0.10) 2.98(0.09) 3.00(0.08) 3.09(0.20) 3.15(0.16) 3.19(0.14) 3.20(0.08) 3.14(0.07) 3.13(0.07) 3.08(0.09) 3.08(0.06) 3.06(0.07) 3.05(0.02) 3.06(0.03) 3.12(0.08) 3.09(0.10) 3.06(0.08) 3.05(0.09) 3.03(0.06) 3.06(0.10) 3.07(0.08) 3.08(0.16) 2.97(0.19) 2.94(0.13) 2.67(0.31) 2.49(0.34) 2.68(0.23) 2.66(0.11) 2.58(0.20) 2.58(0.04) 2.58(0.07) 2.60(0.02) 2.61(0.02) 2.62(0.08) 2.68(0.08) 2.72(0.12) 2.69(0.06) 2.72(0.05) 2.71(0.08) 2.72(0.12) 2.79(0.12) 2.87(0.08) 2.83(0.05) 2.74(0.10) 2.75(0.07) 2.74(0.06) 2.74(0.03) 2.73(0.06) 2.74(0.05) 2.74(0.02) 2.77(0.04) 2.77(0.06) 2.85(0.15) 2.56(0.50) 2.85(0.33) 2.92(0.08) 2.86(0.08) 2.84(0.10) 2.80(0.09) 2.74(0.09) 2.70(0.07) 2.65(0.05) 2.65(0.05) 2.65(0.10) 2.66(0.04) 2.68(0.14) 2.71(0.07) 2.71(0.09) 2.76(0.13) 2.86(0.12) 2.95(0.14) 2.91(0.23) 2.84(0.12) 2.71(0.21) 2.67(0.14) 2.66(0.08) 2.68(0.13) 2.69(0.05) 2.67(0.04) 2.63(0.06) 2.61(0.08) 2.58(0.06) 2.58(0.08) 2.60(0.09) 2.72(0.16) 2.78(0.12) 2.65(0.17) 2.62(0.14) 2.66(0.05) 2.68(0.03) 2.65(0.08) 2.65(0.04) 2.66(0.05) 2.67(0.06) 2.66(0.02) 2.67(0.03) 2.72(0.08) 2.83(0.12) 2.85(0.07) 2.75(0.11) 2.72(0.07) 2.70(0.07) 2.68(0.05) 2.65(0.03) 2.64(0.04) 2.63(0.02) 2.63(0.11) 2.70(0.13) 2.78(0.13) 2.76(0.07) 2.68(0.09) 2.65(0.07) 2.64(0.09) 2.63(0.04) 2.63(0.05) 2.64(0.08) 2.75(0.14) 2.78(0.14) 2.72(0.10) 2.67(0.09) 2.66(0.02) 2.67(0.04) 2.65(0.05) 2.65(0.04) 2.64(0.06) 2.62(0.05) 2.61(0.04) 2.64(0.06) 2.73(0.12) 2.81(0.08) 2.77(0.09) 2.65(0.16) 2.64(0.12) 2.63(0.03) 2.64(0.05) 2.63(0.04) 2.65(0.05) 2.74(0.13) 2.75(0.10) 2.70(0.06) 2.66(0.11) 2.66(0.04) 2.65(0.07) 2.65(0.04) 2.67(0.05) 2.66(0.05) 2.65(0.07) 2.65(0.08) 2.65(0.02) 2.70(0.09) 2.72(0.12) 2.67(0.05) 2.66(0.03) 2.64(0.07) 2.64(0.12) 2.67(0.04) 2.64(0.07) 2.64(0.07) 2.63(0.05) 2.63(0.03) 2.64(0.02) 2.65(0.05) 2.73(0.13) 2.75(0.04) 2.63(0.12) 2.62(0.06) 2.62(0.05) 2.61(0.07) 2.61(0.02) 2.60(0.03) 2.59(0.03) 2.61(0.07) 2.55(0.12) 2.60(0.15) 2.73(0.18) 2.78(0.05) 2.67(0.11) 2.63(0.07) 2.62(0.08) 2.61(0.05) 2.61(0.04) 2.60(0.03) 2.60(0.04) 2.58(0.11) 2.63(0.05) 2.73(0.11) 2.80(0.10) 2.70(0.12) 2.58(0.15) 2.58(0.10) 2.57(0.06) 2.56(0.22) 2.54(0.13) 2.52(0.12) 2.53(0.05) 2.53(0.10) 2.52(0.06) 2.58(0.15) 2.66(0.16) 2.61(0.06) 2.55(0.10) 2.55(0.02) 2.53(0.06) 2.53(0.06) 2.54(0.10) 2.62(0.15) 2.69(0.12) 2.67(0.05) 2.64(0.07) 2.57(0.08) 2.56(0.06) 2.48(0.14) 2.53(0.11) 2.67(0.15) 2.66(0.03) 2.61(0.05) 2.57(0.07) 2.54(0.10) 2.53(0.03) 2.50(0.05) 2.52(0.05) 2.59(0.09) 2.57(0.06) 2.54(0.04) 2.51(0.04) 2.49(0.06) 2.50(0.04) 2.48(0.08) 2.50(0.12) 2.54(0.17) 2.59(0.16) 2.56(0.06) 2.53(0.06) 2.53(0.04) 2.54(0.03) 2.52(0.03) 2.53(0.10) 2.54(0.09) 2.54(0.02) 2.51(0.04) 2.50(0.06) 2.47(0.05) 2.48(0.05) 2.55(0.11) 2.63(0.09) 2.60(0.07) 2.54(0.10) 2.42(0.15) 2.37(0.08) 2.33(0.05) 2.36(0.04) 2.38(0.05) 2.56(0.23) 2.65(0.21) 2.55(0.13) 2.53(0.08) 2.55(0.05) 2.56(0.05) 2.54(0.07) 2.54(0.05) 2.57(0.11) 2.65(0.10) 2.59(0.07) 2.55(0.06) 2.60(0.08) 2.62(0.05) 2.62(0.03) 2.62(0.09) 2.68(0.07) 2.71(0.06) 2.63(0.10) 2.63(0.08) 2.60(0.04) 2.61(0.03) 2.61(0.04) 2.66(0.07) 2.62(0.09) 2.53(0.22) 2.44(0.12) 2.32(0.15) 2.27(0.09) 2.06(0.28) 1.95(0.18) 1.96(0.06) 1.92(0.15) 2.02(0.25) 2.15(0.28) 2.28(0.18) 2.31(0.08) 2.31(0.06) 2.29(0.11) 2.29(0.10) 2.33(0.10) 2.38(0.08) 2.36(0.05) 2.28(0.10) 2.35(0.13) 2.49(0.23) 2.54(0.08) 2.55(0.05) 2.56(0.07) 2.64(0.09) 2.65(0.05) 2.59(0.07) 2.57(0.04) 2.55(0.04) 2.53(0.06) 2.54(0.06) 2.55(0.10) 2.59(0.13) 2.65(0.09) 2.67(0.09) 2.63(0.05) 2.58(0.06) 2.58(0.05) 2.55(0.04) 2.55(0.08) 2.56(0.03) 2.60(0.06) 2.64(0.04) 2.61(0.11) 2.57(0.07) 2.56(0.05) 2.56(0.06) 2.56(0.05) 2.58(0.07) 2.65(0.11) 2.73(0.08) 2.71(0.06) 2.74(0.14) 3.21(0.53) 3.24(0.07) 3.08(0.19) 3.05(0.09) 3.13(0.10) 3.26(0.16) 3.27(0.04) 3.18(0.12) 3.16(0.05) 3.12(0.06) 3.13(0.06) 3.17(0.11) 3.13(0.14) 3.12(0.05) 3.11(0.06) 3.13(0.03) 3.12(0.02) 3.12(0.06) 3.14(0.10) 3.14(0.10) 3.12(0.08) 3.10(0.17) 3.12(0.04) 3.11(0.06) 3.12(0.03) 3.11(0.03) 3.12(0.08) 3.18(0.14) 3.24(0.10) 3.19(0.06) 3.23(0.10) 3.34(0.15) 3.33(0.06) 3.33(0.03) 3.32(0.02) 3.34(0.13) 3.42(0.13) 3.39(0.11) 3.38(0.08) 3.34(0.06) 3.33(0.08) 3.32(0.05) 3.28(0.06) 3.29(0.08) 3.34(0.07) 3.35(0.06) 3.32(0.04) 3.33(0.09) 3.31(0.03) 3.33(0.05) 3.33(0.04) 3.34(0.05) 3.37(0.09) 3.42(0.07) 3.43(0.08) 3.37(0.11) 3.36(0.06) 3.34(0.05) 3.36(0.04) 3.36(0.03) 3.36(0.03) 3.70(0.37) 3.89(0.22) 3.78(0.13) 3.71(0.12) 3.68(0.07) 3.67(0.05) 3.66(0.05) 3.67(0.11) 3.63(0.11) 3.69(0.13) 3.72(0.09) 3.66(0.13) 3.63(0.08) 3.62(0.07) 3.62(0.04) 3.64(0.07) 3.65(0.02) 3.65(0.02) 3.69(0.11) 3.75(0.08) 3.71(0.14) 3.68(0.04) 3.67(0.05) 3.69(0.05) 3.69(0.03) 3.70(0.09) 3.74(0.09) 3.69(0.07) 3.67(0.05) 3.66(0.03) 3.67(0.03) 3.66(0.02) 3.69(0.04) 3.79(0.11) 3.77(0.03) 3.73(0.08) 3.74(0.05) 3.71(0.06) 3.73(0.06) 3.71(0.04) 3.75(0.05) 3.78(0.07) 3.73(0.15) 3.70(0.19) 3.64(0.08) 3.66(0.05) 3.67(0.04) 3.67(0.04) 3.67(0.04) 3.67(0.05) 3.72(0.14) 3.76(0.14) 3.72(0.07) 3.70(0.06) 3.71(0.07) 3.70(0.04) 3.72(0.13) 3.72(0.08) 3.70(0.12) 3.71(0.07) 3.72(0.06) 3.79(0.11) 3.80(0.05) 3.76(0.11) 3.77(0.05) 3.76(0.06) 3.76(0.09) 3.71(0.12) 3.31(0.51) 2.61(0.82) 2.63(0.32) 2.65(0.09) 2.71(0.14) 2.77(0.07) 2.80(0.06) 2.82(0.12) 2.84(0.13) 2.88(0.11) 2.90(0.03) 2.92(0.10) 2.92(0.05) 2.96(0.05) 2.99(0.04) 3.07(0.11) 3.14(0.12) 3.16(0.11) 3.10(0.13) 3.05(0.08) 3.09(0.06) 3.08(0.08) 3.10(0.03) 3.10(0.02) 3.09(0.08) 3.15(0.10) 3.22(0.07) 3.19(0.08) 3.13(0.09) 3.12(0.08) 3.11(0.05) 3.11(0.07) 3.16(0.14) 3.33(0.26) 3.38(0.07) 3.35(0.06) 3.34(0.05) 3.42(0.09) 3.45(0.08) 3.48(0.06) 3.39(0.16) 3.46(0.10) 3.49(0.12) 3.39(0.14) 3.43(0.09) 3.43(0.05) 3.42(0.04) 3.42(0.05) 3.45(0.04) 3.44(0.07) 3.45(0.04) 3.45(0.05) 3.43(0.06) 3.43(0.09) 3.44(0.04) 3.43(0.04) 3.44(0.03) 3.46(0.06) 3.50(0.07) 3.50(0.05) 3.50(0.05) 3.51(0.06) 3.53(0.03) 3.54(0.05) 3.54(0.06) 3.54(0.06) 3.52(0.03) 3.53(0.08) 3.52(0.06) 3.54(0.10) 3.57(0.05) 3.60(0.04) 3.55(0.07) 3.55(0.04) 3.52(0.05) 3.57(0.05) 3.58(0.05) 3.56(0.07) 3.54(0.04) 3.56(0.06) 3.48(0.10) 3.47(0.15) 3.54(0.10) 3.51(0.12) 3.52(0.04) 3.53(0.03) 3.53(0.05) 3.48(0.19) 3.53(0.15) 3.61(0.09) 3.55(0.13) 3.48(0.13) 3.48(0.06) 3.48(0.03) 3.49(0.03) 3.50(0.06) 3.60(0.15) 3.62(0.11) 3.58(0.04) 3.54(0.05) 3.54(0.04) 3.53(0.03) 3.53(0.05) 3.52(0.02) 3.53(0.05) 3.54(0.06) 3.54(0.05) 3.57(0.07) 3.55(0.13) 3.64(0.14) 3.62(0.09) 3.58(0.06) 3.58(0.07) 3.57(0.02) 3.56(0.04) 3.56(0.05) 3.56(0.04) 3.60(0.07) 3.63(0.06) 3.60(0.07) 3.55(0.13) 3.50(0.15) 3.43(0.09) 3.49(0.12) 3.50(0.04) 3.50(0.06) 3.51(0.06) 3.48(0.09) 3.60(0.14) 3.83(0.34) 3.87(0.08) 3.91(0.13) 3.76(0.26) 3.63(0.17) 3.64(0.07) 3.73(0.10) 3.72(0.08) 3.66(0.11) 3.69(0.09) 3.72(0.09) 3.70(0.13) 3.66(0.05) 3.68(0.05) 3.71(0.07) 3.65(0.15) 3.69(0.21) 3.69(0.11) 3.64(0.12) 3.65(0.02) 3.63(0.08) 3.65(0.04) 3.64(0.02) 3.65(0.02) 3.64(0.06) 3.64(0.03) 3.65(0.06) 3.66(0.07) 3.74(0.14) 3.76(0.05) 3.73(0.09) 3.70(0.10) 3.67(0.08) 3.69(0.05) 3.73(0.11) 3.75(0.03) 3.76(0.04) 3.84(0.13) 4.07(0.26) 4.06(0.11) 3.76(0.34) 3.67(0.15) 3.68(0.03) 3.70(0.04) 3.71(0.05) 3.71(0.05) 3.71(0.04) 3.69(0.06) 3.67(0.08) 3.77(0.15) 3.78(0.13) 3.77(0.06) 3.71(0.07) 3.71(0.07) 3.71(0.04) 3.74(0.04) 3.75(0.02) 3.75(0.03) 3.76(0.05) 3.76(0.04) 3.81(0.07) 3.85(0.08) 3.92(0.10) 3.89(0.11) 3.96(0.12) 4.04(0.19) 3.97(0.09) 3.97(0.08) 3.93(0.06) 3.95(0.04) 3.96(0.02) 3.94(0.08) 3.95(0.07) 3.96(0.10) 3.91(0.07) 3.89(0.04) 3.89(0.04) 3.89(0.09) 3.89(0.03) 3.93(0.09) 3.98(0.08) 3.92(0.12) 3.92(0.06) 3.88(0.11) 3.88(0.03) 3.88(0.06) 3.95(0.08) 4.06(0.15) 4.16(0.10) 4.08(0.10) 3.99(0.12) 3.98(0.08) 3.95(0.06) 3.92(0.06) 3.92(0.05) 3.91(0.04) 3.88(0.05) 3.94(0.07) 3.93(0.08) 3.85(0.12) 3.86(0.07) 3.83(0.09) 3.88(0.08) 3.90(0.11) 4.01(0.14) 4.06(0.09) 3.99(0.08) 3.95(0.06) 3.87(0.13) 3.81(0.08) 3.79(0.06) 3.78(0.03) 3.78(0.05) 3.83(0.06) 3.80(0.03) 3.79(0.06) 3.78(0.03) 3.79(0.02) 3.78(0.06) 3.86(0.12) 3.85(0.15) 3.81(0.10) 3.79(0.06) 3.82(0.08) 3.83(0.03) 3.83(0.05) 3.86(0.04) 3.86(0.03) 3.86(0.05) 3.98(0.17) 4.11(0.16) 4.01(0.12) 3.92(0.12) 3.92(0.11) 3.93(0.08) 3.94(0.10) 3.92(0.04) 3.95(0.05) 3.96(0.03) 3.96(0.02) 4.01(0.08) 4.07(0.09) 3.97(0.13) 3.96(0.05) 3.94(0.04) 3.96(0.04) 3.95(0.08) 3.95(0.05) 3.97(0.13) 4.06(0.15) 4.12(0.20) 4.18(0.18) 4.06(0.28) 3.86(0.24) 3.83(0.07) 3.77(0.12) 3.77(0.18) 3.76(0.09) 3.73(0.12) 3.73(0.07) 3.72(0.04) 3.74(0.08) 3.75(0.08) 3.85(0.10) 3.84(0.04) 3.80(0.12) 3.77(0.05) 3.74(0.11) 3.82(0.13) 3.87(0.09) 3.88(0.07) 3.82(0.12) 3.84(0.05) 3.85(0.04) 3.86(0.03) 3.86(0.07) 3.90(0.06) 3.93(0.09) 4.01(0.15) 4.00(0.13) 3.95(0.18) 3.98(0.17) 3.94(0.15) 3.97(0.06) 3.98(0.06) 3.96(0.04) 3.97(0.05) 3.97(0.05) 3.97(0.10) 4.04(0.11) 4.07(0.13) 4.04(0.05) 4.03(0.05) 4.01(0.05) 4.02(0.03) 4.06(0.07) 4.12(0.07) 4.14(0.05) 4.15(0.07) 4.11(0.12) 4.10(0.05) 4.12(0.05) 4.14(0.06) 4.19(0.12) 4.19(0.06) 4.15(0.12) 4.13(0.06) 4.12(0.05) 4.09(0.07) 4.13(0.07) 4.12(0.06) 4.10(0.05) 4.12(0.04) 4.13(0.05) 4.15(0.05) 4.17(0.09) 4.16(0.04) 4.14(0.07) 4.13(0.11) 4.16(0.11) 4.16(0.06) 4.21(0.10) 4.19(0.04) 4.18(0.07) 4.17(0.05) 4.19(0.05) 4.20(0.07) 4.29(0.11) 4.30(0.06) 4.21(0.13) 4.20(0.07) 4.18(0.04) 4.20(0.04) 4.22(0.05) 4.22(0.03) 4.24(0.08) 4.23(0.04) 4.22(0.06) 4.21(0.09) 4.22(0.06) 4.26(0.07) 4.29(0.06) 4.22(0.09) 4.23(0.08) 4.22(0.04) 4.24(0.05) 4.23(0.03) 4.29(0.09) 4.30(0.09) 4.20(0.14) 4.24(0.08) 4.23(0.06) 4.25(0.06) 4.30(0.11) 4.29(0.10) 4.26(0.05) 4.26(0.02) 4.25(0.04) 4.27(0.08) 4.34(0.12) 4.37(0.08) 4.35(0.05) 4.30(0.07) 4.31(0.07) 4.30(0.06) 4.36(0.08) 4.36(0.07) 4.27(0.12) 4.28(0.04) 4.27(0.08) 4.33(0.14) 4.35(0.08) 4.30(0.07) 4.27(0.06) 4.29(0.06) 4.28(0.05) 4.31(0.11) 4.34(0.11) 4.31(0.08) 4.31(0.06) 4.28(0.10) 4.28(0.04) 4.32(0.10) 4.33(0.06) 4.28(0.07) 4.29(0.06) 4.27(0.03) 4.29(0.06) 4.29(0.03) 4.27(0.03) 4.33(0.11) 4.35(0.12) 4.44(0.11) 4.46(0.13) 4.47(0.04) 4.50(0.09) 4.52(0.05) 4.56(0.08) 4.54(0.03) 4.52(0.06) 4.46(0.11) 4.46(0.05) 4.44(0.04) 4.48(0.05) 4.55(0.10) 4.60(0.09) 4.56(0.09) 4.53(0.06) 4.55(0.06) 4.51(0.04) 4.51(0.02) 4.53(0.09) 4.53(0.10) 4.50(0.05) 4.52(0.06) 4.52(0.03) 4.49(0.04) 4.54(0.09) 4.54(0.04) 4.49(0.08) 4.47(0.05) 4.47(0.05) 4.46(0.02) 4.48(0.04) 4.49(0.04) 4.48(0.05) 4.61(0.20) 4.71(0.18) 4.79(0.11) 4.63(0.18) 4.48(0.20) 4.52(0.08) 4.55(0.09) 4.63(0.10) 4.61(0.09) 4.52(0.12) 4.50(0.16) 4.49(0.11) 4.47(0.08) 4.39(0.11) 4.40(0.07) 4.39(0.08) 4.42(0.06) 4.41(0.07) 4.43(0.06) 4.42(0.06) 4.46(0.05) 4.44(0.10) 4.46(0.09) 4.54(0.15) 4.47(0.13) 4.42(0.10) 4.43(0.10) 4.45(0.07) 4.39(0.15) 4.34(0.33) 4.37(0.07) 4.36(0.11) 4.34(0.11) 4.32(0.04) 4.34(0.04) 4.32(0.07) 4.34(0.04) 4.37(0.07) 4.38(0.03) 4.37(0.05) 4.35(0.08) 4.38(0.16) 4.42(0.16) 4.40(0.07) 4.38(0.07) 4.36(0.09) 4.38(0.04) 4.37(0.06) 4.38(0.07) 4.40(0.09) 4.38(0.05) 4.37(0.07) 4.38(0.04) 4.36(0.03) 4.23(0.30) 4.08(0.24) 3.96(0.12) 3.91(0.21) 3.74(0.50) 3.28(0.62) 2.57(0.93) 2.44(0.30) 2.60(0.40) 2.39(0.41) 2.19(0.37) 2.38(0.21) 2.42(0.11) 2.31(0.16) 2.05(0.29) 2.12(0.34) 2.15(0.09) 2.13(0.09) 2.14(0.03) 2.14(0.06) 2.13(0.05) 2.15(0.08) 2.13(0.22) 2.24(0.26) 2.38(0.19) 2.31(0.09) 2.20(0.13) 2.20(0.10) 2.26(0.21) 2.33(0.18) 2.31(0.15) 2.33(0.04) 2.33(0.07) 2.37(0.13) 2.44(0.13)
++ Max displacement in automask = 4.79 (mm) at sub-brick 1009
++ Max delta displ  in automask = 0.93 (mm) at sub-brick 1067
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb03.GP35.r02.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GP35_unif_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master MPRAGE.GP35_unif_ns+tlrc -dxyz 2.5 -source pb02.GP35.r02.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GP35_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GP35.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 528.6 sec
3dNwarpApply -master MPRAGE.GP35_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GP35_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb03.GP35.r03.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GP35.r03.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 70782 voxels
 + 8948 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.955  pitch=-0.256  yaw=+0.107  dS=+0.459  dL=+0.153  dP=-0.645
++ Mean: roll=-0.598  pitch=+0.554  yaw=+0.458  dS=+1.411  dL=+0.452  dP=-0.165
++ Max : roll=-0.329  pitch=+2.822  yaw=+0.751  dS=+2.252  dL=+0.838  dP=+0.158
++ Max displacements (mm) for each sub-brick:
 1.92(0.00) 1.91(0.10) 1.90(0.08) 1.91(0.05) 1.89(0.09) 1.94(0.07) 1.96(0.12) 1.91(0.07) 1.90(0.09) 1.87(0.08) 1.87(0.04) 1.94(0.16) 2.00(0.15) 1.92(0.10) 1.93(0.08) 1.94(0.04) 1.95(0.13) 2.07(0.19) 2.03(0.06) 2.03(0.05) 2.02(0.10) 2.05(0.09) 2.07(0.10) 2.02(0.08) 2.03(0.04) 2.04(0.05) 2.04(0.01) 2.15(0.28) 2.49(0.39) 2.46(0.07) 2.37(0.16) 2.44(0.33) 2.34(0.61) 2.34(0.13) 2.34(0.18) 2.33(0.08) 2.25(0.11) 2.29(0.06) 2.32(0.11) 2.34(0.04) 2.32(0.19) 2.36(0.12) 2.29(0.13) 2.30(0.09) 2.33(0.05) 2.35(0.04) 2.35(0.03) 2.35(0.05) 2.37(0.09) 2.39(0.07) 2.32(0.11) 2.32(0.08) 2.35(0.04) 2.38(0.09) 2.38(0.03) 2.40(0.16) 2.34(0.17) 2.32(0.08) 2.32(0.07) 2.33(0.03) 2.35(0.07) 2.39(0.07) 2.35(0.07) 2.36(0.08) 2.36(0.07) 2.38(0.07) 2.38(0.05) 2.39(0.05) 2.39(0.09) 2.42(0.11) 2.49(0.13) 2.43(0.13) 2.33(0.11) 2.37(0.07) 2.40(0.05) 2.41(0.05) 2.33(0.13) 2.31(0.32) 2.37(0.20) 2.34(0.06) 2.31(0.10) 2.31(0.05) 2.32(0.10) 2.40(0.12) 2.37(0.07) 2.30(0.09) 2.29(0.08) 2.32(0.11) 2.33(0.04) 2.33(0.05) 2.34(0.04) 2.35(0.05) 2.39(0.15) 2.55(0.21) 2.53(0.14) 2.41(0.15) 2.36(0.11) 2.38(0.03) 2.39(0.05) 2.39(0.03) 2.37(0.04) 2.36(0.06) 2.36(0.04) 2.37(0.06) 2.32(0.08) 2.41(0.12) 2.47(0.11) 2.35(0.20) 2.20(0.21) 2.11(0.14) 2.29(0.33) 2.64(0.52) 2.79(0.33) 2.53(0.37) 2.54(0.10) 2.60(0.18) 2.57(0.16) 2.60(0.07) 2.65(0.22) 2.67(0.06) 2.64(0.05) 2.58(0.13) 2.57(0.12) 2.57(0.05) 2.57(0.03) 2.57(0.04) 2.53(0.06) 2.54(0.07) 2.50(0.29) 2.57(0.45) 2.49(0.32) 2.44(0.18) 2.46(0.45) 2.42(0.07) 2.42(0.07) 2.43(0.07) 2.45(0.07) 2.47(0.07) 2.47(0.07) 2.38(0.13) 2.32(0.32) 2.45(0.28) 2.39(0.09) 2.30(0.13) 2.30(0.07) 2.30(0.06) 2.31(0.07) 2.30(0.07) 2.31(0.03) 2.31(0.02) 2.33(0.05) 2.32(0.04) 2.35(0.05) 2.35(0.03) 2.36(0.04) 2.34(0.05) 2.36(0.04) 2.34(0.05) 2.39(0.09) 2.60(0.29) 2.58(0.19) 2.45(0.24) 2.42(0.21) 2.38(0.22) 2.37(0.13) 2.36(0.09) 2.36(0.04) 2.36(0.08) 2.33(0.10) 2.33(0.07) 2.36(0.14) 2.42(0.12) 2.37(0.10) 2.32(0.12) 2.36(0.07) 2.36(0.04) 2.30(0.19) 2.22(0.25) 2.31(0.16) 2.45(0.19) 2.44(0.05) 2.41(0.10) 2.37(0.10) 2.37(0.13) 2.35(0.08) 2.23(0.20) 2.01(0.25) 2.13(0.27) 2.20(0.21) 2.26(0.12) 2.25(0.05) 2.26(0.03) 2.24(0.07) 2.26(0.08) 2.25(0.12) 2.27(0.09) 2.27(0.14) 2.40(0.14) 2.44(0.08) 2.34(0.13) 2.28(0.09) 2.26(0.06) 2.29(0.05) 2.27(0.06) 2.29(0.04) 2.27(0.04) 2.27(0.03) 2.27(0.03) 2.30(0.04) 2.31(0.05) 2.31(0.08) 2.30(0.10) 2.34(0.11) 2.32(0.09) 2.30(0.09) 2.30(0.07) 2.30(0.04) 2.32(0.07) 2.32(0.08) 2.31(0.08) 2.31(0.11) 2.32(0.09) 2.31(0.09) 2.30(0.06) 2.37(0.08) 2.45(0.19) 2.42(0.09) 2.33(0.13) 2.33(0.06) 2.33(0.02) 2.34(0.04) 2.34(0.02) 2.34(0.04) 2.35(0.03) 2.35(0.04) 2.41(0.09) 2.41(0.11) 2.34(0.11) 2.35(0.05) 2.36(0.04) 2.37(0.09) 2.35(0.02) 2.35(0.02) 2.37(0.06) 2.36(0.07) 2.35(0.04) 2.36(0.01) 2.37(0.06) 2.38(0.02) 2.37(0.04) 2.42(0.09) 2.50(0.13) 2.42(0.21) 2.33(0.16) 2.26(0.12) 2.29(0.11) 2.47(0.25) 2.57(0.15) 2.50(0.09) 2.45(0.05) 2.40(0.06) 2.32(0.14) 2.29(0.08) 2.29(0.03) 2.30(0.06) 2.29(0.03) 2.31(0.03) 2.33(0.05) 2.40(0.12) 2.37(0.13) 2.38(0.09) 2.36(0.10) 2.11(0.48) 2.00(0.32) 1.63(0.57) 1.90(0.42) 2.00(0.13) 2.02(0.10) 2.02(0.20) 2.04(0.07) 2.01(0.11) 1.98(0.18) 2.01(0.28) 2.01(0.17) 2.00(0.16) 2.06(0.13) 2.11(0.08) 2.12(0.07) 2.11(0.07) 2.11(0.03) 2.12(0.15) 2.12(0.09) 2.11(0.08) 2.12(0.07) 2.11(0.07) 2.06(0.15) 2.10(0.16) 2.19(0.22) 2.09(0.17) 2.09(0.07) 2.11(0.07) 2.12(0.10) 2.13(0.06) 2.14(0.06) 2.14(0.04) 2.12(0.07) 2.15(0.05) 2.15(0.07) 2.12(0.12) 2.12(0.16) 2.28(0.31) 2.41(0.18) 2.34(0.14) 2.21(0.16) 2.22(0.06) 2.22(0.05) 2.21(0.06) 2.20(0.03) 2.20(0.03) 2.21(0.06) 2.20(0.03) 2.21(0.07) 2.21(0.05) 2.23(0.05) 2.21(0.09) 2.24(0.13) 2.35(0.13) 2.52(0.25) 2.61(0.11) 2.54(0.08) 2.34(0.22) 2.34(0.03) 2.32(0.05) 2.32(0.07) 2.34(0.09) 2.32(0.17) 2.30(0.24) 2.27(0.25) 2.24(0.07) 2.23(0.04) 2.22(0.04) 2.20(0.05) 2.20(0.04) 2.20(0.04) 2.21(0.03) 2.22(0.07) 2.33(0.11) 2.39(0.09) 2.34(0.06) 2.32(0.08) 2.18(0.29) 2.08(0.16) 2.03(0.12) 1.95(0.12) 1.89(0.09) 1.93(0.07) 1.96(0.20) 2.03(0.15) 2.24(0.30) 2.43(0.19) 2.36(0.11) 2.23(0.18) 2.26(0.06) 2.27(0.05) 2.26(0.06) 2.28(0.06) 2.28(0.11) 2.28(0.11) 2.29(0.06) 2.30(0.05) 2.31(0.02) 2.31(0.02) 2.34(0.03) 2.40(0.12) 2.47(0.09) 2.41(0.10) 2.44(0.09) 2.45(0.06) 2.45(0.02) 2.45(0.04) 2.45(0.03) 2.46(0.04) 2.44(0.11) 2.45(0.06) 2.45(0.04) 2.52(0.12) 2.64(0.13) 2.66(0.03) 2.60(0.08) 2.51(0.10) 2.48(0.09) 2.44(0.07) 2.44(0.07) 2.43(0.02) 2.43(0.06) 2.43(0.03) 2.45(0.06) 2.47(0.05) 2.58(0.12) 2.66(0.08) 2.53(0.15) 2.51(0.23) 2.58(0.08) 2.64(0.07) 2.60(0.09) 2.66(0.10) 2.59(0.15) 2.58(0.06) 2.56(0.07) 2.57(0.05) 2.61(0.09) 2.60(0.04) 2.56(0.07) 2.57(0.02) 2.57(0.04) 2.55(0.07) 2.58(0.13) 2.64(0.17) 2.56(0.11) 2.48(0.10) 2.50(0.06) 2.57(0.09) 2.53(0.07) 2.55(0.11) 2.50(0.07) 2.51(0.05) 2.79(0.34) 2.71(0.12) 2.83(0.34) 2.78(0.20) 2.66(0.20) 2.65(0.10) 2.50(0.40) 2.60(0.76) 2.67(0.20) 2.73(0.24) 2.62(0.36) 2.63(0.05) 2.65(0.07) 2.68(0.14) 2.65(0.13) 2.59(0.15) 2.55(0.08) 2.55(0.06) 2.46(0.12) 2.35(0.18) 2.51(0.26) 2.51(0.12) 2.51(0.05) 2.50(0.08) 2.58(0.09) 2.57(0.11) 2.55(0.06) 2.53(0.06) 2.52(0.04) 2.61(0.11) 2.68(0.15) 2.84(0.23) 2.86(0.14) 2.80(0.08) 2.80(0.05) 2.77(0.15) 2.73(0.09) 2.71(0.08) 2.69(0.07) 2.69(0.05) 2.67(0.07) 2.67(0.05) 2.64(0.07) 2.64(0.13) 2.62(0.07) 2.57(0.12) 2.58(0.05) 2.61(0.09) 2.63(0.06) 2.64(0.03) 2.64(0.06) 2.65(0.04) 2.65(0.07) 2.66(0.17) 2.73(0.17) 2.71(0.07) 2.64(0.09) 2.62(0.07) 2.58(0.08) 2.60(0.07) 2.63(0.07) 2.61(0.04) 2.65(0.05) 2.64(0.04) 2.61(0.14) 2.59(0.05) 2.61(0.03) 2.60(0.02) 2.62(0.12) 2.60(0.16) 2.60(0.17) 2.57(0.19) 2.67(0.24) 2.93(0.45) 2.85(0.37) 2.72(0.35) 2.56(0.42) 2.66(0.34) 3.05(0.84) 3.46(0.47) 3.65(0.20) 3.58(0.18) 2.92(0.69) 2.54(0.50) 2.49(0.17) 2.51(0.17) 2.57(0.14) 2.54(0.23) 2.52(0.12) 2.50(0.09) 2.40(0.14) 2.36(0.12) 2.32(0.09) 2.28(0.13) 2.29(0.07) 2.27(0.06) 2.30(0.04) 2.34(0.09) 2.35(0.02) 2.34(0.09) 2.36(0.04) 2.30(0.11) 2.29(0.05) 2.28(0.07) 2.24(0.12) 2.24(0.10) 2.20(0.11) 2.17(0.15) 2.14(0.14) 2.14(0.02) 2.15(0.05) 2.15(0.06) 2.14(0.03) 2.12(0.06) 2.16(0.12) 2.35(0.38) 2.73(0.83) 2.84(0.21) 2.88(0.10) 2.96(0.11) 2.95(0.11) 2.90(0.12) 2.89(0.10) 2.88(0.10) 2.88(0.06) 2.96(0.38) 3.06(0.34) 3.04(0.06) 2.94(0.13) 2.90(0.08) 2.90(0.07) 2.89(0.09) 2.90(0.05) 3.00(0.17) 3.05(0.15) 3.02(0.11) 2.87(0.17) 2.87(0.06) 2.89(0.02) 2.91(0.07) 2.90(0.06) 2.90(0.05) 2.90(0.08) 2.95(0.14) 2.96(0.16) 2.95(0.07) 2.90(0.07) 2.84(0.13) 2.82(0.04) 2.84(0.06) 2.85(0.11) 2.87(0.06) 2.85(0.11) 2.87(0.10) 2.91(0.15) 2.85(0.18) 2.81(0.12) 2.79(0.10) 2.79(0.04) 2.81(0.07) 2.82(0.06) 2.81(0.12) 2.86(0.17) 2.84(0.11) 2.79(0.20) 2.78(0.10) 2.81(0.04) 2.79(0.11) 2.73(0.33) 2.72(0.06) 2.72(0.21) 2.73(0.12) 2.75(0.09) 2.75(0.06) 2.76(0.06) 2.76(0.04) 2.77(0.06) 2.75(0.04) 2.81(0.07) 2.80(0.10) 2.78(0.07) 2.77(0.04) 2.78(0.06) 2.78(0.04) 2.71(0.58) 2.62(0.63) 2.61(0.09) 2.61(0.07) 2.59(0.08) 2.59(0.08) 2.62(0.08) 2.71(0.17) 2.70(0.08) 2.66(0.10) 2.68(0.06) 2.67(0.02) 2.68(0.07) 2.66(0.06) 2.67(0.03) 2.65(0.07) 2.71(0.10) 2.71(0.12) 2.69(0.09) 2.63(0.14) 2.62(0.09) 2.60(0.09) 2.58(0.06) 2.56(0.02) 2.58(0.08) 2.58(0.12) 2.57(0.07) 2.56(0.13) 2.55(0.06) 2.58(0.06) 2.57(0.08) 2.58(0.07) 2.61(0.14) 2.65(0.17) 2.65(0.09) 2.57(0.16) 2.56(0.07) 2.56(0.04) 2.57(0.03) 2.56(0.03) 2.58(0.05) 2.62(0.11) 2.63(0.15) 2.61(0.12) 2.57(0.08) 2.62(0.18) 2.69(0.21) 2.70(0.04) 2.67(0.14) 2.60(0.15) 2.59(0.08) 2.56(0.16) 2.55(0.06) 2.59(0.07) 2.56(0.08) 2.67(0.13) 2.74(0.25) 2.75(0.02) 2.70(0.15) 2.67(0.09) 2.66(0.05) 2.65(0.08) 2.67(0.06) 2.67(0.03) 2.64(0.08) 2.64(0.06) 2.62(0.06) 2.66(0.08) 2.69(0.13) 2.69(0.09) 2.66(0.09) 2.65(0.08) 2.66(0.07) 2.65(0.06) 2.64(0.05) 2.66(0.06) 2.64(0.06) 2.65(0.03) 2.64(0.05) 2.67(0.11) 2.64(0.08) 2.72(0.10) 2.73(0.14) 2.72(0.05) 2.67(0.11) 2.65(0.10) 2.66(0.03) 2.64(0.04) 2.64(0.03) 2.63(0.04) 2.64(0.11) 2.65(0.06) 2.70(0.11) 2.73(0.08) 2.70(0.05) 2.68(0.08) 2.63(0.07) 2.63(0.06) 2.61(0.09) 2.62(0.03) 2.62(0.04) 2.62(0.01) 2.69(0.09) 2.81(0.17) 2.82(0.11) 2.72(0.12) 2.67(0.10) 2.63(0.11) 2.61(0.03) 2.61(0.07) 2.62(0.06) 2.62(0.04) 2.61(0.03) 2.63(0.04) 2.66(0.10) 2.70(0.08) 2.69(0.04) 2.64(0.16) 2.61(0.11) 2.62(0.04) 2.62(0.04) 2.62(0.06) 2.63(0.04) 2.62(0.05) 2.82(0.27) 2.84(0.12) 2.87(0.19) 2.92(0.15) 2.94(0.25) 3.07(0.35) 3.18(0.32) 3.33(0.41) 3.76(0.85) 4.53(0.78) 5.33(0.82) 5.44(0.20) 5.45(0.17) 5.51(0.14) 5.32(0.28) 5.16(0.69) 5.08(0.27) 4.97(0.24) 4.86(0.14) 4.86(0.11) 4.81(0.07) 4.69(0.13) 4.60(0.18) 4.51(0.19) 4.36(0.23) 4.28(0.14) 4.21(0.10) 4.12(0.11) 4.12(0.08) 4.01(0.19) 3.99(0.10) 3.97(0.09) 4.05(0.15) 4.02(0.09) 4.01(0.14) 3.99(0.06) 3.97(0.04) 4.00(0.05) 3.94(0.07) 3.95(0.05) 3.91(0.04) 3.92(0.06) 3.89(0.06) 3.89(0.07) 3.87(0.06) 3.88(0.05) 3.88(0.05) 3.90(0.05) 3.99(0.11) 3.98(0.04) 3.90(0.08) 3.90(0.02) 3.87(0.04) 3.89(0.04) 3.85(0.07) 3.79(0.08) 3.77(0.08) 3.76(0.18) 3.84(0.20) 3.86(0.31) 3.79(0.11) 3.78(0.13) 3.69(0.14) 3.63(0.14) 3.61(0.08) 3.67(0.18) 3.77(0.19) 3.36(0.52) 3.08(0.51) 3.18(0.17) 3.29(0.21) 3.28(0.05) 3.34(0.13) 3.40(0.18) 3.45(0.07) 3.48(0.10) 3.32(0.26) 3.36(0.25) 3.39(0.13) 3.62(0.33) 3.71(0.10) 3.59(0.32) 3.48(0.13) 3.48(0.12) 3.52(0.05) 3.54(0.04) 3.59(0.06) 3.56(0.09) 3.59(0.11) 3.54(0.12) 3.54(0.08) 3.52(0.08) 3.50(0.10) 3.47(0.12) 3.46(0.07) 3.45(0.04) 3.54(0.20) 3.55(0.14) 3.53(0.06) 3.53(0.08) 3.47(0.09) 3.49(0.07) 3.46(0.07) 3.48(0.16) 3.44(0.05) 3.45(0.08) 3.45(0.13) 3.43(0.17) 3.41(0.07) 3.40(0.13) 3.39(0.10) 3.40(0.04) 3.43(0.14) 3.46(0.08) 3.41(0.08) 3.36(0.08) 3.34(0.09) 3.36(0.04) 3.39(0.04) 3.38(0.02) 3.43(0.11) 3.38(0.12) 3.36(0.09) 3.34(0.04) 3.35(0.06) 3.31(0.10) 3.25(0.08) 3.27(0.02) 3.29(0.09) 3.29(0.09) 3.30(0.09) 3.33(0.17) 3.34(0.12) 3.31(0.07) 3.30(0.03) 3.32(0.05) 3.32(0.05) 3.32(0.04) 3.32(0.05) 3.32(0.04) 3.31(0.04) 3.31(0.04) 3.30(0.03) 3.37(0.08) 3.41(0.17) 3.53(0.17) 3.46(0.13) 3.42(0.10) 3.42(0.06) 3.40(0.05) 3.41(0.02) 3.40(0.03) 3.39(0.02) 3.39(0.12) 3.44(0.11) 3.42(0.07) 3.33(0.19) 3.26(0.12) 3.26(0.10) 3.55(0.60) 3.58(0.17) 3.43(0.27) 2.93(0.91) 2.88(0.12) 2.84(0.17) 2.82(0.17) 2.82(0.07) 2.85(0.06) 2.87(0.08) 2.89(0.07) 2.89(0.01) 2.95(0.09) 3.01(0.13) 3.03(0.10) 2.94(0.19) 2.90(0.11) 2.90(0.06) 2.90(0.03) 2.93(0.04) 2.93(0.05) 2.93(0.06) 2.94(0.02) 2.95(0.05) 2.97(0.04) 3.19(0.29) 3.30(0.15) 3.39(0.15) 3.37(0.12) 3.18(0.25) 3.15(0.12) 3.09(0.08) 3.11(0.08) 3.10(0.06) 3.07(0.04) 3.06(0.04) 3.03(0.10) 3.03(0.11) 3.02(0.05) 3.04(0.06) 3.06(0.06) 3.05(0.02) 3.10(0.06) 3.11(0.08) 3.04(0.09) 3.03(0.02) 3.04(0.02) 3.04(0.05) 3.04(0.05) 3.20(0.19) 3.31(0.17) 3.33(0.12) 3.33(0.06) 3.38(0.25) 3.41(0.16) 3.38(0.10) 3.35(0.09) 3.36(0.07) 3.33(0.04) 3.34(0.04) 3.32(0.04) 3.31(0.05) 3.29(0.07) 3.28(0.12) 3.28(0.08) 3.27(0.06) 3.27(0.05) 3.30(0.15) 3.30(0.12) 3.27(0.08) 3.23(0.13) 3.22(0.07) 3.22(0.07) 3.18(0.11) 3.18(0.02) 3.15(0.05) 3.17(0.04) 3.25(0.17) 3.27(0.23) 3.11(0.28) 3.06(0.19) 3.05(0.05) 3.05(0.04) 3.05(0.08) 3.06(0.09) 3.07(0.05) 3.04(0.05) 3.02(0.07) 3.02(0.03) 3.03(0.07) 3.03(0.02) 3.02(0.05) 3.04(0.02) 3.05(0.06) 3.06(0.03) 3.05(0.08) 3.07(0.05) 3.05(0.07) 3.07(0.11) 3.03(0.09) 3.07(0.13) 3.03(0.09) 3.05(0.07) 3.05(0.14) 3.08(0.12) 3.03(0.10) 3.05(0.05) 3.03(0.07) 3.05(0.04) 3.04(0.03) 3.06(0.05) 3.04(0.06) 3.05(0.05) 3.03(0.04) 3.04(0.04) 3.03(0.04) 3.04(0.03) 3.04(0.04) 3.04(0.05) 3.10(0.15) 3.14(0.08) 3.09(0.08) 3.06(0.12) 3.03(0.07) 3.03(0.04) 3.00(0.04) 3.01(0.05) 3.00(0.06) 3.07(0.14) 3.07(0.09) 3.04(0.07) 2.99(0.07) 2.99(0.08) 2.96(0.14) 2.96(0.14) 2.94(0.05) 2.97(0.07) 3.06(0.16) 3.11(0.06) 3.04(0.18) 2.98(0.25) 2.96(0.08) 2.97(0.05) 2.96(0.04) 2.96(0.07) 2.97(0.07) 3.01(0.12) 3.08(0.09) 3.04(0.11) 3.00(0.14) 3.01(0.08) 3.01(0.07) 3.02(0.02) 3.01(0.05) 2.87(0.23) 2.92(0.08) 2.94(0.13) 3.03(0.16) 3.01(0.15) 3.06(0.33) 3.04(0.13) 3.03(0.15) 2.93(0.14) 2.94(0.06) 2.94(0.03) 2.99(0.08) 3.02(0.06) 2.99(0.08) 2.96(0.06) 3.06(0.30) 3.06(0.14) 3.14(0.21) 3.05(0.13) 2.93(0.14) 2.93(0.06) 2.84(0.24) 2.79(0.18) 2.78(0.06) 2.88(0.20) 2.88(0.05) 2.97(0.17) 3.07(0.21) 3.00(0.13) 2.92(0.15) 2.91(0.09) 2.93(0.10) 2.90(0.12) 2.89(0.05) 2.90(0.05) 2.88(0.04) 2.89(0.02) 2.88(0.03) 2.91(0.09) 2.91(0.09) 2.91(0.02) 3.05(0.16) 3.11(0.12) 3.09(0.06) 3.10(0.17) 3.01(0.16) 3.01(0.20) 3.00(0.12) 2.97(0.07)
++ Max displacement in automask = 5.51 (mm) at sub-brick 747
++ Max delta displ  in automask = 0.91 (mm) at sub-brick 896
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb03.GP35.r03.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GP35_unif_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master MPRAGE.GP35_unif_ns+tlrc -dxyz 2.5 -source pb02.GP35.r03.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GP35_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GP35.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 524.8 sec
3dNwarpApply -master MPRAGE.GP35_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GP35_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GP35.r01.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GP35.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GP35.r02.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GP35.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GP35.r03.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GP35.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GP35_unif_al_junk_mat.aff12.1D -I
3dNwarpApply -master MPRAGE.GP35_unif_ns+tlrc -dxyz 2.5 -source vr_base_min_outlier+orig -nwarp anat.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base_min_outlier
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GP35_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'vr_base_min_outlier+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./final_epi_vr_base_min_outlier+tlrc.BRIK
++ total Elapsed time = 6.0 sec
3dcopy MPRAGE.GP35_unif_ns+tlrc anat_final.GP35
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dAllineate -base final_epi_vr_base_min_outlier+tlrc -allcostX -input anat_final.GP35+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.GP35+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base_min_outlier+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'TOHD(12.9425)'
 +        -cmass x y z shifts =   -1.047   -0.306    1.127
 +  shift search range is +/- =   72.225   89.077   74.632
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.104994
   sp   = 0.25975
   mi   = 2.94136
   crM  = 0.031762
   nmi  = 0.842373
   je   = 2.94136
   hel  = -0.119456
   crA  = 0.178267
   crU  = 0.174139
   lss  = 0.895006
   lpc  = 0.222947
   lpa  = 0.777053
   lpc+ = 0.338445
   lpa+ = 0.892551
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.8
++ ###########################################################
3dNwarpApply -source MPRAGE.GP35_unif+orig -master anat_final.GP35+tlrc -ainterp wsinc5 -nwarp anat.aff.qw_WARP.nii anat.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'MPRAGE.GP35_unif+orig'
++ -master dataset is 'anat_final.GP35+tlrc'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 5.4 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb04.volreg pb04.GP35.r01.volreg+tlrc.HEAD pb04.GP35.r02.volreg+tlrc.HEAD pb04.GP35.r03.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 43.8 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 120.0 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 127.0 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GP35.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GP35.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GP35.r03.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r03+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GP35.r01.blur pb04.GP35.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GP35.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GP35.r02.blur pb04.GP35.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GP35.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GP35.r03.blur pb04.GP35.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GP35.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -prefix rm.mask_r01 pb05.GP35.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GP35.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 1904.489746
 + Used gradual clip level = 1788.167603 .. 2069.123291
 + Number voxels above clip level = 114323
 + Clustering voxels ...
 + Largest cluster has 113656 voxels
 + Clustering voxels ...
 + Largest cluster has 112671 voxels
 + Filled    79 voxels in small holes; now have 112750 voxels
 + Clustering voxels ...
 + Largest cluster has 112750 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 432718 voxels
 + Mask now has 112750 voxels
++ 112750 voxels in the mask [out of 545468: 20.67%]
++ first  10 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   2 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb05.GP35.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GP35.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 1897.081055
 + Used gradual clip level = 1780.096558 .. 2077.489014
 + Number voxels above clip level = 114128
 + Clustering voxels ...
 + Largest cluster has 113351 voxels
 + Clustering voxels ...
 + Largest cluster has 112442 voxels
 + Filled   107 voxels in small holes; now have 112549 voxels
 + Clustering voxels ...
 + Largest cluster has 112549 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 432919 voxels
 + Mask now has 112549 voxels
++ 112549 voxels in the mask [out of 545468: 20.63%]
++ first  10 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   2 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb05.GP35.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GP35.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 1890.602173
 + Used gradual clip level = 1771.093506 .. 2076.297363
 + Number voxels above clip level = 114344
 + Clustering voxels ...
 + Largest cluster has 112834 voxels
 + Clustering voxels ...
 + Largest cluster has 112666 voxels
 + Filled   113 voxels in small holes; now have 112779 voxels
 + Clustering voxels ...
 + Largest cluster has 112779 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 432689 voxels
 + Mask now has 112779 voxels
++ 112779 voxels in the mask [out of 545468: 20.68%]
++ first  10 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   2 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.GP35
++ processing 3 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 113293 survived, 432175 were zero
++ writing result full_mask.GP35...
3dresample -master full_mask.GP35+tlrc -input MPRAGE.GP35_unif_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.GP35
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 181551 survived, 363917 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.GP35...
3dmask_tool -input full_mask.GP35+tlrc mask_anat.GP35+tlrc -inter -prefix mask_epi_anat.GP35
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 68258 clipped, 113293 survived, 363917 were zero
++ writing result mask_epi_anat.GP35...
3dABoverlap -no_automask full_mask.GP35+tlrc mask_anat.GP35+tlrc
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#A=./full_mask.GP35+tlrc.BRIK  B=./mask_anat.GP35+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
113293       181551       181551       113293       0            68258         0.0000     37.5971     1.2300     1.2425     1.5033
3ddot -dodice full_mask.GP35+tlrc mask_anat.GP35+tlrc
tee out.mask_ae_dice.txt
0.768495	
3dresample -master full_mask.GP35+tlrc -prefix ./rm.resam.group -input /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz[0]
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 122282 survived, 423186 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
3ddot -dodice mask_anat.GP35+tlrc mask_group+tlrc
tee out.mask_at_dice.txt
0.804929	
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb05.GP35.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb05.GP35.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GP35.r01.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GP35.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb05.GP35.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb05.GP35.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GP35.r02.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GP35.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb05.GP35.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb05.GP35.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GP35.r03.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GP35.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile motion_demean.1D -set_nruns 3 -split_into_pad_runs mot_demean
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile motion_deriv.1D -set_nruns 3 -split_into_pad_runs mot_deriv
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.4 motion_GP35
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
total number of censored TRs (simple form) = 41
1deval -a motion_GP35_censor.1D -b outcount_GP35_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_GP35_combined_2.1D -show_trs_uncensored encoded
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
3dDeconvolve -input pb06.GP35.r01.scale+tlrc.HEAD pb06.GP35.r02.scale+tlrc.HEAD pb06.GP35.r03.scale+tlrc.HEAD -censor censor_GP35_combined_2.1D -ortvec mot_demean.r01.1D mot_demean_r01 -ortvec mot_demean.r02.1D mot_demean_r02 -ortvec mot_demean.r03.1D mot_demean_r03 -ortvec mot_deriv.r01.1D mot_deriv_r01 -ortvec mot_deriv.r02.1D mot_deriv_r02 -ortvec mot_deriv.r03.1D mot_deriv_r03 -polort 4 -num_stimts 0 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.GP35 -errts errts.GP35 -x1D_stop -bucket stats.GP35
++ 3dDeconvolve extending num_stimts from 0 to 36 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 1096 2192
++ STAT automask has 536832 voxels (out of 545468 = 98.4%)
++ Skipping check for initial transients
++ Input polort=4; Longest run=504.2 s; Recommended minimum polort=4 ++ OK ++
++ Number of time points: 3288 (before censor) ; 3158 (after)
 + Number of parameters:  51 [51 baseline ; 0 signal]
++ Memory required for output bricks = 14,350,172,144 bytes (about 14 billion)
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb06.GP35.r01.scale+tlrc.HEAD pb06.GP35.r02.scale+tlrc.HEAD pb06.GP35.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.GP35_REML -Rvar stats.GP35_REMLvar \
 -Rfitts fitts.GP35_REML -Rerrts errts.GP35_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (3158x51):  4.70809  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (3158x51):  4.70809  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (3158x36):  4.32026  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (3158x15):  1.21812  ++ VERY GOOD ++
++ 3dDeconvolve exits: -x1D_stop option was invoked
3dTproject -polort 0 -input pb06.GP35.r01.scale+tlrc.HEAD pb06.GP35.r02.scale+tlrc.HEAD pb06.GP35.r03.scale+tlrc.HEAD -censor censor_GP35_combined_2.1D -cenmode ZERO -ort X.nocensor.xmat.1D -prefix errts.GP35.tproject
++ 3dTproject: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ have 3 input dataset names
++ Auto-catenated dataset has 3 runs
++ input time points = 3288 ; censored = 130 ; remaining = 3158
++ Setting up regressors
++ 3 Blocks * 1 polynomials -- 3 polort regressors
 + -- 51 other fixed ort regressors
++ 3158 retained time points MINUS 54 regressors ==> 3104 D.O.F. left
++ no -mask option ==> processing all 545468 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 14261 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./errts.GP35.tproject+tlrc.BRIK
++ ===== clock time = 4m 0s 78ms
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
-- no warnings for correlation matrix (cut = 0.400) --
1d_tool.py -show_df_info -infile X.xmat.1D
tee out.df_info.txt
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \

initial DF                   : 3288 : 100.0%

DF used for regs of interest :    0 :   0.0%
DF used for censoring        :  130 :   4.0%
DF used for polort           :   15 :   0.5%
DF used for motion           :   36 :   1.1%
total DF used                :  181 :   5.5%

final DF                     : 3107 :  94.5%

3dTcat -prefix all_runs.GP35 pb06.GP35.r01.scale+tlrc.HEAD pb06.GP35.r02.scale+tlrc.HEAD pb06.GP35.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 191.1 s
3dTstat -mean -prefix rm.signal.all all_runs.GP35+tlrc[0..38,41..409,412..426,429..465,469..558,566..583,585..1095,1113..1122,1126..1469,1475..1517,1520..1647,1651..2159,2192..2222,2225..2623,2626..2694,2708..2712,2721..2732,2735..2801,2804..2932,2949..2956,2958..3083,3089..3287]
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.GP35.tproject+tlrc[0..38,41..409,412..426,429..465,469..558,566..583,585..1095,1113..1122,1126..1469,1475..1517,1520..1647,1651..2159,2192..2222,2225..2623,2626..2694,2708..2712,2721..2732,2735..2801,2804..2932,2949..2956,2958..3083,3089..3287]
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -expr a/b -prefix TSNR.GP35
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.GP35+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.GP35.tproject+tlrc
++ 3dTnorm: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.GP35+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 113293 voxels survive the mask
3dTstat -sos -prefix - mean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.136067
3dmaskave -quiet -mask full_mask.GP35+tlrc errts.GP35.tproject+tlrc
++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 113293 voxels survive the mask
3dTcorr1D -prefix corr_brain errts.GP35.tproject+tlrc mean.errts.1D
++ 3dTcorr1D: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + reading dataset file errts.GP35.tproject+tlrc
 + reading 1D file mean.errts.1D
 + loading dataset ./errts.GP35.tproject+tlrc.BRIK into memory
++ Start correlations: 545468 voxels X 1 time series(3288); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 14261 voxels skipped because were constant in time
++ Wrote dataset: ./corr_brain+tlrc.BRIK
3dTstat -sum -prefix sum_baseline.1D X.nocensor.xmat.1D
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_baseline.1D
touch blur_est.GP35.1D
mkdir files_ACF
touch blur.epits.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 0..38,41..409,412..426,429..465,469..558,566..583,585..1095 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GP35+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r01.1D all_runs.GP35+tlrc[0..38,41..409,412..426,429..465,469..558,566..583,585..1095]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 113293
++ detrending start: 73 baseline funcs, 1079 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 18.02 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r01.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 1113..1122,1126..1469,1475..1517,1520..1647,1651..2159 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GP35+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r02.1D all_runs.GP35+tlrc[1113..1122,1126..1469,1475..1517,1520..1647,1651..2159]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 113293
++ detrending start: 71 baseline funcs, 1034 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 18.02 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r02.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 2192..2222,2225..2623,2626..2694,2708..2712,2721..2732,2735..2801,2804..2932,2949..2956,2958..3083,3089..3287 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GP35+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r03.1D all_runs.GP35+tlrc[2192..2222,2225..2623,2626..2694,2708..2712,2721..2732,2735..2801,2804..2932,2949..2956,2958..3083,3089..3287]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 113293
++ detrending start: 71 baseline funcs, 1045 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 18.32 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r03.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits FWHM blurs: 0 0 0 0
average epits FWHM blurs: 0 0 0 0
echo 0 0 0 0   # epits FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits ACF blurs: 0.877832 3.51949 13.5146 8.66547
average epits ACF blurs: 0.877832 3.51949 13.5146 8.66547
echo 0.877832 3.51949 13.5146 8.66547   # epits ACF blur estimates
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 0..38,41..409,412..426,429..465,469..558,566..583,585..1095 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GP35+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.GP35.tproject+tlrc[0..38,41..409,412..426,429..465,469..558,566..583,585..1095]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 113293
++ detrending start: 73 baseline funcs, 1079 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 17.85 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 1113..1122,1126..1469,1475..1517,1520..1647,1651..2159 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GP35+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.GP35.tproject+tlrc[1113..1122,1126..1469,1475..1517,1520..1647,1651..2159]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 113293
++ detrending start: 71 baseline funcs, 1034 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 17.85 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 2192..2222,2225..2623,2626..2694,2708..2712,2721..2732,2735..2801,2804..2932,2949..2956,2958..3083,3089..3287 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GP35+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.GP35.tproject+tlrc[2192..2222,2225..2623,2626..2694,2708..2712,2721..2732,2735..2801,2804..2932,2949..2956,2958..3083,3089..3287]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 113293
++ detrending start: 71 baseline funcs, 1045 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 18.12 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 0 0 0 0
average errts FWHM blurs: 0 0 0 0
echo 0 0 0 0   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.887295 3.51438 11.2852 8.55932
average errts ACF blurs: 0.887295 3.51438 11.2852 8.55932
echo 0.887295 3.51438 11.2852 8.55932   # errts ACF blur estimates
gen_epi_review.py -script @epi_review.GP35 -dsets pb00.GP35.r01.tcat+orig.HEAD pb00.GP35.r02.tcat+orig.HEAD pb00.GP35.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -exit0 -mot_limit 0.4 -out_limit 0.05 -errts_dset errts.GP35.tproject+tlrc.HEAD -mask_dset mask_epi_anat.GP35+tlrc.HEAD -ss_review_dset out.ss_review.GP35.txt -write_uvars_json out.ss_review_uvars.json
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
** failed to guess at any stats dset, resting state?
   (else X-matrix file "X.xmat.1D" may not apply)
++ writing ss review basic:          @ss_review_basic
** no stats_dset dset, cannot drive view_stats, skipping...
** no mask_dset dset, cannot drive view_stats, skipping...
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.blip.med.fwd+orig.BRIK rm.blip.med.fwd+orig.HEAD rm.blip.med.masked.fwd+orig.BRIK.gz rm.blip.med.masked.fwd+orig.HEAD rm.blip.med.masked.rev+orig.BRIK.gz rm.blip.med.masked.rev+orig.HEAD rm.blip.med.rev+orig.BRIK rm.blip.med.rev+orig.HEAD rm.epi.1.r01+tlrc.BRIK.gz rm.epi.1.r01+tlrc.HEAD rm.epi.1.r02+tlrc.BRIK.gz rm.epi.1.r02+tlrc.HEAD rm.epi.1.r03+tlrc.BRIK.gz rm.epi.1.r03+tlrc.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+tlrc.BRIK.gz rm.epi.mean+tlrc.HEAD rm.epi.min.r01+tlrc.BRIK.gz rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.BRIK.gz rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.BRIK.gz rm.epi.min.r03+tlrc.HEAD rm.epi.nomask.r01+tlrc.BRIK rm.epi.nomask.r01+tlrc.HEAD rm.epi.nomask.r02+tlrc.BRIK rm.epi.nomask.r02+tlrc.HEAD rm.epi.nomask.r03+tlrc.BRIK rm.epi.nomask.r03+tlrc.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+tlrc.BRIK rm.errts.unit+tlrc.HEAD rm.mask_r01+tlrc.BRIK.gz rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.BRIK.gz rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.BRIK.gz rm.mask_r03+tlrc.HEAD rm.mean_r01+tlrc.BRIK rm.mean_r01+tlrc.HEAD rm.mean_r02+tlrc.BRIK rm.mean_r02+tlrc.HEAD rm.mean_r03+tlrc.BRIK rm.mean_r03+tlrc.HEAD rm.noise.all+tlrc.BRIK rm.noise.all+tlrc.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.resam.anat+tlrc.BRIK rm.resam.anat+tlrc.HEAD rm.resam.group+tlrc.BRIK rm.resam.group+tlrc.HEAD rm.signal.all+tlrc.BRIK rm.signal.all+tlrc.HEAD awpy
if ( -e @ss_review_basic ) then
./@ss_review_basic
tee out.ss_review.GP35.txt

subject ID                : GP35
AFNI version              : AFNI_21.2.04
AFNI package              : linux_ubuntu_16_64
TR                        : 0.46
TRs removed (per run)     : 0
num stim classes provided : 0
final anatomy dset        : anat_final.GP35+tlrc.HEAD
final stats dset          : NO_STATS
final errts dset          : errts.GP35.tproject+tlrc.HEAD
orig voxel counts         : 83	93	74
orig voxel resolution     : 2.682927	2.682927	2.682927
orig volume center        : 0.449600	-1.802368	11.794983
final voxel resolution    : 2.500000	2.500000	2.500000

motion limit              : 0.4
num TRs above mot limit   : 23
average motion (per TR)   : 0.073718
average censored motion   : 0.0686183
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
max motion displacement   : 3.88627
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
max censored displacement : 3.76866
outlier limit             : 0.05
average outlier frac (TR) : 0.00468124
num TRs above out limit   : 103
flip guess                : NO_FLIP

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
num runs found            : 3
num TRs per run           : 1096 1096 1096
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
num TRs per run (applied) : 1079 1034 1045
num TRs per run (censored): 17 62 51
fraction censored per run : 0.0155109 0.0565693 0.0465328
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
TRs total (uncensored)    : 3288
TRs total                 : 3158
degrees of freedom used   : 51
degrees of freedom left   : 3107

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
TRs censored              : 130
censor fraction           : 0.039538
num regs of interest      : 0

TSNR average              : 125.507
global correlation (GCOR) : 0.136067
anat/EPI mask Dice coef   : 0.768495
anat/templ mask Dice coef : 0.804929
blur estimates (ACF)      : 0.887295 3.51438 11.2852
blur estimates (FWHM)     : 0 0 0


apqc_make_tcsh.py -review_style pythonic -subj_dir . -uvar_json out.ss_review_uvars.json
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
++ Found 40 files for QCing.
++ Done making (executable) script to generate HTML QC:
    ./@ss_review_html
tcsh @ss_review_html
tee out.review_html
*+ Found main dset (template):  /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay vr_base_min_outlier+orig.HEAD -olay vr_base_min_outlier+orig.HEAD -ulay_range_nz 0 4320.815918 -func_range 4320.815918 -box_focus_slices AMASK_FOCUS_ULAY -cbar gray_scale -pbar_posonly -pbar_saveim QC_GP35/media/qc_00_vorig_EPI.pbar.jpg -pbar_comm_range 98%ile in vol -pbar_for dset -prefix QC_GP35/media/qc_00_vorig_EPI -save_ftype JPEG -blowup 4 -opacity 9 -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   vr_base_min_outlier+orig.HEAD
++ Found input file:   vr_base_min_outlier+orig.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_h5ufPi7Si20
++ Converted 0 to labels
++ Final subbrick indices: -1 -1 -1
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay to be visualized within user range:
   [0, 4320.815918]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_h5ufPi7Si20/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_h5ufPi7Si20/tmp_olay.nii
++ User-entered function range value value (4320.815918)
++ Dimensions (xyzt): 83 93 74 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 10
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=10..69  y=9..77  z=3..60
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_h5ufPi7Si20/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_h5ufPi7Si20/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_XqUOk4Um9iFy4Av93HhUMw argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 240120 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ -2.233322 -9.851189 -0.278191
++ Will have the ref box central gapord: 8 9 8

------------------- end of optionizing -------------------

 -- trying to start Xvfb :910 
[1] 798508
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_h5ufPi7Si20++ Writing palette image to QC_GP35/media/qc_00_vorig_EPI.pbar.jpg
++ Writing one 2628x296 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_00_vorig_EPI.sag.jpg'
++ Writing one 2348x296 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_00_vorig_EPI.cor.jpg'
++ Writing one 2348x372 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_00_vorig_EPI.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:8:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:9:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:8:1:black crop=0:0,0:0 -com SET_PBAR_ALL    +99 1 gray_scale -com PBAR_SAVEIM QC_GP35/media/qc_00_vorig_EPI.pbar.jpg dim=64x512H -com SET_SUBBRICKS   -1 -1 -1 -com SET_ULAY_RANGE A.all 0 4320.815918 -com SET_FUNC_RANGE  4320.815918 -com SET_THRESHNEW   0 * -com SET_FUNC_ALPHA  No -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ -2.233322 -9.851189 -0.278191 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_00_vorig_EPI.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_00_vorig_EPI.cor blowup=4 -com SAVE_JPEG axialimage    QC_GP35/media/qc_00_vorig_EPI.axi blowup=4 -com QUITT QC_GP35/media/__tmp_chauf_h5ufPi7Si20 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_h5ufPi7Si20'.

[1]    Done                          Xvfb :910 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_00_vorig_EPI*

++ Prepare for running @djunct_edgy_align_check (ver = 1.45)
++ Copy refbox (/usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz) to workdir
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__workdir_EAC_r2ueMift2m3/REFBOX.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__workdir_EAC_r2ueMift2m3/eac_0_cp.nii
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__workdir_EAC_r2ueMift2m3/eac_0_cp.nii
++ Base dataset:   (not given)
++ Loading datasets into memory
 +        -cmass x y z shifts =    0.000    0.000    0.000
 +  shift search range is +/- =   60.990   73.028   60.990
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ wsinc5 interpolation setup:
 +   taper function  = Min sidelobe 3 term
 +   taper cut point = 0.000
 +   window radius   = 5 voxels
 +   window shape    = Cubical
 +   The above can be altered via the AFNI_WSINC5_* environment variables.
 +  (To avoid this message, 'setenv AFNI_WSINC5_SILENT YES'.)
 +   wsinc5 CUBE(5) mask has 1000 points
++ Output dataset QC_GP35/media/__workdir_EAC_r2ueMift2m3/eac_1_grid2olay.nii
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.0
++ ###########################################################
++ Output dataset ./eac_2_ulay_shrp.nii
++ Just copy olay, bc ulay will get regridded
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m** FATAL ERROR:[0m can't open dataset anat_final.GP35+tlrc.HEAD
** Program compile date = Jul 28 2021
QC_GP35/media/__workdir_EAC_r2ueMift2m3: No such file or directory.
++ Prepare for running @djunct_edgy_align_check (ver = 1.45)
++ Copy refbox (/usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz) to workdir
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__workdir_EAC_u4fTwgGoP4U/REFBOX.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__workdir_EAC_u4fTwgGoP4U/eac_0_cp.nii
++ Output dataset ./eac_1_ulay_shrp.nii
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
[7m** FATAL ERROR:[0m can't open -master dataset 'QC_GP35/media/__workdir_EAC_u4fTwgGoP4U/eac_1_ulay_shrp.nii' :-(
** Program compile date = Jul 28 2021
QC_GP35/media/__workdir_EAC_u4fTwgGoP4U: No such file or directory.
++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 545468 voxels in the entire dataset (no mask)
++ 29 voxels in the boxes+balls
++ 29 voxels in the mask INTERSECT boxes+balls
++ 3dTcorr1D: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + reading dataset file errts.GP35.tproject+tlrc.HEAD
 + reading 1D file _tmp_ave_ts.txt
 + loading dataset ./errts.GP35.tproject+tlrc.BRIK into memory
++ Start correlations: 545468 voxels X 1 time series(3288); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 14261 voxels skipped because were constant in time
++ Wrote dataset: ./_tmp_corr_vol.nii
++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -box_focus_slices /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -olay _tmp_corr_vol.nii -cbar Reds_and_Blues_Inv -ulay_range 0% 120% -func_range 0.6 -thr_olay 0.3 -olay_alpha Yes -olay_boxed Yes -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GP35/media/qc_03_vstat_seed_lh-PCC.pbar.jpg -pbar_comm_range Pearson r -pbar_comm_thr alpha+boxed on -prefix QC_GP35/media/qc_03_vstat_seed_lh-PCC -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
++ Found input file:   _tmp_corr_vol.nii
++ Found focus refbox file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
+* NB: focus box vol has >1 slice, so we select [0]th.
++ Using blowup factor: 2
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_VMnYlvti6WQ
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.22448,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 120%] -> [0.000000, 1296.724320]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_VMnYlvti6WQ/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_VMnYlvti6WQ/tmp_olay.nii
++ User-entered function range value value (0.6)
++ Dimensions (xyzt): 193 229 193 5
++ (initial) Slice spacing ordered (x,y,z) is:  27 32 27
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=24..168  y=25..205  z=6..160
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_VMnYlvti6WQ/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_VMnYlvti6WQ/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_UCrCi6DhEsjGnYD2uswkzA argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0 scale factor = 0.162420
++ Computing output statistics
++ Output dataset /tmp/3dcalc_AFN_UCrCi6DhEsjGnYD2uswkzA+tlrc.BRIK
++ 4067975 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1 17 5
++ Will have the ref box central gapord: 20 25 22

------------------- end of optionizing -------------------

 -- trying to start Xvfb :56 
[1] 799301
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_VMnYlvti6WQ++ Writing palette image to QC_GP35/media/qc_03_vstat_seed_lh-PCC.pbar.jpg
++ Writing one 3218x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_03_vstat_seed_lh-PCC.sag.jpg'
++ Writing one 2714x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_03_vstat_seed_lh-PCC.cor.jpg'
++ Writing one 2714x458 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_03_vstat_seed_lh-PCC.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:20:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:25:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:22:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GP35/media/qc_03_vstat_seed_lh-PCC.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1296.724320 -com SET_FUNC_RANGE  0.6 -com SET_THRESHNEW   0.3 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  Yes -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1 17 5 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_03_vstat_seed_lh-PCC.sag blowup=2 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_03_vstat_seed_lh-PCC.cor blowup=2 -com SAVE_JPEG axialimage    QC_GP35/media/qc_03_vstat_seed_lh-PCC.axi blowup=2 -com QUITT QC_GP35/media/__tmp_chauf_VMnYlvti6WQ 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_VMnYlvti6WQ'.

[1]  + Done                          Xvfb :56 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_03_vstat_seed_lh-PCC*

++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 545468 voxels in the entire dataset (no mask)
++ 34 voxels in the boxes+balls
++ 34 voxels in the mask INTERSECT boxes+balls
++ 3dTcorr1D: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + reading dataset file errts.GP35.tproject+tlrc.HEAD
 + reading 1D file _tmp_ave_ts.txt
 + loading dataset ./errts.GP35.tproject+tlrc.BRIK into memory
++ Start correlations: 545468 voxels X 1 time series(3288); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 14261 voxels skipped because were constant in time
++ Wrote dataset: ./_tmp_corr_vol.nii
++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -box_focus_slices /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -olay _tmp_corr_vol.nii -cbar Reds_and_Blues_Inv -ulay_range 0% 120% -func_range 0.6 -thr_olay 0.3 -olay_alpha Yes -olay_boxed Yes -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GP35/media/qc_04_vstat_seed_rh-cort-vis.pbar.jpg -pbar_comm_range Pearson r -pbar_comm_thr alpha+boxed on -prefix QC_GP35/media/qc_04_vstat_seed_rh-cort-vis -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
++ Found input file:   _tmp_corr_vol.nii
++ Found focus refbox file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
+* NB: focus box vol has >1 slice, so we select [0]th.
++ Using blowup factor: 2
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_3GZIuMjIJiH
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.22448,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 120%] -> [0.000000, 1296.724320]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_3GZIuMjIJiH/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_3GZIuMjIJiH/tmp_olay.nii
++ User-entered function range value value (0.6)
++ Dimensions (xyzt): 193 229 193 5
++ (initial) Slice spacing ordered (x,y,z) is:  27 32 27
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=24..168  y=25..205  z=6..160
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_3GZIuMjIJiH/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_3GZIuMjIJiH/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_jUhHg_J6_3ZiABOFgnWqBQ argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0 scale factor = 0.162420
++ Computing output statistics
++ Output dataset /tmp/3dcalc_AFN_jUhHg_J6_3ZiABOFgnWqBQ+tlrc.BRIK
++ 4067975 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1 17 5
++ Will have the ref box central gapord: 20 25 22

------------------- end of optionizing -------------------

 -- trying to start Xvfb :492 
[1] 800049
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_3GZIuMjIJiH++ Writing palette image to QC_GP35/media/qc_04_vstat_seed_rh-cort-vis.pbar.jpg
++ Writing one 3218x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_04_vstat_seed_rh-cort-vis.sag.jpg'
++ Writing one 2714x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_04_vstat_seed_rh-cort-vis.cor.jpg'
++ Writing one 2714x458 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_04_vstat_seed_rh-cort-vis.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:20:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:25:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:22:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GP35/media/qc_04_vstat_seed_rh-cort-vis.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1296.724320 -com SET_FUNC_RANGE  0.6 -com SET_THRESHNEW   0.3 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  Yes -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1 17 5 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_04_vstat_seed_rh-cort-vis.sag blowup=2 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_04_vstat_seed_rh-cort-vis.cor blowup=2 -com SAVE_JPEG axialimage    QC_GP35/media/qc_04_vstat_seed_rh-cort-vis.axi blowup=2 -com QUITT QC_GP35/media/__tmp_chauf_3GZIuMjIJiH 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_3GZIuMjIJiH'.

[1]  + Done                          Xvfb :492 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_04_vstat_seed_rh-cort-vis*

++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 545468 voxels in the entire dataset (no mask)
++ 36 voxels in the boxes+balls
++ 36 voxels in the mask INTERSECT boxes+balls
++ 3dTcorr1D: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + reading dataset file errts.GP35.tproject+tlrc.HEAD
 + reading 1D file _tmp_ave_ts.txt
 + loading dataset ./errts.GP35.tproject+tlrc.BRIK into memory
++ Start correlations: 545468 voxels X 1 time series(3288); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 14261 voxels skipped because were constant in time
++ Wrote dataset: ./_tmp_corr_vol.nii
++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -box_focus_slices /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -olay _tmp_corr_vol.nii -cbar Reds_and_Blues_Inv -ulay_range 0% 120% -func_range 0.6 -thr_olay 0.3 -olay_alpha Yes -olay_boxed Yes -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GP35/media/qc_05_vstat_seed_lh-cort-aud.pbar.jpg -pbar_comm_range Pearson r -pbar_comm_thr alpha+boxed on -prefix QC_GP35/media/qc_05_vstat_seed_lh-cort-aud -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
++ Found input file:   _tmp_corr_vol.nii
++ Found focus refbox file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
+* NB: focus box vol has >1 slice, so we select [0]th.
++ Using blowup factor: 2
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_DMPFSatzIMK
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.22448,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 120%] -> [0.000000, 1296.724320]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_DMPFSatzIMK/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_DMPFSatzIMK/tmp_olay.nii
++ User-entered function range value value (0.6)
++ Dimensions (xyzt): 193 229 193 5
++ (initial) Slice spacing ordered (x,y,z) is:  27 32 27
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=24..168  y=25..205  z=6..160
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_DMPFSatzIMK/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_DMPFSatzIMK/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_3vZ6nKWMEHx-gyO-ongCBw argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0 scale factor = 0.162420
++ Computing output statistics
++ Output dataset /tmp/3dcalc_AFN_3vZ6nKWMEHx-gyO-ongCBw+tlrc.BRIK
++ 4067975 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1 17 5
++ Will have the ref box central gapord: 20 25 22

------------------- end of optionizing -------------------

 -- trying to start Xvfb :389 
[1] 804733
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_DMPFSatzIMK++ Writing palette image to QC_GP35/media/qc_05_vstat_seed_lh-cort-aud.pbar.jpg
++ Writing one 3218x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_05_vstat_seed_lh-cort-aud.sag.jpg'
++ Writing one 2714x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_05_vstat_seed_lh-cort-aud.cor.jpg'
++ Writing one 2714x458 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_05_vstat_seed_lh-cort-aud.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:20:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:25:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:22:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GP35/media/qc_05_vstat_seed_lh-cort-aud.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1296.724320 -com SET_FUNC_RANGE  0.6 -com SET_THRESHNEW   0.3 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  Yes -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1 17 5 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_05_vstat_seed_lh-cort-aud.sag blowup=2 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_05_vstat_seed_lh-cort-aud.cor blowup=2 -com SAVE_JPEG axialimage    QC_GP35/media/qc_05_vstat_seed_lh-cort-aud.axi blowup=2 -com QUITT QC_GP35/media/__tmp_chauf_DMPFSatzIMK 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_DMPFSatzIMK'.

[1]  + Done                          Xvfb :389 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_05_vstat_seed_lh-cort-aud*

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
++ FOR: motion_GP35_enorm.1D: 1 arrays with 3288 pts
++ FOR: outcount_rall.1D: 1 arrays with 3288 pts
++ Lists of names and yvars match length
*+ No input x-axis; making values based on length of data: [0..3287]
++ Plotting: enorm (~mm)
++ Plotting: outlier frac
++ Done! Figure created:
	 QC_GP35/media/qc_06_mot_enormoutlr.jpg
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
++ FOR: dfile_rall.1D: 6 arrays with 3288 pts
++ Lists of names and yvars match length
*+ No input x-axis; making values based on length of data: [0..3287]
++ Plotting: dP
(mm)
++ Plotting: dL
(mm)
++ Plotting: dS
(mm)
++ Plotting: yaw
(deg)
++ Plotting: pitch
(deg)
++ Plotting: roll
(deg)
++ Done! Figure created:
	 QC_GP35/media/qc_07_mot_VR6.jpg
++ 3dGrayplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + Loading dataset ./errts.GP35.tproject+tlrc.HEAD
 + Number of voxels in mask = 113293
++ THD_dset_to_vectim: allocated 1490029536 bytes
 + 3dGrayplot: Elapsed = 598.3 s
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay mask_epi_anat.GP35+tlrc.HEAD -olay mask_epi_anat.GP35+tlrc.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar gray_scale -func_range 3.29 -blowup 1 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GP35/media/qc_08_mot_grayplot.pbar.jpg -pbar_comm_range for normal distr, bounds of 0.001 prob tail -prefix __tmp_ZXCV_img -save_ftype JPEG -montx 1 -monty 1 -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   mask_epi_anat.GP35+tlrc.HEAD
++ Found input file:   mask_epi_anat.GP35+tlrc.HEAD
++ Using blowup factor: 1
++ Using opacity:  9
++ Making temporary work directory to copy vis files: ./__tmp_chauf_DrOoJVZR5be
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay to be visualized within user range:
  [0%, 98%] -> [0.000000, 1.000000]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tmp_chauf_DrOoJVZR5be/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tmp_chauf_DrOoJVZR5be/tmp_olay.nii
++ User-entered function range value value (3.29)
++ Dimensions (xyzt): 77 92 77 1
++ (initial) Slice spacing ordered (x,y,z) is:  77 92 77
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=0..76  y=0..91  z=0..76
++ THD_zeropad: all pad values are zero - just copying dataset
++ 3dAutobox: output dataset = ./__tmp_chauf_DrOoJVZR5be/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=./__tmp_chauf_DrOoJVZR5be/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_vNTorDB3jMvxctfemDBcLg argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 545468 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 2.5 19.25 18
++ Will have the ref box central gapord: 77 92 77

------------------- end of optionizing -------------------

 -- trying to start Xvfb :298 
[1] 809024
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/__tmp_chauf_DrOoJVZR5be++ Writing palette image to QC_GP35/media/qc_08_mot_grayplot.pbar.jpg
++ Writing one 92x77 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > ./__tmp_ZXCV_img.sag.jpg'
++ Writing one 77x77 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > ./__tmp_ZXCV_img.cor.jpg'
++ Writing one 77x92 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > ./__tmp_ZXCV_img.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=1x1:77:0:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=1x1:92:0:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=1x1:77:0:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 gray_scale -com PBAR_SAVEIM QC_GP35/media/qc_08_mot_grayplot.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1.000000 -com SET_FUNC_RANGE  3.29 -com SET_THRESHNEW   0 * -com SET_FUNC_ALPHA  No -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 2.5 19.25 18 -com SAVE_JPEG sagittalimage ./__tmp_ZXCV_img.sag blowup=1 -com SAVE_JPEG coronalimage  ./__tmp_ZXCV_img.cor blowup=1 -com SAVE_JPEG axialimage    ./__tmp_ZXCV_img.axi blowup=1 -com QUITT ./__tmp_chauf_DrOoJVZR5be 


+* Removing temporary image directory './__tmp_chauf_DrOoJVZR5be'.

[1]    Done                          Xvfb :298 -screen 0 1024x768x24

++ DONE (good exit)
   see: ./__tmp_ZXCV_img*

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
++ FOR: motion_GP35_enorm.1D: 1 arrays with 3288 pts
++ FOR: outcount_rall.1D: 1 arrays with 3288 pts
*+ No ylabels entered
*+ No input x-axis; making values based on length of data: [0..3287]
++ Will scale each time series by censor_hline
++ Apply scale: 2.5
++ Apply scale: 20.0
++ Will apply same y-axis range '[0.0, 3.0]' to all dsets
++ Plotting: 
++ Plotting: 
++ Done! Figure created:
	 __tmp_img_enorm.jpg
\n+* Removing temporary files '__tmp_gluing*'\n

++ DONE! Image output:
       QC_GP35/media/qc_08_mot_grayplot.jpg

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
++ Check summary of degrees of freedom in: QC_GP35/media/qc_09_regr_df.dat
++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -box_focus_slices /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -olay corr_brain+tlrc.HEAD -cbar Reds_and_Blues_Inv -ulay_range 0% 120% -func_range 0.6 -thr_olay 0.3 -olay_alpha Yes -olay_boxed Yes -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GP35/media/qc_10_regr_corr_errts.pbar.jpg -pbar_comm_range Pearson r -pbar_comm_thr alpha+boxed on -prefix QC_GP35/media/qc_10_regr_corr_errts -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
++ Found input file:   corr_brain+tlrc.HEAD
++ Found focus refbox file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
+* NB: focus box vol has >1 slice, so we select [0]th.
++ Using blowup factor: 2
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_wdNnOGr8QNE
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.22448,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 120%] -> [0.000000, 1296.724320]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_wdNnOGr8QNE/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_wdNnOGr8QNE/tmp_olay.nii
++ User-entered function range value value (0.6)
++ Dimensions (xyzt): 193 229 193 5
++ (initial) Slice spacing ordered (x,y,z) is:  27 32 27
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=24..168  y=25..205  z=6..160
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_wdNnOGr8QNE/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_wdNnOGr8QNE/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_17-A_nTuBhGN6nwBg4DBBQ argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0 scale factor = 0.162420
++ Computing output statistics
++ Output dataset /tmp/3dcalc_AFN_17-A_nTuBhGN6nwBg4DBBQ+tlrc.BRIK
++ 4067975 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1 17 5
++ Will have the ref box central gapord: 20 25 22

------------------- end of optionizing -------------------

 -- trying to start Xvfb :310 
[1] 809583
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_wdNnOGr8QNE++ Writing palette image to QC_GP35/media/qc_10_regr_corr_errts.pbar.jpg
++ Writing one 3218x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_10_regr_corr_errts.sag.jpg'
++ Writing one 2714x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_10_regr_corr_errts.cor.jpg'
++ Writing one 2714x458 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_10_regr_corr_errts.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:20:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:25:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:22:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GP35/media/qc_10_regr_corr_errts.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1296.724320 -com SET_FUNC_RANGE  0.6 -com SET_THRESHNEW   0.3 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  Yes -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1 17 5 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_10_regr_corr_errts.sag blowup=2 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_10_regr_corr_errts.cor blowup=2 -com SAVE_JPEG axialimage    QC_GP35/media/qc_10_regr_corr_errts.axi blowup=2 -com QUITT QC_GP35/media/__tmp_chauf_wdNnOGr8QNE 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_wdNnOGr8QNE'.

[1]  + Done                          Xvfb :310 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_10_regr_corr_errts*

++ Prepare for running adjunct_apqc_tsnr_general (ver = 1.1)
++ MODE: 10
++ olay_alpha has known value: No
*+ Setting pbar file extension: jpg


++ My command:
   @chauffeur_afni -ulay /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -olay TSNR.GP35+tlrc.HEAD -ulay_range 0% 120% -func_range 193 -box_focus_slices /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -set_subbricks 0 0 0 -pbar_posonly -blowup 2 -cbar   193=red  171=oran-red  149=orange  127=oran-yell  105=yell-oran  83=yellow  61=lt-blue2  35=blue  0=none -cbar_ncolors 8 -cbar_topval EMPTY -opacity 4 -olay_alpha No -olay_boxed No -thr_olay 0 -pbar_saveim QC_GP35/media/qc_11_regr_tsnr_fin.pbar -pbar_comm_range 95%ile in mask -pbar_comm_gen  cbar: hot color range (5-95%ile TSNR in mask):  61 - 193 -prefix QC_GP35/media/qc_11_regr_tsnr_fin -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean -pass -pass

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
++ Found input file:   TSNR.GP35+tlrc.HEAD
++ Found focus refbox file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
+* NB: focus box vol has >1 slice, so we select [0]th.
++ Using blowup factor: 2
++ Using opacity:  4
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_lGdjeRSkKdZ
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.22448,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 120%] -> [0.000000, 1296.724320]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_lGdjeRSkKdZ/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_lGdjeRSkKdZ/tmp_olay.nii
++ User-entered function range value value (193)
++ Dimensions (xyzt): 193 229 193 5
++ (initial) Slice spacing ordered (x,y,z) is:  27 32 27
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=24..168  y=25..205  z=6..160
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_lGdjeRSkKdZ/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_lGdjeRSkKdZ/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_A4QJ4RSWqcHsUsy4DxOxMw argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0 scale factor = 0.162420
++ Computing output statistics
++ Output dataset /tmp/3dcalc_AFN_A4QJ4RSWqcHsUsy4DxOxMw+tlrc.BRIK
++ 4067975 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1 17 5
++ Will have the ref box central gapord: 20 25 22

------------------- end of optionizing -------------------

 -- trying to start Xvfb :653 
[1] 810104
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_lGdjeRSkKdZ++ Writing palette image to QC_GP35/media/qc_11_regr_tsnr_fin.pbar.jpg
++ Writing one 3218x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_11_regr_tsnr_fin.sag.jpg'
++ Writing one 2714x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_11_regr_tsnr_fin.cor.jpg'
++ Writing one 2714x458 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_11_regr_tsnr_fin.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=4 mont=7x1:20:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=4 mont=7x1:25:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=4 mont=7x1:22:1:black crop=0:0,0:0 -com SET_PBAR_ALL    +8    193=red  171=oran-red  149=orange  127=oran-yell  105=yell-oran  83=yellow  61=lt-blue2  35=blue  0=none -com PBAR_SAVEIM QC_GP35/media/qc_11_regr_tsnr_fin.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1296.724320 -com SET_FUNC_RANGE  193 -com SET_THRESHNEW   0 * -com SET_FUNC_ALPHA  No -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1 17 5 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_11_regr_tsnr_fin.sag blowup=2 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_11_regr_tsnr_fin.cor blowup=2 -com SAVE_JPEG axialimage    QC_GP35/media/qc_11_regr_tsnr_fin.axi blowup=2 -com QUITT QC_GP35/media/__tmp_chauf_lGdjeRSkKdZ 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_lGdjeRSkKdZ'.

[1]  + Done                          Xvfb :653 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_11_regr_tsnr_fin*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb00.tcat/epi.ulay.r01+orig.HEAD -ulay_range 0% 110% -olay radcor.pb00.tcat/radcor.20.r01.corr+orig.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GP35/media/qc_12_radcor_rc_tcat_r01.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GP35/media/qc_12_radcor_rc_tcat_r01 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb00.tcat/epi.ulay.r01+orig.HEAD
++ Found input file:   radcor.pb00.tcat/radcor.20.r01.corr+orig.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_O90Oqlb6Cjk
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 4918.532080]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_O90Oqlb6Cjk/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_O90Oqlb6Cjk/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 83 93 74 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 10
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=1..80  y=1..91  z=1..72
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_O90Oqlb6Cjk/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_O90Oqlb6Cjk/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_PicNZ8ewL2UCXCl14KmVuQ argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 524160 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 0.449577 -1.802391 13.13644
++ Will have the ref box central gapord: 11 13 10

------------------- end of optionizing -------------------

 -- trying to start Xvfb :592 
[1] 810561
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_O90Oqlb6Cjk++ Writing palette image to QC_GP35/media/qc_12_radcor_rc_tcat_r01.pbar.jpg
++ Writing one 2628x296 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_12_radcor_rc_tcat_r01.sag.jpg'
++ Writing one 2348x296 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_12_radcor_rc_tcat_r01.cor.jpg'
++ Writing one 2348x372 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_12_radcor_rc_tcat_r01.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:10:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GP35/media/qc_12_radcor_rc_tcat_r01.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 4918.532080 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 0.449577 -1.802391 13.13644 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_12_radcor_rc_tcat_r01.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_12_radcor_rc_tcat_r01.cor blowup=4 -com SAVE_JPEG axialimage    QC_GP35/media/qc_12_radcor_rc_tcat_r01.axi blowup=4 -com QUITT QC_GP35/media/__tmp_chauf_O90Oqlb6Cjk 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_O90Oqlb6Cjk'.

[1]    Done                          Xvfb :592 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_12_radcor_rc_tcat_r01*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb00.tcat/epi.ulay.r02+orig.HEAD -ulay_range 0% 110% -olay radcor.pb00.tcat/radcor.20.r02.corr+orig.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GP35/media/qc_12_radcor_rc_tcat_r02.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GP35/media/qc_12_radcor_rc_tcat_r02 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb00.tcat/epi.ulay.r02+orig.HEAD
++ Found input file:   radcor.pb00.tcat/radcor.20.r02.corr+orig.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_wIBkc431wPL
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 4906.185240]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_wIBkc431wPL/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_wIBkc431wPL/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 83 93 74 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 10
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=2..79  y=1..91  z=1..72
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_wIBkc431wPL/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_wIBkc431wPL/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_XWxuSvh8ewDDBcpEYLHkug argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 511056 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 0.449646 -1.802391 13.13644
++ Will have the ref box central gapord: 11 13 10

------------------- end of optionizing -------------------

 -- trying to start Xvfb :916 
[1] 811006
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_wIBkc431wPL++ Writing palette image to QC_GP35/media/qc_12_radcor_rc_tcat_r02.pbar.jpg
++ Writing one 2628x296 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_12_radcor_rc_tcat_r02.sag.jpg'
++ Writing one 2348x296 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_12_radcor_rc_tcat_r02.cor.jpg'
++ Writing one 2348x372 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_12_radcor_rc_tcat_r02.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:10:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GP35/media/qc_12_radcor_rc_tcat_r02.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 4906.185240 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 0.449646 -1.802391 13.13644 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_12_radcor_rc_tcat_r02.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_12_radcor_rc_tcat_r02.cor blowup=4 -com SAVE_JPEG axialimage    QC_GP35/media/qc_12_radcor_rc_tcat_r02.axi blowup=4 -com QUITT QC_GP35/media/__tmp_chauf_wIBkc431wPL 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_wIBkc431wPL'.

[1]    Done                          Xvfb :916 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_12_radcor_rc_tcat_r02*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb00.tcat/epi.ulay.r03+orig.HEAD -ulay_range 0% 110% -olay radcor.pb00.tcat/radcor.20.r03.corr+orig.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GP35/media/qc_12_radcor_rc_tcat_r03.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GP35/media/qc_12_radcor_rc_tcat_r03 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb00.tcat/epi.ulay.r03+orig.HEAD
++ Found input file:   radcor.pb00.tcat/radcor.20.r03.corr+orig.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_H5LTV7PHj6s
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 4907.307680]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_H5LTV7PHj6s/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_H5LTV7PHj6s/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 83 93 74 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 10
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=2..78  y=1..91  z=1..72
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_H5LTV7PHj6s/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_H5LTV7PHj6s/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_xJyKeXaIB5Oa73bLl3dCzg argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 504504 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 0.449646 -1.802391 13.13644
++ Will have the ref box central gapord: 11 13 10

------------------- end of optionizing -------------------

 -- trying to start Xvfb :979 
[1] 811587
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_H5LTV7PHj6s++ Writing palette image to QC_GP35/media/qc_12_radcor_rc_tcat_r03.pbar.jpg
++ Writing one 2628x296 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_12_radcor_rc_tcat_r03.sag.jpg'
++ Writing one 2348x296 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_12_radcor_rc_tcat_r03.cor.jpg'
++ Writing one 2348x372 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_12_radcor_rc_tcat_r03.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:10:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GP35/media/qc_12_radcor_rc_tcat_r03.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 4907.307680 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 0.449646 -1.802391 13.13644 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_12_radcor_rc_tcat_r03.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_12_radcor_rc_tcat_r03.cor blowup=4 -com SAVE_JPEG axialimage    QC_GP35/media/qc_12_radcor_rc_tcat_r03.axi blowup=4 -com QUITT QC_GP35/media/__tmp_chauf_H5LTV7PHj6s 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_H5LTV7PHj6s'.

[1]    Done                          Xvfb :979 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_12_radcor_rc_tcat_r03*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb04.volreg/epi.ulay.r01+tlrc.HEAD -ulay_range 0% 110% -olay radcor.pb04.volreg/radcor.20.r01.corr+tlrc.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GP35/media/qc_13_radcor_rc_volreg_r01.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GP35/media/qc_13_radcor_rc_volreg_r01 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb04.volreg/epi.ulay.r01+tlrc.HEAD
++ Found input file:   radcor.pb04.volreg/radcor.20.r01.corr+tlrc.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_N5shKetwm9D
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 5135.464984]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_N5shKetwm9D/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_N5shKetwm9D/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 77 92 77 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 11
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=0..76  y=0..91  z=0..76
++ THD_zeropad: all pad values are zero - just copying dataset
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_N5shKetwm9D/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_N5shKetwm9D/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_lTGWv57plNX-oxSbRcsZYA argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 545468 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 2.5 19.25 18
++ Will have the ref box central gapord: 11 13 11

------------------- end of optionizing -------------------

 -- trying to start Xvfb :596 
[1] 812038
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_N5shKetwm9D++ Writing palette image to QC_GP35/media/qc_13_radcor_rc_volreg_r01.pbar.jpg
++ Writing one 2600x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_13_radcor_rc_volreg_r01.sag.jpg'
++ Writing one 2180x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_13_radcor_rc_volreg_r01.cor.jpg'
++ Writing one 2180x368 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_13_radcor_rc_volreg_r01.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GP35/media/qc_13_radcor_rc_volreg_r01.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 5135.464984 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 2.5 19.25 18 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_13_radcor_rc_volreg_r01.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_13_radcor_rc_volreg_r01.cor blowup=4 -com SAVE_JPEG axialimage    QC_GP35/media/qc_13_radcor_rc_volreg_r01.axi blowup=4 -com QUITT QC_GP35/media/__tmp_chauf_N5shKetwm9D 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_N5shKetwm9D'.

[1]    Done                          Xvfb :596 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_13_radcor_rc_volreg_r01*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb04.volreg/epi.ulay.r02+tlrc.HEAD -ulay_range 0% 110% -olay radcor.pb04.volreg/radcor.20.r02.corr+tlrc.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GP35/media/qc_13_radcor_rc_volreg_r02.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GP35/media/qc_13_radcor_rc_volreg_r02 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb04.volreg/epi.ulay.r02+tlrc.HEAD
++ Found input file:   radcor.pb04.volreg/radcor.20.r02.corr+tlrc.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_Yb2AI3u5L10
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 5123.312160]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_Yb2AI3u5L10/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_Yb2AI3u5L10/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 77 92 77 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 11
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=0..76  y=0..91  z=0..76
++ THD_zeropad: all pad values are zero - just copying dataset
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_Yb2AI3u5L10/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_Yb2AI3u5L10/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_7hKuPbGTyzYuSHNQROoEkA argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 545468 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 2.5 19.25 18
++ Will have the ref box central gapord: 11 13 11

------------------- end of optionizing -------------------

 -- trying to start Xvfb :693 
[1] 812532
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_Yb2AI3u5L10++ Writing palette image to QC_GP35/media/qc_13_radcor_rc_volreg_r02.pbar.jpg
++ Writing one 2600x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_13_radcor_rc_volreg_r02.sag.jpg'
++ Writing one 2180x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_13_radcor_rc_volreg_r02.cor.jpg'
++ Writing one 2180x368 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_13_radcor_rc_volreg_r02.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GP35/media/qc_13_radcor_rc_volreg_r02.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 5123.312160 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 2.5 19.25 18 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_13_radcor_rc_volreg_r02.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_13_radcor_rc_volreg_r02.cor blowup=4 -com SAVE_JPEG axialimage    QC_GP35/media/qc_13_radcor_rc_volreg_r02.axi blowup=4 -com QUITT QC_GP35/media/__tmp_chauf_Yb2AI3u5L10 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_Yb2AI3u5L10'.

[1]    Done                          Xvfb :693 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_13_radcor_rc_volreg_r02*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb04.volreg/epi.ulay.r03+tlrc.HEAD -ulay_range 0% 110% -olay radcor.pb04.volreg/radcor.20.r03.corr+tlrc.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GP35/media/qc_13_radcor_rc_volreg_r03.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GP35/media/qc_13_radcor_rc_volreg_r03 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb04.volreg/epi.ulay.r03+tlrc.HEAD
++ Found input file:   radcor.pb04.volreg/radcor.20.r03.corr+tlrc.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GP35/media/__tmp_chauf_Xi96fotCYo0
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 5121.596164]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_Xi96fotCYo0/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__tmp_chauf_Xi96fotCYo0/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 77 92 77 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 11
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=0..76  y=0..91  z=0..76
++ THD_zeropad: all pad values are zero - just copying dataset
++ 3dAutobox: output dataset = QC_GP35/media/__tmp_chauf_Xi96fotCYo0/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GP35/media/__tmp_chauf_Xi96fotCYo0/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_nFKFSu1c9Q5GVT7yUco79g argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 545468 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 2.5 19.25 18
++ Will have the ref box central gapord: 11 13 11

------------------- end of optionizing -------------------

 -- trying to start Xvfb :915 
[1] 812976
+/mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__tmp_chauf_Xi96fotCYo0++ Writing palette image to QC_GP35/media/qc_13_radcor_rc_volreg_r03.pbar.jpg
++ Writing one 2600x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_13_radcor_rc_volreg_r03.sag.jpg'
++ Writing one 2180x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_13_radcor_rc_volreg_r03.cor.jpg'
++ Writing one 2180x368 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GP35/media/qc_13_radcor_rc_volreg_r03.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GP35/media/qc_13_radcor_rc_volreg_r03.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 5121.596164 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 2.5 19.25 18 -com SAVE_JPEG sagittalimage QC_GP35/media/qc_13_radcor_rc_volreg_r03.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GP35/media/qc_13_radcor_rc_volreg_r03.cor blowup=4 -com SAVE_JPEG axialimage    QC_GP35/media/qc_13_radcor_rc_volreg_r03.axi blowup=4 -com QUITT QC_GP35/media/__tmp_chauf_Xi96fotCYo0 


+* Removing temporary image directory 'QC_GP35/media/__tmp_chauf_Xi96fotCYo0'.

[1]    Done                          Xvfb :915 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GP35/media/qc_13_radcor_rc_volreg_r03*

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
++ Check for corr matrix warnings in: QC_GP35/media/qc_14_warns_xmat.dat
++ Check for censor fraction warnings (general): QC_GP35/media/qc_15_warns_cen_total.dat
++ Prepare for running @djunct_edgy_align_check (ver = 1.45)
++ Copy refbox (vr_base_min_outlier_ts_ns+orig) to workdir
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__workdir_EAC_bwONihrrOpG/REFBOX.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__workdir_EAC_bwONihrrOpG/eac_0_cp.nii
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__workdir_EAC_bwONihrrOpG/eac_0_cp.nii
++ Base dataset:   (not given)
++ Loading datasets into memory
 +        -cmass x y z shifts =    0.000    0.000    0.000
 +  shift search range is +/- =   70.620   79.232   62.869
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ wsinc5 interpolation setup:
 +   taper function  = Min sidelobe 3 term
 +   taper cut point = 0.000
 +   window radius   = 5 voxels
 +   window shape    = Cubical
 +   The above can be altered via the AFNI_WSINC5_* environment variables.
 +  (To avoid this message, 'setenv AFNI_WSINC5_SILENT YES'.)
 +   wsinc5 CUBE(5) mask has 1000 points
++ Output dataset QC_GP35/media/__workdir_EAC_bwONihrrOpG/eac_1_grid2olay.nii
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.3
++ ###########################################################
++ Output dataset ./eac_2_ulay_shrp.nii
++ Just copy olay, bc ulay will get regridded
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m** FATAL ERROR:[0m can't open dataset MPRAGE.GP35_unif_al_junk+orig
** Program compile date = Jul 28 2021
QC_GP35/media/__workdir_EAC_bwONihrrOpG: No such file or directory.
++ Prepare for running @djunct_edgy_align_check (ver = 1.45)
++ Copy refbox (vr_base_min_outlier_ts_ns+orig) to workdir
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__workdir_EAC_tS49HI7xUyz/REFBOX.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GP35/media/__workdir_EAC_tS49HI7xUyz/eac_0_cp.nii
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/media/__workdir_EAC_tS49HI7xUyz/eac_0_cp.nii
++ Base dataset:   (not given)
++ Loading datasets into memory
 +        -cmass x y z shifts =    0.000    0.000    0.000
 +  shift search range is +/- =   70.620   79.232   62.869
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ wsinc5 interpolation setup:
 +   taper function  = Min sidelobe 3 term
 +   taper cut point = 0.000
 +   window radius   = 5 voxels
 +   window shape    = Cubical
 +   The above can be altered via the AFNI_WSINC5_* environment variables.
 +  (To avoid this message, 'setenv AFNI_WSINC5_SILENT YES'.)
 +   wsinc5 CUBE(5) mask has 1000 points
++ Output dataset QC_GP35/media/__workdir_EAC_tS49HI7xUyz/eac_1_grid2olay.nii
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.3
++ ###########################################################
++ Output dataset ./eac_2_ulay_shrp.nii
++ Just copy olay, bc ulay will get regridded
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m** FATAL ERROR:[0m can't open dataset MPRAGE.GP35_unif_flip_al_junk+orig
** Program compile date = Jul 28 2021
QC_GP35/media/__workdir_EAC_tS49HI7xUyz: No such file or directory.
++ Check basic summary quants from proc in: QC_GP35/media/qc_18_qsumm_ssrev.dat


# +++++++++++ Check output of @ss_review_basic +++++++++++ #


subject ID                : GP35
AFNI version              : AFNI_21.2.04
AFNI package              : linux_ubuntu_16_64
TR                        : 0.46
TRs removed (per run)     : 0
num stim classes provided : 0
final anatomy dset        : anat_final.GP35+tlrc.HEAD
final stats dset          : NO_STATS
final errts dset          : errts.GP35.tproject+tlrc.HEAD
orig voxel counts         : 83	93	74
orig voxel resolution     : 2.682927	2.682927	2.682927
orig volume center        : 0.449600	-1.802368	11.794983
final voxel resolution    : 2.500000	2.500000	2.500000

motion limit              : 0.4
num TRs above mot limit   : 23
average motion (per TR)   : 0.073718
average censored motion   : 0.0686183
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
max motion displacement   : 3.88627
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
max censored displacement : 3.76866
outlier limit             : 0.05
average outlier frac (TR) : 0.00468124
num TRs above out limit   : 103
flip guess                : NO_FLIP

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
num runs found            : 3
num TRs per run           : 1096 1096 1096
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
num TRs per run (applied) : 1079 1034 1045
num TRs per run (censored): 17 62 51
fraction censored per run : 0.0155109 0.0565693 0.0465328
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
TRs total (uncensored)    : 3288
TRs total                 : 3158
degrees of freedom used   : 51
degrees of freedom left   : 3107

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
TRs censored              : 130
censor fraction           : 0.039538
num regs of interest      : 0

TSNR average              : 125.507
global correlation (GCOR) : 0.136067
anat/EPI mask Dice coef   : 0.768495
anat/templ mask Dice coef : 0.804929
blur estimates (ACF)      : 0.887295 3.51438 11.2852
blur estimates (FWHM)     : 0 0 0


apqc_make_html.py -qc_dir QC_GP35
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \

++ Done! Wrote QC HTML.  To check, consider:

   afni_open -b QC_GP35/index.html

echo \nconsider running: \n\n    afni_open -b /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/index.html\n

consider running: 

    afni_open -b /mnt/ext5/GP/fmri_data/preproc_data/GP35/day2/QC_GP35/index.html

endif
cd ..
echo execution finished: `date`
date
execution finished: Tue Jan 10 05:44:34 PM KST 2023
