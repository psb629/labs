echo auto-generated by afni_proc.py, Fri Jan 20 05:07:50 2023
auto-generated by afni_proc.py, Fri Jan 20 05:07:50 2023
echo (version 7.17, July 16, 2021)
(version 7.17, July 16, 2021)
echo execution started: `date`
date
execution started: Fri Jan 20 05:07:51 AM KST 2023
afni -ver
Precompiled binary linux_ubuntu_16_64: Jul 28 2021 (Version AFNI_21.2.04 'Nerva')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   27 Jul 2021
if ( 0 ) then
if ( 0 > 0 ) then
set subj = GB23
endif
set output_dir = /mnt/ext5/GA/fmri_data/preproc_data/GB23
if ( -d /mnt/ext5/GA/fmri_data/preproc_data/GB23 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir -p /mnt/ext5/GA/fmri_data/preproc_data/GB23
mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB23/stimuli
3dcopy /mnt/ext5/GA/fmri_data/raw_data/GB23/MPRAGE.GB23.nii /mnt/ext5/GA/fmri_data/preproc_data/GB23/MPRAGE.GB23
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB23/blip_forward /mnt/ext5/GA/fmri_data/raw_data/GB23/dist_AP.GB23.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 1.3 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB23/blip_reverse /mnt/ext5/GA/fmri_data/raw_data/GB23/dist_PA.GB23.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 1.8 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB23/pb00.GB23.r01.tcat /mnt/ext5/GA/fmri_data/raw_data/GB23/func.GB23.r01.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 473.9 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB23/pb00.GB23.r02.tcat /mnt/ext5/GA/fmri_data/raw_data/GB23/func.GB23.r02.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 635.6 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB23/pb00.GB23.r03.tcat /mnt/ext5/GA/fmri_data/raw_data/GB23/func.GB23.r03.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 442.1 s
set tr_counts = ( 1096 1096 1096 )
cd /mnt/ext5/GA/fmri_data/preproc_data/GB23
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.GB23.r01.tcat+orig.HEAD pb00.GB23.r02.tcat+orig.HEAD pb00.GB23.r03.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 293.3 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 354.3 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 310.5 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB23.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2760.2 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB23.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2760.2 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB23.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2760.2 MB)

-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

3dUnifize -prefix MPRAGE.GB23_unif -GM MPRAGE.GB23+orig
++ 3dUnifize: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + Pre-processing: ADV..............................UW[s105179]Gm
++ Output dataset ./MPRAGE.GB23_unif+orig.BRIK
++ ===== Elapsed = 52.9 sec
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB23.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 81701 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB23.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 81937 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB23.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 82111 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 1096 1096 1096 -index_to_run_tr 21
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
set minoutrun = 01
set minouttr = 21
echo min outlier: run 01, TR 21
tee out.min_outlier.txt
min outlier: run 01, TR 21
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.GB23.r01.despike pb00.GB23.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB23.r01.tcat+orig
++ processing all 660182 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #14
++ start OpenMP thread #6
++ start OpenMP thread #2
++ start OpenMP thread #8
++ start OpenMP thread #12
++ start OpenMP thread #9
++ start OpenMP thread #1
++ start OpenMP thread #13
++ start OpenMP thread #4
++ start OpenMP thread #7
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #10
++ start OpenMP thread #11
..........................................................................................................................................................................................................................................................................................
++ Elapsed despike time =  11s 456ms

++ FINAL: 412775520 data points, 25931323 edits [6.282%], 6735493 big edits [1.632%]
++ Output dataset ./pb01.GB23.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB23.r02.despike pb00.GB23.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB23.r02.tcat+orig
++ processing all 660182 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #12
++ start OpenMP thread #6
++ start OpenMP thread #8
++ start OpenMP thread #10
++ start OpenMP thread #3
++ start OpenMP thread #1
++ start OpenMP thread #13
++ start OpenMP thread #7
++ start OpenMP thread #5
++ start OpenMP thread #4
++ start OpenMP thread #14
++ start OpenMP thread #9
++ start OpenMP thread #11
..........................................................................................................................................................................................................................................................................................
++ Elapsed despike time =  12s 603ms

++ FINAL: 412775520 data points, 29319543 edits [7.103%], 8105775 big edits [1.964%]
++ Output dataset ./pb01.GB23.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB23.r03.despike pb00.GB23.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB23.r03.tcat+orig
++ processing all 660182 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #14
++ start OpenMP thread #12
++ start OpenMP thread #1
++ start OpenMP thread #2
++ start OpenMP thread #6
++ start OpenMP thread #8
++ start OpenMP thread #3
++ start OpenMP thread #13
++ start OpenMP thread #10
++ start OpenMP thread #9
++ start OpenMP thread #7
++ start OpenMP thread #11
++ start OpenMP thread #5
++ start OpenMP thread #4
..........................................................................................................................................................................................................................................................................................
++ Elapsed despike time =  12s 173ms

++ FINAL: 412775520 data points, 22401021 edits [5.427%], 4056542 big edits [0.983%]
++ Output dataset ./pb01.GB23.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.GB23.r01.tshift pb01.GB23.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB23.r02.tshift pb01.GB23.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB23.r03.tshift pb01.GB23.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTstat -median -prefix rm.blip.med.fwd blip_forward+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.fwd+orig.BRIK
3dTstat -median -prefix rm.blip.med.rev blip_reverse+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.rev+orig.BRIK
3dAutomask -apply_prefix rm.blip.med.masked.fwd rm.blip.med.fwd+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.fwd+orig
++ Forming automask
 + Fixed clip level = 5445.958496
 + Used gradual clip level = 5166.125488 .. 5734.927246
 + Number voxels above clip level = 90857
 + Clustering voxels ...
 + Largest cluster has 88508 voxels
 + Clustering voxels ...
 + Largest cluster has 88131 voxels
 + Filled   340 voxels in small holes; now have 88471 voxels
 + Filled   832 voxels in large holes; now have 89303 voxels
 + Clustering voxels ...
 + Largest cluster has 89297 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 570885 voxels
 + Mask now has 89297 voxels
++ 89297 voxels in the mask [out of 660182: 13.53%]
++ first  15 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first  15 y-planes are zero [from A]
++ last   19 y-planes are zero [from P]
++ first   8 z-planes are zero [from I]
++ last   17 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dAutomask -apply_prefix rm.blip.med.masked.rev rm.blip.med.rev+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.rev+orig
++ Forming automask
 + Fixed clip level = 5604.827148
 + Used gradual clip level = 5400.181152 .. 5900.941895
 + Number voxels above clip level = 87614
 + Clustering voxels ...
 + Largest cluster has 86724 voxels
 + Clustering voxels ...
 + Largest cluster has 86214 voxels
 + Filled   332 voxels in small holes; now have 86546 voxels
 + Filled   799 voxels in large holes; now have 87345 voxels
 + Clustering voxels ...
 + Largest cluster has 87342 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 572840 voxels
 + Mask now has 87342 voxels
++ 87342 voxels in the mask [out of 660182: 13.23%]
++ first  15 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first  12 y-planes are zero [from A]
++ last   19 y-planes are zero [from P]
++ first   8 z-planes are zero [from I]
++ last   17 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dQwarp -plusminus -pmNAMES Rev For -pblur 0.05 0.05 -blur -1 -1 -noweight -minpatch 9 -source rm.blip.med.masked.rev+orig -base rm.blip.med.masked.fwd+orig -prefix blip_warp
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=3 ytop=3  zbot=3 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=./rm.blip.med.masked.fwd+orig.HEAD  source=./rm.blip.med.masked.rev+orig.HEAD
++ AFNI warpomatic start: 89 x 103 x 88 volume ; autobbox = 7..82 8..90 2..78
lev=0 0..88 0..100 0..87: [first cost=-1.56066] ...... done [cost=-1.67774]
lev=1 patch=67x75x65: [first cost=-1.54655] ........ done [cost:-1.60319 ; 8 patches optimized, 0 skipped]
lev=2 patch=51x57x49: [first cost=-1.52777] ........................... done [cost:-1.61515 ; 27 patches optimized, 0 skipped]
lev=3 patch=37x43x37: [first cost=-1.54117] ................. done [cost:-1.63749 ; 44 patches optimized, 20 skipped]
lev=4 patch=29x31x27: [first cost=-1.62089] ................... done [cost:-1.71540 ; 107 patches optimized, 73 skipped]
lev=5 patch=21x23x21: [first cost=-1.68755] ................ done [cost:-1.78057 ; 259 patches optimized, 189 skipped]
lev=6 patch=15x17x15: [first cost=-1.70538] ........ +      cubic12 patch 051..065 047..063 068..082 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x2539bf0  xbot=0x251d360  xtop=0x24f3350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
................. done [cost:-1.79614 ; 670 patches optimized, 540 skipped]
lev=7 patch=11x13x11: [first cost=-1.80302] ......................... +      cubic12 patch 044..054 082..094 040..050 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x2539bf0  xbot=0x251d360  xtop=0x24f3350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.............. +      cubic12 patch 059..069 052..064 065..075 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x2539bf0  xbot=0x251d360  xtop=0x24f3350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
. done [cost:-1.89475 ; 1708 patches optimized, 1442 skipped]
lev=8 patch=9x9x9: [first cost=-1.89398]  +      cubic12 patch 077..085 037..045 029..037 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x2539bf0  xbot=0x251d360  xtop=0x24f3350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
. +      cubic12 patch 073..081 057..065 033..041 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x2539bf0  xbot=0x251d360  xtop=0x24f3350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.......................... +      cubic12 patch 041..049 081..089 041..049 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x2539bf0  xbot=0x251d360  xtop=0x24f3350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
........................ +      cubic12 patch 033..041 013..021 053..061 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x2539bf0  xbot=0x251d360  xtop=0x24f3350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
..................... +      cubic12 patch 013..021 073..081 025..033 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x2539bf0  xbot=0x251d360  xtop=0x24f3350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
. +      cubic12 patch 013..021 029..037 057..065 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x2539bf0  xbot=0x251d360  xtop=0x24f3350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
. done [cost:-1.95042 ; 3945 patches optimized, 3636 skipped]
++ ====== total number of parameters 'optimized' = 81405
 +      initial unpenalized cost = -1.56066
 +        final unpenalized cost = -1.99604
 +        final penalized   cost = -1.95042
++ Output dataset ./blip_warp_Rev+orig.BRIK
++ Output dataset ./blip_warp_For+orig.BRIK
++ Output dataset ./blip_warp_Rev_WARP+orig.BRIK
++ Output dataset ./blip_warp_For_WARP+orig.BRIK
++ ===== clock time = 45s 227ms
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.fwd+orig -prefix blip_med_for
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for+orig.BRIK
++ total Elapsed time = 0.3 sec
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.masked.fwd+orig -prefix blip_med_for_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for_masked+orig.BRIK
++ total Elapsed time = 0.3 sec
3dNwarpApply -quintic -nwarp blip_warp_Rev_WARP+orig -source rm.blip.med.masked.rev+orig -prefix blip_med_rev_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.rev+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_rev_masked+orig.BRIK
++ total Elapsed time = 0.3 sec
foreach run ( 01 02 03 )
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB23.r01.tshift+orig -prefix pb03.GB23.r01.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB23.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB23.r01.blip+orig.BRIK
++ total Elapsed time = 135.4 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB23.r02.tshift+orig -prefix pb03.GB23.r02.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB23.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB23.r02.blip+orig.BRIK
++ total Elapsed time = 127.7 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB23.r03.tshift+orig -prefix pb03.GB23.r03.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB23.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB23.r03.blip+orig.BRIK
++ total Elapsed time = 142.8 sec
end
3dbucket -prefix vr_base_min_outlier pb03.GB23.r01.blip+orig[21]
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
align_epi_anat.py -anat2epi -anat MPRAGE.GB23_unif+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off -tshift off
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB23/MPRAGE.GB23_unif+orig
#++ Multi-cost is lpa
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB23_unif*
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB23_unif+orig ./MPRAGE.GB23_unif_unflipped+orig
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./MPRAGE.GB23_unif_unflipped+orig -prefix ./MPRAGE.GB23_unif_unflipped_ns
#Script is running (command trimmed):
  3dinfo ./MPRAGE.GB23_unif_unflipped_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB23/MPRAGE.GB23_unif_unflipped_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB23/vr_base_min_outlier+orig is not oblique
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_ts ./vr_base_min_outlier+orig'[0]'
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_min_outlier_ts_ns ./__tt_vr_base_min_outlier_ts+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 3891.384277
 + Used gradual clip level = 3658.602051 .. 4202.946289
 + Number voxels above clip level = 82731
 + Clustering voxels ...
 + Largest cluster has 79512 voxels
 + Clustering voxels ...
 + Largest cluster has 78674 voxels
 + Filled   275 voxels in small holes; now have 78949 voxels
 + Filled   783 voxels in large holes; now have 79732 voxels
 + Clustering voxels ...
 + Largest cluster has 79730 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 580452 voxels
 + Mask now has 79730 voxels
++ 79730 voxels in the mask [out of 660182: 12.08%]
++ first  15 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first  16 y-planes are zero [from A]
++ last   19 y-planes are zero [from P]
++ first   8 z-planes are zero [from I]
++ last   18 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_min_outlier_ts_ns+orig
#++ Applying threshold of 9204.361328 on /mnt/ext5/GA/fmri_data/preproc_data/GB23/vr_base_min_outlier_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_min_outlier_ts_ns_wt -a ./vr_base_min_outlier_ts_ns+orig -expr 'min(1,(a/9204.361328))'
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpa -wtprefix ./MPRAGE.GB23_unif_unflipped_ns_al_junk_wtal -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB23_unif_unflipped_ns+orig -prefix ./MPRAGE.GB23_unif_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB23_unif_al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB23_unif_unflipped_ns+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4711835 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 79730 voxels [11.5%] in weight mask
++ Number of points for matching = 79730
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.768 49.602 43.575 (index)
 + source center of mass = 111.670 182.731 151.694 (index)
 + source-target CM = -0.773 -1.635 -7.012 (xyz)
 + estimated center of mass shifts = -0.773 -1.635 -7.012
++ shift param auto-range: -71.4..69.8 -84.3..81.0 -80.2..66.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.773277 .. 9.226723  center = -0.773277
 + Range param#2 [y-shift] = -11.634621 .. 8.365379  center = -1.634621
 + Range param#3 [z-shift] = -17.012352 .. 2.987648  center = -7.012352
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.773277 .. 39.226723  center = -0.773277
 + Range param#2 [y-shift] = -41.634621 .. 38.365379  center = -1.634621
 + Range param#3 [z-shift] = -47.012352 .. 32.987648  center = -7.012352
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000084
++ Final parameter search ranges:
 +       x-shift =  -40.773 ..   39.227
 +       y-shift =  -41.635 ..   38.365
 +       z-shift =  -47.012 ..   32.988
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4711835 [out of 23184225] voxels
 + base mask has 99369 [out of 692386] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=204.754 usiz=428.547
 + - copying weight image
 + - using 79730 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 69350 total points stored in 136 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#*[#1=0.989601] **[#2=0.986697] *-*[#4=0.975997] *-*[#6=0.955709] *+o-.o+++--o...o..+o$*[#5316=0.955626] **[#5320=0.951986] *o.
 + - best 88 costs found:
   o= 0 v= 0.951986: -32.61 -13.43  -9.75  23.31   3.26  40.47  [rand]
   o= 1 v= 0.953117: -32.61 -13.43  -4.27  23.31  -3.26  40.47  [rand]
   o= 2 v= 0.955626: -32.61 -13.43  -4.27  23.31   3.26  40.47  [rand]
   o= 3 v= 0.955709:  -7.44   5.03 -13.68   7.50   7.50   7.50  [grid]
   o= 4 v= 0.956689: -32.61 -13.43  -9.75  23.31  -3.26  40.47  [rand]
   o= 5 v= 0.957286: -32.98  27.41 -43.15  40.41  19.09  40.75  [rand]
   o= 6 v= 0.958273: -35.10 -18.22 -15.61  16.34   8.64  40.54  [rand]
   o= 7 v= 0.958469: -33.26  25.36 -38.90   9.69  21.75  40.77  [rand]
   o= 8 v= 0.959755: -19.27  -7.49   7.58  16.04  -3.33 -12.13  [rand]
   o= 9 v= 0.960586:  -7.44  -8.30  -0.35  -7.50  30.00  30.00  [grid]
   o=10 v= 0.960823: -19.27   4.22   7.58  16.04   3.33 -12.13  [rand]
   o=11 v= 0.961697: -35.10 -18.22   1.59  16.34  -8.64  40.54  [rand]
   o=12 v= 0.961727: -31.80  17.95 -28.61  24.25  27.21  33.81  [rand]
   o=13 v= 0.961880: -35.63  34.04   7.24  40.22 -24.26  41.52  [rand]
   o=14 v= 0.961998:  31.07 -13.43  -9.75 -23.31   3.26 -40.47  [rand]
   o=15 v= 0.962378: -38.54  14.00 -14.76  31.25  41.23  36.84  [rand]
   o=16 v= 0.963441:  -7.44  -8.30  -0.35   7.50  -7.50  30.00  [grid]
   o=17 v= 0.963561:  33.55 -18.22 -15.61 -16.34   8.64 -40.54  [rand]
   o=18 v= 0.963696:  31.44  27.41 -43.15 -40.41  19.09 -40.75  [rand]
   o=19 v= 0.963736:  33.55  14.95   1.59  16.34   8.64 -40.54  [rand]
   o=20 v= 0.963760:  31.07 -13.43  -4.27 -23.31   3.26 -40.47  [rand]
   o=21 v= 0.963774: -35.10  14.95   1.59  16.34   8.64  40.54  [rand]
   o=22 v= 0.963958: -35.10  14.95   1.59  16.34  -8.64  40.54  [rand]
   o=23 v= 0.963980:  34.08  34.04   7.24 -40.22 -24.26 -41.52  [rand]
   o=24 v= 0.964254: -27.44  25.03 -33.68  30.00   7.50  30.00  [grid]
   o=25 v= 0.964266:   5.89   5.03 -13.68  -7.50   7.50  -7.50  [grid]
   o=26 v= 0.964307: -19.27  -7.49   7.58  16.04   3.33 -12.13  [rand]
   o=27 v= 0.964565: -21.03  25.65  27.47 -37.90   5.03  -3.08  [rand]
   o=28 v= 0.964649: -35.63  34.04 -21.26  40.22 -24.26  41.52  [rand]
   o=29 v= 0.964650: -34.60  27.87 -19.97  31.95  -9.87  34.85  [rand]
   o=30 v= 0.964860: -35.10  14.95 -15.61  16.34   8.64  40.54  [rand]
   o=31 v= 0.964901: -34.60  27.87   5.94  31.95  -9.87  34.85  [rand]
   o=32 v= 0.965011: -34.60 -31.14   5.94  31.95   9.87  34.85  [rand]
   o=33 v= 0.965050:  31.07 -13.43  -9.75 -23.31  -3.26 -40.47  [rand]
   o=34 v= 0.965135: -35.10  14.95   1.59 -16.34  -8.64  40.54  [rand]
   o=35 v= 0.965192:  -4.85  -7.86   0.78   4.32  22.85  18.95  [rand]
   o=36 v= 0.965195:   5.89   5.03 -13.68  -7.50   7.50   7.50  [grid]
   o=37 v= 0.965217:   5.89 -28.30  -0.35 -30.00  -7.50 -30.00  [grid]
   o=38 v= 0.965310:   5.89  -8.30 -13.68  -7.50   7.50 -30.00  [grid]
   o=39 v= 0.965508:  33.55  14.95   1.59  16.34  -8.64 -40.54  [rand]
   o=40 v= 0.965537:  31.07  10.16  -4.27  23.31  -3.26 -40.47  [rand]
   o=41 v= 0.965674:  14.31  23.51 -20.25 -41.17  18.22 -29.97  [rand]
   o=42 v= 0.965688: -35.10  14.95   1.59 -16.34   8.64  40.54  [rand]
   o=43 v= 0.965806: -37.42 -18.86 -29.27  -5.26  41.39  40.03  [rand]
   o=44 v= 0.965879: -34.60 -31.14   5.94  31.95  -9.87  34.85  [rand]
   o=45 v= 0.965941: -21.03  25.65  27.47 -37.90   5.03   3.08  [rand]
   o=46 v= 0.965956:  -7.44  -8.30 -13.68   7.50  -7.50   7.50  [grid]
   o=47 v= 0.965970: -33.26  25.36 -38.90  -9.69  21.75  40.77  [rand]
   o=48 v= 0.966098: -27.44  -8.30  -0.35  30.00   7.50  30.00  [grid]
   o=49 v= 0.966137:  -7.44   5.03 -13.68  -7.50   7.50  30.00  [grid]
   o=50 v= 0.966147: -27.44   5.03  -0.35   7.50   7.50  30.00  [grid]
   o=51 v= 0.966221: -35.10 -18.22   1.59  16.34   8.64  40.54  [rand]
   o=52 v= 0.966233: -35.10 -18.22 -15.61  16.34  -8.64  40.54  [rand]
   o=53 v= 0.966282: -33.26  25.36  24.88   9.69  21.75  40.77  [rand]
   o=54 v= 0.966339:  31.07 -13.43  -4.27 -23.31  -3.26 -40.47  [rand]
   o=55 v= 0.966358: -27.44  25.03  19.65  30.00   7.50  30.00  [grid]
   o=56 v= 0.966401: -33.26  13.06   4.79  11.16   9.40  34.39  [rand]
   o=57 v= 0.966431: -33.20 -15.98 -12.61   8.22   9.03  36.72  [rand]
   o=58 v= 0.966483:  33.55 -18.22   1.59 -16.34   8.64 -40.54  [rand]
   o=59 v= 0.966865: -35.63 -37.31 -21.26  40.22 -24.26  41.52  [rand]
   o=60 v= 0.966894:   5.89  -8.30  -0.35  -7.50  -7.50 -30.00  [grid]
   o=61 v= 0.967096: -32.61  10.16  -4.27  23.31   3.26  40.47  [rand]
   o=62 v= 0.967139: -35.64  28.92 -22.78  11.68  29.04  39.38  [rand]
   o=63 v= 0.967373: -32.98  27.41 -43.15  40.41 -19.09  40.75  [rand]
   o=64 v= 0.967382: -21.75  26.75 -39.26   3.65  28.33 -14.78  [rand]
   o=65 v= 0.967434: -37.42  15.59 -29.27  -5.26  41.39  40.03  [rand]
   o=66 v= 0.967481: -35.64  28.92   8.76 -11.68  29.04  39.38  [rand]
   o=67 v= 0.967494: -37.42  15.59  15.24  -5.26  41.39  40.03  [rand]
   o=68 v= 0.967595: -34.60  27.87   5.94  31.95   9.87  34.85  [rand]
   o=69 v= 0.967653:  -7.44  -8.30  -0.35  30.00  30.00  -7.50  [grid]
   o=70 v= 0.967654: -35.64 -32.19 -22.78 -11.68  29.04  39.38  [rand]
   o=71 v= 0.967700:   5.89  -8.30  -0.35 -30.00  -7.50 -30.00  [grid]
   o=72 v= 0.967946:   5.89  -8.30 -13.68  -7.50  -7.50  -7.50  [grid]
   o=73 v= 0.967982: -32.61  10.16  -4.27  23.31  -3.26  40.47  [rand]
   o=74 v= 0.968093: -27.44   5.03  19.65   7.50  30.00  30.00  [grid]
   o=75 v= 0.968170:  -7.44 -28.30  -0.35  30.00  -7.50  30.00  [grid]
   o=76 v= 0.968279:  31.72  25.36  24.88   9.69  21.75 -40.77  [rand]
   o=77 v= 0.968408: -27.08  24.32  10.78  15.82  17.65  37.25  [rand]
   o=78 v= 0.968415: -20.56 -18.38  10.66  -2.96   2.59 -18.65  [rand]
   o=79 v= 0.968504:  31.07  10.16  -4.27  23.31   3.26 -40.47  [rand]
   o=80 v= 0.968597:  26.75 -33.80   4.03 -26.08   6.57 -36.57  [rand]
   o=81 v= 0.968633:  34.08  34.04 -21.26 -40.22 -24.26 -41.52  [rand]
   o=82 v= 0.968734:  13.37  26.49  16.44  27.82   2.77 -20.28  [rand]
   o=83 v= 0.968820: -27.44  25.03  -0.35  30.00   7.50 -30.00  [grid]
   o=84 v= 0.968949: -32.16  28.32 -11.42  42.54  -9.20  25.31  [rand]
   o=85 v= 0.969091:  33.06 -31.14   5.94 -31.95  -9.87 -34.85  [rand]
   o=86 v= 0.969102: -33.26 -28.62 -38.90   9.69  21.75  40.77  [rand]
   o=87 v= 0.969160: -27.44  -8.30  -0.35  30.00  30.00  30.00  [grid]
 + - A little optimization:*[#11732=0.951805] *[#11733=0.951798] *[#11736=0.951724] *[#11738=0.951625] .*[#11751=0.948634] *[#11755=0.947099] *[#11758=0.946666] *[#11760=0.94661] *[#11766=0.946482] *[#11769=0.946436] *[#11771=0.946311] *[#11772=0.946269] *[#11773=0.946208] *[#11775=0.94615] *[#11776=0.946141] *[#11778=0.94613] ......*[#12001=0.945886] *[#12009=0.945452] *[#12012=0.945239] *[#12018=0.945053] .........*[#12453=0.944684] *[#12454=0.944257] *[#12455=0.944022] *[#12458=0.943595] *[#12459=0.943189] *[#12462=0.943169] *[#12463=0.943139] *[#12464=0.942857] *[#12465=0.942793] *[#12468=0.942724] *[#12473=0.94267] *[#12474=0.942637] ....................*[#13429=0.938437] *[#13430=0.936836] *[#13432=0.936035] *[#13433=0.935439] *[#13435=0.934792] *[#13438=0.934469] *[#13439=0.934199] *[#13442=0.934144] *[#13444=0.934069] *[#13445=0.933926] *[#13446=0.93358] *[#13449=0.933363] *[#13450=0.933019] *[#13451=0.933] *[#13452=0.932999] ....................................*[#15175=0.932734] *[#15178=0.931683] *[#15180=0.931647] *[#15182=0.929521] *[#15183=0.928903] *[#15186=0.928051] *[#15189=0.927639] *[#15190=0.927067] *[#15195=0.926901] *[#15197=0.926843] *[#15198=0.926766] *[#15200=0.926745] *[#15202=0.926741] *[#15203=0.926731] *[#15206=0.926717] ................
 + - costs of the above after a little optimization:
   o= 0 v= 0.951625: -32.81 -13.33  -9.75  23.15   3.18  40.41  [rand]  [f=29]
   o= 1 v= 0.946130: -33.36 -16.61  -3.43  23.10  -3.70  40.17  [rand]  [f=43]
   o= 2 v= 0.949612: -33.58 -13.36  -0.62  23.28   2.92  40.24  [rand]  [f=36]
   o= 3 v= 0.954613:  -7.85   4.74 -13.00   7.32   7.29   7.65  [grid]  [f=39]
   o= 4 v= 0.952242: -32.24 -13.44 -10.02  23.11   1.71  41.05  [rand]  [f=33]
   o= 5 v= 0.952467: -32.88  24.04 -42.97  40.13  19.14  40.23  [rand]  [f=37]
   o= 6 v= 0.954984: -34.13 -22.17 -15.04  16.15   8.43  41.13  [rand]  [f=34]
   o= 7 v= 0.945053: -35.14  27.55 -41.30   7.96  12.80  44.49  [rand]  [f=53]
   o= 8 v= 0.955332: -20.93  -6.91   8.47  14.12  -6.93 -11.76  [rand]  [f=51]
   o= 9 v= 0.958772:  -6.84  -8.00  -0.39  -7.52  28.74  29.33  [grid]  [f=39]
   o=10 v= 0.955505: -19.57   3.50   6.66  15.69   3.73  -9.25  [rand]  [f=60]
   o=11 v= 0.953760: -35.81 -18.88   2.05  22.63  -8.46  39.25  [rand]  [f=48]
   o=12 v= 0.950519: -31.87  18.41 -32.17  30.91  19.46  32.28  [rand]  [f=40]
   o=13 v= 0.949532: -35.84  31.68  12.88  41.74 -27.70  44.73  [rand]  [f=45]
   o=14 v= 0.958713:  30.39 -13.21 -10.21 -22.93   7.78 -40.33  [rand]  [f=33]
   o=15 v= 0.955402: -39.72  11.79 -16.99  28.68  37.09  41.33  [rand]  [f=44]
   o=16 v= 0.942637:  -5.90  -9.66  -8.87   6.31  -3.96  27.55  [grid]  [f=83]
   o=17 v= 0.955067:  32.63 -17.03 -16.12 -17.98   5.20 -44.85  [rand]  [f=41]
   o=18 v= 0.958828:  30.30  25.85 -42.39 -36.49  18.90 -42.54  [rand]  [f=43]
   o=19 v= 0.956741:  34.15  15.49   1.93  21.48   5.30 -43.78  [rand]  [f=38]
   o=20 v= 0.953316:  32.39 -18.14  -1.48 -27.00  -2.81 -44.00  [rand]  [f=54]
   o=21 v= 0.951025: -37.38  21.48   2.49  21.23  13.87  41.23  [rand]  [f=51]
   o=22 v= 0.950236: -35.82  17.91   4.08  28.21  -6.28  44.44  [rand]  [f=61]
   o=23 v= 0.959353:  35.14  30.89   7.24 -41.87 -25.59 -44.87  [rand]  [f=35]
   o=24 v= 0.953397: -31.29  24.69 -35.02  30.37   7.62  29.85  [grid]  [f=37]
   o=25 v= 0.950339:   6.63   4.69  -8.45  -5.80   9.37  -9.84  [grid]  [f=40]
   o=26 v= 0.958651: -17.98  -5.96   6.47  16.03   2.94  -5.96  [rand]  [f=44]
   o=27 v= 0.959626: -18.90  25.18  26.56 -40.21   8.08  -4.09  [rand]  [f=47]
   o=28 v= 0.950481: -38.58  32.76 -13.01  41.84 -16.40  44.17  [rand]  [f=47]
   o=29 v= 0.959670: -36.17  27.74 -20.34  32.21  -5.81  35.68  [rand]  [f=34]
   o=30 v= 0.949037: -39.78  11.85 -15.77  19.46  12.20  44.99  [rand]  [f=59]
   o=31 v= 0.949128: -39.43  29.27  -0.45  34.49  -4.97  44.85  [rand]  [f=48]
   o=32 v= 0.955187: -35.09 -29.46   7.73  22.41  11.38  44.91  [rand]  [f=52]
   o=33 v= 0.954422:  30.57 -12.83 -14.74 -23.73   4.52 -44.86  [rand]  [f=57]
   o=34 v= 0.955491: -36.71  14.42   1.18 -16.49  -7.71  44.92  [rand]  [f=42]
   o=35 v= 0.961998:  -4.73  -6.49   1.60   4.38  23.83  23.33  [rand]  [f=44]
   o=36 v= 0.932999:   0.94   1.63 -11.22  -5.06   2.68   3.81  [grid]  [f=83]
   o=37 v= 0.955324:   5.13 -27.72  -0.24 -36.08  -9.72 -34.71  [grid]  [f=53]
   o=38 v= 0.961801:   5.84  -7.98 -13.69  -7.70   7.36 -25.68  [grid]  [f=36]
   o=39 v= 0.959080:  34.37  14.32  -0.68  20.84  -7.36 -43.91  [rand]  [f=53]
   o=40 v= 0.956975:  34.31  10.44  -2.47  23.07  -5.18 -44.33  [rand]  [f=51]
   o=41 v= 0.959018:  16.58  24.42 -23.90 -42.37  17.84 -32.57  [rand]  [f=45]
   o=42 v= 0.954344: -35.40  14.72   3.51 -11.38   4.64  44.06  [rand]  [f=51]
   o=43 v= 0.963211: -37.20 -18.76 -29.42  -5.56  40.70  44.17  [rand]  [f=34]
   o=44 v= 0.952595: -39.53 -37.06   4.00  34.76  -7.13  39.19  [rand]  [f=45]
   o=45 v= 0.962659: -20.71  26.16  23.66 -32.85   5.37   1.64  [rand]  [f=42]
   o=46 v= 0.944197:  -7.33  -2.36 -15.21   9.47  -8.13   2.91  [grid]  [f=64]
   o=47 v= 0.953427: -33.90  26.13 -38.32  -9.21  20.44  44.84  [rand]  [f=42]
   o=48 v= 0.955803: -31.77  -9.15  -3.95  30.48   9.25  29.57  [grid]  [f=33]
   o=49 v= 0.955145:  -6.86   4.56  -7.43  -4.95   9.44  27.51  [grid]  [f=46]
   o=50 v= 0.956304: -31.25   5.35   0.28  11.02  13.84  30.54  [grid]  [f=49]
   o=51 v= 0.945794: -35.28 -14.00  -1.30  19.50   0.55  42.50  [rand]  [f=56]
   o=52 v= 0.954045: -34.69 -18.47 -10.21  17.09  -8.16  40.39  [rand]  [f=37]
   o=53 v= 0.953897: -33.94  26.90  25.09   2.54  16.36  44.71  [rand]  [f=51]
   o=54 v= 0.957138:  34.97 -15.35  -0.78 -19.74  -0.95 -44.00  [rand]  [f=37]
   o=55 v= 0.959834: -29.12  23.76  19.87  31.09  14.86  31.53  [grid]  [f=46]
   o=56 v= 0.953512: -34.68   8.94   7.39   8.85   5.12  43.23  [rand]  [f=58]
   o=57 v= 0.951716: -35.55 -13.89 -17.29  11.22   8.02  44.98  [rand]  [f=42]
   o=58 v= 0.956302:  33.44 -13.86   4.11 -21.26   4.31 -44.68  [rand]  [f=43]
   o=59 v= 0.948061: -37.62 -34.69  -9.99  44.93 -23.15  44.68  [rand]  [f=62]
   o=60 v= 0.958571:   4.78  -6.66  -3.39 -15.10  -9.20 -31.41  [grid]  [f=51]
   o=61 v= 0.946838: -35.43  -3.64  -7.99  17.33   2.52  42.32  [rand]  [f=53]
   o=62 v= 0.950265: -38.92  24.35 -18.25  11.88  24.41  44.15  [rand]  [f=45]
   o=63 v= 0.958627: -35.43  26.79 -45.49  40.09 -20.02  44.96  [rand]  [f=42]
   o=64 v= 0.963449: -21.86  27.11 -39.28   9.90  29.86 -15.19  [rand]  [f=33]
   o=65 v= 0.954240: -37.03  23.16 -30.20  -9.25  39.37  43.24  [rand]  [f=51]
   o=66 v= 0.956448: -40.28  28.74  13.32  -6.80  26.22  40.71  [rand]  [f=42]
   o=67 v= 0.959013: -33.36  20.19   8.86  -7.09  44.97  44.09  [rand]  [f=51]
   o=68 v= 0.960202: -30.63  25.16   6.96  31.54  10.48  35.76  [rand]  [f=42]
   o=69 v= 0.948795:  -8.40  -5.07  -0.57  30.28  31.84  -9.39  [grid]  [f=83]
   o=70 v= 0.958673: -35.51 -31.31 -23.53 -11.46  28.12  43.84  [rand]  [f=46]
   o=71 v= 0.959314:   5.67  -8.85  -3.10 -26.88  -7.84 -23.70  [grid]  [f=44]
  *o=72 v= 0.926717:   0.37  -5.09 -12.69  -1.28  -5.89   1.12  [grid]  [f=59]
   o=73 v= 0.955543: -37.41   4.52  -2.35  25.06  -2.69  40.86  [rand]  [f=39]
   o=74 v= 0.953276: -30.87   3.16  13.99   8.62  29.49  39.60  [grid]  [f=48]
   o=75 v= 0.958502:  -6.72 -27.37  -1.45  31.79  -8.96  36.51  [grid]  [f=56]
   o=76 v= 0.952242:  30.87  22.47  15.55  18.92  16.60 -44.96  [rand]  [f=51]
   o=77 v= 0.949308: -40.26  23.54  17.25  13.97  17.78  43.50  [rand]  [f=51]
   o=78 v= 0.956522: -18.41 -12.16  11.29  -7.50   2.05 -16.81  [rand]  [f=51]
   o=79 v= 0.952256:  34.17  10.77   1.55  27.58   0.03 -43.81  [rand]  [f=67]
   o=80 v= 0.960247:  28.40 -32.98  -1.72 -30.40   4.16 -44.17  [rand]  [f=49]
   o=81 v= 0.963104:  34.60  38.34 -21.27 -39.20 -23.53 -44.42  [rand]  [f=39]
   o=82 v= 0.964161:  13.32  25.69  19.15  29.43   3.94 -20.50  [rand]  [f=36]
   o=83 v= 0.964614: -31.63  24.93  -0.80  30.19   7.18 -30.84  [grid]  [f=33]
   o=84 v= 0.959361: -28.36  29.38 -12.48  43.10 -10.40  23.84  [rand]  [f=54]
   o=85 v= 0.948934:  33.09 -32.94   1.40 -25.77  -8.15 -44.41  [rand]  [f=68]
   o=86 v= 0.958003: -38.14 -26.23 -36.03   3.95  25.53  44.71  [rand]  [f=55]
   o=87 v= 0.962549: -27.01  -9.02  -2.78  28.21  26.90  23.86  [grid]  [f=54]
 + - saving #72 for use with twobest
 + - saving #36 for use with twobest
 + - saving #16 for use with twobest
 + - saving #46 for use with twobest
 + - saving # 7 for use with twobest
 + - saving #51 for use with twobest
 + - skip # 1 for twobest: too close to set #51
 + - saving #61 for use with twobest
 + - saving #59 for use with twobest
 + - saving #69 for use with twobest
 + - saving #85 for use with twobest
 + - saving #30 for use with twobest
 + - saving #31 for use with twobest
 + - saving #77 for use with twobest
 + - saving #13 for use with twobest
 + - skip # 2 for twobest: too close to set #51
 + - saving #22 for use with twobest
 + - saving #62 for use with twobest
 + - saving #25 for use with twobest
 + - saving #28 for use with twobest
 + - saving #12 for use with twobest
 + - saving #21 for use with twobest
 + - saving # 0 for use with twobest
 + - saving #57 for use with twobest
 + - skip # 4 for twobest: too close to set # 0
 + - saving #76 for use with twobest
 + - saving #79 for use with twobest
 + - saving # 5 for use with twobest
 + - saving #44 for use with twobest
 + - saving #74 for use with twobest
 + - saving #20 for use with twobest
 + - saving #24 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=204.754 usiz=428.547
 + - retaining old weight image
 + - using 79730 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 68994 total points stored in 137 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.934652 [o=72 t=0]
 + -- Parameters = 0.3139 -4.4753 -13.7128 -1.2373 -6.0177 1.7768 1.0141 0.9775 0.9820 -0.0031 0.0028 -0.0011
 + - param set #2 has cost=0.933447 [o=36 t=1]
 + -- Parameters = 1.1593 1.7979 -11.3817 -3.1327 3.5388 2.3021 1.0240 0.9836 0.9709 -0.0064 0.0002 0.0139
 + - param set #3 has cost=0.951135 [o=16 t=2]
 + -- Parameters = -5.4609 -10.2434 -8.7026 6.5092 -4.3798 28.1332 1.0344 0.9914 0.9977 -0.0024 -0.0009 -0.0023
 + - param set #4 has cost=0.953064 [o=46 t=3]
 + -- Parameters = -7.0904 -2.3503 -15.1986 9.1418 -8.0677 2.8821 0.9980 1.0061 0.9967 -0.0001 -0.0000 0.0004
 + - param set #5 has cost=0.951479 [o=7 t=4]
 + -- Parameters = -35.4671 27.1966 -41.3293 8.3071 12.8423 44.4856 1.0028 0.9952 0.9986 0.0002 0.0001 -0.0010
 + - param set #6 has cost=0.952391 [o=51 t=5]
 + -- Parameters = -35.2118 -14.3067 -1.5424 19.7221 0.3318 42.3264 0.9988 1.0381 0.9993 -0.0004 -0.0004 -0.0002
 + - param set #7 has cost=0.951734 [o=61 t=6]
 + -- Parameters = -35.4414 -3.6207 -8.0891 17.1638 2.4415 42.2356 0.9991 1.0045 1.0081 -0.0016 -0.0013 -0.0013
 + - param set #8 has cost=0.952396 [o=59 t=7]
 + -- Parameters = -37.0436 -34.6336 -9.7572 44.9476 -23.1718 44.6684 1.0033 0.9991 1.0395 -0.0004 -0.0000 -0.0014
 + - param set #9 has cost=0.953513 [o=69 t=8]
 + -- Parameters = -8.1934 -5.3984 -0.6040 30.7109 31.1671 -9.6934 1.0350 1.0029 1.0043 0.0007 -0.0006 0.0010
 + - param set #10 has cost=0.950856 [o=85 t=9]
 + -- Parameters = 33.0166 -32.5449 1.4041 -25.1407 -8.1813 -44.2099 1.0020 1.0009 1.0050 -0.0000 0.0111 0.0005
 + - param set #11 has cost=0.957119 [o=30 t=10]
 + -- Parameters = -39.8341 11.9621 -15.7847 19.4394 12.2089 44.9446 0.9999 1.0001 1.0394 -0.0003 0.0010 -0.0006
 + - param set #12 has cost=0.953126 [o=31 t=11]
 + -- Parameters = -39.4750 28.8958 -0.5938 34.8298 -5.1020 44.6242 1.0023 0.9926 1.0130 0.0006 -0.0008 0.0033
 + - param set #13 has cost=0.954910 [o=77 t=12]
 + -- Parameters = -39.6944 23.4439 17.3340 13.8169 17.9015 43.3172 1.0005 0.9983 1.0018 -0.0007 0.0006 0.0131
 + - param set #14 has cost=0.955041 [o=13 t=13]
 + -- Parameters = -35.8351 31.7047 12.8523 41.6550 -27.7654 44.9149 1.0000 1.0001 1.0000 0.0003 -0.0004 0.0124
 + - param set #15 has cost=0.954974 [o=22 t=14]
 + -- Parameters = -35.8033 18.0145 4.1960 28.2042 -6.3033 44.4900 1.0010 0.9993 1.0001 -0.0001 -0.0001 0.0001
 + - param set #16 has cost=0.954162 [o=62 t=15]
 + -- Parameters = -39.5626 24.7838 -18.0172 11.1071 24.4377 44.7700 1.0017 0.9998 1.0534 -0.0005 0.0012 0.0008
 + - param set #17 has cost=0.960363 [o=25 t=16]
 + -- Parameters = 7.1448 4.9880 -8.7501 -5.4452 9.4922 -9.9072 1.0085 0.9977 1.0072 -0.0020 0.0010 0.0030
*[#17372=0.924039] *[#17373=0.919314] *[#17374=0.912135] *[#17379=0.91096] *[#17380=0.910366] *[#17383=0.909424] *[#17384=0.909285] *[#17385=0.906155] *[#17388=0.903995] *[#17389=0.901515] *[#17391=0.901294] *[#17392=0.899443] *[#17393=0.89833] *[#17394=0.89791] *[#17397=0.897683] *[#17400=0.897562] *[#17403=0.894516] *[#17404=0.893569] *[#17408=0.893356] *[#17411=0.892994] *[#17418=0.890598] *[#17419=0.889053] *[#17420=0.888895] *[#17421=0.888697] *[#17424=0.888457] *[#17425=0.888204] *[#17427=0.886776] *[#17430=0.88588] *[#17431=0.885848] *[#17433=0.885604] *[#17436=0.884943] 
 + - param set #18 has cost=0.884943 [o=-1 t=-1]
 + -- Parameters = -0.1936 0.2872 -3.6867 -1.5385 2.4920 0.2685 0.9685 0.9769 0.9642 -0.0043 0.0039 0.0010
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0962 
 + --- dist(#3,#1) = 0.125 
 + --- dist(#4,#1) = 0.494 
 + --- dist(#5,#1) = 0.31 
 + --- dist(#6,#1) = 0.491 
 + --- dist(#7,#1) = 0.466 
 + --- dist(#8,#1) = 0.467 
 + --- dist(#9,#1) = 0.517 
 + --- dist(#10,#1) = 0.144 
 + --- dist(#11,#1) = 0.493 
 + --- dist(#12,#1) = 0.358 
 + --- dist(#13,#1) = 0.494 
 + --- dist(#14,#1) = 0.494 
 + --- dist(#15,#1) = 0.491 
 + --- dist(#16,#1) = 0.496 
 + --- dist(#17,#1) = 0.496 
 + --- dist(#18,#1) = 0.113 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=204.754 usiz=428.547
 + - retaining old weight image
 + - using 79730 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 69055 total points stored in 139 'TOHD(13.984)' bloks (0 duplicates)
*[#17440=0.884916] *[#17460=0.884607] *[#17461=0.884492] *[#17464=0.884281] *[#17469=0.883289] *[#17476=0.883057] *[#17481=0.882964] *[#17482=0.882842] *[#17483=0.882799] *[#17486=0.882788] *[#17490=0.882767] *[#17491=0.882734] *[#17499=0.882721] *[#17501=0.882661] *[#17503=0.88266] *[#17504=0.882657] *[#17505=0.882649] *[#17506=0.882642] *[#17509=0.882637] *[#17512=0.882625] *[#17513=0.882611] *[#17514=0.882608] *[#17516=0.88255] *[#17517=0.882535] *[#17518=0.882513] *[#17519=0.882498] *[#17520=0.882492] *[#17521=0.882492] *[#17523=0.882469] *[#17524=0.882466] *[#17525=0.882432] *[#17526=0.882388] *[#17527=0.882338] *[#17528=0.882281] *[#17533=0.882232] *[#17535=0.882205] *[#17537=0.882186] *[#17538=0.88217] *[#17540=0.882158] *[#17541=0.882137] *[#17542=0.88213] *[#17543=0.882129] *[#17545=0.882108] *[#17546=0.882088] *[#17547=0.882074] 
 + - param set #1 has cost=0.882074 [o=-1 t=-1]
 + -- Parameters = -0.4000 0.0960 -3.0211 -1.7424 2.7875 0.0692 0.9700 0.9737 0.9455 -0.0062 0.0027 -0.0004
 + - param set #2 has cost=0.931252 [o=36 t=1]
 + -- Parameters = 1.0450 -0.8105 -11.4923 -1.3007 3.0781 1.3099 1.0154 1.0298 0.9252 -0.0129 0.0011 0.0369
 + - param set #3 has cost=0.946505 [o=72 t=0]
 + -- Parameters = 0.0494 -4.0373 -13.9127 -1.7925 -6.1340 1.6907 1.0139 0.9725 0.9705 -0.0018 0.0039 -0.0045
 + - param set #4 has cost=0.959738 [o=85 t=9]
 + -- Parameters = 33.0293 -32.5415 1.4240 -25.1731 -8.1917 -44.2670 1.0039 1.0004 1.0044 -0.0010 0.0113 0.0008
 + - param set #5 has cost=0.958884 [o=16 t=2]
 + -- Parameters = -5.3876 -10.1561 -8.2906 6.5322 -4.4430 28.3590 1.0330 0.9878 0.9966 -0.0024 0.0070 -0.0014
 + - param set #6 has cost=0.955310 [o=7 t=4]
 + -- Parameters = -35.4695 27.1772 -41.2982 8.3012 12.8400 44.4841 1.0028 0.9952 0.9986 0.0000 0.0010 -0.0010
 + - param set #7 has cost=0.954875 [o=61 t=6]
 + -- Parameters = -35.4049 -3.6213 -8.0933 17.1949 2.4497 42.2365 0.9991 1.0045 1.0082 -0.0016 -0.0013 -0.0013
 + - param set #8 has cost=0.955441 [o=51 t=5]
 + -- Parameters = -35.2036 -14.2914 -1.5658 19.7231 0.3209 42.3267 1.0010 1.0369 0.9993 -0.0003 -0.0003 -0.0001
 + - param set #9 has cost=0.955605 [o=59 t=7]
 + -- Parameters = -35.9074 -34.6816 -8.9034 44.6564 -22.8042 44.6242 1.0206 1.0106 1.0519 -0.0019 0.0203 -0.0013
 + - param set #10 has cost=0.954807 [o=46 t=3]
 + -- Parameters = -6.6000 -2.2141 -14.1948 10.2741 -5.0995 3.1780 1.0007 1.0264 0.9732 0.0070 -0.0045 0.0070
 + - param set #11 has cost=0.959454 [o=31 t=11]
 + -- Parameters = -39.5962 28.8085 -0.6313 38.6091 -5.3284 44.7249 1.0025 0.9927 1.0113 0.0012 -0.0012 0.0029
 + - param set #12 has cost=0.962072 [o=69 t=8]
 + -- Parameters = -8.1390 -5.4649 -0.6510 30.6605 31.1323 -9.7065 1.0348 1.0038 1.0047 0.0004 -0.0008 0.0008
 + - param set #13 has cost=0.959938 [o=62 t=15]
 + -- Parameters = -39.5708 24.8056 -17.9914 11.0893 24.4110 44.7584 1.0015 0.9998 1.0533 -0.0005 0.0012 0.0008
 + - param set #14 has cost=0.956587 [o=77 t=12]
 + -- Parameters = -39.7490 23.4594 17.2793 13.7767 17.9601 43.2255 0.9993 0.9969 1.0009 -0.0013 0.0009 0.0133
 + - param set #15 has cost=0.958149 [o=22 t=14]
 + -- Parameters = -35.7144 18.0619 4.3239 28.0397 -6.3014 44.6389 0.9991 0.9985 1.0007 0.0004 -0.0010 0.0003
 + - param set #16 has cost=0.958317 [o=13 t=13]
 + -- Parameters = -35.8275 31.7216 13.1058 41.6120 -27.7555 44.9103 1.0004 0.9971 0.9974 -0.0001 0.0007 0.0122
 + - param set #17 has cost=0.961104 [o=30 t=10]
 + -- Parameters = -39.8563 11.8665 -15.7251 19.2772 12.3583 44.9827 0.9987 1.0035 1.0665 -0.0004 0.0013 -0.0011
 + - param set #18 has cost=0.966024 [o=25 t=16]
 + -- Parameters = 7.9918 5.2162 -8.7666 -5.3866 9.7636 -10.2156 1.0387 0.9927 1.0059 -0.0007 0.0003 0.0053
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.168 
 + --- dist(#3,#1) = 0.136 
 + --- dist(#4,#1) = 0.14 
 + --- dist(#5,#1) = 0.469 
 + --- dist(#6,#1) = 0.493 
 + --- dist(#7,#1) = 0.47 
 + --- dist(#8,#1) = 0.516 
 + --- dist(#9,#1) = 0.492 
 + --- dist(#10,#1) = 0.495 
 + --- dist(#11,#1) = 0.498 
 + --- dist(#12,#1) = 0.314 
 + --- dist(#13,#1) = 0.496 
 + --- dist(#14,#1) = 0.493 
 + --- dist(#15,#1) = 0.497 
 + --- dist(#16,#1) = 0.499 
 + --- dist(#17,#1) = 0.36 
 + --- dist(#18,#1) = 0.114 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=204.754 usiz=428.547
 + - retaining old weight image
 + - using 79730 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 67627 total points stored in 134 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.883518 [o=-1 t=-1]
 + -- Parameters = -0.4368 0.0664 -2.9078 -1.7269 2.8181 0.0255 0.9737 0.9753 0.9424 -0.0062 0.0090 -0.0008
 + - param set #2 has cost=0.931462 [o=36 t=1]
 + -- Parameters = 0.3036 -1.5352 -12.5824 -1.0784 2.5670 0.9464 1.0220 1.0358 0.9261 -0.0024 0.0035 0.0564
 + - param set #3 has cost=0.949299 [o=72 t=0]
 + -- Parameters = 0.4929 -4.4355 -13.8545 -2.1381 -6.0719 1.5055 1.0320 0.9696 0.9707 -0.0014 0.0060 -0.0064
 + - param set #4 has cost=0.957926 [o=46 t=3]
 + -- Parameters = -6.4354 -2.2818 -14.2027 10.4725 -4.9165 3.2155 1.0005 1.0327 0.9799 0.0065 -0.0065 0.0159
 + - param set #5 has cost=0.960199 [o=61 t=6]
 + -- Parameters = -35.4091 -3.5267 -8.2311 17.1654 2.4887 44.4023 1.0004 1.0033 1.0080 -0.0015 -0.0010 -0.0011
 + - param set #6 has cost=0.960380 [o=7 t=4]
 + -- Parameters = -35.4588 27.1709 -41.2867 8.3061 12.8385 44.4596 1.0028 0.9951 0.9985 -0.0000 0.0067 -0.0009
 + - param set #7 has cost=0.958436 [o=51 t=5]
 + -- Parameters = -35.2015 -14.2981 -1.5755 19.7430 0.3184 42.3293 1.0012 1.0367 0.9993 -0.0004 -0.0003 -0.0001
 + - param set #8 has cost=0.955800 [o=59 t=7]
 + -- Parameters = -34.5847 -34.4770 -9.0921 43.3561 -23.2076 44.5010 1.0355 0.9910 1.0699 -0.0180 0.0260 0.0113
 + - param set #9 has cost=0.960495 [o=77 t=12]
 + -- Parameters = -39.7555 23.4581 17.2658 13.7780 17.9585 43.2086 0.9992 0.9969 1.0009 -0.0013 0.0010 0.0134
 + - param set #10 has cost=0.960495 [o=22 t=14]
 + -- Parameters = -35.7178 18.0604 4.6672 27.7586 -5.8115 44.9844 0.9989 0.9980 1.0017 0.0009 -0.0008 0.0001
 + - param set #11 has cost=0.964148 [o=13 t=13]
 + -- Parameters = -35.8281 31.7378 13.1005 41.6137 -27.7582 44.9303 1.0005 0.9972 0.9974 -0.0001 0.0063 0.0122
 + - param set #12 has cost=0.962239 [o=16 t=2]
 + -- Parameters = -5.5061 -10.1311 -8.2254 6.4456 -4.4030 28.3974 1.0332 0.9861 0.9970 -0.0027 0.0079 -0.0021
 + - param set #13 has cost=0.961809 [o=31 t=11]
 + -- Parameters = -39.4940 28.8749 -0.6518 38.5518 -5.5925 44.9843 1.0020 0.9782 1.0098 0.0013 -0.0005 0.0032
 + - param set #14 has cost=0.958599 [o=85 t=9]
 + -- Parameters = 33.3393 -32.1126 1.0520 -25.0317 -8.7150 -44.9926 1.0119 0.9792 1.0094 -0.0003 0.0115 0.0019
 + - param set #15 has cost=0.963001 [o=62 t=15]
 + -- Parameters = -39.5789 24.7840 -17.9930 11.1065 24.4185 44.7715 1.0016 0.9999 1.0709 -0.0005 0.0013 0.0008
 + - param set #16 has cost=0.963520 [o=30 t=10]
 + -- Parameters = -39.8812 11.6894 -13.6748 19.3559 12.3233 44.9775 0.9977 1.0040 1.0663 -0.0006 0.0014 -0.0010
 + - param set #17 has cost=0.965485 [o=69 t=8]
 + -- Parameters = -8.1031 -5.3968 -0.7078 30.6105 31.0304 -9.7606 1.0342 1.0028 0.9993 0.0000 0.0001 -0.0003
 + - param set #18 has cost=0.968730 [o=25 t=16]
 + -- Parameters = 8.3897 5.2649 -9.0050 -5.1636 9.7906 -10.1957 1.0576 0.9917 1.0123 0.0018 0.0018 0.0126
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.258 
 + --- dist(#3,#1) = 0.137 
 + --- dist(#4,#1) = 0.501 
 + --- dist(#5,#1) = 0.141 
 + --- dist(#6,#1) = 0.47 
 + --- dist(#7,#1) = 0.5 
 + --- dist(#8,#1) = 0.493 
 + --- dist(#9,#1) = 0.494 
 + --- dist(#10,#1) = 0.491 
 + --- dist(#11,#1) = 0.5 
 + --- dist(#12,#1) = 0.5 
 + --- dist(#13,#1) = 0.315 
 + --- dist(#14,#1) = 0.497 
 + --- dist(#15,#1) = 0.499 
 + --- dist(#16,#1) = 0.499 
 + --- dist(#17,#1) = 0.359 
 + --- dist(#18,#1) = 0.121 
 + - Total coarse refinement net CPU time = 0.0 s; 4751 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=204.754 usiz=428.547
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 67866 total points stored in 135 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.886475 * [o=-1 t=-1]
 + -- Parameters = -0.4368 0.0664 -2.9078 -1.7269 2.8181 0.0255 0.9737 0.9753 0.9424 -0.0062 0.0090 -0.0008
 + - cost(#2)=0.933581   [o=36 t=1]
 + -- Parameters = 0.3036 -1.5352 -12.5824 -1.0784 2.5670 0.9464 1.0220 1.0358 0.9261 -0.0024 0.0035 0.0564
 + - cost(#3)=0.951674   [o=72 t=0]
 + -- Parameters = 0.4929 -4.4355 -13.8545 -2.1381 -6.0719 1.5055 1.0320 0.9696 0.9707 -0.0014 0.0060 -0.0064
 + - cost(#4)=0.956860   [o=59 t=7]
 + -- Parameters = -34.5847 -34.4770 -9.0921 43.3561 -23.2076 44.5010 1.0355 0.9910 1.0699 -0.0180 0.0260 0.0113
 + - cost(#5)=0.959392   [o=46 t=3]
 + -- Parameters = -6.4354 -2.2818 -14.2027 10.4725 -4.9165 3.2155 1.0005 1.0327 0.9799 0.0065 -0.0065 0.0159
 + - cost(#6)=0.959760   [o=51 t=5]
 + -- Parameters = -35.2015 -14.2981 -1.5755 19.7430 0.3184 42.3293 1.0012 1.0367 0.9993 -0.0004 -0.0003 -0.0001
 + - cost(#7)=0.959868   [o=85 t=9]
 + -- Parameters = 33.3393 -32.1126 1.0520 -25.0317 -8.7150 -44.9926 1.0119 0.9792 1.0094 -0.0003 0.0115 0.0019
 + - cost(#8)=0.961247   [o=61 t=6]
 + -- Parameters = -35.4091 -3.5267 -8.2311 17.1654 2.4887 44.4023 1.0004 1.0033 1.0080 -0.0015 -0.0010 -0.0011
 + - cost(#9)=0.960562   [o=7 t=4]
 + -- Parameters = -35.4588 27.1709 -41.2867 8.3061 12.8385 44.4596 1.0028 0.9951 0.9985 -0.0000 0.0067 -0.0009
 + - cost(#10)=0.961467   [o=77 t=12]
 + -- Parameters = -39.7555 23.4581 17.2658 13.7780 17.9585 43.2086 0.9992 0.9969 1.0009 -0.0013 0.0010 0.0134
 + - cost(#11)=0.961183   [o=22 t=14]
 + -- Parameters = -35.7178 18.0604 4.6672 27.7586 -5.8115 44.9844 0.9989 0.9980 1.0017 0.0009 -0.0008 0.0001
 + - cost(#12)=0.962299   [o=31 t=11]
 + -- Parameters = -39.4940 28.8749 -0.6518 38.5518 -5.5925 44.9843 1.0020 0.9782 1.0098 0.0013 -0.0005 0.0032
 + - cost(#13)=0.963924   [o=16 t=2]
 + -- Parameters = -5.5061 -10.1311 -8.2254 6.4456 -4.4030 28.3974 1.0332 0.9861 0.9970 -0.0027 0.0079 -0.0021
 + - cost(#14)=0.963559   [o=62 t=15]
 + -- Parameters = -39.5789 24.7840 -17.9930 11.1065 24.4185 44.7715 1.0016 0.9999 1.0709 -0.0005 0.0013 0.0008
 + - cost(#15)=0.964478   [o=30 t=10]
 + -- Parameters = -39.8812 11.6894 -13.6748 19.3559 12.3233 44.9775 0.9977 1.0040 1.0663 -0.0006 0.0014 -0.0010
 + - cost(#16)=0.964604   [o=13 t=13]
 + -- Parameters = -35.8281 31.7378 13.1005 41.6137 -27.7582 44.9303 1.0005 0.9972 0.9974 -0.0001 0.0063 0.0122
 + - cost(#17)=0.967865   [o=69 t=8]
 + -- Parameters = -8.1031 -5.3968 -0.7078 30.6105 31.0304 -9.7606 1.0342 1.0028 0.9993 0.0000 0.0001 -0.0003
 + - cost(#18)=0.970710   [o=25 t=16]
 + -- Parameters = 8.3897 5.2649 -9.0050 -5.1636 9.7906 -10.1957 1.0576 0.9917 1.0123 0.0018 0.0018 0.0126
 + - cost(#19)=0.979773   [o=-2 t=-2]
 + -- Parameters = -0.7733 -1.6346 -7.0124 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.886433 * [o=-1 t=-1]
 + -- Parameters = -0.4599 0.0551 -2.9056 -1.7503 2.8356 -0.0007 0.9741 0.9756 0.9418 -0.0062 0.0103 -0.0010
 + - cost(#2)=0.933371   [o=36 t=1]
 + -- Parameters = 0.2790 -1.5405 -12.5580 -1.1061 2.6727 0.9694 1.0227 1.0357 0.9267 -0.0026 0.0031 0.0579
 + - cost(#3)=0.951619   [o=72 t=0]
 + -- Parameters = 0.4624 -4.4419 -13.8884 -2.1024 -6.0941 1.5111 1.0325 0.9694 0.9699 -0.0012 0.0061 -0.0073
 + - cost(#4)=0.956044   [o=59 t=7]
 + -- Parameters = -34.6128 -34.5755 -9.2946 43.4481 -23.3089 44.4469 1.0349 0.9939 1.0915 -0.0179 0.0257 0.0112
 + - cost(#5)=0.959226   [o=46 t=3]
 + -- Parameters = -6.3745 -2.3059 -14.2427 10.4316 -4.8227 3.2375 1.0008 1.0332 0.9815 0.0068 -0.0072 0.0178
 + - cost(#6)=0.959740   [o=51 t=5]
 + -- Parameters = -35.1866 -14.3013 -1.5683 19.7343 0.3338 42.3250 1.0014 1.0367 0.9991 0.0004 -0.0003 -0.0001
 + - cost(#7)=0.959125   [o=85 t=9]
 + -- Parameters = 33.4874 -31.9660 0.8701 -24.7168 -8.6585 -44.9952 1.0357 0.9782 1.0086 -0.0008 0.0107 0.0032
 + - cost(#8)=0.958005   [o=61 t=6]
 + -- Parameters = -34.9408 -2.6994 -8.2873 16.9519 1.7431 44.6683 0.9893 0.9688 1.0639 -0.0213 -0.0028 0.0106
 + - cost(#9)=0.960482   [o=7 t=4]
 + -- Parameters = -35.3947 27.1266 -41.2677 8.4011 12.9358 44.3036 1.0024 0.9950 0.9985 -0.0002 0.0070 -0.0008
 + - cost(#10)=0.961268   [o=77 t=12]
 + -- Parameters = -39.7838 23.4807 17.2650 13.7525 17.9976 43.1656 0.9989 0.9965 1.0005 -0.0087 0.0012 0.0127
 + - cost(#11)=0.961100   [o=22 t=14]
 + -- Parameters = -35.7228 18.0661 4.6639 27.7692 -5.8027 44.9866 0.9990 0.9980 1.0040 0.0002 -0.0005 0.0002
 + - cost(#12)=0.962215   [o=31 t=11]
 + -- Parameters = -39.5030 28.8744 -0.6575 38.5575 -5.6034 44.9951 1.0021 0.9782 1.0097 -0.0061 -0.0005 0.0031
 + - cost(#13)=0.963688   [o=16 t=2]
 + -- Parameters = -5.3897 -10.1235 -8.2139 6.4367 -4.4240 28.4452 1.0359 0.9864 0.9999 -0.0026 0.0081 -0.0021
 + - cost(#14)=0.963559   [o=62 t=15]
 + -- Parameters = -39.5789 24.7840 -17.9930 11.1065 24.4185 44.7715 1.0016 0.9999 1.0709 -0.0005 0.0013 0.0008
 + - cost(#15)=0.963719   [o=30 t=10]
 + -- Parameters = -39.0415 14.2525 -13.4441 19.2658 12.3781 44.9855 0.9981 1.0056 1.0672 0.0001 0.0011 -0.0010
 + - cost(#16)=0.963735   [o=13 t=13]
 + -- Parameters = -35.9491 34.1688 15.7008 41.2859 -27.5656 44.9537 1.0038 0.9950 0.9968 -0.0015 0.0073 0.0125
 + - cost(#17)=0.967409   [o=69 t=8]
 + -- Parameters = -7.7237 -5.4402 -0.7808 30.3484 30.9066 -10.1653 1.0408 1.0091 1.0013 -0.0045 0.0007 0.0013
 + - cost(#18)=0.970120   [o=25 t=16]
 + -- Parameters = 8.4923 5.2013 -9.0077 -4.9153 10.2425 -10.3383 1.0567 0.9913 1.0173 0.0016 0.0028 0.0223
 + - cost(#19)=0.886919   [o=-2 t=-2]
 + -- Parameters = -0.2518 0.1965 -3.3580 -1.6411 2.7522 0.3276 0.9751 0.9736 0.9533 -0.0027 0.0050 -0.0052
 + - case #1 [o=-1 t=-1] is now the best
 + - Initial  cost = 0.886433
 + - Initial fine Parameters = -0.4599 0.0551 -2.9056 -1.7503 2.8356 -0.0007 0.9741 0.9756 0.9418 -0.0062 0.0103 -0.0010
 + - Finalish cost = 0.886421 ; 344 funcs
 + - ini Finalish Parameters = -0.4612 0.0685 -2.9159 -1.7772 2.8209 0.0078 0.9749 0.9757 0.9420 -0.0066 0.0103 -0.0012
 + - Final    cost = 0.886421 ; 266 funcs
 + Final fine fit Parameters:
       x-shift= -0.4612   y-shift=  0.0685   z-shift= -2.9159  ...  enorm=  2.9529 mm
       z-angle= -1.7772   x-angle=  2.8209   y-angle=  0.0078  ...  total=  3.3339 deg
       x-scale=  0.9749   y-scale=  0.9757   z-scale=  0.9420  ...  vol3D=  0.8960 = base bigger than source
     y/x-shear= -0.0066 z/x-shear=  0.0103 z/y-shear= -0.0012
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.4612 0.0685 -2.9159 -1.7772 2.8209 0.0078 0.9749 0.9757 0.9420 -0.0066 0.0103 -0.0012
++ Unloading unneeded data
++ Wrote -1Dmatrix_save ./MPRAGE.GB23_unif_al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 40.7
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_MPRAGE.GB23_unif_lr_al_junk -overwrite ./MPRAGE.GB23_unif_unflipped_ns+orig
++ processing ./MPRAGE.GB23_unif_unflipped_ns+orig ...
#Script is running (command trimmed):
  3dAllineate -lpa -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./__tt_MPRAGE.GB23_unif_lr_al_junk+orig -prefix ./MPRAGE.GB23_unif_flip_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB23_unif_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_MPRAGE.GB23_unif_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4711835 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 79730 voxels [11.5%] in weight mask
++ Number of points for matching = 79730
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.768 49.602 43.575 (index)
 + source center of mass = 112.330 182.731 151.694 (index)
 + source-target CM = -0.311 -1.635 -7.012 (xyz)
 + estimated center of mass shifts = -0.311 -1.635 -7.012
++ shift param auto-range: -70.9..70.3 -84.3..81.0 -80.2..66.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.310913 .. 9.689087  center = -0.310913
 + Range param#2 [y-shift] = -11.634621 .. 8.365379  center = -1.634621
 + Range param#3 [z-shift] = -17.012352 .. 2.987648  center = -7.012352
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.310913 .. 39.689087  center = -0.310913
 + Range param#2 [y-shift] = -41.634621 .. 38.365379  center = -1.634621
 + Range param#3 [z-shift] = -47.012352 .. 32.987648  center = -7.012352
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000084
++ Final parameter search ranges:
 +       x-shift =  -40.311 ..   39.689
 +       y-shift =  -41.635 ..   38.365
 +       z-shift =  -47.012 ..   32.988
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4711835 [out of 23184225] voxels
 + base mask has 99369 [out of 692386] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=204.754 usiz=428.547
 + - copying weight image
 + - using 79730 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 69350 total points stored in 136 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#*[#1=0.989914] **[#2=0.98593] *-*[#4=0.972507] *.o-+-..o*[#24=0.967695] *++-*[#45=0.959389] *++.-o-.ooo--.-$-o*[#5320=0.952472] *oo-
 + - best 88 costs found:
   o= 0 v= 0.952472: -32.15 -13.43  -9.75  23.31   3.26  40.47  [rand]
   o= 1 v= 0.954698: -32.15 -13.43  -9.75  23.31  -3.26  40.47  [rand]
   o= 2 v= 0.957260: -32.15 -13.43  -4.27  23.31  -3.26  40.47  [rand]
   o= 3 v= 0.957940: -34.64 -18.22 -15.61  16.34   8.64  40.54  [rand]
   o= 4 v= 0.959389:   6.36   5.03 -13.68  -7.50   7.50  -7.50  [grid]
   o= 5 v= 0.959704: -32.15 -13.43  -4.27  23.31   3.26  40.47  [rand]
   o= 6 v= 0.960108: -18.81  -7.49   7.58  16.04  -3.33 -12.13  [rand]
   o= 7 v= 0.960278: -32.80  25.36 -38.90   9.69  21.75  40.77  [rand]
   o= 8 v= 0.960509: -32.80  25.36  24.88   9.69  21.75  40.77  [rand]
   o= 9 v= 0.961395: -32.52  27.41 -43.15  40.41  19.09  40.75  [rand]
   o=10 v= 0.961467:  31.90  27.41 -43.15 -40.41  19.09 -40.75  [rand]
   o=11 v= 0.961699:  34.02 -18.22 -15.61 -16.34   8.64 -40.54  [rand]
   o=12 v= 0.961833:  31.53 -13.43  -4.27 -23.31   3.26 -40.47  [rand]
   o=13 v= 0.962152: -34.64 -18.22   1.59  16.34  -8.64  40.54  [rand]
   o=14 v= 0.962258: -34.14 -31.14   5.94  31.95  -9.87  34.85  [rand]
   o=15 v= 0.962314:  31.53 -13.43  -9.75 -23.31   3.26 -40.47  [rand]
   o=16 v= 0.962386:  31.53 -13.43  -4.27 -23.31  -3.26 -40.47  [rand]
   o=17 v= 0.962647:  -6.98  -8.30  -0.35   7.50  -7.50  30.00  [grid]
   o=18 v= 0.962980:  -6.98  -8.30  -0.35   7.50   7.50  30.00  [grid]
   o=19 v= 0.962984:  31.53 -13.43  -9.75 -23.31  -3.26 -40.47  [rand]
   o=20 v= 0.962990: -36.96  15.59  15.24   5.26  41.39  40.03  [rand]
   o=21 v= 0.963088: -35.17  34.04   7.24  40.22 -24.26  41.52  [rand]
   o=22 v= 0.963520:  -6.98  -8.30  -0.35  -7.50  30.00  30.00  [grid]
   o=23 v= 0.963714: -34.14 -31.14   5.94  31.95   9.87  34.85  [rand]
   o=24 v= 0.963724:  31.53  10.16  -4.27  23.31  -3.26 -40.47  [rand]
   o=25 v= 0.963735:  -6.98 -28.30  -0.35  30.00  -7.50  30.00  [grid]
   o=26 v= 0.964091:  34.02  14.95   1.59  16.34  -8.64 -40.54  [rand]
   o=27 v= 0.964663: -34.64  14.95 -15.61  16.34   8.64  40.54  [rand]
   o=28 v= 0.964672: -31.34  17.95 -28.61  24.25  27.21  33.81  [rand]
   o=29 v= 0.964687:  31.53  10.16  -4.27  23.31   3.26 -40.47  [rand]
   o=30 v= 0.964726: -24.22  -8.56   6.92 -13.51  15.92  -9.43  [rand]
   o=31 v= 0.964900: -38.07  14.00 -14.76  31.25  41.23  36.84  [rand]
   o=32 v= 0.964961: -32.80  25.36 -38.90  -9.69  21.75  40.77  [rand]
   o=33 v= 0.965064: -36.96 -18.86 -29.27  -5.26  41.39  40.03  [rand]
   o=34 v= 0.965167: -35.18  28.92 -22.78  11.68  29.04  39.38  [rand]
   o=35 v= 0.965189: -27.84 -33.80   4.03  26.08   6.57  36.57  [rand]
   o=36 v= 0.965573:  34.02  14.95   1.59 -16.34   8.64 -40.54  [rand]
   o=37 v= 0.965761: -32.52  27.41 -43.15  40.41 -19.09  40.75  [rand]
   o=38 v= 0.965998:  34.02 -18.22   1.59 -16.34   8.64 -40.54  [rand]
   o=39 v= 0.966164:   6.36 -28.30  -0.35 -30.00  -7.50 -30.00  [grid]
   o=40 v= 0.966281: -34.64 -18.22 -15.61  16.34  -8.64  40.54  [rand]
   o=41 v= 0.966509: -36.96  15.59  15.24  -5.26  41.39  40.03  [rand]
   o=42 v= 0.966515: -18.81  -7.49   7.58  16.04   3.33 -12.13  [rand]
   o=43 v= 0.966587:  34.02 -18.22   1.59 -16.34  -8.64 -40.54  [rand]
   o=44 v= 0.966606: -18.81   4.22   7.58  16.04   3.33 -12.13  [rand]
   o=45 v= 0.966762:  36.36  26.13 -11.90 -15.70  36.90  27.47  [rand]
   o=46 v= 0.966788: -26.98  -8.30  -0.35  30.00   7.50  30.00  [grid]
   o=47 v= 0.966861: -34.64  14.95   1.59 -16.34  -8.64  40.54  [rand]
   o=48 v= 0.966908: -34.64  14.95   1.59 -16.34   8.64  40.54  [rand]
   o=49 v= 0.967050: -24.30 -11.90  11.08  18.40 -10.44 -35.55  [rand]
   o=50 v= 0.967122: -36.96  15.59 -29.27  -5.26  41.39  40.03  [rand]
   o=51 v= 0.967157:  26.36  25.03  -0.35 -30.00   7.50  30.00  [grid]
   o=52 v= 0.967222:   6.36   5.03 -13.68 -30.00  -7.50  -7.50  [grid]
   o=53 v= 0.967284: -34.64 -18.22   1.59  16.34   8.64  40.54  [rand]
   o=54 v= 0.967351:  34.54  34.04   7.24 -40.22 -24.26 -41.52  [rand]
   o=55 v= 0.967424: -26.98   5.03 -13.68   7.50   7.50  -7.50  [grid]
   o=56 v= 0.967695:  -6.98  -8.30 -13.68   7.50  -7.50   7.50  [grid]
   o=57 v= 0.967770:  34.02  14.95   1.59  16.34   8.64 -40.54  [rand]
   o=58 v= 0.967787: -35.18  28.92   8.76 -11.68  29.04  39.38  [rand]
   o=59 v= 0.967904:  14.77  23.51 -20.25 -41.17  18.22 -29.97  [rand]
   o=60 v= 0.967989:  -6.98  -8.30  -0.35   7.50  30.00  30.00  [grid]
   o=61 v= 0.967990: -20.56  25.65  27.47 -37.90   5.03   3.08  [rand]
   o=62 v= 0.968069: -26.98  25.03 -33.68  30.00   7.50  30.00  [grid]
   o=63 v= 0.968289: -34.14 -31.14 -19.97  31.95  -9.87  34.85  [rand]
   o=64 v= 0.968361:  32.12  12.71  -1.42  -8.22   9.03 -36.72  [rand]
   o=65 v= 0.968600:  26.36  25.03 -33.68 -30.00   7.50 -30.00  [grid]
   o=66 v= 0.968629: -34.64  14.95   1.59  16.34   8.64  40.54  [rand]
   o=67 v= 0.968690: -18.81   4.22 -21.61 -16.04   3.33  12.13  [rand]
   o=68 v= 0.968692: -26.98  -8.30 -13.68   7.50   7.50  -7.50  [grid]
   o=69 v= 0.968692: -32.52  27.41  29.13  40.41 -19.09  40.75  [rand]
   o=70 v= 0.968721:  34.54  34.04 -21.26 -40.22 -24.26 -41.52  [rand]
   o=71 v= 0.968760: -35.17  34.04   7.24 -40.22  24.26  41.52  [rand]
   o=72 v= 0.968827: -34.14  27.87   5.94  31.95   9.87  34.85  [rand]
   o=73 v= 0.968879: -36.96 -18.86  15.24  -5.26  41.39  40.03  [rand]
   o=74 v= 0.968894: -32.74 -15.98 -12.61   8.22   9.03  36.72  [rand]
   o=75 v= 0.968899: -26.98  -8.30  -0.35  30.00   7.50   7.50  [grid]
   o=76 v= 0.968944: -35.18 -32.19   8.76 -11.68  29.04  39.38  [rand]
   o=77 v= 0.969081:  34.02  14.95 -15.61 -16.34   8.64 -40.54  [rand]
   o=78 v= 0.969127:  34.02  14.95   1.59 -16.34  -8.64 -40.54  [rand]
   o=79 v= 0.969142:  -6.98  -8.30  -0.35  30.00  30.00  -7.50  [grid]
   o=80 v= 0.969211: -35.17 -37.31 -21.26  40.22 -24.26  41.52  [rand]
   o=81 v= 0.969368:  -4.39  -7.86   0.78   4.32  22.85  18.95  [rand]
   o=82 v= 0.969447: -34.14  27.87   5.94  31.95  -9.87  34.85  [rand]
   o=83 v= 0.969698: -14.52 -11.09  -2.17  15.99 -13.53  29.93  [rand]
   o=84 v= 0.969712:  36.36  26.13 -11.90  15.70 -36.90  27.47  [rand]
   o=85 v= 0.969722: -34.64  14.95 -15.61  16.34  -8.64  40.54  [rand]
   o=86 v= 0.969778: -34.64  14.95   1.59  16.34  -8.64  40.54  [rand]
   o=87 v= 0.969898:  -4.39  -7.86   0.78  -4.32  22.85  18.95  [rand]
 + - A little optimization:*[#11723=0.950719] *[#11725=0.950555] *[#11727=0.950361] *[#11730=0.948906] *[#11731=0.948372] *[#11732=0.947607] *[#11734=0.946379] *[#11742=0.946277] *[#11745=0.946192] *[#11746=0.946191] *[#11748=0.946075] *[#11750=0.946059] *[#11751=0.94602] *[#11754=0.94577] *[#11758=0.945748] ........................................................*[#14385=0.944931] *[#14390=0.94478] *[#14396=0.944732] *[#14399=0.944574] *[#14400=0.944367] *[#14401=0.944316] *[#14406=0.944293] *[#14407=0.944247] *[#14408=0.944116] *[#14409=0.943976] *[#14413=0.943932] *[#14415=0.943923] *[#14416=0.943913] *[#14419=0.943876] *[#14423=0.943866] ................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.945748: -31.75 -11.38 -11.34  24.44   2.03  39.89  [rand]  [f=46]
   o= 1 v= 0.946661: -31.83 -11.90 -11.24  24.15   2.17  40.29  [rand]  [f=42]
   o= 2 v= 0.947360: -33.71 -18.07  -4.79  23.53  -5.91  40.14  [rand]  [f=49]
   o= 3 v= 0.952484: -34.75 -16.35 -12.91  16.48   3.13  43.68  [rand]  [f=40]
   o= 4 v= 0.956388:   6.43   4.41 -13.40  -8.55  10.81  -8.04  [grid]  [f=54]
   o= 5 v= 0.949829: -30.50 -16.78  -7.06  26.88   4.90  32.43  [rand]  [f=70]
   o= 6 v= 0.958315: -18.91  -7.61   7.26  15.96  -3.06  -7.90  [rand]  [f=34]
   o= 7 v= 0.952768: -36.40  26.54 -39.49   7.61  17.67  41.51  [rand]  [f=57]
   o= 8 v= 0.949854: -33.88  25.86  26.39   8.62  16.64  44.93  [rand]  [f=40]
   o= 9 v= 0.956496: -31.72  22.97 -42.48  40.26  18.93  39.56  [rand]  [f=42]
   o=10 v= 0.954660:  31.77  22.87 -42.75 -39.41  19.11 -40.68  [rand]  [f=42]
   o=11 v= 0.960420:  33.76 -18.37 -12.06 -16.68   8.72 -40.10  [rand]  [f=39]
   o=12 v= 0.956545:  30.83 -13.04   0.22 -23.68   3.01 -41.08  [rand]  [f=41]
   o=13 v= 0.946518: -33.99 -17.16  -4.29  25.25  -6.40  39.89  [rand]  [f=54]
   o=14 v= 0.950465: -38.05 -33.41   5.57  31.41  -7.73  36.46  [rand]  [f=41]
   o=15 v= 0.957142:  30.44 -13.12 -11.46 -26.67   0.25 -43.44  [rand]  [f=50]
   o=16 v= 0.953375:  32.55 -16.63  -4.38 -24.37  -6.01 -43.98  [rand]  [f=44]
   o=17 v= 0.952638:  -6.86  -5.13  -5.11  14.22  -9.41  29.35  [grid]  [f=55]
   o=18 v= 0.956777:  -6.52  -9.08  -2.45   5.43   7.26  29.16  [grid]  [f=46]
   o=19 v= 0.959867:  31.23 -14.14 -10.20 -23.65   1.26 -40.20  [rand]  [f=41]
   o=20 v= 0.960119: -37.50  14.86  14.04   5.82  40.75  41.14  [rand]  [f=66]
   o=21 v= 0.960098: -36.63  29.56   6.52  39.35 -22.43  41.68  [rand]  [f=32]
   o=22 v= 0.956918:  -6.99  -9.34  -0.44  -6.24  27.65  28.43  [grid]  [f=56]
   o=23 v= 0.953570: -36.34 -31.49   2.15  30.80   9.79  40.89  [rand]  [f=43]
   o=24 v= 0.958505:  36.42   8.94  -4.10  22.44  -2.11 -44.50  [rand]  [f=36]
   o=25 v= 0.960466:  -7.10 -24.85  -2.21  28.99 -10.13  27.93  [grid]  [f=41]
   o=26 v= 0.963880:  34.04  15.06   1.56  16.39  -8.67 -40.57  [rand]  [f=29]
   o=27 v= 0.948348: -36.29   3.50 -17.53  14.86  12.94  41.65  [rand]  [f=43]
   o=28 v= 0.954021: -31.28  11.05 -31.65  23.35  24.88  33.12  [rand]  [f=51]
   o=29 v= 0.958409:  34.83  10.51  -4.24  23.85   3.09 -40.97  [rand]  [f=42]
   o=30 v= 0.963130: -23.72  -8.80   7.09 -13.75  15.25  -9.70  [rand]  [f=42]
   o=31 v= 0.954902: -38.79   7.11 -14.36  32.56  26.53  37.14  [rand]  [f=48]
   o=32 v= 0.954276: -33.77  25.31 -38.33  -9.21  22.57  44.99  [rand]  [f=42]
   o=33 v= 0.957746: -37.65 -21.26 -30.58  -7.79  37.95  42.31  [rand]  [f=48]
   o=34 v= 0.946145: -34.00  28.31 -27.07  -0.44  17.94  44.81  [rand]  [f=59]
   o=35 v= 0.959193: -31.11 -34.67   5.12  27.47   7.43  36.97  [rand]  [f=40]
   o=36 v= 0.959164:  34.07  13.82   0.21 -17.66   2.01 -43.79  [rand]  [f=56]
   o=37 v= 0.955198: -36.17  27.40 -46.34  41.84 -20.72  44.92  [rand]  [f=51]
   o=38 v= 0.957949:  33.94 -13.61   1.40 -17.47   1.02 -44.41  [rand]  [f=49]
   o=39 v= 0.952866:   4.82 -27.13   1.72 -34.32 -12.69 -26.78  [grid]  [f=41]
   o=40 v= 0.955213: -35.10 -18.45 -15.22  16.59  -7.26  44.78  [rand]  [f=42]
   o=41 v= 0.952425: -40.25  27.68  12.89  -9.26  33.59  44.28  [rand]  [f=52]
   o=42 v= 0.962487: -18.92  -3.40   8.32  15.89   3.19 -11.94  [rand]  [f=29]
   o=43 v= 0.955038:  34.81 -16.24  -4.57 -22.32  -7.73 -44.54  [rand]  [f=64]
   o=44 v= 0.957407: -21.85   2.44   8.00  16.00   3.46 -12.88  [rand]  [f=40]
   o=45 v= 0.962746:  32.20  26.37 -12.53 -15.81  36.91  27.69  [rand]  [f=43]
   o=46 v= 0.953634: -32.53  -9.61  -3.02  28.88   7.40  29.09  [grid]  [f=42]
   o=47 v= 0.957134: -38.38  12.83   1.18 -22.97   2.60  42.39  [rand]  [f=50]
   o=48 v= 0.955301: -37.88  14.57   4.80 -22.23   6.36  44.22  [rand]  [f=56]
   o=49 v= 0.961376: -21.71  -9.40  10.37  19.04  -2.45 -34.76  [rand]  [f=55]
   o=50 v= 0.958172: -36.41  22.76 -29.94  -5.80  44.56  40.10  [rand]  [f=44]
   o=51 v= 0.961408:  30.27  25.64  -0.30 -29.38   7.47  29.44  [grid]  [f=39]
   o=52 v= 0.960610:   4.86   5.40 -15.37 -31.93  -8.67  -9.59  [grid]  [f=46]
   o=53 v= 0.951251: -35.36 -12.45   1.52  18.81   3.95  42.93  [rand]  [f=48]
   o=54 v= 0.959821:  35.30  32.49   8.95 -35.49 -26.01 -44.97  [rand]  [f=64]
   o=55 v= 0.966604: -27.04   1.37 -13.52   7.13   7.43  -7.65  [grid]  [f=35]
  *o=56 v= 0.943866:  -3.33 -10.93  -8.67   4.59  -6.94   9.39  [grid]  [f=64]
   o=57 v= 0.958305:  33.22  12.02  -2.22  19.77   2.67 -43.87  [rand]  [f=48]
   o=58 v= 0.948929: -37.05  25.39   7.56 -17.02  17.18  44.03  [rand]  [f=59]
   o=59 v= 0.961982:  15.11  24.03 -20.67 -43.21  16.91 -32.75  [rand]  [f=39]
   o=60 v= 0.964556:  -7.65  -8.04  -0.26   7.75  29.73  28.43  [grid]  [f=39]
   o=61 v= 0.962188: -16.64  26.45  26.75 -38.25   5.53   2.90  [rand]  [f=38]
   o=62 v= 0.960029: -31.36  24.70 -33.53  29.99   8.01  29.80  [grid]  [f=39]
   o=63 v= 0.955168: -37.93 -31.37 -17.21  32.89  -3.67  44.92  [rand]  [f=55]
   o=64 v= 0.957768:  33.49  14.09   0.96  -7.23  19.59 -42.28  [rand]  [f=44]
   o=65 v= 0.963971:  26.37  24.99 -32.87 -30.15  11.86 -29.71  [grid]  [f=30]
   o=66 v= 0.958181: -31.98  16.20  10.99  15.20  10.77  41.58  [rand]  [f=37]
   o=67 v= 0.966423: -20.27   4.75 -21.05 -16.14   3.86  12.71  [rand]  [f=47]
   o=68 v= 0.965568: -24.15  -6.62 -13.98   8.04   7.59  -7.50  [grid]  [f=30]
   o=69 v= 0.961631: -37.00  26.36  31.38  39.61 -20.45  44.34  [rand]  [f=34]
   o=70 v= 0.950114:  38.45  35.37 -14.58 -41.54 -12.70 -44.84  [rand]  [f=58]
   o=71 v= 0.957660: -36.22  33.13   9.73 -31.75  26.02  44.97  [rand]  [f=56]
   o=72 v= 0.956049: -32.57  21.09   4.27  30.23   7.85  38.66  [rand]  [f=43]
   o=73 v= 0.966106: -36.50 -12.97  15.15  -4.59  42.16  40.96  [rand]  [f=33]
   o=74 v= 0.947778: -31.81 -12.73 -11.48  25.89   3.68  40.04  [rand]  [f=52]
   o=75 v= 0.955178: -34.41  -6.26  -2.74  32.08   7.64  10.31  [grid]  [f=63]
   o=76 v= 0.956121: -35.18 -29.93   5.27 -11.67  29.99  44.22  [rand]  [f=37]
   o=77 v= 0.955777:  38.49  13.25 -15.38 -16.17   7.90 -44.59  [rand]  [f=38]
   o=78 v= 0.957111:  34.29  14.58   1.94 -21.29  -2.08 -44.27  [rand]  [f=47]
   o=79 v= 0.962061:  -7.10  -8.60  -1.77  31.11  33.13  -8.53  [grid]  [f=52]
   o=80 v= 0.961910: -38.38 -37.45 -23.62  37.86 -25.55  40.06  [rand]  [f=44]
   o=81 v= 0.963161:  -8.29  -8.07   0.11   3.72  23.21  18.71  [rand]  [f=55]
   o=82 v= 0.951604: -37.12  22.47   4.23  30.54   3.85  37.98  [rand]  [f=47]
   o=83 v= 0.959375: -10.83  -8.64  -3.11   9.79  -8.77  30.78  [rand]  [f=62]
   o=84 v= 0.953624:  36.35  31.54 -13.71  10.47 -28.98  28.23  [rand]  [f=42]
   o=85 v= 0.959986: -35.61  17.88 -14.59  12.21  -8.86  44.79  [rand]  [f=56]
   o=86 v= 0.965232: -35.53  14.26   1.79  16.85  -7.98  44.89  [rand]  [f=42]
   o=87 v= 0.959994:  -5.94  -9.38  -1.28  -3.91  24.32  25.94  [rand]  [f=47]
 + - saving #56 for use with twobest
 + - saving # 0 for use with twobest
 + - saving #34 for use with twobest
 + - saving #13 for use with twobest
 + - skip # 1 for twobest: too close to set # 0
 + - skip # 2 for twobest: too close to set #13
 + - skip #74 for twobest: too close to set # 0
 + - saving #27 for use with twobest
 + - saving #58 for use with twobest
 + - saving # 5 for use with twobest
 + - saving # 8 for use with twobest
 + - saving #70 for use with twobest
 + - saving #14 for use with twobest
 + - saving #53 for use with twobest
 + - saving #82 for use with twobest
 + - saving #41 for use with twobest
 + - saving # 3 for use with twobest
 + - saving #17 for use with twobest
 + - saving # 7 for use with twobest
 + - saving #39 for use with twobest
 + - saving #16 for use with twobest
 + - saving #23 for use with twobest
 + - saving #84 for use with twobest
 + - saving #46 for use with twobest
 + - saving #28 for use with twobest
 + - saving #32 for use with twobest
 + - saving #10 for use with twobest
 + - saving #31 for use with twobest
 + - skip #43 for twobest: too close to set #16
 + - saving #63 for use with twobest
 + - saving #75 for use with twobest
 + - saving #37 for use with twobest
 + - saving #40 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=204.754 usiz=428.547
 + - retaining old weight image
 + - using 79730 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 68994 total points stored in 137 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.952002 [o=56 t=0]
 + -- Parameters = -2.6722 -9.7144 -8.6448 3.8097 -7.5698 9.1404 1.0018 0.9931 1.0075 0.0007 0.0033 -0.0015
 + - param set #2 has cost=0.951955 [o=0 t=1]
 + -- Parameters = -31.6336 -11.4090 -11.3879 24.4149 1.9996 39.8996 1.0005 1.0002 1.0006 0.0017 0.0003 -0.0017
 + - param set #3 has cost=0.952751 [o=34 t=2]
 + -- Parameters = -33.9914 28.3554 -27.0793 -0.4342 17.9408 44.8331 1.0001 0.9999 1.0030 0.0001 -0.0011 0.0007
 + - param set #4 has cost=0.953349 [o=13 t=3]
 + -- Parameters = -33.8857 -17.6854 -3.7197 25.2491 -6.0709 40.2281 1.0045 1.0326 0.9986 -0.0001 0.0004 0.0002
 + - param set #5 has cost=0.957683 [o=27 t=4]
 + -- Parameters = -36.3104 3.6087 -17.4195 14.6576 12.8290 41.6091 0.9995 0.9976 1.0018 0.0014 -0.0005 0.0000
 + - param set #6 has cost=0.952211 [o=58 t=5]
 + -- Parameters = -36.9761 25.7735 7.5945 -16.9562 17.2183 43.9538 0.9999 0.9999 0.9993 0.0008 -0.0009 0.0125
 + - param set #7 has cost=0.956439 [o=5 t=6]
 + -- Parameters = -30.5008 -12.2474 -7.2760 26.7082 4.4570 32.7689 1.0007 1.0020 0.9970 0.0000 0.0013 -0.0009
 + - param set #8 has cost=0.954111 [o=8 t=7]
 + -- Parameters = -33.9256 25.8442 26.1558 9.1161 16.3577 44.7135 1.0000 0.9978 1.0013 -0.0009 0.0006 0.0125
 + - param set #9 has cost=0.954590 [o=70 t=8]
 + -- Parameters = 38.4515 35.4028 -14.5415 -41.6193 -12.8133 -44.8944 1.0019 1.0401 0.9979 0.0006 -0.0001 -0.0010
 + - param set #10 has cost=0.953458 [o=14 t=9]
 + -- Parameters = -37.9079 -34.4215 4.7989 30.7121 -7.0946 41.0976 0.9969 0.9966 0.9976 -0.0021 -0.0028 -0.0014
 + - param set #11 has cost=0.957523 [o=53 t=10]
 + -- Parameters = -35.3596 -12.4787 1.5235 18.7609 3.9593 42.9063 0.9986 1.0004 0.9971 0.0006 0.0006 0.0125
 + - param set #12 has cost=0.958030 [o=82 t=11]
 + -- Parameters = -37.0784 22.4657 4.6637 30.5298 3.8365 37.9753 1.0038 1.0001 0.9999 0.0000 0.0000 0.0000
 + - param set #13 has cost=0.955385 [o=41 t=12]
 + -- Parameters = -39.6655 26.5253 13.1216 -8.3415 33.3524 43.9260 0.9970 0.9917 0.9979 -0.0004 -0.0015 -0.0008
 + - param set #14 has cost=0.957435 [o=3 t=13]
 + -- Parameters = -34.8518 -15.5644 -12.9343 16.3753 -1.0543 41.7867 0.9953 0.9947 0.9897 0.0005 -0.0010 -0.0005
 + - param set #15 has cost=0.958829 [o=17 t=14]
 + -- Parameters = -6.3464 -5.2519 -5.1102 13.9444 -8.9862 28.9272 1.0029 1.0010 0.9970 0.0005 0.0018 0.0130
 + - param set #16 has cost=0.960030 [o=7 t=15]
 + -- Parameters = -36.4214 26.5279 -39.4552 7.6026 17.7047 41.4954 0.9998 0.9999 0.9998 0.0001 0.0000 0.0000
 + - param set #17 has cost=0.958919 [o=39 t=16]
 + -- Parameters = 4.8146 -26.7388 1.6833 -34.3122 -12.7303 -26.8636 1.0005 1.0020 1.0036 -0.0021 -0.0002 0.0113
 + - param set #18 has cost=0.944679 [o=-1 t=-1]
 + -- Parameters = -0.5089 -0.7600 -13.8914 -0.6891 1.6677 -1.0153 1.0159 0.9814 0.8904 -0.0006 0.0060 0.0317
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.455 
 + --- dist(#3,#1) = 0.168 
 + --- dist(#4,#1) = 0.5 
 + --- dist(#5,#1) = 0.509 
 + --- dist(#6,#1) = 0.458 
 + --- dist(#7,#1) = 0.468 
 + --- dist(#8,#1) = 0.508 
 + --- dist(#9,#1) = 0.488 
 + --- dist(#10,#1) = 0.499 
 + --- dist(#11,#1) = 0.375 
 + --- dist(#12,#1) = 0.476 
 + --- dist(#13,#1) = 0.488 
 + --- dist(#14,#1) = 0.474 
 + --- dist(#15,#1) = 0.457 
 + --- dist(#16,#1) = 0.333 
 + --- dist(#17,#1) = 0.374 
 + --- dist(#18,#1) = 0.472 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=204.754 usiz=428.547
 + - retaining old weight image
 + - using 79730 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 69055 total points stored in 139 'TOHD(13.984)' bloks (0 duplicates)
 + - param set #1 has cost=0.953517 [o=-1 t=-1]
 + -- Parameters = -0.4318 -0.8971 -13.9700 -0.7887 1.5726 -1.1405 1.0172 0.9813 0.8938 0.0002 0.0141 0.0324
 + - param set #2 has cost=0.956651 [o=0 t=1]
 + -- Parameters = -31.6373 -11.4117 -11.4230 24.4520 2.0209 39.9022 1.0005 1.0002 1.0006 0.0018 0.0003 -0.0017
 + - param set #3 has cost=0.962509 [o=56 t=0]
 + -- Parameters = -2.7455 -9.5550 -8.6691 3.9644 -7.5811 8.6524 0.9999 0.9914 1.0102 0.0021 0.0022 -0.0030
 + - param set #4 has cost=0.956392 [o=58 t=5]
 + -- Parameters = -36.9835 25.7569 7.6242 -16.9735 17.2323 43.9598 0.9999 1.0000 0.9993 0.0016 -0.0016 0.0131
 + - param set #5 has cost=0.956638 [o=34 t=2]
 + -- Parameters = -33.9708 28.4029 -27.1458 -0.1149 17.9373 44.8670 1.0002 0.9993 1.0036 -0.0001 -0.0012 0.0013
 + - param set #6 has cost=0.957056 [o=13 t=3]
 + -- Parameters = -33.6143 -17.6568 -3.8871 25.2799 -5.8749 40.3465 1.0049 1.0357 0.9959 -0.0005 -0.0003 0.0004
 + - param set #7 has cost=0.958334 [o=14 t=9]
 + -- Parameters = -37.9163 -34.4097 4.7993 30.7133 -7.1118 41.3170 0.9972 0.9974 0.9974 -0.0015 -0.0034 0.0063
 + - param set #8 has cost=0.956912 [o=8 t=7]
 + -- Parameters = -33.9302 25.7709 26.0698 9.1868 16.4541 44.7289 1.0003 0.9980 1.0002 -0.0003 -0.0001 0.0131
 + - param set #9 has cost=0.958468 [o=70 t=8]
 + -- Parameters = 38.4657 35.8150 -11.1239 -42.5357 -14.5385 -44.8367 1.0504 1.0462 0.9764 -0.0006 0.0010 -0.0391
 + - param set #10 has cost=0.955291 [o=41 t=12]
 + -- Parameters = -39.3988 26.5862 13.2132 -8.0290 35.9526 43.9396 1.0031 0.9616 0.9948 -0.0041 -0.0022 -0.0043
 + - param set #11 has cost=0.962601 [o=5 t=6]
 + -- Parameters = -30.3318 -12.2620 -7.3980 26.8502 4.2913 32.9616 1.0027 1.0015 0.9981 0.0009 0.0011 -0.0019
 + - param set #12 has cost=0.956470 [o=3 t=13]
 + -- Parameters = -34.5796 -15.4807 -12.8387 16.5386 -0.9291 44.6034 0.9989 0.9983 0.9892 0.0001 -0.0003 -0.0005
 + - param set #13 has cost=0.960994 [o=53 t=10]
 + -- Parameters = -35.4197 -12.4856 1.5791 18.7395 3.9639 43.0490 0.9974 0.9997 0.9970 0.0006 0.0001 0.0119
 + - param set #14 has cost=0.960455 [o=27 t=4]
 + -- Parameters = -37.5015 3.4162 -15.9700 13.0922 13.2956 40.8249 0.9987 0.9979 1.0499 -0.0102 -0.0073 -0.0165
 + - param set #15 has cost=0.962591 [o=82 t=11]
 + -- Parameters = -37.0232 22.4684 4.6515 30.4085 3.7990 38.0248 1.0039 0.9979 0.9991 -0.0001 0.0001 -0.0001
 + - param set #16 has cost=0.962866 [o=17 t=14]
 + -- Parameters = -5.7265 -6.2263 -4.0831 13.4262 -8.5885 30.6303 0.9875 0.9523 0.9669 0.0042 0.0063 0.0043
 + - param set #17 has cost=0.963549 [o=39 t=16]
 + -- Parameters = 5.1795 -26.7183 1.6605 -34.5184 -12.7667 -26.8002 0.9983 1.0019 1.0043 -0.0022 0.0000 0.0200
 + - param set #18 has cost=0.963625 [o=7 t=15]
 + -- Parameters = -36.4212 26.5227 -39.4574 7.6025 17.7237 41.4876 0.9999 1.0000 1.0000 0.0001 0.0083 0.0001
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.501 
 + --- dist(#3,#1) = 0.501 
 + --- dist(#4,#1) = 0.508 
 + --- dist(#5,#1) = 0.511 
 + --- dist(#6,#1) = 0.456 
 + --- dist(#7,#1) = 0.51 
 + --- dist(#8,#1) = 0.461 
 + --- dist(#9,#1) = 0.472 
 + --- dist(#10,#1) = 0.486 
 + --- dist(#11,#1) = 0.466 
 + --- dist(#12,#1) = 0.491 
 + --- dist(#13,#1) = 0.167 
 + --- dist(#14,#1) = 0.457 
 + --- dist(#15,#1) = 0.379 
 + --- dist(#16,#1) = 0.353 
 + --- dist(#17,#1) = 0.375 
 + --- dist(#18,#1) = 0.474 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=204.754 usiz=428.547
 + - retaining old weight image
 + - using 79730 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 67627 total points stored in 134 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.960545 [o=-1 t=-1]
 + -- Parameters = -0.4152 -0.8737 -14.0625 -0.6988 1.8924 -1.6171 1.0171 0.9804 0.8936 0.0018 0.0189 0.0343
 + - param set #2 has cost=0.961323 [o=41 t=12]
 + -- Parameters = -39.3974 26.5876 13.2151 -8.0305 35.9542 43.9619 1.0030 0.9616 0.9949 -0.0041 -0.0022 -0.0043
 + - param set #3 has cost=0.960470 [o=58 t=5]
 + -- Parameters = -37.0055 25.7727 7.6371 -16.9479 17.4322 43.9805 0.9989 1.0001 0.9992 0.0068 -0.0016 0.0131
 + - param set #4 has cost=0.958765 [o=3 t=13]
 + -- Parameters = -34.4202 -15.4197 -12.9047 16.3373 -0.5701 44.7859 1.0010 1.0019 0.9898 0.0077 0.0015 -0.0003
 + - param set #5 has cost=0.960837 [o=34 t=2]
 + -- Parameters = -33.8438 28.6052 -27.1020 -0.2747 18.0394 44.9590 1.0004 0.9988 1.0039 0.0006 -0.0017 0.0013
 + - param set #6 has cost=0.958077 [o=0 t=1]
 + -- Parameters = -32.0718 -11.4810 -9.5444 24.6793 1.0344 39.4040 1.0253 1.0028 0.9783 0.0001 -0.0045 -0.0058
 + - param set #7 has cost=0.960751 [o=8 t=7]
 + -- Parameters = -33.9302 25.7709 26.0698 9.1868 16.4541 44.7289 1.0003 0.9980 1.0002 -0.0003 -0.0001 0.0131
 + - param set #8 has cost=0.959927 [o=13 t=3]
 + -- Parameters = -33.6237 -17.6755 -3.8944 25.2610 -5.8659 40.3498 1.0049 1.0374 0.9957 -0.0005 -0.0003 0.0004
 + - param set #9 has cost=0.957761 [o=14 t=9]
 + -- Parameters = -36.5062 -33.3601 4.8682 32.6487 -6.9463 42.4188 1.0137 1.0020 0.9668 0.0028 -0.0008 0.0166
 + - param set #10 has cost=0.960417 [o=70 t=8]
 + -- Parameters = 38.4442 35.7067 -10.8448 -42.5222 -14.4966 -44.8097 1.0517 1.0476 0.9767 -0.0004 0.0005 -0.0332
 + - param set #11 has cost=0.962914 [o=27 t=4]
 + -- Parameters = -37.7025 3.0434 -15.2138 13.4950 13.4754 41.5071 0.9985 1.0028 1.0681 -0.0172 -0.0120 -0.0162
 + - param set #12 has cost=0.964253 [o=53 t=10]
 + -- Parameters = -35.4313 -12.4736 1.5922 18.7689 3.9924 43.0339 0.9972 0.9999 0.9967 0.0007 0.0001 0.0119
 + - param set #13 has cost=0.964560 [o=56 t=0]
 + -- Parameters = -2.9317 -9.6409 -9.4740 4.4243 -7.2863 8.2183 1.0062 0.9591 1.0284 0.0037 0.0064 -0.0046
 + - param set #14 has cost=0.966056 [o=82 t=11]
 + -- Parameters = -37.0257 22.4669 4.6572 30.4120 3.7963 38.0279 1.0039 0.9980 0.9991 -0.0001 0.0058 -0.0001
 + - param set #15 has cost=0.964652 [o=5 t=6]
 + -- Parameters = -30.3341 -12.2772 -7.3774 26.8389 4.2852 32.9629 1.0028 1.0015 0.9981 0.0009 0.0011 -0.0019
 + - param set #16 has cost=0.961314 [o=17 t=14]
 + -- Parameters = -6.5558 -6.7676 -2.2530 13.7056 -6.6836 28.8383 0.9769 0.9110 0.9417 0.0230 0.0185 0.0008
 + - param set #17 has cost=0.966567 [o=39 t=16]
 + -- Parameters = 5.1459 -26.5646 2.0490 -34.7525 -12.8815 -26.7820 0.9972 0.9989 1.0007 -0.0028 -0.0008 0.0257
 + - param set #18 has cost=0.967226 [o=7 t=15]
 + -- Parameters = -36.4953 26.5065 -39.4214 7.6198 17.7980 41.5071 1.0000 0.9988 1.0004 0.0007 0.0084 0.0047
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.273 
 + --- dist(#3,#1) = 0.224 
 + --- dist(#4,#1) = 0.196 
 + --- dist(#5,#1) = 0.969 
 + --- dist(#6,#1) = 0.739 
 + --- dist(#7,#1) = 0.489 
 + --- dist(#8,#1) = 0.739 
 + --- dist(#9,#1) = 0.775 
 + --- dist(#10,#1) = 0.374 
 + --- dist(#11,#1) = 0.749 
 + --- dist(#12,#1) = 0.455 
 + --- dist(#13,#1) = 0.261 
 + --- dist(#14,#1) = 0.42 
 + --- dist(#15,#1) = 0.264 
 + --- dist(#16,#1) = 0.698 
 + --- dist(#17,#1) = 0.769 
 + --- dist(#18,#1) = 0.748 
 + - Total coarse refinement net CPU time = 0.0 s; 4517 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=204.754 usiz=428.547
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 67866 total points stored in 135 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.958254 * [o=14 t=9]
 + -- Parameters = -36.5062 -33.3601 4.8682 32.6487 -6.9463 42.4188 1.0137 1.0020 0.9668 0.0028 -0.0008 0.0166
 + - cost(#2)=0.959181   [o=0 t=1]
 + -- Parameters = -32.0718 -11.4810 -9.5444 24.6793 1.0344 39.4040 1.0253 1.0028 0.9783 0.0001 -0.0045 -0.0058
 + - cost(#3)=0.959698   [o=3 t=13]
 + -- Parameters = -34.4202 -15.4197 -12.9047 16.3373 -0.5701 44.7859 1.0010 1.0019 0.9898 0.0077 0.0015 -0.0003
 + - cost(#4)=0.961620   [o=13 t=3]
 + -- Parameters = -33.6237 -17.6755 -3.8944 25.2610 -5.8659 40.3498 1.0049 1.0374 0.9957 -0.0005 -0.0003 0.0004
 + - cost(#5)=0.961787   [o=70 t=8]
 + -- Parameters = 38.4442 35.7067 -10.8448 -42.5222 -14.4966 -44.8097 1.0517 1.0476 0.9767 -0.0004 0.0005 -0.0332
 + - cost(#6)=0.961285   [o=58 t=5]
 + -- Parameters = -37.0055 25.7727 7.6371 -16.9479 17.4322 43.9805 0.9989 1.0001 0.9992 0.0068 -0.0016 0.0131
 + - cost(#7)=0.962226   [o=-1 t=-1]
 + -- Parameters = -0.4152 -0.8737 -14.0625 -0.6988 1.8924 -1.6171 1.0171 0.9804 0.8936 0.0018 0.0189 0.0343
 + - cost(#8)=0.961330   [o=8 t=7]
 + -- Parameters = -33.9302 25.7709 26.0698 9.1868 16.4541 44.7289 1.0003 0.9980 1.0002 -0.0003 -0.0001 0.0131
 + - cost(#9)=0.961258   [o=34 t=2]
 + -- Parameters = -33.8438 28.6052 -27.1020 -0.2747 18.0394 44.9590 1.0004 0.9988 1.0039 0.0006 -0.0017 0.0013
 + - cost(#10)=0.962929   [o=17 t=14]
 + -- Parameters = -6.5558 -6.7676 -2.2530 13.7056 -6.6836 28.8383 0.9769 0.9110 0.9417 0.0230 0.0185 0.0008
 + - cost(#11)=0.962070   [o=41 t=12]
 + -- Parameters = -39.3974 26.5876 13.2151 -8.0305 35.9542 43.9619 1.0030 0.9616 0.9949 -0.0041 -0.0022 -0.0043
 + - cost(#12)=0.963933   [o=27 t=4]
 + -- Parameters = -37.7025 3.0434 -15.2138 13.4950 13.4754 41.5071 0.9985 1.0028 1.0681 -0.0172 -0.0120 -0.0162
 + - cost(#13)=0.965567   [o=53 t=10]
 + -- Parameters = -35.4313 -12.4736 1.5922 18.7689 3.9924 43.0339 0.9972 0.9999 0.9967 0.0007 0.0001 0.0119
 + - cost(#14)=0.966355   [o=56 t=0]
 + -- Parameters = -2.9317 -9.6409 -9.4740 4.4243 -7.2863 8.2183 1.0062 0.9591 1.0284 0.0037 0.0064 -0.0046
 + - cost(#15)=0.965784   [o=5 t=6]
 + -- Parameters = -30.3341 -12.2772 -7.3774 26.8389 4.2852 32.9629 1.0028 1.0015 0.9981 0.0009 0.0011 -0.0019
 + - cost(#16)=0.966451   [o=82 t=11]
 + -- Parameters = -37.0257 22.4669 4.6572 30.4120 3.7963 38.0279 1.0039 0.9980 0.9991 -0.0001 0.0058 -0.0001
 + - cost(#17)=0.967578   [o=39 t=16]
 + -- Parameters = 5.1459 -26.5646 2.0490 -34.7525 -12.8815 -26.7820 0.9972 0.9989 1.0007 -0.0028 -0.0008 0.0257
 + - cost(#18)=0.967451   [o=7 t=15]
 + -- Parameters = -36.4953 26.5065 -39.4214 7.6198 17.7980 41.5071 1.0000 0.9988 1.0004 0.0007 0.0084 0.0047
 + - cost(#19)=0.985636   [o=-2 t=-2]
 + -- Parameters = -0.3109 -1.6346 -7.0124 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.957423 * [o=14 t=9]
 + -- Parameters = -36.5062 -33.3056 5.1676 32.5252 -7.3726 42.4533 1.0218 0.9988 0.9672 0.0026 -0.0010 0.0161
 + - cost(#2)=0.959042   [o=0 t=1]
 + -- Parameters = -32.0399 -11.3818 -9.4417 24.7419 0.9770 39.3848 1.0257 1.0027 0.9785 0.0003 -0.0045 -0.0058
 + - cost(#3)=0.959597   [o=3 t=13]
 + -- Parameters = -34.4360 -15.3513 -12.9229 16.3152 -0.5561 44.7864 1.0005 1.0044 0.9893 0.0075 0.0015 -0.0003
 + - cost(#4)=0.961605   [o=13 t=3]
 + -- Parameters = -33.6199 -17.6760 -3.8980 25.2543 -5.8556 40.3467 1.0049 1.0374 0.9956 -0.0005 -0.0011 0.0004
 + - cost(#5)=0.961012   [o=70 t=8]
 + -- Parameters = 38.4366 35.6628 -10.7999 -42.5238 -14.4726 -44.8203 1.0520 1.0473 0.9538 -0.0002 0.0008 -0.0332
 + - cost(#6)=0.961079   [o=58 t=5]
 + -- Parameters = -37.0131 25.7766 7.6520 -17.0115 17.4492 43.9803 0.9989 1.0000 0.9990 0.0069 -0.0016 0.0204
 + - cost(#7)=0.961407   [o=-1 t=-1]
 + -- Parameters = -0.3064 -0.7917 -14.1236 -0.4200 2.1546 -2.0829 1.0161 0.9802 0.8932 0.0020 0.0289 0.0333
 + - cost(#8)=0.961284   [o=8 t=7]
 + -- Parameters = -33.9147 25.7561 26.0920 9.1844 16.4635 44.7114 1.0008 0.9981 1.0002 0.0004 -0.0000 0.0145
 + - cost(#9)=0.961218   [o=34 t=2]
 + -- Parameters = -33.8441 28.6048 -27.1022 -0.2751 18.0394 44.9588 1.0004 0.9988 1.0039 0.0006 -0.0012 0.0082
 + - cost(#10)=0.962538   [o=17 t=14]
 + -- Parameters = -6.6360 -6.7538 -2.3437 13.8022 -6.7551 28.8729 0.9796 0.9069 0.9417 0.0242 0.0181 -0.0057
 + - cost(#11)=0.961937   [o=41 t=12]
 + -- Parameters = -39.3700 26.5794 13.2084 -7.9077 36.0688 43.9085 1.0033 0.9619 0.9945 -0.0043 -0.0019 -0.0042
 + - cost(#12)=0.962662   [o=27 t=4]
 + -- Parameters = -37.8056 3.3193 -15.0948 13.2954 13.5302 44.8346 0.9984 1.0021 1.0653 -0.0167 -0.0115 -0.0168
 + - cost(#13)=0.965497   [o=53 t=10]
 + -- Parameters = -35.5288 -12.5210 1.5633 18.8471 4.0841 42.9486 0.9963 0.9999 0.9980 0.0011 0.0003 0.0119
 + - cost(#14)=0.965536   [o=56 t=0]
 + -- Parameters = -3.0714 -9.5660 -9.6145 4.0287 -7.5705 8.2931 1.0080 0.9586 1.0278 0.0017 0.0096 -0.0129
 + - cost(#15)=0.963646   [o=5 t=6]
 + -- Parameters = -30.7088 -11.8347 -8.5731 28.2633 4.8034 34.8611 1.0063 0.9950 0.9968 0.0013 0.0007 -0.0017
 + - cost(#16)=0.966047   [o=82 t=11]
 + -- Parameters = -37.0179 22.4548 4.6518 30.4285 3.7926 38.0195 1.0040 0.9979 0.9759 -0.0000 0.0059 -0.0002
 + - cost(#17)=0.967558   [o=39 t=16]
 + -- Parameters = 5.1501 -26.5620 2.0501 -34.7397 -12.8803 -26.7899 0.9972 0.9995 1.0008 -0.0027 -0.0001 0.0257
 + - cost(#18)=0.967275   [o=7 t=15]
 + -- Parameters = -36.4911 26.5207 -39.3953 7.6270 17.7984 41.5169 1.0000 0.9965 1.0006 0.0014 0.0084 0.0050
*[#22306=0.94365] *[#22307=0.943584] *[#22309=0.943442] *[#22311=0.943274] *[#22312=0.943103] *[#22313=0.942908] *[#22314=0.942798] *[#22315=0.942671] *[#22318=0.942394] *[#22319=0.942159] *[#22320=0.941956] *[#22321=0.941435] *[#22322=0.940761] *[#22323=0.939826] *[#22328=0.938221] *[#22329=0.938054] *[#22331=0.938023] *[#22333=0.937798] *[#22337=0.93773] *[#22338=0.937366] *[#22339=0.937039] *[#22342=0.936797] *[#22343=0.936719] *[#22344=0.936411] *[#22345=0.93633] *[#22349=0.935895] *[#22350=0.935686] *[#22351=0.935479] *[#22352=0.935204] *[#22353=0.934968] *[#22354=0.934797] *[#22357=0.934687] *[#22359=0.934524] *[#22362=0.934421] *[#22365=0.934419] *[#22367=0.934373] *[#22368=0.934358] *[#22370=0.93426] *[#22371=0.934179] *[#22380=0.934111] *[#22390=0.934071] *[#22391=0.934055] 
 + - cost(#19)=0.934055 * [o=-2 t=-2]
 + -- Parameters = -0.8744 -0.1638 -0.8085 1.9609 3.3262 -4.4479 1.0142 1.0140 0.8506 -0.0103 0.0147 -0.0088
 + - case #19 [o=-2 t=-2] is now the best
 + - Initial  cost = 0.934055
 + - Initial fine Parameters = -0.8744 -0.1638 -0.8085 1.9609 3.3262 -4.4479 1.0142 1.0140 0.8506 -0.0103 0.0147 -0.0088
*[#22417=0.933437] *[#22429=0.933435] *[#22437=0.933424] *[#22439=0.933373] *[#22442=0.933306] *[#22443=0.933302] *[#22445=0.933297] *[#22447=0.93327] *[#22448=0.933208] *[#22449=0.933186] *[#22452=0.933123] *[#22453=0.933116] *[#22457=0.933068] *[#22458=0.933057] *[#22459=0.933056] *[#22461=0.933056] *[#22469=0.933014] *[#22470=0.932987] *[#22471=0.932978] *[#22473=0.932919] *[#22482=0.932849] *[#22497=0.932833] *[#22502=0.932832] *[#22504=0.932824] *[#22507=0.93282] *[#22509=0.93282] *[#22510=0.932814] *[#22513=0.932803] *[#22514=0.932794] *[#22519=0.932792] *[#22522=0.932792] *[#22526=0.932789] *[#22529=0.932783] *[#22530=0.932782] *[#22531=0.932782] *[#22533=0.932779] *[#22534=0.932778] *[#22537=0.932773] *[#22538=0.932771] *[#22540=0.932766] *[#22543=0.932763] *[#22544=0.932758] *[#22545=0.932754] *[#22546=0.932752] *[#22548=0.932745] *[#22549=0.932738] *[#22550=0.932727] *[#22551=0.932726] *[#22552=0.932724] *[#22553=0.932718] *[#22556=0.932712] *[#22558=0.93271] *[#22564=0.932708] *[#22565=0.932705] *[#22566=0.932703] *[#22575=0.932703] *[#22578=0.932702] *[#22582=0.932702] *[#22584=0.932702] *[#22588=0.932699] *[#22595=0.932699] *[#22596=0.932698] *[#22597=0.932697] *[#22600=0.932696] *[#22601=0.932695] *[#22602=0.932695] *[#22603=0.932694] *[#22606=0.932693] *[#22607=0.932692] *[#22612=0.932688] *[#22613=0.932687] *[#22615=0.932686] *[#22617=0.932685] *[#22620=0.932681] *[#22627=0.932681] *[#22628=0.932679] *[#22629=0.932679] *[#22630=0.932676] *[#22635=0.932676] *[#22637=0.932675] *[#22638=0.932674] *[#22643=0.932672] *[#22644=0.932672] *[#22645=0.932671] *[#22666=0.93267] *[#22671=0.93267] *[#22672=0.932669] *[#22673=0.932669] *[#22675=0.932669] *[#22676=0.932669] *[#22677=0.932668] *[#22678=0.932668] *[#22679=0.932668] *[#22680=0.932668] *[#22681=0.932668] *[#22682=0.932667] *[#22683=0.932667] *[#22684=0.932667] *[#22685=0.932666] *[#22686=0.932666] *[#22687=0.932666] *[#22688=0.932665] *[#22689=0.932664] *[#22690=0.932663] *[#22693=0.932663] *[#22694=0.932663] *[#22695=0.932662] *[#22696=0.932662] *[#22698=0.932661] *[#22701=0.932661] *[#22704=0.932661] *[#22705=0.93266] *[#22707=0.93266] *[#22708=0.93266] *[#22709=0.932659] *[#22710=0.932658] *[#22715=0.932657] *[#22717=0.932657] *[#22718=0.932657] *[#22720=0.932657] *[#22721=0.932656] *[#22722=0.932656] *[#22723=0.932656] *[#22724=0.932656] *[#22725=0.932655] *[#22726=0.932655] *[#22727=0.932654] *[#22728=0.932654] *[#22729=0.932654] *[#22730=0.932653] *[#22733=0.932653] *[#22734=0.932653] *[#22736=0.932652] *[#22737=0.932652] *[#22740=0.932652] *[#22741=0.932652] *[#22742=0.932652] *[#22743=0.932652] *[#22744=0.932652] *[#22749=0.932651] *[#22750=0.932651] *[#22751=0.932651] *[#22753=0.932651] *[#22754=0.932651] *[#22755=0.93265] *[#22756=0.93265] *[#22757=0.93265] *[#22758=0.932649] *[#22759=0.932648] *[#22762=0.932648] *[#22763=0.932647] *[#22764=0.932647] *[#22769=0.932646] *[#22774=0.932645] *[#22775=0.932645] *[#22776=0.932645] *[#22777=0.932645] *[#22778=0.932645] *[#22779=0.932644] *[#22780=0.932644] *[#22783=0.932644] *[#22784=0.932644] *[#22785=0.932643] *[#22788=0.932643] *[#22789=0.932643] *[#22790=0.932642] *[#22791=0.932642] *[#22792=0.932641] *[#22793=0.93264] *[#22794=0.932639] *[#22798=0.932638] *[#22801=0.932637] *[#22802=0.932637] *[#22803=0.932636] *[#22804=0.932636] *[#22805=0.932635] *[#22806=0.932635] *[#22808=0.932635] *[#22811=0.932634] *[#22812=0.932633] *[#22813=0.932632] *[#22814=0.932629] *[#22815=0.932628] *[#22816=0.932626] *[#22817=0.932626] *[#22819=0.932625] *[#22820=0.932623] *[#22821=0.932623] *[#22824=0.932621] *[#22825=0.932621] *[#22828=0.93262] *[#22829=0.93262] *[#22830=0.932619] *[#22832=0.932619] *[#22833=0.932619] *[#22834=0.932619] *[#22835=0.932619] *[#22836=0.932618] *[#22837=0.932618] *[#22838=0.932617] *[#22839=0.932617] *[#22841=0.932617] *[#22848=0.932617] *[#22849=0.932617] *[#22850=0.932617] *[#22851=0.932617] *[#22852=0.932616] *[#22854=0.932615] *[#22857=0.932615] *[#22859=0.932615] *[#22860=0.932615] *[#22861=0.932615] *[#22862=0.932615] *[#22863=0.932615] *[#22868=0.932614] *[#22869=0.932614] *[#22872=0.932614] *[#22873=0.932614] *[#22874=0.932614] *[#22875=0.932614] *[#22876=0.932614] *[#22879=0.932613] *[#22881=0.932613] *[#22882=0.932613] *[#22883=0.932613] *[#22884=0.932613] *[#22885=0.932612] *[#22886=0.932612] *[#22887=0.932612] *[#22893=0.932612] *[#22897=0.932611] *[#22900=0.932611] *[#22901=0.93261] *[#22902=0.93261] *[#22906=0.93261] *[#22912=0.93261] *[#22913=0.93261] *[#22916=0.93261] *[#22924=0.93261] *[#22929=0.93261] *[#22932=0.93261] *[#22933=0.93261] *[#22938=0.932609] *[#22941=0.932609] *[#22944=0.932609] *[#22945=0.932609] *[#22948=0.932609] *[#22950=0.932608] *[#22951=0.932608] *[#22952=0.932608] *[#22953=0.932608] *[#22956=0.932608] *[#22957=0.932608] *[#22958=0.932608] *[#22959=0.932607] *[#22960=0.932607] *[#22961=0.932607] *[#22962=0.932605] *[#22963=0.932603] *[#22964=0.9326] *[#22971=0.9326] *[#22972=0.9326] *[#22975=0.9326] *[#22977=0.932599] *[#22979=0.932599] *[#22980=0.932599] *[#22981=0.932599] *[#22982=0.932599] *[#22983=0.932598] *[#22984=0.932598] *[#22985=0.932598] *[#22988=0.932598] *[#22990=0.932597] *[#22991=0.932597] *[#22994=0.932597] *[#22996=0.932596] *[#22997=0.932596] *[#22998=0.932596] *[#22999=0.932596] *[#23000=0.932596] *[#23003=0.932596] *[#23004=0.932595] *[#23005=0.932595] *[#23012=0.932595] *[#23014=0.932595] *[#23016=0.932594] *[#23023=0.932594] *[#23028=0.932594] *[#23031=0.932594] *[#23033=0.932594] *[#23034=0.932594] *[#23037=0.932594] *[#23040=0.932594] *[#23041=0.932594] *[#23042=0.932594] *[#23045=0.932593] *[#23046=0.932593] *[#23049=0.932593] *[#23050=0.932592] *[#23051=0.932592] *[#23054=0.932591] *[#23055=0.932591] *[#23056=0.93259] *[#23057=0.93259] *[#23058=0.932589] *[#23059=0.932589] *[#23060=0.932589] *[#23062=0.932588] *[#23065=0.932588] *[#23067=0.932588] *[#23068=0.932587] *[#23069=0.932587] *[#23072=0.932586] *[#23073=0.932586] *[#23074=0.932586] *[#23075=0.932585] *[#23078=0.932584] *[#23079=0.932584] *[#23081=0.932584] *[#23082=0.932583] *[#23083=0.932582] *[#23086=0.932582] *[#23087=0.932582] *[#23088=0.932581] *[#23093=0.932581] *[#23094=0.932581] *[#23097=0.932581] *[#23098=0.932581] *[#23101=0.93258] *[#23102=0.93258] *[#23104=0.93258] *[#23105=0.93258] *[#23106=0.93258] *[#23107=0.93258] *[#23108=0.93258] *[#23109=0.932579] *[#23110=0.932579] *[#23111=0.932579] *[#23112=0.932579] *[#23113=0.932579] *[#23116=0.932578] *[#23121=0.932578] *[#23123=0.932578] *[#23124=0.932578] *[#23125=0.932578] *[#23126=0.932578] *[#23127=0.932578] *[#23131=0.932578] *[#23134=0.932578] *[#23139=0.932577] *[#23143=0.932577] *[#23144=0.932577] *[#23146=0.932577] *[#23153=0.932577] *[#23160=0.932577] *[#23167=0.932577] *[#23168=0.932577] *[#23169=0.932577] *[#23170=0.932577] *[#23172=0.932577] *[#23173=0.932577] *[#23174=0.932577] *[#23175=0.932577] *[#23178=0.932576] *[#23179=0.932576] *[#23192=0.932576] *[#23193=0.932576] *[#23200=0.932576] *[#23204=0.932576] *[#23209=0.932576] 
 + - Finalish cost = 0.932576 ; 838 funcs
 + - ini Finalish Parameters = -0.8635 0.1277 -1.0373 1.4824 2.9578 -4.4468 1.0069 1.0181 0.8553 -0.0279 0.0154 -0.0160
*[#23306=0.932575] *[#23343=0.932571] *[#23348=0.932569] *[#23367=0.932568] *[#23375=0.932568] *[#23385=0.932568] *[#23415=0.932566] *[#23425=0.932566] *[#23426=0.932566] *[#23436=0.932566] *[#23437=0.932566] *[#23438=0.932566] *[#23439=0.932566] *[#23441=0.932565] *[#23442=0.932565] *[#23445=0.932565] *[#23449=0.932565] *[#23457=0.932565] *[#23458=0.932565] *[#23459=0.932565] *[#23460=0.932564] *[#23461=0.932564] *[#23462=0.932564] *[#23463=0.932564] *[#23467=0.932564] *[#23470=0.932564] *[#23475=0.932564] *[#23479=0.932564] *[#23480=0.932564] *[#23485=0.932564] *[#23489=0.932563] *[#23490=0.932563] *[#23493=0.932563] *[#23497=0.932563] *[#23498=0.932563] *[#23499=0.932563] *[#23508=0.932563] *[#23509=0.932563] *[#23512=0.932563] *[#23513=0.932563] *[#23515=0.932563] *[#23518=0.932563] *[#23519=0.932563] *[#23520=0.932563] *[#23525=0.932563] *[#23531=0.932563] *[#23535=0.932563] *[#23537=0.932563] *[#23538=0.932562] *[#23545=0.932562] *[#23548=0.932562] *[#23551=0.932562] *[#23552=0.932562] *[#23553=0.932562] *[#23554=0.932561] *[#23557=0.932561] *[#23561=0.932561] *[#23566=0.932561] *[#23581=0.932561] *[#23597=0.932561] *[#23604=0.932561] *[#23617=0.932561] *[#23623=0.932561] *[#23626=0.932561] *[#23630=0.932561] *[#23631=0.93256] *[#23632=0.93256] *[#23635=0.93256] *[#23636=0.93256] *[#23637=0.93256] *[#23642=0.93256] *[#23649=0.93256] *[#23650=0.93256] *[#23653=0.932559] *[#23682=0.932559] *[#23683=0.932559] *[#23710=0.932559] *[#23716=0.932559] *[#23739=0.932559] *[#23740=0.932559] *[#23741=0.932559] *[#23746=0.932559] *[#23754=0.932559] 
 + - Final    cost = 0.932559 ; 560 funcs
 + Final fine fit Parameters:
       x-shift= -0.8630   y-shift=  0.1471   z-shift= -1.0598  ...  enorm=  1.3746 mm
       z-angle=  1.4411   x-angle=  2.9176   y-angle= -4.4664  ...  total=  5.4958 deg
       x-scale=  1.0062   y-scale=  1.0179   z-scale=  0.8564  ...  vol3D=  0.8771 = base bigger than source
     y/x-shear= -0.0291 z/x-shear=  0.0167 z/y-shear= -0.0163
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.8630 0.1471 -1.0598 1.4411 2.9176 -4.4664 1.0062 1.0179 0.8564 -0.0291 0.0167 -0.0163
++ Unloading unneeded data
++ Wrote -1Dmatrix_save ./MPRAGE.GB23_unif_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 38.8
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB23_unif_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB23_unif_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5237700 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 79730 voxels [11.5%] in weight mask
++ Number of points for matching = 79730
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.768 49.602 43.575 (index)
 + source center of mass = 161.100 188.393 148.649 (index)
 + source-target CM = -0.241 -2.272 -3.015 (xyz)
 + estimated center of mass shifts = -0.241 -2.272 -3.015
++ shift param auto-range: -70.9..70.4 -84.9..80.4 -76.2..70.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.241188 .. 9.758812  center = -0.241188
 + Range param#2 [y-shift] = -12.272446 .. 7.727554  center = -2.272446
 + Range param#3 [z-shift] = -13.015335 .. 6.984665  center = -3.015335
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.241188 .. 39.758812  center = -0.241188
 + Range param#2 [y-shift] = -42.272446 .. 37.727554  center = -2.272446
 + Range param#3 [z-shift] = -43.015335 .. 36.984665  center = -3.015335
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000084
++ Final parameter search ranges:
 +       x-shift =  -40.241 ..   39.759
 +       y-shift =  -42.272 ..   37.728
 +       z-shift =  -43.015 ..   36.985
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5237700 [out of 37144944] voxels
 + base mask has 99369 [out of 692386] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=252.142 usiz=404.307
 + - copying weight image
 + - using 79730 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 315.353 .. 1080.89; base clip 2704.51 .. 9810.19
 +  - versus source range 0 .. 1088.36; base range 0 .. 12483.9
 + 67866 total points stored in 135 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB23_unif_flip_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB23_unif_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5349576 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 79730 voxels [11.5%] in weight mask
++ Number of points for matching = 79730
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.768 49.602 43.575 (index)
 + source center of mass = 160.557 187.836 147.560 (index)
 + source-target CM = -0.622 -2.662 -3.778 (xyz)
 + estimated center of mass shifts = -0.622 -2.662 -3.778
++ shift param auto-range: -71.2..70.0 -85.3..80.0 -77.0..69.4
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.621689 .. 9.378311  center = -0.621689
 + Range param#2 [y-shift] = -12.662201 .. 7.337799  center = -2.662201
 + Range param#3 [z-shift] = -13.777740 .. 6.222260  center = -3.777740
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.621689 .. 39.378311  center = -0.621689
 + Range param#2 [y-shift] = -42.662201 .. 37.337799  center = -2.662201
 + Range param#3 [z-shift] = -43.777740 .. 36.222260  center = -3.777740
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000084
++ Final parameter search ranges:
 +       x-shift =  -40.622 ..   39.378
 +       y-shift =  -42.662 ..   37.338
 +       z-shift =  -43.778 ..   36.222
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5349576 [out of 37144944] voxels
 + base mask has 99369 [out of 692386] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=252.791 usiz=403.962
 + - copying weight image
 + - using 79730 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 313.539 .. 1078.42; base clip 2704.51 .. 9810.19
 +  - versus source range 0 .. 1089.63; base range 0 .. 12483.9
 + 67866 total points stored in 135 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
No flip cost is 0.886680 for lpa cost function
Flip cost is 0.932540 for lpa cost function
Data does not need flipping
#++ Creating final output: skullstripped anat data
copying from dataset /mnt/ext5/GA/fmri_data/preproc_data/GB23/MPRAGE.GB23_unif_unflipped_ns+orig to /mnt/ext5/GA/fmri_data/preproc_data/GB23/MPRAGE.GB23_unif_ns+orig
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB23_unif_unflipped_ns+orig MPRAGE.GB23_unif_ns
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat MPRAGE.GB23_unif+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base \
 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off \
 -tshift off" \
 ./MPRAGE.GB23_unif_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB23_unif*

# Finished alignment successfully

auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input MPRAGE.GB23_unif_ns+orig -skull_strip_input no -unifize_input no
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ auto_warp.py version: 0.06
# Output directory /mnt/ext5/GA/fmri_data/preproc_data/GB23/awpy/
#Script is running:
  mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB23/awpy/
cd /mnt/ext5/GA/fmri_data/preproc_data/GB23/awpy/
#Script is running (command trimmed):
  3dcopy /mnt/ext5/GA/fmri_data/preproc_data/GB23/MPRAGE.GB23_unif_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#Script is running (command trimmed):
  3dcopy /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz ./base.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB23/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB23/awpy/anat.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ anat already stripped, re-using
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_15pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 1630.240100 ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (cubic final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m -base dataset __ats_tmp__ref_base.nii_15pad+tlrc has 5 sub-bricks; will only use #0
RMS[0] = 437.582 284.866   ITER = 12/50
437.582

Warping has converged.

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
Cleanup ...
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB23/awpy/anat.aff.nii
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB23/awpy/base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.aff.nii ./base.nii
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB23/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB23/awpy/anat.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.aff.nii 
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ base dataset has more than 1 sub-brick: ignoring all but the first
++ base dataset has more than 1 sub-brick: ignoring all but the first [0]
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=4 ytop=6  zbot=19 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=/mnt/ext5/GA/fmri_data/preproc_data/GB23/awpy/base.nii  source=/mnt/ext5/GA/fmri_data/preproc_data/GB23/awpy/anat.aff.nii
++ AFNI warpomatic: 199 x 239 x 215 volume ; autobbox = 22..176 24..214 20..183 [clock= 3s 893ms]
lev=0 3..195 1..237 1..203: [first cost=-0.62286] ..... done [cost:-0.62286==>-0.70300]
lev=1 patch=145x177x153 [clock= 41s 450ms]........:[cost=-0.71646]:........done [cost:-0.70300==>-0.72081 ; 16 patches optimized, 0 skipped, bbox=5:193,3:235,3:201]
lev=2 patch=109x133x115 [clock= 57s 696ms]........done [cost:-0.72081==>-0.74075 ; 8 patches optimized, 0 skipped, bbox=5:193,3:235,3:201]
lev=3 patch=81x99x85 [clock= 1m 2s 716ms]........done [cost:-0.74075==>-0.81035 ; 23 patches optimized, 4 skipped, bbox=5:193,3:235,3:201]
lev=4 patch=61x75x65 [clock= 1m 15s 964ms].....done [cost:-0.81035==>-0.89195 ; 88 patches optimized, 37 skipped, bbox=5:193,3:235,3:201]
lev=5 patch=45x57x49 [clock= 1m 36s 125ms]..................done [cost:-0.89195==>-0.95426 ; 169 patches optimized, 83 skipped, bbox=5:193,3:235,3:201]
lev=6 patch=35x43x37 [clock= 1m 53s 742ms].......................done [cost:-0.95426==>-1.01784 ; 438 patches optimized, 291 skipped, bbox=5:193,3:235,3:201]
lev=7 patch=25x25x25 [clock= 2m 15s 272ms]..........................................done [cost:-1.01784==>-1.10907 ; 1432 patches optimized, 908 skipped, bbox=5:193,3:235,3:201]
++ ====== total number of parameters 'optimized' = 26238
 +      initial unpenalized cost = -0.622865
 +        final unpenalized cost = -1.12128
 +        final penalized   cost = -1.10907
++ Output dataset ./anat.aff.qw.nii
++ Output dataset ./anat.aff.qw_WARP.nii
++ ===== clock time = 2m 47s 572ms
#++ Applying warps to /mnt/ext5/GA/fmri_data/preproc_data/GB23/MPRAGE.GB23_unif_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.aff.qw_WARP.nii anat.aff.Xat.1D" -master ./base.nii -source /mnt/ext5/GA/fmri_data/preproc_data/GB23/MPRAGE.GB23_unif_ns+orig -prefix ./MPRAGE.GB23_unif_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/mnt/ext5/GA/fmri_data/preproc_data/GB23/MPRAGE.GB23_unif_ns+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./MPRAGE.GB23_unif_ns.aw.nii
++ total Elapsed time = 2.6 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input \
 MPRAGE.GB23_unif_ns+orig -skull_strip_input no -unifize_input no" \
 ./MPRAGE.GB23_unif_ns.aw.nii


3dbucket -DAFNI_NIFTI_VIEW=tlrc -prefix MPRAGE.GB23_unif_ns awpy/MPRAGE.GB23_unif_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
mv awpy/anat.aff.Xat.1D .
mv awpy/anat.aff.qw_WARP.nii .
if ( ! -f MPRAGE.GB23_unif_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb03.GB23.r01.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB23.r01.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 94988 voxels
 + 10936 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.747  pitch=-2.671  yaw=-1.669  dS=-1.271  dL=-0.678  dP=-1.986
++ Mean: roll=-0.232  pitch=+1.414  yaw=+0.248  dS=+0.295  dL=+0.093  dP=-0.969
++ Max : roll=+1.146  pitch=+5.443  yaw=+0.985  dS=+3.243  dL=+0.775  dP=+2.227
++ Max displacements (mm) for each sub-brick:
 0.25(0.00) 0.19(0.06) 0.23(0.22) 0.19(0.06) 0.23(0.09) 0.18(0.11) 0.35(0.18) 0.60(0.25) 0.88(0.30) 0.30(0.58) 0.29(0.18) 0.18(0.12) 0.23(0.08) 0.18(0.06) 0.23(0.06) 0.13(0.09) 0.19(0.06) 0.06(0.13) 0.13(0.07) 0.03(0.10) 0.07(0.06) 0.00(0.07) 0.08(0.08) 0.04(0.08) 0.09(0.08) 0.08(0.07) 0.10(0.08) 0.13(0.08) 0.14(0.06) 0.04(0.16) 0.07(0.04) 0.18(0.15) 0.12(0.12) 0.16(0.07) 0.16(0.16) 0.15(0.06) 0.14(0.05) 0.19(0.16) 0.17(0.01) 0.22(0.05) 0.21(0.04) 0.22(0.03) 0.16(0.15) 0.18(0.10) 0.23(0.07) 0.27(0.05) 0.25(0.03) 0.28(0.04) 0.25(0.06) 0.23(0.08) 0.20(0.10) 0.25(0.17) 0.30(0.07) 0.34(0.05) 0.35(0.12) 0.44(0.15) 0.34(0.10) 0.37(0.04) 0.30(0.08) 0.26(0.11) 0.51(0.34) 0.88(0.47) 1.21(0.42) 1.07(0.17) 1.07(0.08) 1.07(0.04) 1.05(0.07) 1.01(0.06) 1.16(0.18) 1.18(0.04) 1.23(0.06) 1.26(0.05) 1.27(0.03) 1.20(0.09) 1.15(0.08) 1.23(0.09) 1.27(0.05) 1.32(0.10) 1.31(0.06) 1.36(0.06) 1.33(0.07) 1.39(0.08) 1.30(0.14) 1.29(0.08) 1.28(0.06) 1.42(0.17) 1.36(0.08) 1.40(0.05) 1.35(0.06) 1.41(0.07) 1.38(0.05) 1.32(0.08) 1.28(0.10) 1.33(0.06) 1.33(0.07) 1.36(0.06) 1.36(0.03) 1.21(0.16) 1.16(0.14) 1.05(0.14) 1.19(0.16) 1.27(0.09) 1.31(0.45) 2.84(1.72) 3.31(0.80) 3.43(0.36) 3.26(0.54) 3.10(0.28) 2.74(0.37) 2.81(0.11) 2.75(0.13) 2.60(0.20) 2.52(0.11) 2.56(0.17) 2.60(0.14) 2.62(0.15) 2.64(0.10) 2.65(0.07) 2.57(0.23) 2.59(0.18) 2.62(0.08) 2.70(0.08) 2.73(0.08) 2.73(0.06) 2.76(0.09) 2.74(0.07) 2.75(0.12) 2.63(0.14) 2.73(0.20) 2.76(0.09) 2.82(0.12) 2.80(0.10) 2.87(0.09) 2.86(0.07) 2.88(0.06) 2.88(0.06) 2.89(0.09) 2.81(0.10) 2.75(0.07) 2.80(0.10) 2.94(0.17) 2.85(0.11) 2.84(0.06) 2.80(0.12) 2.84(0.09) 2.80(0.09) 2.84(0.09) 2.86(0.06) 2.83(0.06) 2.71(0.16) 2.79(0.16) 2.84(0.08) 2.87(0.07) 2.85(0.09) 2.87(0.05) 2.87(0.08) 2.81(0.06) 2.73(0.11) 2.80(0.12) 2.87(0.07) 2.90(0.09) 2.86(0.06) 2.89(0.10) 2.74(0.15) 2.63(0.14) 2.67(0.06) 2.79(0.17) 2.76(0.09) 2.79(0.06) 2.78(0.06) 2.81(0.06) 2.75(0.10) 2.68(0.09) 2.62(0.09) 2.75(0.22) 2.79(0.09) 2.77(0.06) 2.79(0.09) 2.75(0.06) 2.69(0.12) 2.59(0.13) 2.66(0.14) 2.73(0.08) 2.73(0.05) 2.75(0.04) 2.80(0.06) 2.77(0.06) 2.62(0.18) 2.58(0.05) 2.65(0.12) 2.72(0.10) 2.71(0.03) 2.75(0.06) 2.66(0.16) 2.61(0.07) 2.64(0.04) 2.71(0.12) 2.86(0.19) 2.83(0.06) 2.76(0.12) 2.67(0.17) 2.45(0.24) 2.47(0.13) 2.48(0.16) 2.55(0.19) 2.59(0.16) 2.68(0.15) 2.71(0.08) 2.60(0.13) 2.58(0.10) 2.63(0.06) 2.71(0.17) 2.71(0.09) 2.80(0.14) 2.78(0.09) 2.78(0.10) 2.70(0.13) 2.80(0.17) 2.85(0.05) 2.88(0.09) 2.87(0.02) 2.87(0.04) 2.88(0.03) 2.85(0.07) 2.76(0.10) 2.74(0.02) 2.80(0.15) 2.76(0.07) 2.69(0.23) 2.69(0.18) 2.44(0.31) 2.25(0.41) 2.23(0.41) 2.21(0.24) 2.26(0.11) 2.24(0.13) 2.25(0.13) 2.32(0.21) 2.36(0.11) 2.34(0.25) 2.41(0.24) 2.41(0.15) 2.43(0.09) 2.45(0.10) 2.53(0.13) 2.55(0.12) 2.50(0.11) 2.46(0.06) 2.46(0.02) 2.55(0.11) 2.58(0.06) 2.61(0.08) 2.59(0.06) 2.58(0.05) 2.57(0.03) 2.51(0.08) 2.46(0.13) 2.48(0.15) 2.53(0.07) 2.52(0.07) 2.55(0.06) 2.61(0.12) 2.73(0.19) 2.72(0.23) 2.72(0.23) 2.70(0.07) 2.68(0.08) 2.60(0.24) 2.43(0.28) 2.48(0.09) 2.60(0.13) 2.61(0.09) 2.55(0.15) 2.57(0.23) 2.56(0.12) 2.59(0.04) 2.59(0.03) 2.60(0.03) 2.62(0.11) 2.69(0.28) 2.78(0.25) 2.99(0.26) 3.62(0.75) 3.41(0.42) 3.26(0.22) 3.21(0.18) 3.26(0.16) 3.23(0.12) 3.69(0.61) 3.68(0.26) 3.66(0.07) 3.60(0.06) 3.43(0.20) 3.49(0.19) 3.56(0.09) 3.62(0.08) 3.70(0.08) 3.62(0.12) 3.62(0.05) 3.58(0.12) 3.60(0.11) 3.60(0.29) 3.44(0.26) 2.98(0.63) 2.71(0.34) 3.00(0.40) 2.83(0.36) 2.93(0.14) 3.02(0.28) 3.08(0.15) 3.11(0.18) 3.15(0.11) 3.19(0.15) 3.15(0.09) 3.06(0.11) 3.01(0.11) 2.88(0.19) 2.88(0.08) 3.12(0.26) 3.48(0.44) 3.94(0.54) 5.04(1.30) 6.01(1.06) 6.58(0.68) 6.90(0.43) 7.15(0.26) 7.32(0.18) 7.39(0.08) 6.29(1.30) 5.92(0.66) 5.64(0.57) 5.58(0.20) 5.70(0.13) 5.60(0.19) 5.41(0.27) 5.26(0.20) 5.67(0.44) 5.57(0.15) 5.50(0.10) 5.54(0.07) 5.52(0.04) 5.47(0.06) 5.48(0.05) 5.39(0.09) 5.36(0.07) 5.31(0.06) 5.19(0.18) 4.70(0.50) 3.75(0.96) 3.63(0.34) 4.18(0.79) 4.05(0.23) 3.99(0.20) 4.51(0.57) 4.53(0.26) 4.40(0.15) 4.32(0.10) 3.95(0.54) 3.66(0.36) 3.41(0.47) 2.84(0.75) 2.66(0.24) 2.04(0.88) 2.04(1.68) 2.86(1.93) 3.43(1.08) 3.86(0.50) 3.99(0.19) 4.11(0.14) 4.18(0.11) 3.68(0.55) 2.59(1.26) 2.59(0.29) 2.52(0.13) 2.48(0.17) 2.31(0.26) 2.22(0.27) 2.20(0.47) 2.38(0.26) 2.22(0.36) 1.97(0.56) 2.07(0.18) 1.91(0.28) 2.02(0.28) 2.05(0.15) 2.06(0.17) 2.10(0.17) 2.01(0.20) 2.18(0.18) 2.25(0.11) 2.20(0.21) 2.23(0.19) 2.15(0.23) 2.05(0.13) 1.97(0.39) 1.95(0.16) 1.96(0.08) 1.96(0.09) 2.03(0.09) 2.01(0.09) 2.04(0.13) 2.02(0.02) 2.07(0.09) 2.01(0.09) 2.05(0.06) 1.99(0.06) 2.04(0.07) 2.02(0.05) 2.09(0.07) 2.12(0.14) 2.13(0.08) 2.12(0.16) 2.18(0.10) 2.16(0.06) 2.17(0.06) 2.20(0.11) 2.18(0.12) 2.17(0.17) 2.07(0.31) 2.07(0.13) 2.09(0.09) 2.09(0.06) 2.12(0.14) 2.08(0.15) 2.06(0.21) 2.06(0.14) 2.02(0.08) 2.03(0.05) 2.07(0.21) 2.17(0.16) 2.09(0.14) 2.14(0.18) 2.17(0.11) 2.27(0.23) 2.21(0.10) 2.33(0.28) 2.29(0.29) 2.02(0.44) 1.96(0.16) 1.94(0.06) 1.93(0.06) 1.99(0.21) 2.02(0.16) 2.18(0.26) 2.19(0.18) 2.18(0.11) 2.20(0.16) 2.19(0.03) 2.18(0.10) 2.17(0.07) 2.06(0.15) 2.05(0.06) 1.98(0.16) 2.04(0.11) 1.98(0.08) 2.09(0.15) 2.12(0.16) 2.15(0.18) 2.12(0.07) 2.05(0.13) 2.06(0.07) 2.25(0.40) 2.19(0.17) 2.21(0.09) 2.15(0.23) 2.44(0.57) 2.62(0.47) 2.49(0.22) 2.44(0.16) 2.35(0.17) 2.35(0.05) 2.33(0.07) 2.30(0.08) 2.38(0.09) 2.36(0.13) 2.33(0.05) 2.32(0.10) 2.34(0.11) 2.44(0.53) 2.47(0.27) 2.40(0.33) 2.44(0.19) 2.38(0.11) 2.42(0.16) 2.41(0.15) 2.34(0.10) 2.32(0.19) 2.32(0.06) 2.30(0.15) 2.40(0.10) 2.77(0.52) 2.82(0.26) 3.57(0.93) 4.00(0.62) 4.29(0.78) 4.53(0.53) 5.00(0.62) 5.47(0.50) 5.84(0.39) 6.07(0.26) 6.28(0.21) 6.37(0.10) 6.45(0.09) 6.51(0.06) 5.81(0.90) 4.38(1.79) 4.19(0.48) 3.84(0.53) 3.73(0.19) 2.88(0.88) 2.46(0.57) 2.64(0.24) 3.00(0.38) 3.10(0.14) 3.24(0.19) 3.34(0.18) 3.29(0.19) 3.00(0.46) 3.09(0.53) 2.86(0.23) 2.90(0.16) 2.84(0.26) 2.87(0.10) 2.87(0.21) 2.94(0.09) 2.97(0.08) 2.98(0.15) 2.95(0.07) 2.92(0.13) 2.62(0.33) 2.55(0.26) 2.81(0.35) 2.70(0.27) 2.62(0.10) 2.81(0.28) 2.81(0.09) 2.76(0.12) 2.71(0.08) 2.65(0.14) 2.58(0.14) 2.49(0.14) 2.49(0.10) 2.49(0.07) 2.59(0.14) 2.67(0.10) 2.75(0.14) 2.83(0.08) 2.80(0.08) 2.86(0.07) 2.82(0.05) 2.80(0.06) 2.76(0.14) 2.72(0.12) 2.73(0.14) 2.72(0.07) 2.69(0.16) 2.72(0.03) 2.72(0.06) 2.76(0.11) 2.72(0.21) 2.70(0.17) 2.73(0.08) 2.71(0.05) 2.72(0.06) 2.70(0.03) 2.75(0.06) 2.77(0.23) 2.73(0.15) 2.64(0.20) 2.69(0.17) 2.63(0.15) 2.58(0.37) 2.71(0.32) 2.73(0.45) 2.92(0.36) 2.90(0.10) 2.84(0.10) 2.75(0.14) 2.79(0.17) 2.72(0.24) 2.84(0.29) 3.02(0.28) 3.03(0.28) 3.11(0.19) 3.12(0.15) 3.07(0.05) 2.89(0.24) 2.90(0.15) 2.87(0.06) 2.91(0.07) 2.94(0.20) 3.03(0.14) 3.04(0.26) 3.05(0.09) 3.04(0.07) 3.04(0.03) 3.02(0.04) 2.97(0.09) 2.95(0.14) 2.97(0.05) 3.00(0.12) 2.98(0.13) 3.00(0.10) 2.96(0.14) 2.98(0.05) 2.97(0.07) 2.96(0.09) 2.94(0.17) 2.87(0.20) 3.01(0.18) 2.71(0.32) 2.25(0.62) 2.06(0.41) 2.12(0.28) 2.03(0.13) 2.11(0.28) 1.51(1.43) 1.41(0.65) 1.23(0.46) 1.23(0.23) 1.63(0.71) 2.07(0.54) 1.93(0.29) 1.94(0.15) 1.84(0.15) 1.91(0.23) 2.11(0.28) 2.33(0.36) 2.38(1.03) 2.63(0.32) 2.89(0.54) 3.26(0.70) 3.76(0.66) 4.55(0.80) 4.69(0.48) 4.85(0.44) 5.13(0.48) 5.50(0.47) 5.77(0.31) 5.89(0.15) 5.88(0.20) 5.15(1.29) 4.88(0.71) 4.43(0.72) 4.25(0.21) 4.16(0.14) 4.13(0.10) 4.03(0.16) 3.87(0.21) 3.63(0.32) 3.42(0.22) 3.27(0.19) 3.17(0.12) 2.92(0.38) 2.77(0.29) 2.89(0.23) 2.85(0.17) 3.10(0.29) 3.28(0.20) 3.15(0.20) 2.99(0.24) 3.17(0.20) 3.11(0.07) 3.01(0.11) 2.97(0.07) 2.95(0.04) 2.96(0.03) 2.90(0.07) 2.95(0.06) 2.92(0.03) 2.89(0.09) 2.85(0.04) 2.85(0.08) 2.80(0.09) 2.78(0.04) 2.71(0.08) 2.66(0.09) 2.59(0.10) 2.59(0.10) 2.54(0.18) 2.56(0.22) 2.59(0.35) 2.60(0.09) 2.62(0.09) 2.72(0.16) 2.68(0.12) 2.59(0.20) 2.62(0.26) 2.58(0.08) 2.49(0.16) 2.42(0.10) 2.32(0.15) 2.30(0.07) 2.25(0.11) 2.28(0.07) 2.23(0.14) 2.25(0.11) 2.26(0.07) 2.31(0.05) 2.27(0.10) 2.26(0.07) 2.25(0.16) 2.25(0.13) 2.24(0.15) 2.22(0.10) 2.28(0.13) 2.37(0.14) 2.40(0.06) 2.37(0.21) 2.35(0.10) 2.37(0.23) 2.40(0.10) 2.36(0.14) 2.38(0.08) 2.44(0.20) 2.38(0.15) 2.34(0.39) 2.36(0.19) 2.21(0.36) 2.30(0.38) 2.40(0.17) 2.65(0.28) 2.71(0.25) 2.71(0.14) 2.73(0.07) 2.72(0.11) 2.83(0.15) 2.93(0.11) 2.77(0.73) 2.87(0.11) 2.85(0.37) 2.76(0.09) 2.81(0.09) 2.81(0.12) 2.88(0.11) 2.91(0.13) 3.01(0.23) 3.04(0.20) 3.11(0.18) 3.23(0.14) 3.30(0.14) 3.31(0.06) 3.36(0.09) 3.38(0.06) 3.43(0.08) 3.45(0.10) 3.44(0.04) 3.43(0.08) 3.43(0.06) 3.42(0.05) 3.43(0.06) 3.41(0.04) 3.42(0.04) 3.39(0.05) 3.40(0.04) 3.40(0.05) 3.40(0.05) 3.40(0.07) 3.35(0.11) 3.35(0.04) 3.37(0.03) 3.38(0.03) 3.41(0.03) 3.42(0.03) 3.43(0.03) 3.47(0.09) 3.47(0.03) 3.45(0.09) 3.46(0.04) 3.48(0.03) 3.48(0.05) 3.51(0.04) 3.51(0.06) 3.54(0.07) 3.50(0.22) 3.32(0.19) 3.23(0.30) 3.27(0.37) 3.23(0.10) 3.38(0.40) 3.29(0.43) 3.16(0.16) 3.12(0.09) 3.10(0.09) 3.06(0.09) 3.04(0.14) 2.96(0.15) 2.90(0.12) 2.91(0.18) 2.92(0.03) 2.93(0.18) 2.70(0.28) 2.62(0.19) 2.81(0.25) 2.73(0.39) 2.77(0.55) 3.05(0.37) 3.20(0.18) 3.31(0.77) 3.22(0.38) 3.12(0.14) 3.13(0.07) 3.18(0.07) 3.44(0.37) 3.53(0.34) 3.85(0.43) 4.58(1.23) 5.03(1.16) 5.09(0.52) 5.13(0.14) 5.39(0.26) 5.92(0.57) 6.77(1.00) 7.14(0.64) 7.33(0.33) 7.46(0.16) 7.52(0.14) 7.65(0.20) 7.74(0.13) 7.71(0.12) 6.23(1.76) 4.78(1.95) 4.66(0.42) 4.51(0.20) 4.36(0.29) 4.12(0.28) 3.99(0.21) 4.00(0.09) 3.88(0.21) 3.98(0.14) 3.98(0.23) 3.82(0.16) 3.69(0.14) 3.58(0.11) 3.49(0.11) 3.40(0.10) 3.32(0.17) 3.19(0.30) 2.90(0.61) 2.73(0.75) 3.02(0.43) 3.11(0.21) 3.03(0.09) 2.93(0.46) 2.94(0.30) 2.69(0.68) 2.87(0.57) 2.93(0.20) 2.93(0.40) 2.77(0.35) 2.72(0.16) 2.67(0.08) 2.65(0.07) 2.74(0.24) 2.91(0.25) 2.71(0.23) 2.64(0.17) 2.54(0.15) 2.53(0.05) 2.46(0.13) 2.38(0.09) 2.37(0.13) 2.54(0.29) 2.57(0.08) 2.54(0.08) 2.50(0.05) 2.39(0.13) 2.40(0.05) 2.35(0.06) 2.32(0.05) 2.32(0.11) 2.29(0.13) 2.44(0.18) 2.47(0.20) 2.45(0.20) 2.52(0.15) 2.60(0.19) 2.71(0.42) 2.73(0.34) 2.75(0.24) 2.66(0.14) 2.80(0.26) 3.27(0.59) 3.79(0.67) 4.45(0.79) 5.06(0.96) 5.69(0.92) 6.22(0.82) 7.13(0.93) 7.66(0.60) 8.15(0.53) 8.47(0.32) 8.60(0.14) 8.66(0.08) 8.64(0.08) 7.56(1.35) 6.21(1.47) 5.68(0.65) 5.45(0.42) 5.28(0.28) 5.12(0.22) 4.94(0.28) 4.97(0.22) 4.87(0.18) 4.79(0.09) 4.68(0.12) 4.74(0.37) 4.76(0.23) 4.74(0.14) 4.55(0.20) 4.43(0.20) 4.34(0.14) 4.37(0.08) 4.25(0.12) 4.19(0.21) 3.94(0.47) 4.21(0.47) 4.24(0.13) 4.27(0.15) 4.19(0.09) 4.06(0.14) 3.98(0.16) 3.87(0.12) 3.75(0.17) 3.66(0.10) 3.67(0.06) 3.56(0.17) 3.61(0.31) 3.88(0.43) 4.16(0.37) 4.39(0.40) 4.27(0.41) 3.94(0.50) 3.74(0.56) 3.96(0.42) 4.27(0.31) 4.10(0.22) 4.17(0.37) 4.41(0.39) 4.27(0.44) 4.18(0.12) 4.09(0.12) 3.94(0.57) 4.48(1.15) 5.09(0.69) 5.42(0.42) 5.54(0.23) 5.70(0.33) 5.93(0.40) 6.38(0.79) 6.86(0.86) 7.09(0.44) 7.35(0.62) 7.77(0.80) 8.21(0.76) 8.76(0.82) 9.15(0.71) 9.41(0.47) 9.55(0.30) 9.56(0.17) 9.54(0.17) 8.90(0.70) 7.79(1.24) 7.28(0.58) 6.69(0.76) 6.25(0.51) 6.09(0.28) 6.06(0.47) 6.14(0.77) 5.17(1.08) 5.08(0.45) 5.10(0.10) 5.05(0.07) 4.99(0.13) 4.86(0.14) 4.67(0.24) 4.53(0.16) 4.37(0.20) 4.34(0.10) 4.26(0.09) 4.24(0.11) 4.25(0.05) 4.27(0.04) 4.22(0.12) 4.18(0.13) 4.20(0.07) 4.15(0.12) 4.12(0.09) 4.15(0.21) 4.06(0.14) 3.99(0.21) 4.02(0.22) 4.24(0.34) 4.60(0.53) 4.47(0.75) 4.43(0.20) 4.41(0.12) 4.40(0.13) 4.46(0.07) 4.45(0.09) 4.42(0.08) 4.38(0.09) 4.39(0.08) 4.47(0.09) 4.35(0.23) 4.34(0.13) 4.81(0.48) 4.77(0.23) 4.68(0.13) 4.66(0.18) 4.62(0.13) 4.69(0.07) 4.61(0.24) 4.45(0.23) 4.71(0.27) 4.61(0.20) 4.59(0.08) 4.52(0.13) 4.48(0.08) 4.43(0.20) 4.49(0.11) 4.49(0.04) 4.55(0.10) 4.76(0.25) 4.81(0.11) 4.90(0.13) 4.88(0.05) 4.85(0.07) 4.86(0.07) 4.84(0.06) 4.80(0.12) 4.74(0.24) 4.72(0.19) 4.99(1.05) 4.75(0.40) 4.48(0.49) 4.43(0.31) 4.43(0.15) 4.45(0.33) 4.40(0.19) 4.37(0.17) 4.26(0.13) 4.13(0.16) 3.92(0.28) 3.76(0.41) 4.10(0.50) 3.97(0.56) 4.01(0.28) 3.83(0.23) 3.79(0.13) 3.80(0.17) 4.01(0.27) 4.16(0.21) 4.31(0.19) 4.49(0.18) 4.61(0.36) 4.52(0.12) 4.44(0.11) 4.35(0.11) 4.32(0.09) 4.29(0.13) 4.35(0.07) 4.33(0.14) 4.40(0.07) 4.41(0.07) 4.46(0.09) 4.44(0.08) 4.47(0.08) 4.45(0.10) 4.43(0.18) 4.33(0.11) 4.41(0.10) 4.43(0.17) 4.46(0.29) 3.98(1.45) 3.96(0.22) 4.00(0.19) 4.04(0.28) 3.98(0.42) 3.67(0.36) 3.47(0.66) 3.37(0.38) 3.43(0.47) 3.32(0.28) 3.08(0.82) 3.38(3.37) 4.81(1.90) 5.16(0.42) 5.86(0.74) 7.32(1.55) 7.60(0.78) 7.24(1.02) 6.92(0.39) 8.11(1.70) 8.38(0.45) 8.07(0.72)
++ Max displacement in automask = 9.56 (mm) at sub-brick 959
++ Max delta displ  in automask = 3.37 (mm) at sub-brick 1085
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb03.GB23.r01.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB23_unif_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB23_unif_ns+tlrc -dxyz 2.5 -source pb02.GB23.r01.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB23_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB23.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 735.8 sec
3dNwarpApply -master MPRAGE.GB23_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB23_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb03.GB23.r02.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB23.r02.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 97171 voxels
 + 11160 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.674  pitch=-0.991  yaw=-3.745  dS=-1.369  dL=-2.254  dP=-3.160
++ Mean: roll=-0.991  pitch=+3.387  yaw=-0.776  dS=+1.255  dL=-0.739  dP=-1.714
++ Max : roll=+0.029  pitch=+9.321  yaw=+0.309  dS=+4.899  dL=-0.098  dP=+0.649
++ Max displacements (mm) for each sub-brick:
 2.54(0.00) 2.54(0.06) 2.57(0.06) 2.56(0.04) 2.58(0.02) 2.53(0.11) 2.53(0.08) 2.51(0.05) 2.49(0.04) 2.48(0.07) 2.64(0.26) 2.68(0.08) 2.68(0.03) 2.61(0.10) 2.64(0.08) 2.60(0.11) 2.67(0.10) 2.75(0.17) 2.75(0.07) 2.62(0.19) 2.71(0.16) 2.72(0.10) 2.63(0.14) 2.59(0.09) 2.56(0.12) 2.56(0.14) 2.55(0.13) 2.53(0.11) 2.52(0.07) 2.44(0.20) 2.71(0.39) 2.84(0.43) 2.88(0.27) 2.98(0.32) 3.75(1.17) 3.84(0.42) 3.43(0.67) 3.41(0.65) 3.48(0.51) 3.61(0.27) 3.81(0.30) 3.76(0.34) 3.78(0.13) 3.76(0.10) 3.76(0.13) 3.52(0.71) 3.81(0.64) 3.61(0.89) 3.38(0.42) 3.60(0.60) 3.77(0.60) 4.05(0.77) 4.34(0.71) 4.78(0.89) 5.41(1.03) 6.75(1.37) 7.54(0.81) 8.02(0.58) 8.36(0.39) 8.63(0.34) 8.89(0.32) 8.61(0.65) 7.14(2.00) 5.98(1.29) 5.25(0.90) 4.54(0.93) 4.44(0.41) 4.45(0.20) 4.53(0.15) 4.81(0.37) 5.26(1.02) 4.87(0.62) 4.60(0.30) 4.43(0.56) 4.05(1.61) 4.35(2.82) 4.23(0.81) 4.21(0.14) 4.78(2.87) 5.47(1.00) 5.50(0.12) 5.34(0.30) 4.83(0.64) 3.28(1.82) 3.24(1.33) 3.50(0.58) 3.53(0.33) 3.63(0.28) 3.58(0.09) 3.57(0.07) 3.76(0.28) 3.77(0.37) 3.77(0.09) 3.78(0.10) 3.80(0.04) 3.84(0.07) 3.89(0.10) 3.89(0.10) 3.90(0.06) 3.89(0.05) 3.91(0.04) 3.89(0.06) 3.91(0.02) 3.93(0.04) 3.93(0.02) 3.96(0.06) 3.98(0.03) 4.00(0.04) 3.97(0.10) 3.81(0.27) 3.82(0.17) 3.76(0.08) 3.83(0.17) 3.91(0.09) 3.89(0.11) 3.93(0.14) 3.71(0.23) 3.74(0.18) 3.73(0.21) 3.67(0.17) 3.61(0.17) 3.50(0.13) 3.49(0.14) 3.46(0.09) 3.38(0.12) 3.36(0.07) 3.31(0.13) 3.31(0.08) 3.32(0.13) 3.40(0.25) 3.83(0.59) 3.67(0.36) 3.58(0.13) 3.38(0.22) 3.36(0.17) 3.15(0.23) 3.12(0.24) 3.48(1.06) 3.81(0.60) 3.90(0.22) 3.70(0.27) 3.62(0.13) 3.44(0.23) 3.39(0.06) 3.41(0.05) 3.45(0.17) 3.73(0.37) 3.86(0.19) 4.11(0.40) 4.41(0.38) 4.52(0.34) 4.75(0.69) 5.26(0.62) 5.92(0.68) 6.64(0.81) 7.48(0.94) 8.25(0.87) 9.51(1.33) 10.73(1.44) 11.33(0.68) 11.61(0.38) 11.80(0.40) 12.03(0.33) 12.19(0.27) 12.02(0.37) 9.50(3.37) 8.78(1.01) 8.45(0.39) 8.32(0.19) 8.95(0.91) 9.35(0.78) 6.91(4.53) 6.28(2.45) 6.12(0.76) 6.33(0.98) 6.39(0.50) 6.18(0.30) 5.82(0.64) 6.37(1.41) 6.30(0.33) 6.03(0.38) 5.89(0.18) 5.83(0.36) 5.79(1.23) 5.63(0.19) 5.54(0.48) 5.47(0.24) 5.47(0.35) 5.70(0.28) 5.93(0.29) 5.86(0.26) 5.82(0.17) 5.82(0.15) 5.72(0.13) 5.55(0.23) 5.57(0.37) 5.64(0.31) 5.74(0.23) 6.04(1.18) 6.08(2.21) 6.33(1.53) 6.39(0.57) 5.91(0.84) 5.55(1.15) 5.87(1.24) 5.90(0.60) 5.78(0.47) 5.97(1.12) 6.79(2.03) 6.88(0.40) 6.59(0.61) 5.98(0.90) 5.73(1.33) 5.85(0.65) 5.66(0.75) 5.64(0.42) 5.67(0.58) 5.72(0.34) 5.95(0.44) 5.94(0.27) 6.03(0.26) 6.02(0.17) 6.06(0.09) 5.94(0.12) 5.86(0.15) 5.80(0.10) 5.72(0.19) 5.68(0.09) 5.64(0.12) 5.62(0.06) 5.60(0.14) 5.67(0.16) 5.64(0.24) 5.69(0.14) 5.64(0.18) 5.59(0.40) 5.46(0.18) 5.42(0.06) 5.44(0.15) 5.30(0.16) 5.48(0.37) 5.54(0.20) 5.67(0.24) 5.85(0.28) 6.62(1.21) 7.23(1.73) 7.46(0.95) 7.47(0.57) 7.20(0.36) 6.68(1.13) 5.91(0.80) 5.14(1.08) 5.49(0.68) 5.62(0.60) 5.46(0.34) 5.36(0.15) 5.28(0.13) 5.38(0.22) 5.38(0.25) 5.42(0.23) 5.62(0.22) 5.52(0.30) 5.40(0.28) 5.29(0.23) 5.22(0.13) 5.21(0.19) 5.23(0.16) 5.27(0.18) 5.48(0.27) 5.55(0.35) 5.66(1.19) 6.01(0.92) 6.41(1.00) 6.83(1.01) 8.04(1.62) 9.48(1.79) 11.08(1.81) 11.86(1.05) 12.35(0.72) 12.70(0.45) 12.85(0.17) 12.55(0.60) 11.11(2.18) 10.79(0.51) 10.28(0.78) 10.07(0.22) 9.68(0.45) 9.15(0.54) 8.87(0.32) 8.84(0.16) 8.67(0.20) 8.50(0.17) 8.41(0.10) 8.37(0.04) 7.81(0.63) 7.38(0.58) 7.41(0.11) 7.39(0.19) 7.30(0.13) 7.17(0.15) 7.07(0.18) 7.16(0.22) 7.39(0.30) 8.22(0.91) 8.91(0.87) 8.79(0.62) 9.07(0.77) 9.14(0.54) 10.09(1.00) 10.63(0.74) 10.73(0.17) 10.70(0.20) 10.60(0.17) 10.53(0.12) 9.73(1.52) 8.53(1.46) 8.08(0.54) 7.83(0.28) 7.60(0.27) 7.37(0.26) 7.14(0.29) 7.07(0.16) 7.18(0.23) 7.20(0.31) 7.04(0.20) 7.23(0.40) 7.30(0.12) 7.08(0.23) 6.88(0.23) 6.81(0.14) 6.74(0.11) 6.74(0.14) 6.57(0.27) 6.53(0.15) 6.44(0.18) 6.36(0.09) 6.33(0.08) 6.25(0.09) 6.22(0.09) 6.17(0.09) 6.17(0.07) 6.16(0.05) 6.15(0.06) 6.17(0.04) 6.15(0.06) 6.17(0.03) 6.17(0.01) 6.14(0.04) 6.13(0.05) 6.07(0.06) 6.06(0.02) 6.05(0.03) 6.06(0.02) 6.04(0.03) 6.06(0.04) 6.04(0.03) 6.08(0.13) 6.05(0.06) 6.02(0.15) 6.07(0.08) 6.03(0.13) 6.12(0.40) 6.52(0.97) 6.90(0.93) 7.57(0.80) 7.64(0.15) 7.32(0.39) 7.28(0.07) 7.11(0.19) 7.04(0.10) 6.89(0.17) 6.83(0.07) 6.98(0.21) 7.62(0.77) 9.44(1.91) 9.69(0.33) 9.32(0.38) 9.17(0.16) 8.90(0.28) 8.70(0.21) 8.66(0.11) 8.70(0.07) 8.63(0.09) 8.50(0.16) 8.54(0.08) 8.79(0.27) 8.77(0.43) 8.28(0.61) 7.88(0.46) 7.94(0.24) 7.65(0.35) 7.96(0.37) 8.36(0.44) 7.46(0.99) 7.31(0.20) 7.45(0.16) 7.93(0.59) 7.49(0.49) 7.66(0.21) 8.07(0.47) 7.94(0.23) 7.98(0.07) 7.94(0.09) 7.80(0.17) 7.99(0.22) 7.99(0.05) 7.94(0.10) 7.89(0.10) 7.83(0.06) 7.81(0.03) 7.84(0.04) 7.75(0.18) 7.30(0.56) 7.23(0.36) 7.09(0.15) 7.11(0.09) 7.12(0.09) 7.11(0.11) 7.02(0.18) 6.99(0.14) 7.35(0.54) 8.22(1.03) 8.95(0.83) 9.32(0.41) 9.52(0.27) 9.78(0.34) 10.03(0.68) 10.78(0.95) 11.47(0.72) 12.04(0.62) 12.73(0.73) 13.55(0.96) 14.52(1.25) 15.04(0.58) 15.26(0.27) 15.46(0.23) 15.83(0.40) 16.40(0.68) 16.88(0.65) 17.22(0.48) 17.33(0.26) 17.45(0.21) 17.35(0.15) 15.84(2.08) 14.47(1.82) 13.47(1.14) 12.90(0.59) 12.43(0.63) 11.97(0.79) 11.71(1.79) 11.09(0.87) 11.14(0.51) 10.74(0.60) 10.59(0.71) 10.07(0.84) 10.47(1.07) 10.96(1.04) 11.13(0.37) 10.96(0.21) 11.09(0.16) 11.05(0.17) 11.13(0.21) 11.08(0.12) 11.05(0.12) 10.76(0.32) 10.55(1.11) 10.60(1.12) 10.62(0.35) 10.75(0.22) 10.88(0.19) 10.82(0.10) 10.82(0.05) 10.73(0.09) 10.58(0.16) 10.42(0.18) 10.35(0.12) 10.14(0.55) 9.77(0.43) 9.57(0.35) 9.27(0.30) 9.03(0.26) 8.20(1.22) 7.33(1.46) 6.88(0.68) 6.92(0.59) 7.06(0.70) 7.43(0.43) 7.50(0.18) 7.54(0.14) 7.43(0.25) 7.69(0.34) 7.87(0.34) 7.67(0.59) 7.75(0.48) 7.98(0.41) 7.93(0.24) 7.76(0.23) 7.50(0.29) 7.26(0.30) 6.95(0.42) 6.92(0.19) 6.84(0.15) 6.89(0.06) 6.81(0.11) 6.81(0.12) 6.80(0.07) 6.82(0.05) 6.80(0.10) 6.76(0.08) 6.98(0.37) 7.01(0.20) 6.91(0.38) 6.96(0.17) 6.93(0.20) 7.01(0.35) 7.20(0.28) 7.49(0.49) 7.28(0.59) 7.01(0.98) 7.13(0.86) 7.35(3.15) 7.99(5.02) 9.50(3.16) 10.09(0.89) 10.30(0.47) 10.47(0.37) 10.57(0.20) 10.51(0.19) 10.46(0.20) 10.36(0.18) 10.17(0.25) 10.07(0.27) 9.72(0.94) 8.81(1.54) 8.05(1.22) 7.95(1.13) 7.59(0.71) 6.10(2.20) 6.08(0.45) 6.48(0.61) 6.32(0.39) 6.74(0.80) 6.12(1.04) 6.32(0.40) 6.30(0.12) 6.62(0.43) 6.54(0.31) 6.38(0.21) 6.25(0.15) 6.16(0.14) 6.10(0.16) 5.97(0.24) 5.99(0.27) 5.94(0.38) 6.00(0.21) 5.94(0.21) 5.97(0.22) 5.89(0.16) 5.66(0.28) 5.69(0.16) 5.69(0.10) 5.68(0.17) 6.16(0.54) 5.90(0.27) 5.84(0.07) 5.77(0.16) 5.75(0.07) 5.75(0.11) 5.61(0.25) 5.58(0.23) 5.51(0.09) 5.55(0.09) 5.53(0.04) 5.51(0.11) 5.51(0.05) 5.59(0.11) 5.63(0.04) 5.53(0.57) 5.51(0.16) 5.55(0.08) 5.56(0.10) 5.58(0.07) 5.58(0.05) 5.51(0.15) 5.41(0.31) 5.52(0.15) 5.38(0.17) 5.41(0.06) 5.32(0.09) 5.45(0.19) 5.57(0.44) 5.47(0.12) 5.48(0.07) 5.62(0.17) 5.97(0.63) 5.86(0.19) 6.05(0.24) 6.02(0.10) 6.11(0.12) 6.08(0.06) 6.08(0.03) 6.03(0.07) 6.04(0.05) 6.01(0.06) 6.00(0.07) 5.98(0.06) 5.98(0.09) 5.99(0.04) 6.01(0.04) 6.04(0.05) 6.05(0.07) 6.05(0.12) 6.11(0.13) 6.29(0.37) 6.98(0.91) 7.38(0.72) 8.09(0.91) 8.25(0.37) 8.26(0.16) 8.29(0.04) 8.26(0.10) 7.65(0.85) 6.83(1.46) 6.38(0.94) 6.31(0.46) 6.17(0.34) 6.42(0.26) 6.42(0.14) 6.42(0.10) 6.34(0.11) 6.43(0.11) 6.40(0.15) 6.44(0.11) 6.42(0.21) 6.37(0.09) 6.34(0.16) 6.27(0.09) 6.25(0.19) 6.20(0.14) 6.19(0.23) 6.17(0.22) 6.19(0.08) 6.17(0.10) 6.12(0.16) 6.11(0.05) 6.08(0.12) 6.07(0.07) 6.08(0.06) 6.07(0.05) 6.06(0.19) 6.04(0.09) 6.05(0.15) 6.15(0.17) 6.05(0.17) 6.04(0.15) 6.05(0.07) 6.03(0.10) 6.20(0.25) 6.15(0.14) 6.16(0.06) 6.17(0.07) 6.08(0.16) 6.11(0.07) 6.08(0.09) 6.08(0.07) 6.05(0.06) 6.07(0.12) 6.05(0.05) 6.07(0.03) 6.07(0.04) 6.07(0.06) 6.08(0.08) 6.09(0.06) 6.12(0.13) 6.12(0.08) 6.15(0.23) 6.41(0.64) 6.60(0.34) 6.40(0.25) 6.27(0.34) 6.00(0.38) 5.89(0.23) 5.79(0.14) 5.75(0.06) 5.73(0.06) 5.71(0.10) 5.69(0.06) 5.55(0.20) 5.63(0.14) 5.68(0.19) 5.74(0.19) 5.68(0.19) 5.72(0.11) 5.70(0.06) 5.73(0.08) 5.74(0.12) 5.77(0.08) 5.77(0.06) 5.80(0.07) 5.76(0.05) 5.78(0.06) 5.76(0.03) 5.79(0.08) 5.74(0.14) 5.74(0.06) 5.70(0.16) 5.76(0.07) 5.72(0.13) 6.55(0.91) 6.48(0.24) 6.29(0.27) 6.13(0.17) 6.04(0.11) 5.92(0.13) 5.82(0.14) 5.96(0.20) 6.02(0.29) 6.03(0.15) 6.23(0.86) 6.47(1.01) 6.92(0.46) 7.16(0.59) 7.37(0.32) 7.45(0.16) 7.75(0.36) 8.02(0.56) 8.72(0.92) 9.57(1.23) 10.36(1.06) 10.79(0.55) 10.93(0.28) 10.99(0.12) 10.90(0.18) 9.99(1.04) 8.46(1.83) 7.83(1.10) 7.61(0.30) 7.68(0.11) 7.47(0.47) 7.37(0.45) 8.36(1.63) 8.72(1.03) 8.41(0.60) 8.45(0.49) 8.31(0.15) 8.37(0.13) 8.22(0.28) 8.25(0.08) 8.42(0.27) 8.29(0.19) 8.34(0.26) 8.22(0.14) 8.19(0.16) 8.12(0.28) 8.16(0.56) 8.32(0.35) 8.34(0.37) 8.23(0.35) 8.24(0.07) 8.26(0.09) 8.22(0.09) 8.19(0.05) 8.20(0.16) 8.19(0.46) 7.96(0.39) 7.82(0.14) 7.92(0.15) 7.97(0.30) 8.04(0.28) 8.31(0.64) 8.93(0.78) 9.38(0.76) 9.18(0.43) 8.74(0.63) 9.17(0.91) 8.98(0.68) 9.28(0.61) 9.50(0.39) 9.67(0.66) 9.81(0.82) 10.01(0.58) 10.45(0.64) 11.08(0.73) 11.36(0.33) 11.51(0.33) 11.74(0.29) 11.87(0.17) 11.88(0.21) 10.53(1.63) 9.51(1.22) 8.97(0.77) 8.86(0.23) 8.71(0.48) 8.66(0.50) 9.28(0.74) 8.55(0.86) 8.68(0.13) 8.85(0.48) 8.55(0.48) 8.56(0.28) 8.57(0.08) 8.48(0.10) 8.47(0.06) 8.42(0.15) 8.30(0.15) 8.37(0.18) 8.35(0.22) 8.37(0.14) 8.39(0.08) 8.35(0.07) 8.36(0.03) 8.39(0.18) 8.24(0.16) 8.32(0.09) 8.36(0.10) 8.31(0.09) 8.30(0.11) 8.21(0.15) 8.22(0.16) 8.25(0.05) 8.25(0.02) 8.21(0.06) 8.19(0.07) 8.14(0.06) 8.16(0.12) 8.13(0.14) 8.09(0.11) 8.09(0.13) 8.05(0.07) 8.07(0.04) 7.98(0.09) 7.95(0.37) 8.20(0.35) 8.34(0.40) 8.26(0.17) 8.14(0.13) 8.15(0.04) 8.20(0.08) 8.20(0.05) 8.14(0.06) 8.21(0.12) 8.16(0.13) 8.17(0.04) 8.11(0.13) 8.04(0.09) 7.96(0.16) 7.99(0.09) 7.98(0.06) 8.05(0.20) 8.12(0.45) 8.12(0.18) 8.39(0.30) 8.13(0.37) 8.23(0.29) 8.29(0.18) 8.37(0.16) 8.41(0.10) 8.41(0.06) 8.43(0.07) 8.37(0.12) 8.31(0.18) 8.32(0.11) 8.23(0.11) 8.22(0.07) 8.30(0.12) 8.32(0.10) 8.32(0.18) 8.26(0.13) 8.16(0.13) 8.18(0.12) 8.11(0.11) 8.05(0.14) 8.04(0.07) 7.91(0.28) 7.82(0.21) 7.76(0.14) 7.77(0.07) 7.79(0.07) 7.83(0.05) 7.79(0.06) 7.79(0.07) 7.82(0.22) 7.85(0.19) 7.82(0.10) 7.84(0.07) 7.86(0.03) 7.95(0.17) 7.96(0.14) 7.94(0.04) 7.94(0.15) 7.89(0.27) 7.83(0.12) 7.84(0.11) 7.72(0.15) 7.64(0.50) 7.84(0.48) 7.92(0.28) 7.77(0.18) 7.67(0.25) 7.74(0.36) 7.62(0.26) 7.55(0.22) 7.52(0.16) 7.48(0.16) 7.49(0.11) 7.44(0.14) 7.36(0.11) 7.46(0.25) 7.25(0.66) 7.86(0.82) 8.00(0.31) 7.64(0.56) 7.54(0.43) 7.60(0.34) 7.64(0.11) 7.64(0.27) 7.80(0.23) 8.07(0.51) 8.10(0.08) 7.92(0.22) 7.87(0.10) 7.84(0.11) 7.78(0.09) 7.76(0.13) 7.67(0.24) 7.63(0.28) 7.82(0.25) 7.93(0.31) 7.99(0.08) 7.82(0.40) 7.35(0.95) 7.20(0.32) 7.20(0.10) 7.15(0.10) 7.07(0.14) 7.04(0.05) 6.95(0.10) 6.98(0.03) 6.88(0.13) 6.84(0.07) 6.60(0.31) 6.40(0.31) 6.25(0.30) 6.20(0.11) 6.19(0.06) 6.17(0.08) 6.19(0.06) 6.33(0.15) 6.40(0.13) 6.35(0.07) 6.45(0.11) 6.40(0.07) 6.58(0.22) 6.57(0.18) 6.56(0.38) 6.52(0.14) 6.52(0.04) 6.55(0.03) 6.52(0.05) 6.47(0.34) 6.42(0.30) 6.44(0.12) 6.30(0.14) 6.29(0.15) 6.33(0.17) 6.18(0.18) 6.23(0.15) 6.22(0.08) 6.20(0.09) 6.19(0.05) 6.20(0.09) 6.22(0.10) 6.24(0.08) 6.22(0.14) 6.23(0.09) 6.17(0.15) 6.12(0.29) 6.15(0.03) 6.14(0.12) 6.18(0.09) 6.23(0.08) 6.06(0.20) 5.83(0.38) 5.88(0.62) 6.56(1.53) 6.57(0.24) 6.54(0.20) 6.51(0.13) 6.42(0.14) 6.42(0.07) 6.47(0.07) 6.56(0.15) 6.64(0.25) 7.25(0.99) 9.61(2.56) 10.94(1.38) 12.32(1.40) 13.26(1.23) 13.99(0.90) 14.43(0.46) 14.61(0.18) 14.75(0.16) 14.86(0.11) 14.74(0.27) 14.49(0.36) 14.17(0.47) 13.28(1.09) 12.28(1.09) 11.78(0.59) 11.49(0.36) 11.05(0.68) 10.69(0.40) 10.49(0.37) 10.48(0.13) 10.41(0.16) 10.17(0.25) 10.11(0.23) 9.91(0.23) 9.97(0.19) 9.94(0.13) 9.91(0.14) 9.97(0.08) 9.95(0.12) 9.95(0.12) 9.96(0.04) 9.89(0.08) 9.87(0.09) 9.85(0.07) 9.80(0.08) 9.69(0.26) 9.67(0.55) 9.56(0.23) 9.55(0.35) 9.44(0.22) 9.33(0.30) 9.32(0.12) 9.27(0.39) 9.49(0.42) 9.39(0.21) 9.25(0.19) 9.34(0.12) 9.34(0.06) 9.32(0.10) 9.31(0.04) 9.26(0.06) 9.24(0.04) 9.25(0.07) 9.21(0.05) 9.22(0.08) 9.23(0.10) 9.25(0.06) 9.22(0.07) 9.22(0.06) 8.76(0.49) 8.05(1.03) 8.17(0.18) 8.24(0.08) 8.26(0.07) 8.33(0.09) 8.32(0.08) 8.33(0.14) 8.38(0.12) 8.43(0.13) 8.49(0.34) 8.56(0.35) 8.65(0.20) 8.88(0.32) 8.88(0.58) 8.92(0.14) 8.85(0.08) 8.80(0.05) 8.74(0.08) 8.75(0.05) 8.71(0.13) 8.64(0.23) 8.67(0.18) 8.66(0.10) 8.68(0.07) 8.41(0.44) 8.42(0.24) 8.75(0.73) 8.67(0.43) 8.79(0.35) 8.74(0.08) 8.75(0.24) 8.73(0.06) 8.68(0.08) 8.63(0.08) 8.61(0.03) 8.61(0.02) 8.63(0.06) 8.66(0.08) 8.78(0.19) 8.74(0.25) 8.76(0.09) 8.76(0.04)
++ Max displacement in automask = 17.45 (mm) at sub-brick 441
++ Max delta displ  in automask = 5.02 (mm) at sub-brick 521
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb03.GB23.r02.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB23_unif_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB23_unif_ns+tlrc -dxyz 2.5 -source pb02.GB23.r02.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB23_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB23.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 624.1 sec
3dNwarpApply -master MPRAGE.GB23_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB23_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb03.GB23.r03.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB23.r03.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 95538 voxels
 + 10795 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.960  pitch=+1.995  yaw=-1.130  dS=+0.453  dL=-0.987  dP=-2.811
++ Mean: roll=-1.299  pitch=+3.850  yaw=-0.478  dS=+2.020  dL=-0.649  dP=-1.864
++ Max : roll=-0.924  pitch=+7.248  yaw=+0.091  dS=+3.773  dL=+0.087  dP=-0.990
++ Max displacements (mm) for each sub-brick:
 8.45(0.00) 8.31(0.29) 8.35(0.25) 8.36(0.23) 8.27(0.24) 8.32(0.12) 8.15(0.22) 8.26(0.26) 8.15(0.23) 8.02(0.21) 8.01(0.07) 7.98(0.05) 7.95(0.04) 7.95(0.10) 8.00(0.17) 8.01(0.12) 7.96(0.10) 7.98(0.08) 7.93(0.06) 7.91(0.06) 7.87(0.06) 7.86(0.05) 7.85(0.05) 7.85(0.03) 7.87(0.18) 7.89(0.08) 7.88(0.02) 7.87(0.11) 7.85(0.09) 7.82(0.04) 7.84(0.09) 7.83(0.04) 7.83(0.09) 7.84(0.10) 7.86(0.08) 7.83(0.19) 7.74(0.11) 7.74(0.05) 7.66(0.16) 7.66(0.06) 7.61(0.13) 7.62(0.04) 7.63(0.09) 7.70(0.10) 7.61(0.17) 7.52(0.20) 7.43(0.15) 7.38(0.07) 7.33(0.08) 7.33(0.05) 7.31(0.03) 7.35(0.08) 7.37(0.09) 7.39(0.12) 7.33(0.07) 7.42(0.11) 7.54(0.23) 7.67(0.16) 7.70(0.09) 7.68(0.11) 7.78(0.15) 7.75(0.10) 7.74(0.31) 7.88(0.24) 7.81(0.07) 7.77(0.12) 7.66(0.55) 7.34(0.37) 7.38(0.18) 7.39(0.15) 7.33(0.21) 7.28(0.12) 7.38(0.11) 7.39(0.11) 7.55(0.15) 7.59(0.13) 7.69(0.22) 7.84(0.27) 7.84(0.16) 7.81(0.20) 7.69(0.20) 7.69(0.07) 7.59(0.17) 7.60(0.08) 7.67(0.23) 7.76(0.17) 7.71(0.05) 7.69(0.21) 7.77(0.12) 7.87(0.25) 8.02(0.21) 7.90(0.19) 7.89(0.18) 7.94(0.17) 7.97(0.11) 7.92(0.10) 7.95(0.06) 8.01(0.21) 8.27(0.43) 8.21(0.40) 8.99(0.82) 9.68(0.95) 10.32(0.78) 11.03(0.99) 11.43(0.83) 11.57(0.29) 11.60(0.13) 11.43(0.19) 11.54(0.18) 11.72(0.19) 11.86(0.14) 11.99(0.15) 12.06(0.10) 12.15(0.10) 12.29(0.15) 12.44(0.16) 12.54(0.10) 12.66(0.13) 12.63(0.09) 12.62(0.10) 11.74(1.03) 10.54(1.42) 10.27(0.36) 10.59(0.33) 11.95(1.44) 11.63(0.42) 10.44(1.29) 10.07(0.47) 9.91(0.17) 9.92(0.08) 9.85(0.07) 9.87(0.05) 9.89(0.05) 9.84(0.08) 9.86(0.05) 9.87(0.17) 9.82(0.22) 9.80(0.22) 9.72(0.13) 9.62(0.18) 9.49(0.13) 9.52(0.03) 9.66(0.30) 9.56(0.17) 9.55(0.10) 9.53(0.06) 9.46(0.07) 9.38(0.09) 9.34(0.06) 9.28(0.08) 9.20(0.09) 9.10(0.11) 8.80(0.38) 8.77(0.04) 8.74(0.10) 8.68(0.09) 8.63(0.14) 8.64(0.13) 8.66(0.18) 8.52(0.14) 8.69(0.21) 8.64(0.33) 8.60(0.31) 8.83(0.27) 8.90(0.20) 8.82(0.19) 8.97(0.22) 8.80(0.27) 8.78(0.12) 8.54(0.27) 8.35(0.23) 8.28(0.27) 8.32(0.06) 8.38(0.13) 8.42(0.17) 8.41(0.08) 8.34(0.12) 8.21(0.14) 8.05(0.23) 8.06(0.21) 8.10(0.25) 8.15(0.14) 8.10(0.26) 8.22(0.16) 8.15(0.11) 8.17(0.04) 8.18(0.12) 8.05(0.23) 8.21(0.38) 8.50(0.84) 8.66(0.38) 8.70(0.05) 8.52(0.22) 8.28(0.29) 8.34(0.17) 8.32(0.07) 8.37(0.09) 8.36(0.09) 8.35(0.16) 8.28(0.12) 8.24(0.15) 8.19(0.13) 8.14(0.07) 8.14(0.05) 8.16(0.07) 8.19(0.04) 8.22(0.05) 8.21(0.06) 8.21(0.03) 8.22(0.03) 8.24(0.15) 8.24(0.09) 8.19(0.07) 8.09(0.12) 8.07(0.12) 8.05(0.07) 8.07(0.12) 8.11(0.18) 8.12(0.17) 8.05(0.37) 8.36(0.41) 8.40(0.79) 8.42(0.20) 8.42(0.24) 8.33(0.24) 8.42(0.15) 8.45(0.04) 8.50(0.10) 8.46(0.15) 8.35(0.12) 8.32(0.21) 8.31(0.06) 8.26(0.05) 8.24(0.09) 8.25(0.05) 8.31(0.13) 8.35(0.12) 8.34(0.03) 8.31(0.14) 8.32(0.05) 8.30(0.06) 8.29(0.03) 8.27(0.03) 8.28(0.03) 8.29(0.10) 8.28(0.24) 8.26(0.12) 8.25(0.10) 8.29(0.13) 8.38(0.24) 8.37(0.16) 8.29(0.23) 8.19(0.24) 8.21(0.14) 8.20(0.16) 8.23(0.09) 8.20(0.12) 8.39(0.27) 8.37(0.11) 8.48(0.15) 8.34(0.17) 8.33(0.11) 8.28(0.17) 8.21(0.21) 8.20(0.08) 8.22(0.12) 8.23(0.10) 8.26(0.04) 8.30(0.08) 8.30(0.03) 8.37(0.14) 8.38(0.06) 8.33(0.11) 8.30(0.03) 8.24(0.09) 8.25(0.06) 8.23(0.06) 8.21(0.11) 8.24(0.08) 8.25(0.04) 8.27(0.03) 8.31(0.12) 8.36(0.08) 8.26(0.10) 8.23(0.07) 8.24(0.04) 8.27(0.05) 8.24(0.04) 8.28(0.05) 8.28(0.03) 8.32(0.04) 8.43(0.16) 8.39(0.09) 8.29(0.11) 8.32(0.19) 8.40(0.12) 8.33(0.16) 8.47(0.21) 8.53(0.15) 8.45(0.15) 8.39(0.13) 8.34(0.06) 8.40(0.20) 8.40(0.14) 8.35(0.10) 8.25(0.15) 8.17(0.23) 8.14(0.10) 8.15(0.11) 8.17(0.08) 8.16(0.08) 8.11(0.13) 8.10(0.10) 8.10(0.13) 8.10(0.04) 8.10(0.14) 8.17(0.14) 8.10(0.10) 8.37(0.41) 8.28(0.33) 7.89(0.53) 8.23(0.37) 8.06(0.23) 8.08(0.09) 8.02(0.08) 8.03(0.10) 7.97(0.07) 8.01(0.05) 7.99(0.05) 7.97(0.07) 7.96(0.17) 7.92(0.13) 7.93(0.13) 7.87(0.07) 7.88(0.10) 7.84(0.07) 7.81(0.09) 7.80(0.09) 7.80(0.19) 7.81(0.10) 7.83(0.07) 7.81(0.09) 7.82(0.21) 7.92(0.21) 7.76(0.27) 7.57(0.31) 7.65(0.12) 7.63(0.22) 7.60(0.24) 7.70(0.39) 7.95(0.27) 8.25(0.52) 8.30(0.12) 8.22(0.12) 8.12(0.11) 8.05(0.07) 8.04(0.06) 8.10(0.09) 8.05(0.14) 8.10(0.22) 8.24(0.19) 8.36(0.57) 8.34(0.62) 8.49(0.29) 8.36(0.29) 8.35(0.09) 8.50(0.27) 8.34(0.23) 8.28(0.10) 8.29(0.08) 8.26(0.10) 8.24(0.10) 8.35(0.13) 8.34(0.10) 8.22(0.22) 8.55(0.58) 9.75(1.28) 10.23(0.78) 10.34(0.32) 10.37(0.45) 10.27(0.18) 9.64(0.82) 8.91(0.82) 8.93(0.16) 8.90(0.21) 8.97(0.18) 8.86(0.12) 8.73(0.16) 8.51(0.30) 8.37(0.19) 8.38(0.19) 8.49(0.50) 8.17(0.43) 8.51(0.50) 8.30(0.28) 8.38(0.13) 8.42(0.11) 8.44(0.06) 8.43(0.23) 8.53(0.14) 8.46(0.29) 8.74(0.35) 8.76(0.07) 8.70(0.09) 8.66(0.15) 8.60(0.16) 8.49(0.32) 8.35(0.19) 8.08(0.42) 7.70(0.65) 7.68(0.30) 7.75(0.13) 7.87(0.33) 7.87(0.30) 7.96(0.27) 7.46(0.52) 7.28(0.29) 7.25(0.19) 7.29(0.09) 7.34(0.11) 7.32(0.11) 7.39(0.09) 6.93(0.54) 7.35(0.46) 7.52(0.34) 7.84(0.36) 8.20(0.55) 8.48(0.50) 8.86(0.43) 9.46(0.68) 10.13(0.71) 10.60(0.58) 10.86(0.40) 11.11(0.31) 11.35(0.34) 11.53(0.29) 11.70(0.24) 11.81(0.14) 11.84(0.07) 11.22(0.71) 10.04(1.23) 9.30(0.88) 9.04(0.42) 9.01(0.24) 8.94(0.49) 8.93(0.32) 8.90(0.12) 8.78(0.14) 8.62(0.20) 8.47(0.21) 8.36(0.16) 8.35(0.06) 8.30(0.18) 8.32(0.11) 8.41(0.22) 8.36(0.13) 8.40(0.08) 8.43(0.07) 8.39(0.04) 8.32(0.10) 8.29(0.07) 8.25(0.13) 8.21(0.05) 8.21(0.03) 8.17(0.07) 8.21(0.06) 8.21(0.05) 8.29(0.09) 8.20(0.18) 8.28(0.49) 8.45(0.28) 8.42(0.28) 8.24(0.42) 8.13(0.20) 7.91(0.34) 7.62(0.50) 7.61(0.11) 7.60(0.11) 7.53(0.09) 7.50(0.13) 7.45(0.07) 7.52(0.10) 7.84(0.36) 7.74(0.23) 7.61(0.23) 7.75(0.35) 7.96(0.33) 7.95(0.19) 7.95(0.13) 7.99(0.12) 7.98(0.14) 7.99(0.07) 7.98(0.10) 7.98(0.24) 7.92(0.08) 7.84(0.13) 7.78(0.07) 7.73(0.08) 7.74(0.06) 7.78(0.08) 7.82(0.07) 7.84(0.06) 7.61(0.29) 7.72(0.24) 7.61(0.14) 7.42(0.38) 7.63(0.33) 7.29(0.45) 7.52(0.37) 7.47(0.09) 7.54(0.13) 7.50(0.05) 7.47(0.11) 7.41(0.12) 7.41(0.07) 7.27(0.22) 7.27(0.04) 7.22(0.19) 7.22(0.06) 7.45(0.26) 7.38(0.08) 7.48(0.10) 7.46(0.05) 7.46(0.05) 7.31(0.27) 7.63(0.52) 7.67(0.29) 7.57(0.15) 7.52(0.09) 7.49(0.11) 7.46(0.10) 7.47(0.07) 7.47(0.10) 7.48(0.10) 7.46(0.17) 7.44(0.09) 7.44(0.10) 7.39(0.09) 7.40(0.03) 7.41(0.03) 7.40(0.04) 7.39(0.18) 7.35(0.11) 7.36(0.14) 7.37(0.19) 7.42(0.09) 7.40(0.04) 7.46(0.12) 7.31(0.16) 7.32(0.12) 7.27(0.46) 7.39(0.83) 7.48(0.41) 7.53(0.13) 7.57(0.19) 7.61(0.16) 7.54(0.29) 7.51(0.13) 7.48(0.20) 7.47(0.09) 7.48(0.03) 7.45(0.13) 7.49(0.06) 7.69(0.20) 7.69(0.18) 7.61(0.19) 7.55(0.07) 7.48(0.14) 7.92(0.60) 7.86(0.12) 7.78(0.14) 7.77(0.13) 7.90(0.23) 7.96(0.26) 7.92(0.42) 7.85(0.46) 7.73(0.34) 7.75(0.48) 7.60(0.39) 7.65(0.18) 7.94(0.33) 7.77(0.18) 7.75(0.08) 7.83(0.60) 7.67(0.35) 7.77(0.39) 7.90(0.33) 7.95(0.25) 7.92(0.44) 7.96(0.45) 7.88(0.29) 7.71(0.27) 7.77(0.22) 7.73(0.50) 8.00(0.72) 8.59(0.86) 9.20(0.77) 9.81(0.85) 10.17(0.46) 10.37(0.51) 10.49(0.38) 10.65(0.29) 10.86(0.25) 11.01(0.28) 11.25(0.35) 11.59(0.36) 11.87(0.44) 12.14(0.48) 12.38(0.30) 12.51(0.21) 12.53(0.11) 12.45(0.11) 11.28(1.28) 9.74(1.58) 9.36(0.49) 9.11(0.30) 8.87(0.58) 8.95(0.22) 8.71(0.28) 8.60(0.17) 8.45(0.26) 8.47(0.29) 8.50(0.27) 8.52(0.22) 8.58(0.28) 8.60(0.14) 8.55(0.14) 8.40(0.36) 8.31(0.18) 8.31(0.13) 8.37(0.16) 8.33(0.14) 8.21(0.12) 8.18(0.10) 8.05(0.12) 7.95(0.21) 8.15(0.66) 8.23(0.38) 8.11(0.31) 8.43(0.61) 8.28(0.40) 8.17(0.50) 8.39(0.26) 8.36(0.13) 8.32(0.07) 8.27(0.07) 8.23(0.05) 8.13(0.20) 8.24(0.37) 8.02(0.44) 8.22(0.38) 8.33(0.31) 8.16(0.38) 8.15(0.26) 8.35(0.28) 8.45(0.24) 8.48(0.22) 8.49(0.09) 8.45(0.11) 8.17(0.36) 8.14(0.09) 8.09(0.13) 8.06(0.16) 8.07(0.07) 7.97(0.22) 8.07(0.17) 8.27(0.27) 8.02(0.34) 7.71(0.59) 7.63(0.39) 7.62(0.19) 7.64(0.07) 7.75(0.21) 7.62(0.20) 7.93(0.47) 7.83(0.15) 7.75(0.14) 7.87(0.19) 7.80(0.21) 7.70(0.24) 7.82(0.19) 7.81(0.21) 7.80(0.03) 7.83(0.12) 7.72(0.19) 7.64(0.10) 7.62(0.07) 7.55(0.10) 7.56(0.07) 7.54(0.09) 7.49(0.13) 7.45(0.14) 7.45(0.19) 7.59(0.21) 7.71(0.31) 7.68(0.16) 7.82(0.22) 7.73(0.10) 7.75(0.08) 7.65(0.18) 7.54(0.19) 7.57(0.21) 7.50(0.08) 7.65(0.20) 7.75(0.21) 7.70(0.13) 7.64(0.16) 7.59(0.07) 7.54(0.05) 7.57(0.13) 7.57(0.03) 7.59(0.13) 7.56(0.05) 7.54(0.08) 7.51(0.05) 7.47(0.06) 7.49(0.05) 7.49(0.17) 7.56(0.10) 7.51(0.25) 7.41(0.17) 7.56(0.27) 7.78(0.41) 7.82(0.51) 7.84(0.26) 7.90(0.21) 7.80(0.22) 7.69(0.15) 7.52(0.18) 7.39(0.15) 7.32(0.10) 7.30(0.04) 7.27(0.15) 7.23(0.47) 7.01(0.79) 7.02(0.33) 6.97(0.11) 6.83(0.19) 7.14(0.84) 7.41(0.37) 7.25(0.17) 7.19(0.20) 7.10(0.12) 7.08(0.11) 7.06(0.09) 7.10(0.17) 7.50(0.42) 7.75(0.32) 7.86(0.52) 7.89(0.20) 7.51(0.40) 7.11(0.50) 7.16(0.12) 7.04(0.12) 7.10(0.15) 7.05(0.07) 7.20(0.16) 7.31(0.24) 7.67(0.44) 8.03(0.43) 7.87(0.30) 7.77(0.13) 7.85(0.09) 8.00(0.17) 8.21(0.22) 8.39(0.21) 8.30(0.18) 8.16(0.28) 8.11(0.10) 8.08(0.05) 8.07(0.03) 8.10(0.13) 8.07(0.06) 8.07(0.04) 7.89(0.19) 7.77(0.15) 7.76(0.11) 7.85(0.16) 7.81(0.09) 7.78(0.06) 7.77(0.04) 7.74(0.05) 7.67(0.08) 7.54(0.17) 7.51(0.07) 7.45(0.10) 7.50(0.07) 7.64(0.17) 7.64(0.26) 7.66(0.07) 7.59(0.11) 7.58(0.25) 7.55(0.25) 7.15(0.65) 7.04(0.29) 6.92(0.46) 7.17(0.33) 7.30(0.17) 7.20(0.30) 7.26(0.17) 7.25(0.14) 7.06(0.21) 7.09(0.25) 7.05(0.28) 6.73(0.53) 6.76(0.32) 6.81(0.12) 6.94(0.16) 7.02(0.15) 6.97(0.14) 6.99(0.36) 6.95(0.20) 6.93(0.20) 7.03(0.13) 7.12(0.14) 7.14(0.08) 7.18(0.13) 7.29(0.19) 7.47(0.24) 7.60(0.15) 7.75(0.16) 7.86(0.15) 7.80(0.07) 7.87(0.09) 7.61(0.31) 7.57(0.25) 7.55(0.08) 7.50(0.12) 7.53(0.08) 7.51(0.06) 7.53(0.07) 7.56(0.25) 7.50(0.27) 7.43(0.17) 7.39(0.17) 7.36(0.13) 7.37(0.03) 7.34(0.18) 7.34(0.09) 7.35(0.04) 7.40(0.06) 7.39(0.04) 7.34(0.06) 7.24(0.14) 7.33(0.14) 7.29(0.09) 7.26(0.14) 7.13(0.18) 7.13(0.09) 7.10(0.06) 7.14(0.08) 7.17(0.04) 7.18(0.11) 7.16(0.07) 7.09(0.12) 7.07(0.06) 7.05(0.09) 7.05(0.05) 7.03(0.12) 7.03(0.05) 7.03(0.21) 6.97(0.09) 6.94(0.12) 6.91(0.12) 6.93(0.10) 7.01(0.12) 7.02(0.06) 7.01(0.08) 7.02(0.22) 6.98(0.24) 7.00(0.10) 6.95(0.08) 6.96(0.10) 6.96(0.10) 6.97(0.33) 7.04(0.27) 7.04(0.11) 6.93(0.21) 6.99(0.08) 7.03(0.22) 7.11(0.30) 7.13(0.11) 7.10(0.18) 6.88(0.26) 6.70(0.30) 6.64(0.11) 6.62(0.12) 6.63(0.15) 6.58(0.16) 6.68(0.25) 6.66(0.09) 6.70(0.10) 6.63(0.17) 6.54(0.18) 6.49(0.08) 6.51(0.17) 6.56(0.19) 6.76(0.28) 7.06(0.48) 7.26(0.38) 7.27(0.26) 7.28(0.11) 7.15(0.26) 7.09(0.09) 6.95(0.15) 6.96(0.11) 7.05(0.26) 7.17(0.17) 6.95(0.32) 6.89(0.27) 6.86(0.07) 7.02(0.23) 7.06(0.22) 6.99(0.17) 6.95(0.11) 6.97(0.09) 6.96(0.08) 6.95(0.18) 6.98(0.05) 7.00(0.17) 7.00(0.04) 7.03(0.09) 7.06(0.13) 7.09(0.20) 7.12(0.11) 7.08(0.10) 7.09(0.16) 7.08(0.11) 7.07(0.10) 7.05(0.11) 7.09(0.27) 7.21(0.13) 7.15(0.24) 7.27(0.21) 7.19(0.33) 7.22(0.62) 7.33(0.52) 7.31(0.80) 7.11(0.38) 7.11(0.15) 6.96(0.40) 7.07(0.48) 7.15(0.56) 7.00(0.24) 7.03(0.33) 7.05(0.13) 7.02(0.18) 6.94(0.09) 6.93(0.11) 6.91(0.12) 6.91(0.25) 6.93(0.09) 6.90(0.07) 6.89(0.13) 6.89(0.08) 6.87(0.09) 6.83(0.06) 6.79(0.09) 6.81(0.14) 6.82(0.13) 6.82(0.07) 6.81(0.10) 6.82(0.09) 6.88(0.07) 6.90(0.16) 6.93(0.23) 7.05(0.25) 7.29(0.31) 7.17(0.18) 6.99(0.50) 7.09(0.28) 6.87(0.23) 7.03(0.23) 6.94(0.25) 6.88(0.29) 6.79(0.13) 6.82(0.07) 6.89(0.11) 6.87(0.12) 7.03(0.20) 7.07(0.08) 7.15(0.11) 7.10(0.08) 7.25(0.21) 7.32(0.23) 7.34(0.13) 7.39(0.21) 7.00(0.40) 6.83(0.36) 6.92(0.20) 6.92(0.14) 6.95(0.04) 7.07(0.30) 7.05(0.17) 7.15(0.31) 6.81(0.36) 6.70(0.19) 6.76(0.21) 6.76(0.20) 6.78(0.17) 7.01(0.25) 7.05(0.25) 6.88(0.43) 6.93(0.28) 7.01(0.15) 6.85(0.29) 6.85(0.22) 6.81(0.15) 6.70(0.13) 6.70(0.12) 6.73(0.15) 6.76(0.07) 6.79(0.09) 6.82(0.18) 6.77(0.07) 6.86(0.19) 6.76(0.14) 6.84(0.12) 6.82(0.07) 6.82(0.09) 6.64(0.21) 6.70(0.11) 6.72(0.11) 6.73(0.09) 6.74(0.09) 6.74(0.16) 6.76(0.08) 6.79(0.06) 6.80(0.08) 6.84(0.16) 6.74(0.10) 6.77(0.17) 6.81(0.06) 6.83(0.05) 6.93(0.13) 6.88(0.08) 6.85(0.18) 6.68(0.20) 6.65(0.15) 6.66(0.13) 6.48(0.24) 6.52(0.13) 6.69(0.28) 6.85(0.30) 6.84(0.10) 6.80(0.10) 7.20(0.47) 6.99(0.26) 7.01(0.13) 7.03(0.15) 7.01(0.16) 6.98(0.13) 6.97(0.11) 6.94(0.05) 6.95(0.03) 6.91(0.08) 6.94(0.09) 6.91(0.09) 6.89(0.03) 6.88(0.05) 6.89(0.04) 7.08(0.38) 7.60(0.83) 7.29(0.45) 7.23(0.68) 7.28(0.31) 7.13(0.18) 7.03(0.16) 6.98(0.11) 6.99(0.09) 7.04(0.14) 7.36(0.73) 7.46(0.37) 7.34(0.18) 7.21(0.17) 7.26(0.14) 7.24(0.09) 7.22(0.06) 7.18(0.05) 7.22(0.06) 7.23(0.03) 7.23(0.06) 7.22(0.02) 7.23(0.12) 7.22(0.11) 7.19(0.14) 7.16(0.16) 7.14(0.10) 7.11(0.16) 7.16(0.12) 7.19(0.04) 7.19(0.07) 7.20(0.10) 7.18(0.08) 7.13(0.17) 7.12(0.04)
++ Max displacement in automask = 12.66 (mm) at sub-brick 117
++ Max delta displ  in automask = 1.58 (mm) at sub-brick 613
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb03.GB23.r03.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB23_unif_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB23_unif_ns+tlrc -dxyz 2.5 -source pb02.GB23.r03.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB23_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB23.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 751.4 sec
3dNwarpApply -master MPRAGE.GB23_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB23_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB23.r01.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB23.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB23.r02.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB23.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB23.r03.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB23.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB23_unif_al_junk_mat.aff12.1D -I
3dNwarpApply -master MPRAGE.GB23_unif_ns+tlrc -dxyz 2.5 -source vr_base_min_outlier+orig -nwarp anat.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base_min_outlier
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB23_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'vr_base_min_outlier+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./final_epi_vr_base_min_outlier+tlrc.BRIK
++ total Elapsed time = 4.5 sec
3dcopy MPRAGE.GB23_unif_ns+tlrc anat_final.GB23
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dAllineate -base final_epi_vr_base_min_outlier+tlrc -allcostX -input anat_final.GB23+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.GB23+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base_min_outlier+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'TOHD(12.9425)'
 +        -cmass x y z shifts =   -0.473   -0.479    1.195
 +  shift search range is +/- =   72.225   85.868   69.817
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.121325
   sp   = 0.301327
   mi   = 2.87433
   crM  = 0.0361097
   nmi  = 0.85058
   je   = 2.87433
   hel  = -0.102845
   crA  = 0.190059
   crU  = 0.193614
   lss  = 0.878675
   lpc  = 0.36962
   lpa  = 0.63038
   lpc+ = 0.507585
   lpa+ = 0.768345
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.9
++ ###########################################################
3dNwarpApply -source MPRAGE.GB23_unif+orig -master anat_final.GB23+tlrc -ainterp wsinc5 -nwarp anat.aff.qw_WARP.nii anat.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'MPRAGE.GB23_unif+orig'
++ -master dataset is 'anat_final.GB23+tlrc'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 107.7 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb04.volreg pb04.GB23.r01.volreg+tlrc.HEAD pb04.GB23.r02.volreg+tlrc.HEAD pb04.GB23.r03.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 200.8 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 199.4 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 96.1 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB23.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB23.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB23.r03.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r03+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB23.r01.blur pb04.GB23.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GB23.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB23.r02.blur pb04.GB23.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GB23.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB23.r03.blur pb04.GB23.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GB23.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -prefix rm.mask_r01 pb05.GB23.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB23.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 3853.031738
 + Used gradual clip level = 3606.833252 .. 4160.368652
 + Number voxels above clip level = 112608
 + Clustering voxels ...
 + Largest cluster has 110050 voxels
 + Clustering voxels ...
 + Largest cluster has 109185 voxels
 + Filled    98 voxels in small holes; now have 109283 voxels
 + Clustering voxels ...
 + Largest cluster has 109283 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 436185 voxels
 + Mask now has 109283 voxels
++ 109283 voxels in the mask [out of 545468: 20.03%]
++ first  10 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   1 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb05.GB23.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB23.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 3823.747559
 + Used gradual clip level = 3545.448486 .. 4145.482910
 + Number voxels above clip level = 112399
 + Clustering voxels ...
 + Largest cluster has 110330 voxels
 + Clustering voxels ...
 + Largest cluster has 109454 voxels
 + Filled    94 voxels in small holes; now have 109548 voxels
 + Clustering voxels ...
 + Largest cluster has 109548 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 435920 voxels
 + Mask now has 109548 voxels
++ 109548 voxels in the mask [out of 545468: 20.08%]
++ first  11 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   2 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb05.GB23.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB23.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 3826.923340
 + Used gradual clip level = 3529.498779 .. 4189.143066
 + Number voxels above clip level = 112817
 + Clustering voxels ...
 + Largest cluster has 110686 voxels
 + Clustering voxels ...
 + Largest cluster has 109674 voxels
 + Filled    92 voxels in small holes; now have 109766 voxels
 + Clustering voxels ...
 + Largest cluster has 109765 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 435703 voxels
 + Mask now has 109765 voxels
++ 109765 voxels in the mask [out of 545468: 20.12%]
++ first  10 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   2 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.GB23
++ processing 3 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 110547 survived, 434921 were zero
++ writing result full_mask.GB23...
3dresample -master full_mask.GB23+tlrc -input MPRAGE.GB23_unif_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.GB23
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 147196 survived, 398272 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.GB23...
3dmask_tool -input full_mask.GB23+tlrc mask_anat.GB23+tlrc -inter -prefix mask_epi_anat.GB23
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 37251 clipped, 110246 survived, 397971 were zero
++ writing result mask_epi_anat.GB23...
3dABoverlap -no_automask full_mask.GB23+tlrc mask_anat.GB23+tlrc
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#A=./full_mask.GB23+tlrc.BRIK  B=./mask_anat.GB23+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
110547       147196       147497       110246       301          36950         0.2723     25.1026     1.1639     1.1548     1.2059
3ddot -dodice full_mask.GB23+tlrc mask_anat.GB23+tlrc
tee out.mask_ae_dice.txt
0.855472	
3dresample -master full_mask.GB23+tlrc -prefix ./rm.resam.group -input /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz[0]
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 122282 survived, 423186 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
3ddot -dodice mask_anat.GB23+tlrc mask_group+tlrc
tee out.mask_at_dice.txt
0.907035	
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb05.GB23.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb05.GB23.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GB23.r01.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GB23.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb05.GB23.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb05.GB23.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GB23.r02.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GB23.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb05.GB23.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb05.GB23.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GB23.r03.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GB23.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile motion_demean.1D -set_nruns 3 -split_into_pad_runs mot_demean
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile motion_deriv.1D -set_nruns 3 -split_into_pad_runs mot_deriv
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.4 motion_GB23
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
total number of censored TRs (simple form) = 404
1deval -a motion_GB23_censor.1D -b outcount_GB23_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_GB23_combined_2.1D -show_trs_uncensored encoded
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
3dDeconvolve -input pb06.GB23.r01.scale+tlrc.HEAD pb06.GB23.r02.scale+tlrc.HEAD pb06.GB23.r03.scale+tlrc.HEAD -censor censor_GB23_combined_2.1D -ortvec mot_demean.r01.1D mot_demean_r01 -ortvec mot_demean.r02.1D mot_demean_r02 -ortvec mot_demean.r03.1D mot_demean_r03 -ortvec mot_deriv.r01.1D mot_deriv_r01 -ortvec mot_deriv.r02.1D mot_deriv_r02 -ortvec mot_deriv.r03.1D mot_deriv_r03 -polort 4 -float -num_stimts 0 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.GB23 -errts errts.GB23 -x1D_stop -bucket stats.GB23
++ 3dDeconvolve extending num_stimts from 0 to 36 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 1096 2192
++ STAT automask has 538009 voxels (out of 545468 = 98.6%)
++ Skipping check for initial transients
++ Input polort=4; Longest run=504.2 s; Recommended minimum polort=4 ++ OK ++
++ Number of time points: 3288 (before censor) ; 2717 (after)
 + Number of parameters:  51 [51 baseline ; 0 signal]
++ Memory required for output bricks = 14,350,172,144 bytes (about 14 billion)
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb06.GB23.r01.scale+tlrc.HEAD pb06.GB23.r02.scale+tlrc.HEAD pb06.GB23.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.GB23_REML -Rvar stats.GB23_REMLvar \
 -Rfitts fitts.GB23_REML -Rerrts errts.GB23_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (2717x51):  3.89654  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (2717x51):  3.89654  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (2717x36):  3.32658  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (2717x15):  1.09636  ++ VERY GOOD ++
++ 3dDeconvolve exits: -x1D_stop option was invoked
3dTproject -polort 0 -input pb06.GB23.r01.scale+tlrc.HEAD pb06.GB23.r02.scale+tlrc.HEAD pb06.GB23.r03.scale+tlrc.HEAD -censor censor_GB23_combined_2.1D -cenmode ZERO -ort X.nocensor.xmat.1D -prefix errts.GB23.tproject
++ 3dTproject: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ have 3 input dataset names
++ Auto-catenated dataset has 3 runs
++ input time points = 3288 ; censored = 571 ; remaining = 2717
++ Setting up regressors
++ 3 Blocks * 1 polynomials -- 3 polort regressors
 + -- 51 other fixed ort regressors
++ 2717 retained time points MINUS 54 regressors ==> 2663 D.O.F. left
++ no -mask option ==> processing all 545468 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 7588 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./errts.GB23.tproject+tlrc.BRIK
++ ===== clock time = 6m 50s 663ms
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
-- no warnings for correlation matrix (cut = 0.400) --
1d_tool.py -show_df_info -infile X.xmat.1D
tee out.df_info.txt
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \

initial DF                   : 3288 : 100.0%

DF used for regs of interest :    0 :   0.0%
DF used for censoring        :  571 :  17.4%
DF used for polort           :   15 :   0.5%
DF used for motion           :   36 :   1.1%
total DF used                :  622 :  18.9%

final DF                     : 2666 :  81.1%

3dTcat -prefix all_runs.GB23 pb06.GB23.r01.scale+tlrc.HEAD pb06.GB23.r02.scale+tlrc.HEAD pb06.GB23.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 175.6 s
3dTstat -mean -prefix rm.signal.all all_runs.GB23+tlrc[0..7,10..101,106..280,283..319,330..346,351..357,381..476,479..490,495..497,506,507,510..614,617,618,621,622,624..626,629..636,643..726,729..793,799..804,808..810,822..881,897..941,965,966,970..992,995..1031,1034..1072,1075,1078..1082,1096..1128,1133..1139,1144..1147,1153,1154,1162..1164,1168,1181..1225,1227..1231,1235..1248,1255,1263,1271,1272,1275..1277,1280..1292,1301,1311..1338,1350..1364,1379..1397,1412..1456,1461..1467,1471..1481,1484..1487,1490..1514,1520,1521,1524,1542,1554..1556,1563..1575,1585,1586,1589..1605,1607..1612,1639..1688,1691..1708,1720..1802,1805..1812,1816..1820,1825..1827,1832..1834,1838..1863,1872,1873,1876..1882,1887,1888,1892..2002,2008..2024,2027..2078,2081..2087,2105,2108..2148,2151..2172,2177..2191,2193,2194,2198,2201..2290,2314,2319..2379,2382..2411,2414..2510,2513..2566,2569,2575..2603,2613,2615..2619,2634,2636..2661,2664,2666..2674,2676..2697,2700..2715,2718..2741,2744..2785,2790..2792,2806..2858,2861..2924,2927,2928,2931..2983,2986..2990,2994,2997..3088,3090,3092..3127,3130..3180,3183..3196,3198..3215,3217..3236,3239..3252,3255..3261,3264..3287]
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.GB23.tproject+tlrc[0..7,10..101,106..280,283..319,330..346,351..357,381..476,479..490,495..497,506,507,510..614,617,618,621,622,624..626,629..636,643..726,729..793,799..804,808..810,822..881,897..941,965,966,970..992,995..1031,1034..1072,1075,1078..1082,1096..1128,1133..1139,1144..1147,1153,1154,1162..1164,1168,1181..1225,1227..1231,1235..1248,1255,1263,1271,1272,1275..1277,1280..1292,1301,1311..1338,1350..1364,1379..1397,1412..1456,1461..1467,1471..1481,1484..1487,1490..1514,1520,1521,1524,1542,1554..1556,1563..1575,1585,1586,1589..1605,1607..1612,1639..1688,1691..1708,1720..1802,1805..1812,1816..1820,1825..1827,1832..1834,1838..1863,1872,1873,1876..1882,1887,1888,1892..2002,2008..2024,2027..2078,2081..2087,2105,2108..2148,2151..2172,2177..2191,2193,2194,2198,2201..2290,2314,2319..2379,2382..2411,2414..2510,2513..2566,2569,2575..2603,2613,2615..2619,2634,2636..2661,2664,2666..2674,2676..2697,2700..2715,2718..2741,2744..2785,2790..2792,2806..2858,2861..2924,2927,2928,2931..2983,2986..2990,2994,2997..3088,3090,3092..3127,3130..3180,3183..3196,3198..3215,3217..3236,3239..3252,3255..3261,3264..3287]
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -expr a/b -prefix TSNR.GB23
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.GB23+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.GB23.tproject+tlrc
++ 3dTnorm: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.GB23+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 110547 voxels survive the mask
3dTstat -sos -prefix - mean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.411644
3dmaskave -quiet -mask full_mask.GB23+tlrc errts.GB23.tproject+tlrc
++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 110547 voxels survive the mask
3dTcorr1D -prefix corr_brain errts.GB23.tproject+tlrc mean.errts.1D
++ 3dTcorr1D: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + reading dataset file errts.GB23.tproject+tlrc
 + reading 1D file mean.errts.1D
 + loading dataset ./errts.GB23.tproject+tlrc.BRIK into memory
++ Start correlations: 545468 voxels X 1 time series(3288); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 7588 voxels skipped because were constant in time
++ Wrote dataset: ./corr_brain+tlrc.BRIK
3dTstat -sum -prefix sum_baseline.1D X.nocensor.xmat.1D
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_baseline.1D
touch blur_est.GB23.1D
mkdir files_ACF
touch blur.epits.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 0..7,10..101,106..280,283..319,330..346,351..357,381..476,479..490,495..497,506,507,510..614,617,618,621,622,624..626,629..636,643..726,729..793,799..804,808..810,822..881,897..941,965,966,970..992,995..1031,1034..1072,1075,1078..1082 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB23+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r01.1D all_runs.GB23+tlrc[0..7,10..101,106..280,283..319,330..346,351..357,381..476,479..490,495..497,506,507,510..614,617,618,621,622,624..626,629..636,643..726,729..793,799..804,808..810,822..881,897..941,965,966,970..992,995..1031,1034..1072,1075,1078..1082]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 110246
++ detrending start: 65 baseline funcs, 939 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 19.70 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r01.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 1096..1128,1133..1139,1144..1147,1153,1154,1162..1164,1168,1181..1225,1227..1231,1235..1248,1255,1263,1271,1272,1275..1277,1280..1292,1301,1311..1338,1350..1364,1379..1397,1412..1456,1461..1467,1471..1481,1484..1487,1490..1514,1520,1521,1524,1542,1554..1556,1563..1575,1585,1586,1589..1605,1607..1612,1639..1688,1691..1708,1720..1802,1805..1812,1816..1820,1825..1827,1832..1834,1838..1863,1872,1873,1876..1882,1887,1888,1892..2002,2008..2024,2027..2078,2081..2087,2105,2108..2148,2151..2172,2177..2191 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB23+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r02.1D all_runs.GB23+tlrc[1096..1128,1133..1139,1144..1147,1153,1154,1162..1164,1168,1181..1225,1227..1231,1235..1248,1255,1263,1271,1272,1275..1277,1280..1292,1301,1311..1338,1350..1364,1379..1397,1412..1456,1461..1467,1471..1481,1484..1487,1490..1514,1520,1521,1524,1542,1554..1556,1563..1575,1585,1586,1589..1605,1607..1612,1639..1688,1691..1708,1720..1802,1805..1812,1816..1820,1825..1827,1832..1834,1838..1863,1872,1873,1876..1882,1887,1888,1892..2002,2008..2024,2027..2078,2081..2087,2105,2108..2148,2151..2172,2177..2191]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 110246
++ detrending start: 55 baseline funcs, 807 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 20.21 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r02.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 42 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 2193,2194,2198,2201..2290,2314,2319..2379,2382..2411,2414..2510,2513..2566,2569,2575..2603,2613,2615..2619,2634,2636..2661,2664,2666..2674,2676..2697,2700..2715,2718..2741,2744..2785,2790..2792,2806..2858,2861..2924,2927,2928,2931..2983,2986..2990,2994,2997..3088,3090,3092..3127,3130..3180,3183..3196,3198..3215,3217..3236,3239..3252,3255..3261,3264..3287 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB23+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r03.1D all_runs.GB23+tlrc[2193,2194,2198,2201..2290,2314,2319..2379,2382..2411,2414..2510,2513..2566,2569,2575..2603,2613,2615..2619,2634,2636..2661,2664,2666..2674,2676..2697,2700..2715,2718..2741,2744..2785,2790..2792,2806..2858,2861..2924,2927,2928,2931..2983,2986..2990,2994,2997..3088,3090,3092..3127,3130..3180,3183..3196,3198..3215,3217..3236,3239..3252,3255..3261,3264..3287]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 110246
++ detrending start: 67 baseline funcs, 971 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 20.30 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r03.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 41 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits FWHM blurs: 0 0 0 0
average epits FWHM blurs: 0 0 0 0
echo 0 0 0 0   # epits FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits ACF blurs: 0.664771 3.49319 17.7084 9.84302
average epits ACF blurs: 0.664771 3.49319 17.7084 9.84302
echo 0.664771 3.49319 17.7084 9.84302   # epits ACF blur estimates
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 0..7,10..101,106..280,283..319,330..346,351..357,381..476,479..490,495..497,506,507,510..614,617,618,621,622,624..626,629..636,643..726,729..793,799..804,808..810,822..881,897..941,965,966,970..992,995..1031,1034..1072,1075,1078..1082 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB23+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.GB23.tproject+tlrc[0..7,10..101,106..280,283..319,330..346,351..357,381..476,479..490,495..497,506,507,510..614,617,618,621,622,624..626,629..636,643..726,729..793,799..804,808..810,822..881,897..941,965,966,970..992,995..1031,1034..1072,1075,1078..1082]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 110246
++ detrending start: 65 baseline funcs, 939 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 19.59 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 1096..1128,1133..1139,1144..1147,1153,1154,1162..1164,1168,1181..1225,1227..1231,1235..1248,1255,1263,1271,1272,1275..1277,1280..1292,1301,1311..1338,1350..1364,1379..1397,1412..1456,1461..1467,1471..1481,1484..1487,1490..1514,1520,1521,1524,1542,1554..1556,1563..1575,1585,1586,1589..1605,1607..1612,1639..1688,1691..1708,1720..1802,1805..1812,1816..1820,1825..1827,1832..1834,1838..1863,1872,1873,1876..1882,1887,1888,1892..2002,2008..2024,2027..2078,2081..2087,2105,2108..2148,2151..2172,2177..2191 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB23+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.GB23.tproject+tlrc[1096..1128,1133..1139,1144..1147,1153,1154,1162..1164,1168,1181..1225,1227..1231,1235..1248,1255,1263,1271,1272,1275..1277,1280..1292,1301,1311..1338,1350..1364,1379..1397,1412..1456,1461..1467,1471..1481,1484..1487,1490..1514,1520,1521,1524,1542,1554..1556,1563..1575,1585,1586,1589..1605,1607..1612,1639..1688,1691..1708,1720..1802,1805..1812,1816..1820,1825..1827,1832..1834,1838..1863,1872,1873,1876..1882,1887,1888,1892..2002,2008..2024,2027..2078,2081..2087,2105,2108..2148,2151..2172,2177..2191]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 110246
++ detrending start: 55 baseline funcs, 807 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 19.83 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 42 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 2193,2194,2198,2201..2290,2314,2319..2379,2382..2411,2414..2510,2513..2566,2569,2575..2603,2613,2615..2619,2634,2636..2661,2664,2666..2674,2676..2697,2700..2715,2718..2741,2744..2785,2790..2792,2806..2858,2861..2924,2927,2928,2931..2983,2986..2990,2994,2997..3088,3090,3092..3127,3130..3180,3183..3196,3198..3215,3217..3236,3239..3252,3255..3261,3264..3287 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB23+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.GB23.tproject+tlrc[2193,2194,2198,2201..2290,2314,2319..2379,2382..2411,2414..2510,2513..2566,2569,2575..2603,2613,2615..2619,2634,2636..2661,2664,2666..2674,2676..2697,2700..2715,2718..2741,2744..2785,2790..2792,2806..2858,2861..2924,2927,2928,2931..2983,2986..2990,2994,2997..3088,3090,3092..3127,3130..3180,3183..3196,3198..3215,3217..3236,3239..3252,3255..3261,3264..3287]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 110246
++ detrending start: 67 baseline funcs, 971 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 20.10 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 42 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 0 0 0 0
average errts FWHM blurs: 0 0 0 0
echo 0 0 0 0   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.682966 3.47341 18.3715 9.70761
average errts ACF blurs: 0.682966 3.47341 18.3715 9.70761
echo 0.682966 3.47341 18.3715 9.70761   # errts ACF blur estimates
gen_epi_review.py -script @epi_review.GB23 -dsets pb00.GB23.r01.tcat+orig.HEAD pb00.GB23.r02.tcat+orig.HEAD pb00.GB23.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -exit0 -mot_limit 0.4 -out_limit 0.05 -errts_dset errts.GB23.tproject+tlrc.HEAD -mask_dset mask_epi_anat.GB23+tlrc.HEAD -ss_review_dset out.ss_review.GB23.txt -write_uvars_json out.ss_review_uvars.json
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
** failed to guess at any stats dset, resting state?
   (else X-matrix file "X.xmat.1D" may not apply)
++ writing ss review basic:          @ss_review_basic
** no stats_dset dset, cannot drive view_stats, skipping...
** no mask_dset dset, cannot drive view_stats, skipping...
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.blip.med.fwd+orig.BRIK rm.blip.med.fwd+orig.HEAD rm.blip.med.masked.fwd+orig.BRIK.gz rm.blip.med.masked.fwd+orig.HEAD rm.blip.med.masked.rev+orig.BRIK.gz rm.blip.med.masked.rev+orig.HEAD rm.blip.med.rev+orig.BRIK rm.blip.med.rev+orig.HEAD rm.epi.1.r01+tlrc.BRIK.gz rm.epi.1.r01+tlrc.HEAD rm.epi.1.r02+tlrc.BRIK.gz rm.epi.1.r02+tlrc.HEAD rm.epi.1.r03+tlrc.BRIK.gz rm.epi.1.r03+tlrc.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+tlrc.BRIK.gz rm.epi.mean+tlrc.HEAD rm.epi.min.r01+tlrc.BRIK.gz rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.BRIK.gz rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.BRIK.gz rm.epi.min.r03+tlrc.HEAD rm.epi.nomask.r01+tlrc.BRIK rm.epi.nomask.r01+tlrc.HEAD rm.epi.nomask.r02+tlrc.BRIK rm.epi.nomask.r02+tlrc.HEAD rm.epi.nomask.r03+tlrc.BRIK rm.epi.nomask.r03+tlrc.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+tlrc.BRIK rm.errts.unit+tlrc.HEAD rm.mask_r01+tlrc.BRIK.gz rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.BRIK.gz rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.BRIK.gz rm.mask_r03+tlrc.HEAD rm.mean_r01+tlrc.BRIK rm.mean_r01+tlrc.HEAD rm.mean_r02+tlrc.BRIK rm.mean_r02+tlrc.HEAD rm.mean_r03+tlrc.BRIK rm.mean_r03+tlrc.HEAD rm.noise.all+tlrc.BRIK rm.noise.all+tlrc.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.resam.anat+tlrc.BRIK rm.resam.anat+tlrc.HEAD rm.resam.group+tlrc.BRIK rm.resam.group+tlrc.HEAD rm.signal.all+tlrc.BRIK rm.signal.all+tlrc.HEAD awpy
if ( -e @ss_review_basic ) then
./@ss_review_basic
tee out.ss_review.GB23.txt

subject ID                : GB23
AFNI version              : AFNI_21.2.04
AFNI package              : linux_ubuntu_16_64
TR                        : 0.46
TRs removed (per run)     : 0
num stim classes provided : 0
final anatomy dset        : anat_final.GB23+tlrc.HEAD
final stats dset          : NO_STATS
final errts dset          : errts.GB23.tproject+tlrc.HEAD
orig voxel counts         : 83	97	82
orig voxel resolution     : 2.682927	2.682927	2.682927
orig volume center        : -3.740402	1.852188	20.384090
final voxel resolution    : 2.500000	2.500000	2.500000

motion limit              : 0.4
num TRs above mot limit   : 270
average motion (per TR)   : 0.162504
average censored motion   : 0.109944
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
max motion displacement   : 13.7966
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
max censored displacement : 7.71592
outlier limit             : 0.05
average outlier frac (TR) : 0.0133788
num TRs above out limit   : 275
flip guess                : NO_FLIP

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
num runs found            : 3
num TRs per run           : 1096 1096 1096
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
num TRs per run (applied) : 939 807 971
num TRs per run (censored): 157 289 125
fraction censored per run : 0.143248 0.263686 0.114051
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
TRs total (uncensored)    : 3288
TRs total                 : 2717
degrees of freedom used   : 51
degrees of freedom left   : 2666

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
TRs censored              : 571
censor fraction           : 0.173662
num regs of interest      : 0

TSNR average              : 70.9709
global correlation (GCOR) : 0.411644
anat/EPI mask Dice coef   : 0.855472
anat/templ mask Dice coef : 0.907035
blur estimates (ACF)      : 0.682966 3.47341 18.3715
blur estimates (FWHM)     : 0 0 0


apqc_make_tcsh.py -review_style pythonic -subj_dir . -uvar_json out.ss_review_uvars.json
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
++ Found 40 files for QCing.
++ Done making (executable) script to generate HTML QC:
    ./@ss_review_html
tcsh @ss_review_html
tee out.review_html
*+ Found main dset (template):  /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay vr_base_min_outlier+orig.HEAD -olay vr_base_min_outlier+orig.HEAD -ulay_range_nz 0 8862.562500 -func_range 8862.562500 -box_focus_slices AMASK_FOCUS_ULAY -cbar gray_scale -pbar_posonly -pbar_saveim QC_GB23/media/qc_00_vorig_EPI.pbar.jpg -pbar_comm_range 98%ile in vol -pbar_for dset -prefix QC_GB23/media/qc_00_vorig_EPI -save_ftype JPEG -blowup 4 -opacity 9 -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   vr_base_min_outlier+orig.HEAD
++ Found input file:   vr_base_min_outlier+orig.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_JdHaG6atMsI
++ Converted 0 to labels
++ Final subbrick indices: -1 -1 -1
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay to be visualized within user range:
   [0, 8862.562500]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_JdHaG6atMsI/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_JdHaG6atMsI/tmp_olay.nii
++ User-entered function range value value (8862.562500)
++ Dimensions (xyzt): 83 97 82 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 11
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=11..74  y=9..77  z=4..64
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_JdHaG6atMsI/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_JdHaG6atMsI/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN__Co6Z3ONCcJgdcsQzs_igg argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 269376 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1.62545 -11.56248 2.945061
++ Will have the ref box central gapord: 9 9 8

------------------- end of optionizing -------------------

 -- trying to start Xvfb :211 
[1] 500365
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_JdHaG6atMsI++ Writing palette image to QC_GB23/media/qc_00_vorig_EPI.pbar.jpg
++ Writing one 2740x328 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_00_vorig_EPI.sag.jpg'
++ Writing one 2348x328 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_00_vorig_EPI.cor.jpg'
++ Writing one 2348x388 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_00_vorig_EPI.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:9:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:9:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:8:1:black crop=0:0,0:0 -com SET_PBAR_ALL    +99 1 gray_scale -com PBAR_SAVEIM QC_GB23/media/qc_00_vorig_EPI.pbar.jpg dim=64x512H -com SET_SUBBRICKS   -1 -1 -1 -com SET_ULAY_RANGE A.all 0 8862.562500 -com SET_FUNC_RANGE  8862.562500 -com SET_THRESHNEW   0 * -com SET_FUNC_ALPHA  No -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1.62545 -11.56248 2.945061 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_00_vorig_EPI.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_00_vorig_EPI.cor blowup=4 -com SAVE_JPEG axialimage    QC_GB23/media/qc_00_vorig_EPI.axi blowup=4 -com QUITT QC_GB23/media/__tmp_chauf_JdHaG6atMsI 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_JdHaG6atMsI'.


++ DONE (good exit)
   see: QC_GB23/media/qc_00_vorig_EPI*

++ Prepare for running @djunct_edgy_align_check (ver = 1.45)
++ Copy refbox (/usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz) to workdir
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__workdir_EAC_YFbCte0btOZ/REFBOX.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__workdir_EAC_YFbCte0btOZ/eac_0_cp.nii
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: /mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__workdir_EAC_YFbCte0btOZ/eac_0_cp.nii
++ Base dataset:   (not given)
++ Loading datasets into memory
 +        -cmass x y z shifts =    0.000    0.000    0.000
 +  shift search range is +/- =   60.990   73.028   60.990
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ wsinc5 interpolation setup:
 +   taper function  = Min sidelobe 3 term
 +   taper cut point = 0.000
 +   window radius   = 5 voxels
 +   window shape    = Cubical
 +   The above can be altered via the AFNI_WSINC5_* environment variables.
 +  (To avoid this message, 'setenv AFNI_WSINC5_SILENT YES'.)
 +   wsinc5 CUBE(5) mask has 1000 points
++ Output dataset QC_GB23/media/__workdir_EAC_YFbCte0btOZ/eac_1_grid2olay.nii
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.2
++ ###########################################################
++ Output dataset ./eac_2_ulay_shrp.nii
++ Just copy olay, bc ulay will get regridded
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m** FATAL ERROR:[0m can't open dataset anat_final.GB23+tlrc.HEAD
** Program compile date = Jul 28 2021
QC_GB23/media/__workdir_EAC_YFbCte0btOZ: No such file or directory.
++ Prepare for running @djunct_edgy_align_check (ver = 1.45)
++ Copy refbox (/usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz) to workdir
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__workdir_EAC_Hp1xXRBCNfE/REFBOX.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__workdir_EAC_Hp1xXRBCNfE/eac_0_cp.nii
++ Output dataset ./eac_1_ulay_shrp.nii
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
[7m** FATAL ERROR:[0m can't open -master dataset 'QC_GB23/media/__workdir_EAC_Hp1xXRBCNfE/eac_1_ulay_shrp.nii' :-(
** Program compile date = Jul 28 2021
QC_GB23/media/__workdir_EAC_Hp1xXRBCNfE: No such file or directory.
++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 545468 voxels in the entire dataset (no mask)
++ 29 voxels in the boxes+balls
++ 29 voxels in the mask INTERSECT boxes+balls
++ 3dTcorr1D: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + reading dataset file errts.GB23.tproject+tlrc.HEAD
 + reading 1D file _tmp_ave_ts.txt
 + loading dataset ./errts.GB23.tproject+tlrc.BRIK into memory
++ Start correlations: 545468 voxels X 1 time series(3288); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 7588 voxels skipped because were constant in time
++ Wrote dataset: ./_tmp_corr_vol.nii
++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -box_focus_slices /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -olay _tmp_corr_vol.nii -cbar Reds_and_Blues_Inv -ulay_range 0% 120% -func_range 0.6 -thr_olay 0.3 -olay_alpha Yes -olay_boxed Yes -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GB23/media/qc_03_vstat_seed_lh-PCC.pbar.jpg -pbar_comm_range Pearson r -pbar_comm_thr alpha+boxed on -prefix QC_GB23/media/qc_03_vstat_seed_lh-PCC -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
++ Found input file:   _tmp_corr_vol.nii
++ Found focus refbox file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
+* NB: focus box vol has >1 slice, so we select [0]th.
++ Using blowup factor: 2
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_cG5Fgjcc8Pd
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.22448,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 120%] -> [0.000000, 1296.724320]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_cG5Fgjcc8Pd/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_cG5Fgjcc8Pd/tmp_olay.nii
++ User-entered function range value value (0.6)
++ Dimensions (xyzt): 193 229 193 5
++ (initial) Slice spacing ordered (x,y,z) is:  27 32 27
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=24..168  y=25..205  z=6..160
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_cG5Fgjcc8Pd/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_cG5Fgjcc8Pd/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_dChzls93MonfaWwYeaa3kA argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0 scale factor = 0.162420
++ Computing output statistics
++ Output dataset /tmp/3dcalc_AFN_dChzls93MonfaWwYeaa3kA+tlrc.BRIK
++ 4067975 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1 17 5
++ Will have the ref box central gapord: 20 25 22

------------------- end of optionizing -------------------

 -- trying to start Xvfb :335 
[1] 501151
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_cG5Fgjcc8Pd++ Writing palette image to QC_GB23/media/qc_03_vstat_seed_lh-PCC.pbar.jpg
++ Writing one 3218x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_03_vstat_seed_lh-PCC.sag.jpg'
++ Writing one 2714x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_03_vstat_seed_lh-PCC.cor.jpg'
++ Writing one 2714x458 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_03_vstat_seed_lh-PCC.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:20:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:25:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:22:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GB23/media/qc_03_vstat_seed_lh-PCC.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1296.724320 -com SET_FUNC_RANGE  0.6 -com SET_THRESHNEW   0.3 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  Yes -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1 17 5 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_03_vstat_seed_lh-PCC.sag blowup=2 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_03_vstat_seed_lh-PCC.cor blowup=2 -com SAVE_JPEG axialimage    QC_GB23/media/qc_03_vstat_seed_lh-PCC.axi blowup=2 -com QUITT QC_GB23/media/__tmp_chauf_cG5Fgjcc8Pd 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_cG5Fgjcc8Pd'.

[1]  + Done                          Xvfb :335 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GB23/media/qc_03_vstat_seed_lh-PCC*

++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 545468 voxels in the entire dataset (no mask)
++ 34 voxels in the boxes+balls
++ 34 voxels in the mask INTERSECT boxes+balls
++ 3dTcorr1D: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + reading dataset file errts.GB23.tproject+tlrc.HEAD
 + reading 1D file _tmp_ave_ts.txt
 + loading dataset ./errts.GB23.tproject+tlrc.BRIK into memory
++ Start correlations: 545468 voxels X 1 time series(3288); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 7588 voxels skipped because were constant in time
++ Wrote dataset: ./_tmp_corr_vol.nii
++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -box_focus_slices /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -olay _tmp_corr_vol.nii -cbar Reds_and_Blues_Inv -ulay_range 0% 120% -func_range 0.6 -thr_olay 0.3 -olay_alpha Yes -olay_boxed Yes -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GB23/media/qc_04_vstat_seed_rh-cort-vis.pbar.jpg -pbar_comm_range Pearson r -pbar_comm_thr alpha+boxed on -prefix QC_GB23/media/qc_04_vstat_seed_rh-cort-vis -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
++ Found input file:   _tmp_corr_vol.nii
++ Found focus refbox file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
+* NB: focus box vol has >1 slice, so we select [0]th.
++ Using blowup factor: 2
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_T5uHaUkqWC4
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.22448,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 120%] -> [0.000000, 1296.724320]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_T5uHaUkqWC4/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_T5uHaUkqWC4/tmp_olay.nii
++ User-entered function range value value (0.6)
++ Dimensions (xyzt): 193 229 193 5
++ (initial) Slice spacing ordered (x,y,z) is:  27 32 27
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=24..168  y=25..205  z=6..160
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_T5uHaUkqWC4/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_T5uHaUkqWC4/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_fL14Ft5VCLBmXGc6mWBxIw argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0 scale factor = 0.162420
++ Computing output statistics
++ Output dataset /tmp/3dcalc_AFN_fL14Ft5VCLBmXGc6mWBxIw+tlrc.BRIK
++ 4067975 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1 17 5
++ Will have the ref box central gapord: 20 25 22

------------------- end of optionizing -------------------

 -- trying to start Xvfb :85 
[1] 501404
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_T5uHaUkqWC4++ Writing palette image to QC_GB23/media/qc_04_vstat_seed_rh-cort-vis.pbar.jpg
++ Writing one 3218x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_04_vstat_seed_rh-cort-vis.sag.jpg'
++ Writing one 2714x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_04_vstat_seed_rh-cort-vis.cor.jpg'
++ Writing one 2714x458 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_04_vstat_seed_rh-cort-vis.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:20:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:25:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:22:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GB23/media/qc_04_vstat_seed_rh-cort-vis.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1296.724320 -com SET_FUNC_RANGE  0.6 -com SET_THRESHNEW   0.3 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  Yes -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1 17 5 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_04_vstat_seed_rh-cort-vis.sag blowup=2 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_04_vstat_seed_rh-cort-vis.cor blowup=2 -com SAVE_JPEG axialimage    QC_GB23/media/qc_04_vstat_seed_rh-cort-vis.axi blowup=2 -com QUITT QC_GB23/media/__tmp_chauf_T5uHaUkqWC4 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_T5uHaUkqWC4'.

[1]  + Done                          Xvfb :85 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GB23/media/qc_04_vstat_seed_rh-cort-vis*

++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 545468 voxels in the entire dataset (no mask)
++ 36 voxels in the boxes+balls
++ 36 voxels in the mask INTERSECT boxes+balls
++ 3dTcorr1D: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + reading dataset file errts.GB23.tproject+tlrc.HEAD
 + reading 1D file _tmp_ave_ts.txt
 + loading dataset ./errts.GB23.tproject+tlrc.BRIK into memory
++ Start correlations: 545468 voxels X 1 time series(3288); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 7588 voxels skipped because were constant in time
++ Wrote dataset: ./_tmp_corr_vol.nii
++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -box_focus_slices /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -olay _tmp_corr_vol.nii -cbar Reds_and_Blues_Inv -ulay_range 0% 120% -func_range 0.6 -thr_olay 0.3 -olay_alpha Yes -olay_boxed Yes -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GB23/media/qc_05_vstat_seed_lh-cort-aud.pbar.jpg -pbar_comm_range Pearson r -pbar_comm_thr alpha+boxed on -prefix QC_GB23/media/qc_05_vstat_seed_lh-cort-aud -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
++ Found input file:   _tmp_corr_vol.nii
++ Found focus refbox file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
+* NB: focus box vol has >1 slice, so we select [0]th.
++ Using blowup factor: 2
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_LBTrtshk9mi
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.22448,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 120%] -> [0.000000, 1296.724320]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_LBTrtshk9mi/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_LBTrtshk9mi/tmp_olay.nii
++ User-entered function range value value (0.6)
++ Dimensions (xyzt): 193 229 193 5
++ (initial) Slice spacing ordered (x,y,z) is:  27 32 27
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=24..168  y=25..205  z=6..160
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_LBTrtshk9mi/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_LBTrtshk9mi/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_-J7R3-RGUDeHX_MQz8rUTQ argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0 scale factor = 0.162420
++ Computing output statistics
++ Output dataset /tmp/3dcalc_AFN_-J7R3-RGUDeHX_MQz8rUTQ+tlrc.BRIK
++ 4067975 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1 17 5
++ Will have the ref box central gapord: 20 25 22

------------------- end of optionizing -------------------

 -- trying to start Xvfb :275 
[1] 501851
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_LBTrtshk9mi++ Writing palette image to QC_GB23/media/qc_05_vstat_seed_lh-cort-aud.pbar.jpg
++ Writing one 3218x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_05_vstat_seed_lh-cort-aud.sag.jpg'
++ Writing one 2714x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_05_vstat_seed_lh-cort-aud.cor.jpg'
++ Writing one 2714x458 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_05_vstat_seed_lh-cort-aud.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:20:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:25:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:22:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GB23/media/qc_05_vstat_seed_lh-cort-aud.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1296.724320 -com SET_FUNC_RANGE  0.6 -com SET_THRESHNEW   0.3 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  Yes -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1 17 5 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_05_vstat_seed_lh-cort-aud.sag blowup=2 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_05_vstat_seed_lh-cort-aud.cor blowup=2 -com SAVE_JPEG axialimage    QC_GB23/media/qc_05_vstat_seed_lh-cort-aud.axi blowup=2 -com QUITT QC_GB23/media/__tmp_chauf_LBTrtshk9mi 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_LBTrtshk9mi'.

[1]  + Done                          Xvfb :275 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GB23/media/qc_05_vstat_seed_lh-cort-aud*

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
++ FOR: motion_GB23_enorm.1D: 1 arrays with 3288 pts
++ FOR: outcount_rall.1D: 1 arrays with 3288 pts
++ Lists of names and yvars match length
*+ No input x-axis; making values based on length of data: [0..3287]
++ Plotting: enorm (~mm)
++ Plotting: outlier frac
++ Done! Figure created:
	 QC_GB23/media/qc_06_mot_enormoutlr.jpg
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
/usr/local/afni/abin/afnipy/lib_plot_1D.py:373: UserWarning: FixedFormatter should only be used together with FixedLocator
  pp.set_xticklabels(['']*nlabs)
++ FOR: dfile_rall.1D: 6 arrays with 3288 pts
++ Lists of names and yvars match length
*+ No input x-axis; making values based on length of data: [0..3287]
++ Plotting: dP
(mm)
++ Plotting: dL
(mm)
++ Plotting: dS
(mm)
++ Plotting: yaw
(deg)
++ Plotting: pitch
(deg)
++ Plotting: roll
(deg)
++ Done! Figure created:
	 QC_GB23/media/qc_07_mot_VR6.jpg
++ 3dGrayplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + Loading dataset ./errts.GB23.tproject+tlrc.HEAD
 + Number of voxels in mask = 110246
++ THD_dset_to_vectim: allocated 1449955392 bytes
 + 3dGrayplot: Elapsed = 749.9 s
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay mask_epi_anat.GB23+tlrc.HEAD -olay mask_epi_anat.GB23+tlrc.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar gray_scale -func_range 3.29 -blowup 1 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GB23/media/qc_08_mot_grayplot.pbar.jpg -pbar_comm_range for normal distr, bounds of 0.001 prob tail -prefix __tmp_ZXCV_img -save_ftype JPEG -montx 1 -monty 1 -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   mask_epi_anat.GB23+tlrc.HEAD
++ Found input file:   mask_epi_anat.GB23+tlrc.HEAD
++ Using blowup factor: 1
++ Using opacity:  9
++ Making temporary work directory to copy vis files: ./__tmp_chauf_cij1UC9z7o0
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay to be visualized within user range:
  [0%, 98%] -> [0.000000, 1.000000]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tmp_chauf_cij1UC9z7o0/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tmp_chauf_cij1UC9z7o0/tmp_olay.nii
++ User-entered function range value value (3.29)
++ Dimensions (xyzt): 77 92 77 1
++ (initial) Slice spacing ordered (x,y,z) is:  77 92 77
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=0..76  y=0..91  z=0..76
++ THD_zeropad: all pad values are zero - just copying dataset
++ 3dAutobox: output dataset = ./__tmp_chauf_cij1UC9z7o0/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=./__tmp_chauf_cij1UC9z7o0/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_5XsG4S4gmlO6w9R7op6Feg argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 545468 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 2.5 19.25 18
++ Will have the ref box central gapord: 77 92 77

------------------- end of optionizing -------------------

 -- trying to start Xvfb :677 
[1] 509110
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/__tmp_chauf_cij1UC9z7o0++ Writing palette image to QC_GB23/media/qc_08_mot_grayplot.pbar.jpg
++ Writing one 92x77 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > ./__tmp_ZXCV_img.sag.jpg'
++ Writing one 77x77 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > ./__tmp_ZXCV_img.cor.jpg'
++ Writing one 77x92 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > ./__tmp_ZXCV_img.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=1x1:77:0:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=1x1:92:0:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=1x1:77:0:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 gray_scale -com PBAR_SAVEIM QC_GB23/media/qc_08_mot_grayplot.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1.000000 -com SET_FUNC_RANGE  3.29 -com SET_THRESHNEW   0 * -com SET_FUNC_ALPHA  No -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 2.5 19.25 18 -com SAVE_JPEG sagittalimage ./__tmp_ZXCV_img.sag blowup=1 -com SAVE_JPEG coronalimage  ./__tmp_ZXCV_img.cor blowup=1 -com SAVE_JPEG axialimage    ./__tmp_ZXCV_img.axi blowup=1 -com QUITT ./__tmp_chauf_cij1UC9z7o0 


+* Removing temporary image directory './__tmp_chauf_cij1UC9z7o0'.

[1]    Done                          Xvfb :677 -screen 0 1024x768x24

++ DONE (good exit)
   see: ./__tmp_ZXCV_img*

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
++ FOR: motion_GB23_enorm.1D: 1 arrays with 3288 pts
++ FOR: outcount_rall.1D: 1 arrays with 3288 pts
*+ No ylabels entered
*+ No input x-axis; making values based on length of data: [0..3287]
++ Will scale each time series by censor_hline
++ Apply scale: 2.5
++ Apply scale: 20.0
++ Will apply same y-axis range '[0.0, 3.0]' to all dsets
++ Plotting: 
++ Plotting: 
++ Done! Figure created:
	 __tmp_img_enorm.jpg
\n+* Removing temporary files '__tmp_gluing*'\n

++ DONE! Image output:
       QC_GB23/media/qc_08_mot_grayplot.jpg

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
++ Check summary of degrees of freedom in: QC_GB23/media/qc_09_regr_df.dat
++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -box_focus_slices /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -olay corr_brain+tlrc.HEAD -cbar Reds_and_Blues_Inv -ulay_range 0% 120% -func_range 0.6 -thr_olay 0.3 -olay_alpha Yes -olay_boxed Yes -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GB23/media/qc_10_regr_corr_errts.pbar.jpg -pbar_comm_range Pearson r -pbar_comm_thr alpha+boxed on -prefix QC_GB23/media/qc_10_regr_corr_errts -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
++ Found input file:   corr_brain+tlrc.HEAD
++ Found focus refbox file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
+* NB: focus box vol has >1 slice, so we select [0]th.
++ Using blowup factor: 2
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_i8DN79xWyKW
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.22448,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 120%] -> [0.000000, 1296.724320]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_i8DN79xWyKW/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_i8DN79xWyKW/tmp_olay.nii
++ User-entered function range value value (0.6)
++ Dimensions (xyzt): 193 229 193 5
++ (initial) Slice spacing ordered (x,y,z) is:  27 32 27
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=24..168  y=25..205  z=6..160
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_i8DN79xWyKW/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_i8DN79xWyKW/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_4EWaXMN9fSFLE31k3x_WsA argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0 scale factor = 0.162420
++ Computing output statistics
++ Output dataset /tmp/3dcalc_AFN_4EWaXMN9fSFLE31k3x_WsA+tlrc.BRIK
++ 4067975 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1 17 5
++ Will have the ref box central gapord: 20 25 22

------------------- end of optionizing -------------------

 -- trying to start Xvfb :788 
[1] 509372
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_i8DN79xWyKW++ Writing palette image to QC_GB23/media/qc_10_regr_corr_errts.pbar.jpg
++ Writing one 3218x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_10_regr_corr_errts.sag.jpg'
++ Writing one 2714x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_10_regr_corr_errts.cor.jpg'
++ Writing one 2714x458 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_10_regr_corr_errts.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:20:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:25:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:22:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GB23/media/qc_10_regr_corr_errts.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1296.724320 -com SET_FUNC_RANGE  0.6 -com SET_THRESHNEW   0.3 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  Yes -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1 17 5 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_10_regr_corr_errts.sag blowup=2 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_10_regr_corr_errts.cor blowup=2 -com SAVE_JPEG axialimage    QC_GB23/media/qc_10_regr_corr_errts.axi blowup=2 -com QUITT QC_GB23/media/__tmp_chauf_i8DN79xWyKW 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_i8DN79xWyKW'.

[1]  + Done                          Xvfb :788 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GB23/media/qc_10_regr_corr_errts*

++ Prepare for running adjunct_apqc_tsnr_general (ver = 1.1)
++ MODE: 10
++ olay_alpha has known value: No
*+ Setting pbar file extension: jpg


++ My command:
   @chauffeur_afni -ulay /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -olay TSNR.GB23+tlrc.HEAD -ulay_range 0% 120% -func_range 95 -box_focus_slices /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz -set_subbricks 0 0 0 -pbar_posonly -blowup 2 -cbar   95=red  84=oran-red  74=orange  64=oran-yell  54=yell-oran  44=yellow  34=lt-blue2  21=blue  0=none -cbar_ncolors 8 -cbar_topval EMPTY -opacity 4 -olay_alpha No -olay_boxed No -thr_olay 0 -pbar_saveim QC_GB23/media/qc_11_regr_tsnr_fin.pbar -pbar_comm_range 95%ile in mask -pbar_comm_gen  cbar: hot color range (5-95%ile TSNR in mask):  34 -  95 -prefix QC_GB23/media/qc_11_regr_tsnr_fin -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean -pass -pass

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
++ Found input file:   TSNR.GB23+tlrc.HEAD
++ Found focus refbox file:   /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz
+* NB: focus box vol has >1 slice, so we select [0]th.
++ Using blowup factor: 2
++ Using opacity:  4
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_5lFJmcMZfEQ
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.22448,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 120%] -> [0.000000, 1296.724320]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_5lFJmcMZfEQ/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_5lFJmcMZfEQ/tmp_olay.nii
++ User-entered function range value value (95)
++ Dimensions (xyzt): 193 229 193 5
++ (initial) Slice spacing ordered (x,y,z) is:  27 32 27
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=24..168  y=25..205  z=6..160
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_5lFJmcMZfEQ/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_5lFJmcMZfEQ/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_iY4AJ2_x1HYFBVHtYON7iA argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0 scale factor = 0.162420
++ Computing output statistics
++ Output dataset /tmp/3dcalc_AFN_iY4AJ2_x1HYFBVHtYON7iA+tlrc.BRIK
++ 4067975 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1 17 5
++ Will have the ref box central gapord: 20 25 22

------------------- end of optionizing -------------------

 -- trying to start Xvfb :270 
[1] 509626
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_5lFJmcMZfEQ++ Writing palette image to QC_GB23/media/qc_11_regr_tsnr_fin.pbar.jpg
++ Writing one 3218x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_11_regr_tsnr_fin.sag.jpg'
++ Writing one 2714x386 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_11_regr_tsnr_fin.cor.jpg'
++ Writing one 2714x458 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_11_regr_tsnr_fin.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=4 mont=7x1:20:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=4 mont=7x1:25:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=4 mont=7x1:22:1:black crop=0:0,0:0 -com SET_PBAR_ALL    +8    95=red  84=oran-red  74=orange  64=oran-yell  54=yell-oran  44=yellow  34=lt-blue2  21=blue  0=none -com PBAR_SAVEIM QC_GB23/media/qc_11_regr_tsnr_fin.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 1296.724320 -com SET_FUNC_RANGE  95 -com SET_THRESHNEW   0 * -com SET_FUNC_ALPHA  No -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1 17 5 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_11_regr_tsnr_fin.sag blowup=2 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_11_regr_tsnr_fin.cor blowup=2 -com SAVE_JPEG axialimage    QC_GB23/media/qc_11_regr_tsnr_fin.axi blowup=2 -com QUITT QC_GB23/media/__tmp_chauf_5lFJmcMZfEQ 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_5lFJmcMZfEQ'.

[1]  + Done                          Xvfb :270 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GB23/media/qc_11_regr_tsnr_fin*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb00.tcat/epi.ulay.r01+orig.HEAD -ulay_range 0% 110% -olay radcor.pb00.tcat/radcor.20.r01.corr+orig.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GB23/media/qc_12_radcor_rc_tcat_r01.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GB23/media/qc_12_radcor_rc_tcat_r01 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb00.tcat/epi.ulay.r01+orig.HEAD
++ Found input file:   radcor.pb00.tcat/radcor.20.r01.corr+orig.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_3gfF9oRToUZ
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 10017.295797]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_3gfF9oRToUZ/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_3gfF9oRToUZ/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 83 97 82 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 11
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=1..80  y=1..95  z=1..80
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_3gfF9oRToUZ/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_3gfF9oRToUZ/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_OZVUIC9wZQUTHrbVfM3Ajw argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 608000 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ -3.740425 1.852165 21.72556
++ Will have the ref box central gapord: 11 13 11

------------------- end of optionizing -------------------

 -- trying to start Xvfb :522 
[1] 509873
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_3gfF9oRToUZ++ Writing palette image to QC_GB23/media/qc_12_radcor_rc_tcat_r01.pbar.jpg
++ Writing one 2740x328 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_12_radcor_rc_tcat_r01.sag.jpg'
++ Writing one 2348x328 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_12_radcor_rc_tcat_r01.cor.jpg'
++ Writing one 2348x388 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_12_radcor_rc_tcat_r01.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GB23/media/qc_12_radcor_rc_tcat_r01.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 10017.295797 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ -3.740425 1.852165 21.72556 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_12_radcor_rc_tcat_r01.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_12_radcor_rc_tcat_r01.cor blowup=4 -com SAVE_JPEG axialimage    QC_GB23/media/qc_12_radcor_rc_tcat_r01.axi blowup=4 -com QUITT QC_GB23/media/__tmp_chauf_3gfF9oRToUZ 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_3gfF9oRToUZ'.

[1]    Done                          Xvfb :522 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GB23/media/qc_12_radcor_rc_tcat_r01*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb00.tcat/epi.ulay.r02+orig.HEAD -ulay_range 0% 110% -olay radcor.pb00.tcat/radcor.20.r02.corr+orig.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GB23/media/qc_12_radcor_rc_tcat_r02.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GB23/media/qc_12_radcor_rc_tcat_r02 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb00.tcat/epi.ulay.r02+orig.HEAD
++ Found input file:   radcor.pb00.tcat/radcor.20.r02.corr+orig.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_opMOMnunCjN
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 9960.084241]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_opMOMnunCjN/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_opMOMnunCjN/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 83 97 82 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 11
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=3..82  y=1..95  z=1..80
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_opMOMnunCjN/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_opMOMnunCjN/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_uGO2dj_B1lvxyo53AE4YbQ argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 608000 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 1.625481 1.852165 21.72556
++ Will have the ref box central gapord: 11 13 11

------------------- end of optionizing -------------------

 -- trying to start Xvfb :287 
[1] 510095
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_opMOMnunCjN++ Writing palette image to QC_GB23/media/qc_12_radcor_rc_tcat_r02.pbar.jpg
++ Writing one 2740x328 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_12_radcor_rc_tcat_r02.sag.jpg'
++ Writing one 2348x328 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_12_radcor_rc_tcat_r02.cor.jpg'
++ Writing one 2348x388 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_12_radcor_rc_tcat_r02.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GB23/media/qc_12_radcor_rc_tcat_r02.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 9960.084241 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 1.625481 1.852165 21.72556 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_12_radcor_rc_tcat_r02.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_12_radcor_rc_tcat_r02.cor blowup=4 -com SAVE_JPEG axialimage    QC_GB23/media/qc_12_radcor_rc_tcat_r02.axi blowup=4 -com QUITT QC_GB23/media/__tmp_chauf_opMOMnunCjN 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_opMOMnunCjN'.

[1]    Done                          Xvfb :287 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GB23/media/qc_12_radcor_rc_tcat_r02*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb00.tcat/epi.ulay.r03+orig.HEAD -ulay_range 0% 110% -olay radcor.pb00.tcat/radcor.20.r03.corr+orig.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GB23/media/qc_12_radcor_rc_tcat_r03.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GB23/media/qc_12_radcor_rc_tcat_r03 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb00.tcat/epi.ulay.r03+orig.HEAD
++ Found input file:   radcor.pb00.tcat/radcor.20.r03.corr+orig.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_nAyMReFH46l
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 10369.744149]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_nAyMReFH46l/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_nAyMReFH46l/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 83 97 82 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 11
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=1..82  y=1..95  z=1..80
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_nAyMReFH46l/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_nAyMReFH46l/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_S4_m6pnqimQOEe-MCXxIsQ argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 623200 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ -1.057503 1.852165 21.72556
++ Will have the ref box central gapord: 11 13 11

------------------- end of optionizing -------------------

 -- trying to start Xvfb :139 
[1] 510317
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_nAyMReFH46l++ Writing palette image to QC_GB23/media/qc_12_radcor_rc_tcat_r03.pbar.jpg
++ Writing one 2740x328 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_12_radcor_rc_tcat_r03.sag.jpg'
++ Writing one 2348x328 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_12_radcor_rc_tcat_r03.cor.jpg'
++ Writing one 2348x388 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_12_radcor_rc_tcat_r03.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GB23/media/qc_12_radcor_rc_tcat_r03.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 10369.744149 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ -1.057503 1.852165 21.72556 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_12_radcor_rc_tcat_r03.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_12_radcor_rc_tcat_r03.cor blowup=4 -com SAVE_JPEG axialimage    QC_GB23/media/qc_12_radcor_rc_tcat_r03.axi blowup=4 -com QUITT QC_GB23/media/__tmp_chauf_nAyMReFH46l 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_nAyMReFH46l'.

[1]    Done                          Xvfb :139 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GB23/media/qc_12_radcor_rc_tcat_r03*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb04.volreg/epi.ulay.r01+tlrc.HEAD -ulay_range 0% 110% -olay radcor.pb04.volreg/radcor.20.r01.corr+tlrc.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GB23/media/qc_13_radcor_rc_volreg_r01.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GB23/media/qc_13_radcor_rc_volreg_r01 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb04.volreg/epi.ulay.r01+tlrc.HEAD
++ Found input file:   radcor.pb04.volreg/radcor.20.r01.corr+tlrc.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_n8PosqjGo1b
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 10397.820495]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_n8PosqjGo1b/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_n8PosqjGo1b/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 77 92 77 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 11
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=0..76  y=0..91  z=0..76
++ THD_zeropad: all pad values are zero - just copying dataset
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_n8PosqjGo1b/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_n8PosqjGo1b/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_XZmfXpW4WSUQ_AR2zQ5qAA argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 545468 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 2.5 19.25 18
++ Will have the ref box central gapord: 11 13 11

------------------- end of optionizing -------------------

 -- trying to start Xvfb :372 
[1] 510670
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_n8PosqjGo1b++ Writing palette image to QC_GB23/media/qc_13_radcor_rc_volreg_r01.pbar.jpg
++ Writing one 2600x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_13_radcor_rc_volreg_r01.sag.jpg'
++ Writing one 2180x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_13_radcor_rc_volreg_r01.cor.jpg'
++ Writing one 2180x368 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_13_radcor_rc_volreg_r01.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GB23/media/qc_13_radcor_rc_volreg_r01.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 10397.820495 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 2.5 19.25 18 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_13_radcor_rc_volreg_r01.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_13_radcor_rc_volreg_r01.cor blowup=4 -com SAVE_JPEG axialimage    QC_GB23/media/qc_13_radcor_rc_volreg_r01.axi blowup=4 -com QUITT QC_GB23/media/__tmp_chauf_n8PosqjGo1b 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_n8PosqjGo1b'.

[1]    Done                          Xvfb :372 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GB23/media/qc_13_radcor_rc_volreg_r01*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb04.volreg/epi.ulay.r02+tlrc.HEAD -ulay_range 0% 110% -olay radcor.pb04.volreg/radcor.20.r02.corr+tlrc.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GB23/media/qc_13_radcor_rc_volreg_r02.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GB23/media/qc_13_radcor_rc_volreg_r02 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb04.volreg/epi.ulay.r02+tlrc.HEAD
++ Found input file:   radcor.pb04.volreg/radcor.20.r02.corr+tlrc.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_perhMspsIaZ
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 10343.659477]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_perhMspsIaZ/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_perhMspsIaZ/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 77 92 77 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 11
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=0..76  y=0..91  z=0..76
++ THD_zeropad: all pad values are zero - just copying dataset
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_perhMspsIaZ/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_perhMspsIaZ/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_jyFv9NQhjoLMAKck_OX4eA argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 545468 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 2.5 19.25 18
++ Will have the ref box central gapord: 11 13 11

------------------- end of optionizing -------------------

 -- trying to start Xvfb :697 
[1] 510931
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_perhMspsIaZ++ Writing palette image to QC_GB23/media/qc_13_radcor_rc_volreg_r02.pbar.jpg
++ Writing one 2600x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_13_radcor_rc_volreg_r02.sag.jpg'
++ Writing one 2180x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_13_radcor_rc_volreg_r02.cor.jpg'
++ Writing one 2180x368 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_13_radcor_rc_volreg_r02.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GB23/media/qc_13_radcor_rc_volreg_r02.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 10343.659477 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 2.5 19.25 18 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_13_radcor_rc_volreg_r02.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_13_radcor_rc_volreg_r02.cor blowup=4 -com SAVE_JPEG axialimage    QC_GB23/media/qc_13_radcor_rc_volreg_r02.axi blowup=4 -com QUITT QC_GB23/media/__tmp_chauf_perhMspsIaZ 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_perhMspsIaZ'.

[1]    Done                          Xvfb :697 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GB23/media/qc_13_radcor_rc_volreg_r02*

++ olay_alpha has known value: Yes
++ pbar name has known extension: jpg
++ My command:
   @chauffeur_afni -ulay radcor.pb04.volreg/epi.ulay.r03+tlrc.HEAD -ulay_range 0% 110% -olay radcor.pb04.volreg/radcor.20.r03.corr+tlrc.HEAD -box_focus_slices AMASK_FOCUS_OLAY -cbar Reds_and_Blues_Inv -func_range 0.7 -thr_olay 0.4 -olay_alpha Yes -olay_boxed No -blowup 4 -set_subbricks 0 0 0 -opacity 9 -pbar_saveim QC_GB23/media/qc_13_radcor_rc_volreg_r03.pbar.jpg -pbar_comm_range ulay is 0th vol of EPI -pbar_comm_thr alpha on -prefix QC_GB23/media/qc_13_radcor_rc_volreg_r03 -save_ftype JPEG -montx 7 -monty 1 -montgap 1 -montcolor black -set_xhairs OFF -label_mode 1 -label_size 3 -do_clean

++ Using AFNI ver : AFNI_21.2.04
++ chauffeur ver  : 6.26

------------------ start of optionizing ------------------

++ Found input file:   radcor.pb04.volreg/epi.ulay.r03+tlrc.HEAD
++ Found input file:   radcor.pb04.volreg/radcor.20.r03.corr+tlrc.HEAD
++ Using blowup factor: 4
++ Using opacity:  9
++ Making temporary work directory to copy vis files: QC_GB23/media/__tmp_chauf_1C3EHMTqNfq
++ Converted 0 to labels
++ Final subbrick indices: 0 0 0
++ Copy ulay to visualize (volumetric) within user's range:
++ Ulay range calc for >100%ile ulay max:
   calculating 98%ile value, and then
   multiplying it by a scale factor = 1.12244,
   in order to produce the 98%ile value
++ Ulay to be visualized within user range:
  [0%, 110%] -> [0.000000, 10781.662091]
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_1C3EHMTqNfq/tmp_ulay.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__tmp_chauf_1C3EHMTqNfq/tmp_olay.nii
++ User-entered function range value value (0.7)
++ Dimensions (xyzt): 77 92 77 1
++ (initial) Slice spacing ordered (x,y,z) is:  11 13 11
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ 3dAutobox: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Auto bbox: x=0..76  y=0..91  z=0..76
++ THD_zeropad: all pad values are zero - just copying dataset
++ 3dAutobox: output dataset = QC_GB23/media/__tmp_chauf_1C3EHMTqNfq/ulay_box_0.nii
++ 3dmaskdump: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Executing 3dcalc()
 argv[0]=3dcalc argv[1]=-a argv[2]=QC_GB23/media/__tmp_chauf_1C3EHMTqNfq/ulay_box_0.nii[0] argv[3]=-expr argv[4]=a argv[5]=-byte argv[6]=-session argv[7]=/tmp argv[8]=-prefix argv[9]=3dcalc_AFN_jymTfX_SdN0zNrzr8tvupg argv[10]=-verbose
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Computing sub-brick 0
++ Scaling output to type byte brick(s)
++ Sub-brick 0: no scale factor
++ Computing output statistics
++ 545468 voxels in the entire dataset (no mask)
++ 1 voxels in the boxes and/or balls
++ Using only the boxes+balls mask
++ How many coors? 3
++ Will have the ref box central coors : SET_DICOM_XYZ 2.5 19.25 18
++ Will have the ref box central gapord: 11 13 11

------------------- end of optionizing -------------------

 -- trying to start Xvfb :946 
[1] 511154
+/mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__tmp_chauf_1C3EHMTqNfq++ Writing palette image to QC_GB23/media/qc_13_radcor_rc_volreg_r03.pbar.jpg
++ Writing one 2600x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_13_radcor_rc_volreg_r03.sag.jpg'
++ Writing one 2180x308 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_13_radcor_rc_volreg_r03.cor.jpg'
++ Writing one 2180x368 image to filter '/usr/local/fsl/bin/cjpeg -quality 95 > QC_GB23/media/qc_13_radcor_rc_volreg_r03.axi.jpg'

AFNI QUITTs!

+++ Command Echo:
   afni -q -no1D -noplugins -no_detach -com SWITCH_UNDERLAY tmp_ulay.nii -com SWITCH_OVERLAY  tmp_olay.nii -com SEE_OVERLAY     + -com OPEN_WINDOW sagittalimage opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com OPEN_WINDOW coronalimage  opacity=9 mont=7x1:13:1:black crop=0:0,0:0 -com OPEN_WINDOW axialimage    opacity=9 mont=7x1:11:1:black crop=0:0,0:0 -com SET_PBAR_ALL    -99 1 Reds_and_Blues_Inv -com PBAR_SAVEIM QC_GB23/media/qc_13_radcor_rc_volreg_r03.pbar.jpg dim=64x512H -com SET_SUBBRICKS   0 0 0 -com SET_ULAY_RANGE A.all 0.000000 10781.662091 -com SET_FUNC_RANGE  0.7 -com SET_THRESHNEW   0.4 * -com SET_FUNC_ALPHA  Yes -com SET_FUNC_BOXED  No -com SET_FUNC_RESAM  NN.NN -com SET_XHAIRS      OFF -com SET_XHAIR_GAP   -1 -com SET_DICOM_XYZ 2.5 19.25 18 -com SAVE_JPEG sagittalimage QC_GB23/media/qc_13_radcor_rc_volreg_r03.sag blowup=4 -com SAVE_JPEG coronalimage  QC_GB23/media/qc_13_radcor_rc_volreg_r03.cor blowup=4 -com SAVE_JPEG axialimage    QC_GB23/media/qc_13_radcor_rc_volreg_r03.axi blowup=4 -com QUITT QC_GB23/media/__tmp_chauf_1C3EHMTqNfq 


+* Removing temporary image directory 'QC_GB23/media/__tmp_chauf_1C3EHMTqNfq'.

[1]    Done                          Xvfb :946 -screen 0 1024x768x24

++ DONE (good exit)
   see: QC_GB23/media/qc_13_radcor_rc_volreg_r03*

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
++ Check for corr matrix warnings in: QC_GB23/media/qc_14_warns_xmat.dat
++ Check for censor fraction warnings (general): QC_GB23/media/qc_15_warns_cen_total.dat
++ Prepare for running @djunct_edgy_align_check (ver = 1.45)
++ Copy refbox (vr_base_min_outlier_ts_ns+orig) to workdir
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__workdir_EAC_A4CyTrS9oKk/REFBOX.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__workdir_EAC_A4CyTrS9oKk/eac_0_cp.nii
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: /mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__workdir_EAC_A4CyTrS9oKk/eac_0_cp.nii
++ Base dataset:   (not given)
++ Loading datasets into memory
 +        -cmass x y z shifts =    0.000    0.000    0.000
 +  shift search range is +/- =   70.620   82.677   69.759
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ wsinc5 interpolation setup:
 +   taper function  = Min sidelobe 3 term
 +   taper cut point = 0.000
 +   window radius   = 5 voxels
 +   window shape    = Cubical
 +   The above can be altered via the AFNI_WSINC5_* environment variables.
 +  (To avoid this message, 'setenv AFNI_WSINC5_SILENT YES'.)
 +   wsinc5 CUBE(5) mask has 1000 points
++ Output dataset QC_GB23/media/__workdir_EAC_A4CyTrS9oKk/eac_1_grid2olay.nii
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 9.3
++ ###########################################################
++ Output dataset ./eac_2_ulay_shrp.nii
++ Just copy olay, bc ulay will get regridded
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m** FATAL ERROR:[0m can't open dataset MPRAGE.GB23_unif_al_junk+orig
** Program compile date = Jul 28 2021
QC_GB23/media/__workdir_EAC_A4CyTrS9oKk: No such file or directory.
++ Prepare for running @djunct_edgy_align_check (ver = 1.45)
++ Copy refbox (vr_base_min_outlier_ts_ns+orig) to workdir
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__workdir_EAC_yry0R3GRONF/REFBOX.nii
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./QC_GB23/media/__workdir_EAC_yry0R3GRONF/eac_0_cp.nii
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: /mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/media/__workdir_EAC_yry0R3GRONF/eac_0_cp.nii
++ Base dataset:   (not given)
++ Loading datasets into memory
 +        -cmass x y z shifts =    0.000    0.000    0.000
 +  shift search range is +/- =   70.620   82.677   69.759
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ wsinc5 interpolation setup:
 +   taper function  = Min sidelobe 3 term
 +   taper cut point = 0.000
 +   window radius   = 5 voxels
 +   window shape    = Cubical
 +   The above can be altered via the AFNI_WSINC5_* environment variables.
 +  (To avoid this message, 'setenv AFNI_WSINC5_SILENT YES'.)
 +   wsinc5 CUBE(5) mask has 1000 points
++ Output dataset QC_GB23/media/__workdir_EAC_yry0R3GRONF/eac_1_grid2olay.nii
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 9.2
++ ###########################################################
++ Output dataset ./eac_2_ulay_shrp.nii
++ Just copy olay, bc ulay will get regridded
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m** FATAL ERROR:[0m can't open dataset MPRAGE.GB23_unif_flip_al_junk+orig
** Program compile date = Jul 28 2021
QC_GB23/media/__workdir_EAC_yry0R3GRONF: No such file or directory.
++ Check basic summary quants from proc in: QC_GB23/media/qc_18_qsumm_ssrev.dat


# +++++++++++ Check output of @ss_review_basic +++++++++++ #


subject ID                : GB23
AFNI version              : AFNI_21.2.04
AFNI package              : linux_ubuntu_16_64
TR                        : 0.46
TRs removed (per run)     : 0
num stim classes provided : 0
final anatomy dset        : anat_final.GB23+tlrc.HEAD
final stats dset          : NO_STATS
final errts dset          : errts.GB23.tproject+tlrc.HEAD
orig voxel counts         : 83	97	82
orig voxel resolution     : 2.682927	2.682927	2.682927
orig volume center        : -3.740402	1.852188	20.384090
final voxel resolution    : 2.500000	2.500000	2.500000

motion limit              : 0.4
num TRs above mot limit   : 270
average motion (per TR)   : 0.162504
average censored motion   : 0.109944
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
max motion displacement   : 13.7966
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
max censored displacement : 7.71592
outlier limit             : 0.05
average outlier frac (TR) : 0.0133788
num TRs above out limit   : 275
flip guess                : NO_FLIP

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
num runs found            : 3
num TRs per run           : 1096 1096 1096
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
num TRs per run (applied) : 939 807 971
num TRs per run (censored): 157 289 125
fraction censored per run : 0.143248 0.263686 0.114051
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
TRs total (uncensored)    : 3288
TRs total                 : 2717
degrees of freedom used   : 51
degrees of freedom left   : 2666

/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
TRs censored              : 571
censor fraction           : 0.173662
num regs of interest      : 0

TSNR average              : 70.9709
global correlation (GCOR) : 0.411644
anat/EPI mask Dice coef   : 0.855472
anat/templ mask Dice coef : 0.907035
blur estimates (ACF)      : 0.682966 3.47341 18.3715
blur estimates (FWHM)     : 0 0 0


apqc_make_html.py -qc_dir QC_GB23
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \

++ Done! Wrote QC HTML.  To check, consider:

   afni_open -b QC_GB23/index.html

echo \nconsider running: \n\n    afni_open -b /mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/index.html\n

consider running: 

    afni_open -b /mnt/ext5/GA/fmri_data/preproc_data/GB23/QC_GB23/index.html

endif
cd ..
echo execution finished: `date`
date
execution finished: Fri Jan 20 10:12:43 AM KST 2023
