echo auto-generated by afni_proc.py, Fri Jan 20 10:18:12 2023
auto-generated by afni_proc.py, Fri Jan 20 10:18:12 2023
echo (version 7.17, July 16, 2021)
(version 7.17, July 16, 2021)
echo execution started: `date`
date
execution started: Fri Jan 20 10:18:13 AM KST 2023
afni -ver
Precompiled binary linux_ubuntu_16_64: Jul 28 2021 (Version AFNI_21.2.04 'Nerva')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   27 Jul 2021
if ( 0 ) then
if ( 0 > 0 ) then
set subj = GB13
endif
set output_dir = /mnt/ext5/GA/fmri_data/preproc_data/GB13
if ( -d /mnt/ext5/GA/fmri_data/preproc_data/GB13 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir -p /mnt/ext5/GA/fmri_data/preproc_data/GB13
mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB13/stimuli
3dcopy /mnt/ext5/GA/fmri_data/raw_data/GB13/MPRAGE.GB13.nii /mnt/ext5/GA/fmri_data/preproc_data/GB13/MPRAGE.GB13
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB13/blip_forward /mnt/ext5/GA/fmri_data/raw_data/GB13/dist_AP.GB13.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.3 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB13/blip_reverse /mnt/ext5/GA/fmri_data/raw_data/GB13/dist_PA.GB13.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB13/pb00.GB13.r01.tcat /mnt/ext5/GA/fmri_data/raw_data/GB13/func.GB13.r01.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 52.1 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB13/pb00.GB13.r02.tcat /mnt/ext5/GA/fmri_data/raw_data/GB13/func.GB13.r02.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 55.0 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB13/pb00.GB13.r03.tcat /mnt/ext5/GA/fmri_data/raw_data/GB13/func.GB13.r03.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 68.0 s
set tr_counts = ( 1096 1096 1096 )
cd /mnt/ext5/GA/fmri_data/preproc_data/GB13
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.GB13.r01.tcat+orig.HEAD pb00.GB13.r02.tcat+orig.HEAD pb00.GB13.r03.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 2.9 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 2.7 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 2.6 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB13.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1285.7 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB13.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1285.7 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB13.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1285.7 MB)

-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

3dUnifize -prefix MPRAGE.GB13_unif -GM MPRAGE.GB13+orig
++ 3dUnifize: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + Pre-processing: ADV...............................UW[s80434]Gm
++ Output dataset ./MPRAGE.GB13_unif+orig.BRIK
++ ===== Elapsed = 48.5 sec
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB13.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 80242 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB13.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 80247 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB13.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 80230 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 1096 1096 1096 -index_to_run_tr 45
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
set minoutrun = 01
set minouttr = 45
echo min outlier: run 01, TR 45
tee out.min_outlier.txt
min outlier: run 01, TR 45
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.GB13.r01.despike pb00.GB13.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB13.r01.tcat+orig
++ processing all 615030 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #10
++ start OpenMP thread #1
++ start OpenMP thread #6
++ start OpenMP thread #8
++ start OpenMP thread #7
++ start OpenMP thread #2
++ start OpenMP thread #13
++ start OpenMP thread #11
++ start OpenMP thread #14
++ start OpenMP thread #4
++ start OpenMP thread #12
++ start OpenMP thread #3
++ start OpenMP thread #9
......................................................................................................................................................................................................................................................................
++ Elapsed despike time =  10s 142ms

++ FINAL: 412519056 data points, 15677045 edits [3.800%], 1171948 big edits [0.284%]
++ Output dataset ./pb01.GB13.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB13.r02.despike pb00.GB13.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB13.r02.tcat+orig
++ processing all 615030 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #14
++ start OpenMP thread #13
++ start OpenMP thread #3
++ start OpenMP thread #9
++ start OpenMP thread #7
++ start OpenMP thread #6
++ start OpenMP thread #1
++ start OpenMP thread #5
++ start OpenMP thread #12
++ start OpenMP thread #2
++ start OpenMP thread #4
++ start OpenMP thread #10
++ start OpenMP thread #11
++ start OpenMP thread #8
......................................................................................................................................................................................................................................................................
++ Elapsed despike time =  10s 504ms

++ FINAL: 412519056 data points, 16163652 edits [3.918%], 1407493 big edits [0.341%]
++ Output dataset ./pb01.GB13.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB13.r03.despike pb00.GB13.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB13.r03.tcat+orig
++ processing all 615030 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #14
++ start OpenMP thread #9
++ start OpenMP thread #8
++ start OpenMP thread #3
++ start OpenMP thread #1
++ start OpenMP thread #7
++ start OpenMP thread #6
++ start OpenMP thread #2
++ start OpenMP thread #10
++ start OpenMP thread #4
++ start OpenMP thread #11
++ start OpenMP thread #13
++ start OpenMP thread #12
......................................................................................................................................................................................................................................................................
++ Elapsed despike time =  10s 702ms

++ FINAL: 412519056 data points, 16385961 edits [3.972%], 1566739 big edits [0.380%]
++ Output dataset ./pb01.GB13.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.GB13.r01.tshift pb01.GB13.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB13.r02.tshift pb01.GB13.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB13.r03.tshift pb01.GB13.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTstat -median -prefix rm.blip.med.fwd blip_forward+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.fwd+orig.BRIK
3dTstat -median -prefix rm.blip.med.rev blip_reverse+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.rev+orig.BRIK
3dAutomask -apply_prefix rm.blip.med.masked.fwd rm.blip.med.fwd+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.fwd+orig
++ Forming automask
 + Fixed clip level = 5206.774902
 + Used gradual clip level = 5011.319824 .. 5500.758301
 + Number voxels above clip level = 92542
 + Clustering voxels ...
 + Largest cluster has 89491 voxels
 + Clustering voxels ...
 + Largest cluster has 86259 voxels
 + Filled   467 voxels in small holes; now have 86726 voxels
 + Filled  1030 voxels in large holes; now have 87756 voxels
 + Clustering voxels ...
 + Largest cluster has 87754 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 527276 voxels
 + Mask now has 87754 voxels
++ 87754 voxels in the mask [out of 615030: 14.27%]
++ first  14 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first  18 y-planes are zero [from A]
++ last   14 y-planes are zero [from P]
++ first   8 z-planes are zero [from I]
++ last   16 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dAutomask -apply_prefix rm.blip.med.masked.rev rm.blip.med.rev+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.rev+orig
++ Forming automask
 + Fixed clip level = 4861.751953
 + Used gradual clip level = 4500.921387 .. 5440.977051
 + Number voxels above clip level = 96719
 + Clustering voxels ...
 + Largest cluster has 94367 voxels
 + Clustering voxels ...
 + Largest cluster has 91479 voxels
 + Filled   453 voxels in small holes; now have 91932 voxels
 + Filled  1397 voxels in large holes; now have 93329 voxels
 + Clustering voxels ...
 + Largest cluster has 93315 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 521715 voxels
 + Mask now has 93315 voxels
++ 93315 voxels in the mask [out of 615030: 15.17%]
++ first  13 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first  12 y-planes are zero [from A]
++ last   14 y-planes are zero [from P]
++ first   6 z-planes are zero [from I]
++ last   15 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dQwarp -plusminus -pmNAMES Rev For -pblur 0.05 0.05 -blur -1 -1 -noweight -minpatch 9 -source rm.blip.med.masked.rev+orig -base rm.blip.med.masked.fwd+orig -prefix blip_warp
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=3 ytop=3  zbot=3 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=./rm.blip.med.masked.fwd+orig.HEAD  source=./rm.blip.med.masked.rev+orig.HEAD
++ AFNI warpomatic start: 89 x 101 x 84 volume ; autobbox = 6..80 12..93 0..74
lev=0 0..88 2..100 0..83: [first cost=-1.49891] ...... done [cost=-1.62267]
lev=1 patch=67x75x63: [first cost=-1.49531] ........ done [cost:-1.54821 ; 8 patches optimized, 0 skipped]
lev=2 patch=51x55x47: [first cost=-1.47318] ........................... done [cost:-1.54101 ; 27 patches optimized, 0 skipped]
lev=3 patch=37x41x35: [first cost=-1.48167] .............. done [cost:-1.54671 ; 44 patches optimized, 20 skipped]
lev=4 patch=29x31x27: [first cost=-1.53186] .......... done [cost:-1.61128 ; 84 patches optimized, 41 skipped]
lev=5 patch=21x23x19: [first cost=-1.58925] ........................ done [cost:-1.69208 ; 276 patches optimized, 172 skipped]
lev=6 patch=15x17x15: [first cost=-1.62853] .......................... +      cubic12 patch 002..016 058..074 043..057 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.. done [cost:-1.72028 ; 656 patches optimized, 444 skipped]
lev=7 patch=11x13x11: [first cost=-1.72381] ......................... +      cubic12 patch 003..013 032..044 030..040 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
................. +      cubic12 patch 073..083 044..056 045..055 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
............ +      cubic12 patch 028..038 074..086 060..070 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
. +      cubic12 patch 023..033 038..050 065..077 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.. done [cost:-1.81835 ; 1682 patches optimized, 1258 skipped]
lev=8 patch=9x9x9: [first cost=-1.81708] ... +      cubic12 patch 071..079 032..040 049..057 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 +      cubic12 patch 071..079 032..040 045..053 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.................................... +      cubic12 patch 039..047 072..080 065..073 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
............ +      cubic12 patch 031..039 064..072 000..009 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
...... +      cubic12 patch 027..035 040..048 069..077 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.... +      cubic12 patch 023..031 080..088 017..025 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
... +      cubic12 patch 019..027 052..060 061..069 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
..... +      cubic12 patch 015..023 060..068 061..069 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.. +      cubic12 patch 015..023 024..032 017..025 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xb31350  xbot=0xb58800  xtop=0xb5b360  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.. done [cost:-1.88918 ; 3920 patches optimized, 3262 skipped]
++ ====== total number of parameters 'optimized' = 80553
 +      initial unpenalized cost = -1.49891
 +        final unpenalized cost = -1.91779
 +        final penalized   cost = -1.88918
++ Output dataset ./blip_warp_Rev+orig.BRIK
++ Output dataset ./blip_warp_For+orig.BRIK
++ Output dataset ./blip_warp_Rev_WARP+orig.BRIK
++ Output dataset ./blip_warp_For_WARP+orig.BRIK
++ ===== clock time = 44s 721ms
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.fwd+orig -prefix blip_med_for
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for+orig.BRIK
++ total Elapsed time = 0.3 sec
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.masked.fwd+orig -prefix blip_med_for_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for_masked+orig.BRIK
++ total Elapsed time = 0.3 sec
3dNwarpApply -quintic -nwarp blip_warp_Rev_WARP+orig -source rm.blip.med.masked.rev+orig -prefix blip_med_rev_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.rev+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_rev_masked+orig.BRIK
++ total Elapsed time = 0.3 sec
foreach run ( 01 02 03 )
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB13.r01.tshift+orig -prefix pb03.GB13.r01.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB13.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB13.r01.blip+orig.BRIK
++ total Elapsed time = 122.2 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB13.r02.tshift+orig -prefix pb03.GB13.r02.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB13.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB13.r02.blip+orig.BRIK
++ total Elapsed time = 295.3 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB13.r03.tshift+orig -prefix pb03.GB13.r03.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB13.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB13.r03.blip+orig.BRIK
++ total Elapsed time = 385.3 sec
end
3dbucket -prefix vr_base_min_outlier pb03.GB13.r01.blip+orig[45]
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
align_epi_anat.py -anat2epi -anat MPRAGE.GB13_unif+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off -tshift off
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB13/MPRAGE.GB13_unif+orig
#++ Multi-cost is lpa
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB13_unif*
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB13_unif+orig ./MPRAGE.GB13_unif_unflipped+orig
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./MPRAGE.GB13_unif_unflipped+orig -prefix ./MPRAGE.GB13_unif_unflipped_ns
#Script is running (command trimmed):
  3dinfo ./MPRAGE.GB13_unif_unflipped_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB13/MPRAGE.GB13_unif_unflipped_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB13/vr_base_min_outlier+orig is not oblique
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_ts ./vr_base_min_outlier+orig'[0]'
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_min_outlier_ts_ns ./__tt_vr_base_min_outlier_ts+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 3771.258301
 + Used gradual clip level = 3587.189453 .. 3986.537598
 + Number voxels above clip level = 84490
 + Clustering voxels ...
 + Largest cluster has 81962 voxels
 + Clustering voxels ...
 + Largest cluster has 80935 voxels
 + Filled   301 voxels in small holes; now have 81236 voxels
 + Filled  1022 voxels in large holes; now have 82258 voxels
 + Clustering voxels ...
 + Largest cluster has 82252 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 532778 voxels
 + Mask now has 82252 voxels
++ 82252 voxels in the mask [out of 615030: 13.37%]
++ first  15 x-planes are zero [from R]
++ last   16 x-planes are zero [from L]
++ first  17 y-planes are zero [from A]
++ last   14 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last   16 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_min_outlier_ts_ns+orig
#++ Applying threshold of 8783.103516 on /mnt/ext5/GA/fmri_data/preproc_data/GB13/vr_base_min_outlier_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_min_outlier_ts_ns_wt -a ./vr_base_min_outlier_ts_ns+orig -expr 'min(1,(a/8783.103516))'
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpa -wtprefix ./MPRAGE.GB13_unif_unflipped_ns_al_junk_wtal -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB13_unif_unflipped_ns+orig -prefix ./MPRAGE.GB13_unif_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB13_unif_al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB13_unif_unflipped_ns+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4786264 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 82252 voxels [12.7%] in weight mask
++ Number of points for matching = 82252
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.628 51.120 41.041 (index)
 + source center of mass = 110.969 180.796 163.705 (index)
 + source-target CM = -0.773 -1.265 -0.078 (xyz)
 + estimated center of mass shifts = -0.773 -1.265 -0.078
++ shift param auto-range: -71.4..69.8 -82.2..79.7 -69.8..69.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.773125 .. 9.226875  center = -0.773125
 + Range param#2 [y-shift] = -11.265396 .. 8.734604  center = -1.265396
 + Range param#3 [z-shift] = -10.077805 .. 9.922195  center = -0.077805
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.773125 .. 39.226875  center = -0.773125
 + Range param#2 [y-shift] = -41.265396 .. 38.734604  center = -1.265396
 + Range param#3 [z-shift] = -40.077805 .. 39.922195  center = -0.077805
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -40.773 ..   39.227
 +       y-shift =  -41.265 ..   38.735
 +       z-shift =  -40.078 ..   39.922
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4786264 [out of 23184225] voxels
 + base mask has 102397 [out of 646570] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=224.886 usiz=420.621
 + - copying weight image
 + - using 82252 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 71624 total points stored in 139 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#o+-+o.++.+-o-+..o-o+--$+o-++ + - best 88 costs found:
   o= 0 v= 0.880812:  -0.77  -1.27  -0.08   0.00   0.00   0.00  [grid]
   o= 1 v= 0.965821: -32.61  10.53   2.66  23.31   3.26 -40.47  [rand]
   o= 2 v= 0.966091: -28.63  26.35   9.74  16.34  19.59 -25.89  [rand]
   o= 3 v= 0.967028: -32.61  10.53  -2.82  23.31  -3.26 -40.47  [rand]
   o= 4 v= 0.967399: -27.44  25.40   6.59   7.50   7.50 -30.00  [grid]
   o= 5 v= 0.967936: -32.61  10.53   2.66  23.31  -3.26 -40.47  [rand]
   o= 6 v= 0.968661:  17.56  24.88  -6.12  -6.51  20.18   7.56  [rand]
   o= 7 v= 0.969049: -27.44   5.40 -26.74   7.50  -7.50 -30.00  [grid]
   o= 8 v= 0.969230: -32.61  10.53  -2.82  23.31   3.26 -40.47  [rand]
   o= 9 v= 0.969268: -27.44  -7.93  26.59  -7.50 -30.00 -30.00  [grid]
   o=10 v= 0.969447:   5.89   5.40  -6.74 -30.00   7.50  30.00  [grid]
   o=11 v= 0.969642:  25.89   5.40  -6.74  -7.50   7.50  30.00  [grid]
   o=12 v= 0.969851:  -7.44  -7.93  -6.74   7.50  -7.50   7.50  [grid]
   o=13 v= 0.969959: -12.07  32.87  -6.05   4.11 -32.66 -25.74  [rand]
   o=14 v= 0.969969: -27.44  25.40  -6.74  -7.50 -30.00 -30.00  [grid]
   o=15 v= 0.970080:   1.35  -7.77 -30.18  -6.85 -38.25 -36.13  [rand]
   o=16 v= 0.970171: -27.44   5.40   6.59   7.50  -7.50 -30.00  [grid]
   o=17 v= 0.970293:   5.89   5.40  -6.74  -7.50   7.50  -7.50  [grid]
   o=18 v= 0.970878:   5.89  -7.93  26.59  30.00   7.50  30.00  [grid]
   o=19 v= 0.970996: -27.44  25.40   6.59   7.50  -7.50 -30.00  [grid]
   o=20 v= 0.971045: -30.89  31.65   3.11  -3.65 -37.49  -5.77  [rand]
   o=21 v= 0.971073:  21.55  28.37   6.92   8.73 -38.75  33.73  [rand]
   o=22 v= 0.971175: -19.27   4.59 -14.68  16.04  -3.33  12.13  [rand]
   o=23 v= 0.971191: -31.80 -20.85  21.52  24.25  27.21  33.81  [rand]
   o=24 v= 0.971262: -27.44  25.40  26.59   7.50  -7.50 -30.00  [grid]
   o=25 v= 0.971317:  -7.44   5.40  -6.74   7.50   7.50   7.50  [grid]
   o=26 v= 0.971477:   9.22  32.78  -6.60  -9.05 -41.60  20.37  [rand]
   o=27 v= 0.971600: -32.98  27.78  36.06  40.41  19.09 -40.75  [rand]
   o=28 v= 0.971606:  25.89   5.40  -6.74  -7.50   7.50   7.50  [grid]
   o=29 v= 0.971672:   4.18 -12.45  23.16  35.24  13.60  30.23  [rand]
   o=30 v= 0.971713: -27.44  -7.93  26.59  30.00  30.00 -30.00  [grid]
   o=31 v= 0.971734:   5.89  -7.93  -6.74  -7.50  -7.50  -7.50  [grid]
   o=32 v= 0.971777: -27.44 -27.93   6.59   7.50  -7.50 -30.00  [grid]
   o=33 v= 0.971805: -19.10  24.88  -6.12   6.51  20.18  -7.56  [rand]
   o=34 v= 0.971825:  25.89  25.40  -6.74 -30.00   7.50  30.00  [grid]
   o=35 v= 0.971847: -19.27   4.59  14.52  16.04   3.33 -12.13  [rand]
   o=36 v= 0.971877:   5.89  -7.93 -26.74  -7.50 -30.00  -7.50  [grid]
   o=37 v= 0.971925: -25.47   3.34  16.31  -8.97 -18.72 -30.56  [rand]
   o=38 v= 0.972055:   9.22  32.78   6.44  -9.05 -41.60  20.37  [rand]
   o=39 v= 0.972089:  10.52  32.87  -6.05  -4.11 -32.66  25.74  [rand]
   o=40 v= 0.972134: -32.98 -30.31  36.06  40.41  19.09 -40.75  [rand]
   o=41 v= 0.972169: -19.10  24.88  -6.12   6.51 -20.18   7.56  [rand]
   o=42 v= 0.972244:  18.72  15.41   2.52  30.54  19.59  20.03  [rand]
   o=43 v= 0.972317:   5.89  25.40   6.59  30.00   7.50  30.00  [grid]
   o=44 v= 0.972363:  17.56  24.88  -6.12  -6.51  20.18  -7.56  [rand]
   o=45 v= 0.972537: -27.44  25.40   6.59  30.00   7.50 -30.00  [grid]
   o=46 v= 0.972565:  29.35  31.65  -3.26   3.65 -37.49   5.77  [rand]
   o=47 v= 0.972642:  13.37 -29.39  23.38  27.82  -2.77  20.28  [rand]
   o=48 v= 0.972698:  29.35  31.65  -3.26  -3.65 -37.49   5.77  [rand]
   o=49 v= 0.972723: -10.77  32.78  -6.60  -9.05 -41.60  20.37  [rand]
   o=50 v= 0.972946:  25.89  25.40   6.59  -7.50   7.50  30.00  [grid]
   o=51 v= 0.973078: -37.42  15.96 -22.33   5.26  41.39  40.03  [rand]
   o=52 v= 0.973109: -19.27   4.59  14.52  16.04  -3.33 -12.13  [rand]
   o=53 v= 0.973167:  25.89   5.40  -6.74  -7.50  -7.50  30.00  [grid]
   o=54 v= 0.973192: -12.07  32.87  -6.05  -4.11 -32.66 -25.74  [rand]
   o=55 v= 0.973261:  25.89  25.40  -6.74   7.50   7.50   7.50  [grid]
   o=56 v= 0.973270:  25.89   5.40   6.59  -7.50   7.50  30.00  [grid]
   o=57 v= 0.973303: -35.63  34.41  14.17 -40.22 -24.26  41.52  [rand]
   o=58 v= 0.973332: -27.44  25.40   6.59  30.00  30.00 -30.00  [grid]
   o=59 v= 0.973361:   5.89   5.40  -6.74 -30.00   7.50   7.50  [grid]
   o=60 v= 0.973421:  13.37 -29.39  23.38  27.82   2.77  20.28  [rand]
   o=61 v= 0.973517:  19.01  15.48  17.60   2.96   2.59  18.65  [rand]
   o=62 v= 0.973591:  19.01  15.48  17.60   2.96  -2.59  18.65  [rand]
   o=63 v= 0.973592: -19.27   4.59 -14.68  16.04   3.33  12.13  [rand]
   o=64 v= 0.973639: -30.89  31.65  -3.26   3.65 -37.49  -5.77  [rand]
   o=65 v= 0.973665:  -7.44  -7.93  -6.74   7.50   7.50  30.00  [grid]
   o=66 v= 0.973725:  31.71 -15.96  11.73  11.16  -9.40  34.39  [rand]
   o=67 v= 0.973807:  25.24  29.01  15.64   5.50   4.28  12.07  [rand]
   o=68 v= 0.973940:  17.56 -27.41   5.97  -6.51 -20.18  -7.56  [rand]
   o=69 v= 0.973959: -27.44  25.40   6.59  -7.50 -30.00 -30.00  [grid]
   o=70 v= 0.973992:  25.89   5.40   6.59  -7.50  -7.50  30.00  [grid]
   o=71 v= 0.974028: -27.44  25.40   6.59  -7.50  -7.50  -7.50  [grid]
   o=72 v= 0.974059:  31.07  10.53  -2.82 -23.31   3.26  40.47  [rand]
   o=73 v= 0.974102:  17.56 -27.41   5.97  -6.51 -20.18   7.56  [rand]
   o=74 v= 0.974125:  25.89   5.40  26.59   7.50  -7.50  30.00  [grid]
   o=75 v= 0.974168: -27.44  25.40  -6.74  -7.50  -7.50  -7.50  [grid]
   o=76 v= 0.974209: -27.44 -27.93   6.59  -7.50 -30.00 -30.00  [grid]
   o=77 v= 0.974335: -30.89  31.65  -3.26  -3.65 -37.49  -5.77  [rand]
   o=78 v= 0.974337:  19.01  15.48  17.60  -2.96   2.59  18.65  [rand]
   o=79 v= 0.974391: -27.83  22.65   7.40  25.95  25.17 -41.69  [rand]
   o=80 v= 0.974467: -27.44   5.40 -26.74  -7.50 -30.00 -30.00  [grid]
   o=81 v= 0.974525:  25.89  25.40  -6.74  -7.50   7.50  30.00  [grid]
   o=82 v= 0.974544:  34.09 -31.82  15.69 -11.68  29.04  39.38  [rand]
   o=83 v= 0.974570:  -7.44  25.40  26.59 -30.00   7.50 -30.00  [grid]
   o=84 v= 0.974604: -37.44 -29.03   4.81  15.70 -36.90 -27.47  [rand]
   o=85 v= 0.974628:  31.66 -15.61   5.52   8.22  -9.03  36.72  [rand]
   o=86 v= 0.974684:   5.89   5.40  26.59  30.00  30.00  30.00  [grid]
   o=87 v= 0.974694: -33.26  13.43  11.73  11.16  -9.40 -34.39  [rand]
 + - A little optimization:*[#11725=0.864201] *[#11726=0.838458] *[#11730=0.825621] *[#11735=0.819305] *[#11739=0.818267] *[#11741=0.81794] *[#11742=0.817808] *[#11745=0.817418] *[#11746=0.817206] *[#11747=0.817083] *[#11748=0.817019] *[#11751=0.816774] *[#11752=0.816459] *[#11755=0.816459] *[#11757=0.816306] *[#11758=0.816305] *[#11759=0.816037] *[#11762=0.815951] ........................................................................................
 + - costs of the above after a little optimization:
  *o= 0 v= 0.815951:  -0.43   0.32   1.07  -0.03   0.57   0.97  [grid]  [f=53]
   o= 1 v= 0.959780: -31.47  12.35   7.30  24.66   5.72 -41.00  [rand]  [f=43]
   o= 2 v= 0.963129: -28.28  26.93   9.45  15.46  18.57 -27.18  [rand]  [f=36]
   o= 3 v= 0.961527: -31.18  11.92  -2.62  18.92  -2.73 -36.07  [rand]  [f=43]
   o= 4 v= 0.963633: -24.56  25.70   5.45   6.20   7.86 -29.67  [grid]  [f=43]
   o= 5 v= 0.958694: -29.91  13.88  -0.40  19.90   1.11 -41.25  [rand]  [f=55]
   o= 6 v= 0.966049:  17.74  27.27  -6.66  -7.59  18.98   6.71  [rand]  [f=35]
   o= 7 v= 0.966497: -26.50   5.18 -27.93   4.44  -9.28 -30.63  [grid]  [f=48]
   o= 8 v= 0.960023: -30.77  16.41   0.76  22.29   0.31 -37.64  [rand]  [f=40]
   o= 9 v= 0.967689: -26.05  -7.48  25.75  -7.44 -29.51 -31.94  [grid]  [f=43]
   o=10 v= 0.963928:   6.71   3.61  -5.89 -31.03   3.97  26.86  [grid]  [f=53]
   o=11 v= 0.962887:  27.21   6.16  -3.33  -7.14   7.06  29.22  [grid]  [f=42]
   o=12 v= 0.963780: -13.38  -7.23  -6.02   7.05  -6.10   6.98  [grid]  [f=45]
   o=13 v= 0.967039: -11.21  33.72  -6.70   7.12 -33.90 -25.63  [rand]  [f=42]
   o=14 v= 0.965356: -25.23  30.16  -8.06  -5.82 -30.03 -30.19  [grid]  [f=35]
   o=15 v= 0.967542:   1.44  -8.54 -30.30  -6.83 -33.09 -36.29  [rand]  [f=38]
   o=16 v= 0.964647: -26.66   6.25   6.32   9.77  -1.60 -29.42  [grid]  [f=45]
   o=17 v= 0.956670:  10.91   5.97  -8.43  -8.05   5.25  -6.18  [grid]  [f=83]
   o=18 v= 0.961372:  10.38  -7.95  24.13  27.02  11.04  31.08  [grid]  [f=46]
   o=19 v= 0.966147: -26.64  24.85  12.08   7.67  -6.51 -29.88  [grid]  [f=43]
   o=20 v= 0.965476: -28.51  34.59   3.78  -5.33 -40.86  -5.83  [rand]  [f=33]
   o=21 v= 0.957942:  21.14  33.32   9.67   8.30 -43.63  22.68  [rand]  [f=57]
   o=22 v= 0.968058: -18.29   4.55 -14.72  16.03  -1.39  12.33  [rand]  [f=44]
   o=23 v= 0.969758: -32.91 -20.54  21.23  23.98  27.77  33.50  [rand]  [f=35]
   o=24 v= 0.960607: -28.36  25.49  22.25  10.75  -2.85 -36.52  [grid]  [f=51]
   o=25 v= 0.964559:  -7.54   8.72  -8.32   8.19   7.38   7.04  [grid]  [f=69]
   o=26 v= 0.962830:  10.10  37.40  -1.72  -9.77 -39.78  19.73  [rand]  [f=47]
   o=27 v= 0.969048: -31.98  26.40  36.67  37.67  18.46 -43.23  [rand]  [f=42]
   o=28 v= 0.963752:  26.48   4.89  -5.93  -1.78   3.20   6.73  [grid]  [f=50]
   o=29 v= 0.966426:   4.75  -9.04  24.09  34.41  13.05  30.66  [rand]  [f=48]
   o=30 v= 0.962733: -28.13  -7.70  32.37  26.37  24.76 -29.71  [grid]  [f=55]
   o=31 v= 0.966144:   6.24  -8.73  -7.05  -6.15  -7.95  -3.44  [grid]  [f=48]
   o=32 v= 0.969588: -27.51 -27.86   3.12   7.15 -10.20 -30.21  [grid]  [f=35]
   o=33 v= 0.970688: -19.57  24.86  -6.10   6.00  20.49  -6.93  [rand]  [f=35]
   o=34 v= 0.968251:  26.45  25.78  -7.78 -31.38   7.57  33.48  [grid]  [f=47]
   o=35 v= 0.966832: -18.06   3.70  12.48  15.39  -0.54 -12.05  [rand]  [f=38]
   o=36 v= 0.969422:   5.16  -8.33 -28.19  -7.98 -30.72 -10.13  [grid]  [f=49]
   o=37 v= 0.960049: -25.11   4.99  18.38  -5.86 -23.26 -21.97  [rand]  [f=39]
   o=38 v= 0.956163:  16.06  36.25   4.52  -7.38 -44.28  12.53  [rand]  [f=65]
   o=39 v= 0.962472:  10.87  36.54  -6.86  -7.39 -34.20  26.70  [rand]  [f=42]
   o=40 v= 0.968449: -32.45 -32.67  36.33  36.37  20.59 -36.79  [rand]  [f=40]
   o=41 v= 0.965219: -19.19  29.20  -4.71   6.18 -19.12   7.26  [rand]  [f=38]
   o=42 v= 0.965659:  16.41  14.56   2.63  29.45  21.20  24.41  [rand]  [f=63]
   o=43 v= 0.967297:   5.85  26.10   8.33  35.46   7.19  29.81  [grid]  [f=34]
   o=44 v= 0.963868:  17.13  20.53  -6.24  -5.46  21.86  -8.06  [rand]  [f=46]
   o=45 v= 0.969474: -32.25  25.50   3.23  29.44   7.80 -32.85  [grid]  [f=43]
   o=46 v= 0.958125:  19.55  34.93   3.47   4.32 -38.96  12.08  [rand]  [f=46]
   o=47 v= 0.970270:  13.29 -28.32  24.04  27.75   0.80  19.61  [rand]  [f=44]
   o=48 v= 0.961446:  22.14  34.50  -1.09  -0.04 -37.97   9.76  [rand]  [f=54]
   o=49 v= 0.966646: -11.54  36.69  -5.63  -8.97 -42.23  19.95  [rand]  [f=30]
   o=50 v= 0.967836:  26.31  29.89   6.63  -5.98   8.66  29.62  [grid]  [f=39]
   o=51 v= 0.967795: -35.88  11.60 -21.65   5.39  40.84  40.45  [rand]  [f=34]
   o=52 v= 0.965498: -18.24   3.51  13.07  15.33   0.90 -11.56  [rand]  [f=42]
   o=53 v= 0.963523:  27.55   6.46  -2.68  -6.31   2.04  30.25  [grid]  [f=57]
   o=54 v= 0.967733: -12.70  37.70  -5.93  -3.29 -31.90 -25.29  [rand]  [f=31]
   o=55 v= 0.966398:  23.69  26.73   0.10   8.01  11.85   9.05  [grid]  [f=50]
   o=56 v= 0.967479:  25.64   9.84   4.36 -12.61   5.38  27.38  [grid]  [f=48]
   o=57 v= 0.973021: -35.70  34.36  14.20 -40.28 -24.23  41.66  [rand]  [f=35]
   o=58 v= 0.968396: -27.73  20.78   7.21  30.53  23.76 -35.40  [grid]  [f=39]
   o=59 v= 0.959149:   3.70   4.04  -9.19 -23.87   6.23   3.86  [grid]  [f=81]
   o=60 v= 0.971572:   8.94 -28.94  23.91  27.87   2.49  20.50  [rand]  [f=32]
   o=61 v= 0.966656:  23.33  16.09  18.91   2.92   2.25  17.73  [rand]  [f=43]
   o=62 v= 0.966839:  22.64  16.14  18.66   1.34   4.05  19.89  [rand]  [f=47]
   o=63 v= 0.962280: -17.48   5.35  -9.28  14.08   0.72  12.49  [rand]  [f=46]
   o=64 v= 0.966175: -23.61  32.53   2.41   4.15 -38.43  -8.87  [rand]  [f=42]
   o=65 v= 0.965993:  -5.28  -7.12  -3.18  10.37   7.95  29.20  [grid]  [f=59]
   o=66 v= 0.968021:  34.23 -20.61  13.07  11.63  -7.79  35.55  [rand]  [f=41]
   o=67 v= 0.968107:  25.43  25.78  15.59   5.24   4.73  11.49  [rand]  [f=52]
   o=68 v= 0.967843:  16.76 -27.71   9.73  -8.46 -18.90  -6.54  [rand]  [f=35]
   o=69 v= 0.971202: -26.66  25.70   6.90 -10.00 -27.01 -25.60  [grid]  [f=38]
   o=70 v= 0.958946:  25.88   4.96  -3.08  -2.61  -1.77  24.39  [grid]  [f=58]
   o=71 v= 0.969154: -27.16  20.28   8.08  -8.50  -6.78  -8.93  [grid]  [f=43]
   o=72 v= 0.966990:  28.69  15.66  -2.99 -24.31   3.61  39.68  [rand]  [f=39]
   o=73 v= 0.972293:  17.52 -30.96   5.96  -6.10 -20.31   7.69  [rand]  [f=34]
   o=74 v= 0.967546:  27.05   4.49  23.69   5.27  -9.45  29.64  [grid]  [f=42]
   o=75 v= 0.970495: -27.24  24.29  -8.57  -5.57  -8.66  -9.73  [grid]  [f=50]
   o=76 v= 0.971795: -27.91 -28.96   3.71  -9.36 -31.18 -31.88  [grid]  [f=34]
   o=77 v= 0.963324: -31.95  36.15  -1.11  -0.75 -43.68 -11.66  [rand]  [f=54]
   o=78 v= 0.969204:  20.42  16.43  17.43   2.95   1.49  14.98  [rand]  [f=44]
   o=79 v= 0.964940: -27.29  15.25   9.10  27.57  21.07 -41.24  [rand]  [f=47]
   o=80 v= 0.971595: -26.90  -0.24 -27.14  -7.88 -29.02 -29.24  [grid]  [f=33]
   o=81 v= 0.965602:  25.25  24.26  -0.69  -8.54  10.69  28.13  [grid]  [f=51]
   o=82 v= 0.966604:  37.56 -22.14  14.78 -10.47  28.29  40.83  [rand]  [f=38]
   o=83 v= 0.969994:  -8.01  23.69  27.43 -29.98   3.44 -32.79  [grid]  [f=41]
   o=84 v= 0.971097: -38.97 -34.48   2.70  14.95 -37.51 -28.32  [rand]  [f=45]
   o=85 v= 0.968337:  33.95 -17.30   6.85   6.85  -8.85  34.87  [rand]  [f=57]
   o=86 v= 0.970077:   5.36   4.59  26.75  29.82  27.42  34.29  [grid]  [f=39]
   o=87 v= 0.961863: -32.38  11.04  15.42  19.68  -3.22 -36.70  [rand]  [f=49]
 + - saving # 0 for use with twobest
 + - saving #38 for use with twobest
 + - saving #17 for use with twobest
 + - saving #21 for use with twobest
 + - saving #46 for use with twobest
 + - saving # 5 for use with twobest
 + - saving #70 for use with twobest
 + - saving #59 for use with twobest
 + - saving # 1 for use with twobest
 + - skip # 8 for twobest: too close to set # 5
 + - saving #37 for use with twobest
 + - saving #24 for use with twobest
 + - saving #18 for use with twobest
 + - saving #48 for use with twobest
 + - saving # 3 for use with twobest
 + - saving #87 for use with twobest
 + - saving #63 for use with twobest
 + - saving #39 for use with twobest
 + - saving #30 for use with twobest
 + - saving #26 for use with twobest
 + - saving #11 for use with twobest
 + - saving # 2 for use with twobest
 + - saving #77 for use with twobest
 + - saving #53 for use with twobest
 + - saving # 4 for use with twobest
 + - saving #28 for use with twobest
 + - saving #12 for use with twobest
 + - saving #44 for use with twobest
 + - saving #10 for use with twobest
 + - saving #25 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=224.886 usiz=420.621
 + - retaining old weight image
 + - using 82252 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 72575 total points stored in 145 'TOHD(14.0453)' bloks (0 duplicates)
*[#15768=0.79771] *[#15794=0.794311] *[#15798=0.793913] *[#15799=0.793725] *[#15800=0.79344] *[#15801=0.792989] *[#15806=0.79039] *[#15807=0.786568] *[#15808=0.784625] *[#15811=0.784051] *[#15813=0.783527] *[#15814=0.781428] *[#15815=0.779619] *[#15816=0.779185] *[#15817=0.778953] *[#15818=0.778532] *[#15819=0.777891] *[#15824=0.777359] *[#15826=0.773368] *[#15827=0.771329] *[#15830=0.770097] *[#15833=0.768541] *[#15834=0.768058] *[#15836=0.767979] *[#15838=0.767789] *[#15841=0.76657] *[#15842=0.766437] *[#15843=0.765859] *[#15846=0.765204] *[#15847=0.765159] *[#15849=0.76497] *[#15854=0.764328] *[#15860=0.764284] 
 + - param set #1 has cost=0.764284 [o=0 t=0]
 + -- Parameters = -0.4403 -0.0679 1.3113 0.0694 1.6156 0.5872 0.9754 0.9856 0.9557 0.0015 0.0130 0.0128
 + - param set #2 has cost=0.962936 [o=38 t=1]
 + -- Parameters = 16.0381 36.3993 4.6428 -7.2282 -44.4065 12.2065 1.0063 0.9973 0.9967 -0.0008 0.0126 -0.0008
 + - param set #3 has cost=0.959216 [o=17 t=2]
 + -- Parameters = 13.0329 6.4050 -6.9807 -8.1874 4.5508 -5.0360 1.0768 0.9896 0.9816 -0.0010 -0.0092 -0.0098
 + - param set #4 has cost=0.962319 [o=21 t=3]
 + -- Parameters = 20.9735 33.5693 9.6899 7.7356 -44.3545 21.8098 0.9978 1.0327 0.9985 0.0016 0.0011 0.0006
 + - param set #5 has cost=0.959563 [o=46 t=4]
 + -- Parameters = 19.3808 34.3034 1.9746 -2.1076 -39.5295 7.7337 0.9724 1.0311 0.9680 0.0102 -0.0031 -0.0059
 + - param set #6 has cost=0.965127 [o=5 t=5]
 + -- Parameters = -29.9763 13.7484 -0.5398 20.0702 1.1247 -41.4463 0.9978 0.9990 0.9985 0.0002 0.0017 0.0002
 + - param set #7 has cost=0.967958 [o=70 t=6]
 + -- Parameters = 25.4929 5.2577 -2.9764 -3.2295 -1.4235 23.8861 1.0005 1.0052 1.0000 0.0014 -0.0009 0.0010
 + - param set #8 has cost=0.967536 [o=59 t=7]
 + -- Parameters = 3.2741 3.5115 -9.0339 -23.7190 5.7268 3.9741 1.0009 1.0124 0.9983 0.0032 0.0009 -0.0036
 + - param set #9 has cost=0.966736 [o=1 t=8]
 + -- Parameters = -31.4643 12.3291 7.2868 24.6523 5.7180 -41.0242 0.9999 1.0042 0.9976 -0.0001 0.0000 -0.0001
 + - param set #10 has cost=0.967532 [o=37 t=9]
 + -- Parameters = -25.0382 5.4376 19.1932 -5.9661 -21.9955 -21.0122 1.0037 1.0049 1.0038 0.0010 0.0151 0.0018
 + - param set #11 has cost=0.969092 [o=24 t=10]
 + -- Parameters = -28.3887 25.4836 22.2841 10.7989 -2.9076 -36.4542 1.0002 0.9998 1.0004 0.0123 0.0000 -0.0000
 + - param set #12 has cost=0.967681 [o=18 t=11]
 + -- Parameters = 10.1564 -8.0088 24.4932 27.5577 11.6739 31.3678 0.9990 1.0038 0.9983 0.0117 -0.0003 0.0002
 + - param set #13 has cost=0.957005 [o=48 t=12]
 + -- Parameters = 21.2944 33.2328 1.2747 -3.6304 -39.6634 5.7247 0.9320 1.0749 0.9597 0.0015 0.0190 0.0012
 + - param set #14 has cost=0.967311 [o=3 t=13]
 + -- Parameters = -31.1790 11.9305 -2.6080 18.9600 -2.7003 -36.0716 1.0002 0.9998 1.0002 0.0012 -0.0004 -0.0003
 + - param set #15 has cost=0.968299 [o=87 t=14]
 + -- Parameters = -32.5354 11.0743 15.2865 19.3102 -3.2215 -36.2534 1.0010 0.9989 0.9984 -0.0002 -0.0003 0.0120
 + - param set #16 has cost=0.969358 [o=63 t=15]
 + -- Parameters = -17.5446 5.2706 -9.5998 14.3946 0.7491 12.2139 0.9989 0.9967 0.9901 0.0132 0.0002 0.0002
 + - param set #17 has cost=0.967896 [o=39 t=16]
 + -- Parameters = 10.7860 36.4086 -6.8778 -7.3604 -34.1701 26.5735 1.0027 1.0039 1.0011 0.0124 0.0009 0.0005
 + - param set #18 has cost=0.785063 [o=-1 t=-1]
 + -- Parameters = -0.7351 0.1647 0.8216 0.2706 0.9682 0.2536 0.9898 0.9898 0.9972 0.0047 0.0131 0.0050
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0597 
 + --- dist(#3,#1) = 0.459 
 + --- dist(#4,#1) = 0.168 
 + --- dist(#5,#1) = 0.457 
 + --- dist(#6,#1) = 0.511 
 + --- dist(#7,#1) = 0.511 
 + --- dist(#8,#1) = 0.467 
 + --- dist(#9,#1) = 0.462 
 + --- dist(#10,#1) = 0.407 
 + --- dist(#11,#1) = 0.307 
 + --- dist(#12,#1) = 0.264 
 + --- dist(#13,#1) = 0.342 
 + --- dist(#14,#1) = 0.456 
 + --- dist(#15,#1) = 0.324 
 + --- dist(#16,#1) = 0.409 
 + --- dist(#17,#1) = 0.412 
 + --- dist(#18,#1) = 0.214 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=224.886 usiz=420.621
 + - retaining old weight image
 + - using 82252 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 72337 total points stored in 146 'TOHD(13.984)' bloks (0 duplicates)
*[#17255=0.764135] *[#17256=0.764056] *[#17267=0.764041] *[#17271=0.764037] *[#17272=0.764015] *[#17273=0.763995] *[#17274=0.763981] *[#17277=0.763955] *[#17278=0.763917] *[#17279=0.763888] *[#17280=0.76387] *[#17283=0.763796] *[#17284=0.763777] *[#17285=0.763772] *[#17286=0.763749] *[#17289=0.763727] *[#17290=0.763715] *[#17291=0.76371] *[#17292=0.763708] *[#17293=0.763708] *[#17294=0.763703] *[#17296=0.763695] *[#17297=0.763684] *[#17300=0.763677] *[#17309=0.763676] *[#17316=0.763676] 
 + - param set #1 has cost=0.763676 [o=0 t=0]
 + -- Parameters = -0.5238 -0.1002 1.3654 0.2358 1.5731 0.4389 0.9782 0.9892 0.9590 0.0024 0.0127 0.0122
 + - param set #2 has cost=0.763995 [o=-1 t=-1]
 + -- Parameters = -0.5167 0.0499 1.2591 0.2463 1.2325 0.4262 0.9786 0.9874 0.9656 0.0035 0.0137 0.0053
 + - param set #3 has cost=0.963596 [o=48 t=12]
 + -- Parameters = 21.3016 33.2614 1.2537 -3.6471 -39.6655 5.7871 0.9299 1.0738 0.9601 0.0016 0.0193 0.0000
 + - param set #4 has cost=0.968429 [o=17 t=2]
 + -- Parameters = 12.7983 6.2907 -6.9772 -8.2031 4.5915 -4.9366 1.0803 0.9889 0.9817 -0.0012 -0.0093 -0.0020
 + - param set #5 has cost=0.965238 [o=46 t=4]
 + -- Parameters = 19.3940 34.6122 1.9192 -2.0936 -39.5463 7.7017 0.9720 1.0567 0.9691 0.0107 -0.0026 -0.0053
 + - param set #6 has cost=0.965434 [o=21 t=3]
 + -- Parameters = 20.0685 33.4223 12.7604 7.9185 -44.6892 21.5676 1.0022 1.0362 0.9943 0.0011 0.0008 -0.0007
 + - param set #7 has cost=0.969132 [o=38 t=1]
 + -- Parameters = 16.0582 36.6557 4.6284 -7.1263 -44.3175 12.1980 1.0066 0.9961 1.0002 -0.0003 0.0117 -0.0008
 + - param set #8 has cost=0.969798 [o=5 t=5]
 + -- Parameters = -30.1956 14.7623 -0.5974 19.9730 2.0162 -40.8008 0.9925 0.9909 0.9914 -0.0005 0.0016 0.0003
 + - param set #9 has cost=0.970929 [o=1 t=8]
 + -- Parameters = -31.2487 12.7898 6.8689 25.6739 5.5605 -41.0980 0.9792 0.9828 0.9822 -0.0005 -0.0008 0.0020
 + - param set #10 has cost=0.971159 [o=3 t=13]
 + -- Parameters = -30.1691 12.5482 -2.1014 19.4424 -2.4291 -36.5755 1.0055 0.9956 0.9939 0.0017 -0.0001 -0.0019
 + - param set #11 has cost=0.971484 [o=37 t=9]
 + -- Parameters = -24.5991 5.2967 19.6836 -5.9105 -22.1217 -20.9303 1.0053 1.0040 0.9950 0.0016 0.0146 0.0016
 + - param set #12 has cost=0.973552 [o=59 t=7]
 + -- Parameters = 3.0811 3.3321 -9.1507 -23.4313 5.8724 4.0172 0.9996 1.0159 0.9911 0.0124 0.0010 -0.0032
 + - param set #13 has cost=0.970224 [o=18 t=11]
 + -- Parameters = 10.0248 -8.1967 24.7591 28.2495 10.9605 33.8613 1.0030 0.9975 0.9662 0.0179 0.0027 -0.0056
 + - param set #14 has cost=0.968036 [o=39 t=16]
 + -- Parameters = 10.3108 35.5710 -6.3448 -5.7339 -36.1490 27.6016 0.9670 1.0659 0.9686 0.0124 -0.0020 -0.0034
 + - param set #15 has cost=0.971699 [o=70 t=6]
 + -- Parameters = 25.2973 5.2762 -0.3069 -3.6329 -0.6546 23.6965 1.0021 1.0038 0.9985 0.0004 -0.0008 0.0008
 + - param set #16 has cost=0.971362 [o=87 t=14]
 + -- Parameters = -32.1240 11.0560 16.0817 19.2680 -3.1288 -37.2647 0.9882 0.9970 0.9909 0.0109 0.0001 0.0106
 + - param set #17 has cost=0.974194 [o=24 t=10]
 + -- Parameters = -28.4893 25.4048 22.5554 10.9811 -2.9600 -36.6310 1.0018 0.9973 0.9991 0.0205 -0.0002 -0.0001
 + - param set #18 has cost=0.975713 [o=63 t=15]
 + -- Parameters = -17.5125 5.2211 -9.7292 14.3191 0.7776 12.1273 0.9995 0.9955 0.9842 0.0125 0.0003 0.0007
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0311 
 + --- dist(#3,#1) = 0.458 
 + --- dist(#4,#1) = 0.457 
 + --- dist(#5,#1) = 0.514 
 + --- dist(#6,#1) = 0.446 
 + --- dist(#7,#1) = 0.167 
 + --- dist(#8,#1) = 0.51 
 + --- dist(#9,#1) = 0.458 
 + --- dist(#10,#1) = 0.371 
 + --- dist(#11,#1) = 0.462 
 + --- dist(#12,#1) = 0.411 
 + --- dist(#13,#1) = 0.419 
 + --- dist(#14,#1) = 0.301 
 + --- dist(#15,#1) = 0.323 
 + --- dist(#16,#1) = 0.263 
 + --- dist(#17,#1) = 0.412 
 + --- dist(#18,#1) = 0.212 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=224.886 usiz=420.621
 + - retaining old weight image
 + - using 82252 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 73013 total points stored in 149 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.771381 [o=0 t=0]
 + -- Parameters = -0.5509 -0.1350 1.2320 0.2503 1.5677 0.4140 0.9792 0.9929 0.9683 0.0015 0.0109 0.0124
 + - param set #2 has cost=0.771709 [o=-1 t=-1]
 + -- Parameters = -0.5616 -0.0248 1.2233 0.2549 1.2282 0.3781 0.9793 0.9905 0.9676 0.0018 0.0123 0.0051
 + - param set #3 has cost=0.965612 [o=48 t=12]
 + -- Parameters = 21.3016 33.2614 1.2537 -3.6471 -39.6655 5.7871 0.9299 1.0738 0.9601 0.0016 0.0193 0.0000
 + - param set #4 has cost=0.966429 [o=46 t=4]
 + -- Parameters = 19.3563 34.5556 1.7630 -2.1550 -39.4931 7.6253 0.9708 1.0577 0.9690 0.0106 -0.0035 -0.0049
 + - param set #5 has cost=0.967089 [o=21 t=3]
 + -- Parameters = 20.0698 33.4002 12.7626 7.9139 -44.6680 21.5744 1.0021 1.0367 0.9940 0.0011 0.0009 -0.0007
 + - param set #6 has cost=0.970349 [o=39 t=16]
 + -- Parameters = 10.3105 35.5681 -6.3598 -5.7600 -36.1320 27.5864 0.9669 1.0660 0.9687 0.0124 -0.0020 -0.0034
 + - param set #7 has cost=0.971353 [o=17 t=2]
 + -- Parameters = 12.6978 7.0146 -6.2134 -7.4774 3.8014 -5.3468 1.0641 0.9841 0.9834 -0.0055 -0.0082 0.0007
 + - param set #8 has cost=0.972783 [o=38 t=1]
 + -- Parameters = 16.0567 36.6448 4.6256 -7.1313 -44.3266 12.1941 1.0067 0.9963 1.0001 -0.0003 0.0117 -0.0008
 + - param set #9 has cost=0.973201 [o=5 t=5]
 + -- Parameters = -30.1205 14.7837 -0.6143 19.9518 2.0780 -40.7860 0.9928 0.9911 0.9915 -0.0004 0.0073 0.0002
 + - param set #10 has cost=0.974276 [o=18 t=11]
 + -- Parameters = 10.0614 -8.1597 24.7386 28.2433 11.0413 33.7580 0.9854 0.9992 0.9661 0.0178 0.0027 -0.0055
 + - param set #11 has cost=0.973785 [o=1 t=8]
 + -- Parameters = -31.3266 12.6450 7.0012 25.6183 5.5785 -41.3511 0.9795 0.9667 0.9802 -0.0018 -0.0010 0.0029
 + - param set #12 has cost=0.970665 [o=3 t=13]
 + -- Parameters = -29.6302 13.6892 -0.6699 19.6115 -1.2944 -39.5204 1.0005 0.9519 0.9392 -0.0200 -0.0061 -0.0136
 + - param set #13 has cost=0.973920 [o=87 t=14]
 + -- Parameters = -32.1260 11.0722 16.0829 19.2817 -3.0903 -37.2534 0.9879 0.9989 0.9912 0.0110 0.0002 0.0105
 + - param set #14 has cost=0.974757 [o=37 t=9]
 + -- Parameters = -24.6806 5.3120 19.6465 -5.8887 -22.0377 -20.8490 1.0064 1.0066 0.9951 0.0018 0.0150 0.0014
 + - param set #15 has cost=0.974373 [o=70 t=6]
 + -- Parameters = 25.2475 5.3839 -0.3551 -3.6254 -0.6104 23.8040 1.0024 1.0039 0.9985 0.0008 -0.0001 0.0013
 + - param set #16 has cost=0.976292 [o=59 t=7]
 + -- Parameters = 2.9986 3.4187 -8.7532 -23.2634 6.2431 4.0265 1.0001 1.0132 0.9558 0.0206 0.0073 0.0011
 + - param set #17 has cost=0.977572 [o=24 t=10]
 + -- Parameters = -28.4760 25.3851 22.5483 10.9386 -3.0125 -36.6218 1.0019 0.9972 0.9994 0.0208 -0.0004 0.0002
 + - param set #18 has cost=0.978979 [o=63 t=15]
 + -- Parameters = -17.5113 5.2149 -9.7539 14.3657 0.7378 12.0436 0.9997 0.9956 0.9850 0.0124 0.0009 0.0005
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0333 
 + --- dist(#3,#1) = 0.458 
 + --- dist(#4,#1) = 0.456 
 + --- dist(#5,#1) = 0.514 
 + --- dist(#6,#1) = 0.446 
 + --- dist(#7,#1) = 0.444 
 + --- dist(#8,#1) = 0.166 
 + --- dist(#9,#1) = 0.51 
 + --- dist(#10,#1) = 0.458 
 + --- dist(#11,#1) = 0.464 
 + --- dist(#12,#1) = 0.419 
 + --- dist(#13,#1) = 0.37 
 + --- dist(#14,#1) = 0.322 
 + --- dist(#15,#1) = 0.302 
 + --- dist(#16,#1) = 0.261 
 + --- dist(#17,#1) = 0.412 
 + --- dist(#18,#1) = 0.212 
 + - Total coarse refinement net CPU time = 0.0 s; 4719 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=224.886 usiz=420.621
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 72954 total points stored in 149 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.774997 * [o=0 t=0]
 + -- Parameters = -0.5509 -0.1350 1.2320 0.2503 1.5677 0.4140 0.9792 0.9929 0.9683 0.0015 0.0109 0.0124
 + - cost(#2)=0.775520   [o=-1 t=-1]
 + -- Parameters = -0.5616 -0.0248 1.2233 0.2549 1.2282 0.3781 0.9793 0.9905 0.9676 0.0018 0.0123 0.0051
 + - cost(#3)=0.965976   [o=48 t=12]
 + -- Parameters = 21.3016 33.2614 1.2537 -3.6471 -39.6655 5.7871 0.9299 1.0738 0.9601 0.0016 0.0193 0.0000
 + - cost(#4)=0.966893   [o=46 t=4]
 + -- Parameters = 19.3563 34.5556 1.7630 -2.1550 -39.4931 7.6253 0.9708 1.0577 0.9690 0.0106 -0.0035 -0.0049
 + - cost(#5)=0.967447   [o=21 t=3]
 + -- Parameters = 20.0698 33.4002 12.7626 7.9139 -44.6680 21.5744 1.0021 1.0367 0.9940 0.0011 0.0009 -0.0007
 + - cost(#6)=0.970923   [o=39 t=16]
 + -- Parameters = 10.3105 35.5681 -6.3598 -5.7600 -36.1320 27.5864 0.9669 1.0660 0.9687 0.0124 -0.0020 -0.0034
 + - cost(#7)=0.971529   [o=3 t=13]
 + -- Parameters = -29.6302 13.6892 -0.6699 19.6115 -1.2944 -39.5204 1.0005 0.9519 0.9392 -0.0200 -0.0061 -0.0136
 + - cost(#8)=0.972338   [o=17 t=2]
 + -- Parameters = 12.6978 7.0146 -6.2134 -7.4774 3.8014 -5.3468 1.0641 0.9841 0.9834 -0.0055 -0.0082 0.0007
 + - cost(#9)=0.973267   [o=38 t=1]
 + -- Parameters = 16.0567 36.6448 4.6256 -7.1313 -44.3266 12.1941 1.0067 0.9963 1.0001 -0.0003 0.0117 -0.0008
 + - cost(#10)=0.974206   [o=5 t=5]
 + -- Parameters = -30.1205 14.7837 -0.6143 19.9518 2.0780 -40.7860 0.9928 0.9911 0.9915 -0.0004 0.0073 0.0002
 + - cost(#11)=0.974458   [o=1 t=8]
 + -- Parameters = -31.3266 12.6450 7.0012 25.6183 5.5785 -41.3511 0.9795 0.9667 0.9802 -0.0018 -0.0010 0.0029
 + - cost(#12)=0.974598   [o=87 t=14]
 + -- Parameters = -32.1260 11.0722 16.0829 19.2817 -3.0903 -37.2534 0.9879 0.9989 0.9912 0.0110 0.0002 0.0105
 + - cost(#13)=0.975107   [o=18 t=11]
 + -- Parameters = 10.0614 -8.1597 24.7386 28.2433 11.0413 33.7580 0.9854 0.9992 0.9661 0.0178 0.0027 -0.0055
 + - cost(#14)=0.975005   [o=70 t=6]
 + -- Parameters = 25.2475 5.3839 -0.3551 -3.6254 -0.6104 23.8040 1.0024 1.0039 0.9985 0.0008 -0.0001 0.0013
 + - cost(#15)=0.975869   [o=37 t=9]
 + -- Parameters = -24.6806 5.3120 19.6465 -5.8887 -22.0377 -20.8490 1.0064 1.0066 0.9951 0.0018 0.0150 0.0014
 + - cost(#16)=0.977273   [o=59 t=7]
 + -- Parameters = 2.9986 3.4187 -8.7532 -23.2634 6.2431 4.0265 1.0001 1.0132 0.9558 0.0206 0.0073 0.0011
 + - cost(#17)=0.978097   [o=24 t=10]
 + -- Parameters = -28.4760 25.3851 22.5483 10.9386 -3.0125 -36.6218 1.0019 0.9972 0.9994 0.0208 -0.0004 0.0002
 + - cost(#18)=0.979769   [o=63 t=15]
 + -- Parameters = -17.5113 5.2149 -9.7539 14.3657 0.7378 12.0436 0.9997 0.9956 0.9850 0.0124 0.0009 0.0005
 + - cost(#19)=0.868827   [o=-2 t=-2]
 + -- Parameters = -0.7731 -1.2654 -0.0778 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.774962 * [o=0 t=0]
 + -- Parameters = -0.5497 -0.1436 1.2423 0.2430 1.5776 0.4300 0.9798 0.9934 0.9683 0.0012 0.0107 0.0123
 + - cost(#2)=0.775406   [o=-1 t=-1]
 + -- Parameters = -0.5637 -0.0544 1.2434 0.2517 1.2734 0.3736 0.9800 0.9916 0.9678 0.0011 0.0118 0.0055
 + - cost(#3)=0.965960   [o=48 t=12]
 + -- Parameters = 21.3032 33.2638 1.2536 -3.6436 -39.6675 5.7842 0.9299 1.0738 0.9599 0.0016 0.0192 0.0001
 + - cost(#4)=0.966886   [o=46 t=4]
 + -- Parameters = 19.3589 34.5506 1.7519 -2.1595 -39.4955 7.6292 0.9707 1.0577 0.9690 0.0107 -0.0035 -0.0050
 + - cost(#5)=0.967394   [o=21 t=3]
 + -- Parameters = 20.0657 33.3961 12.7907 7.9076 -44.6595 21.5557 1.0022 1.0367 0.9962 0.0011 0.0008 -0.0006
 + - cost(#6)=0.970868   [o=39 t=16]
 + -- Parameters = 10.2684 35.6124 -6.3592 -5.7643 -36.1095 27.5636 0.9674 1.0654 0.9714 0.0125 -0.0021 -0.0035
 + - cost(#7)=0.971427   [o=3 t=13]
 + -- Parameters = -29.6297 13.7821 -0.7067 19.6807 -1.3553 -39.5263 1.0009 0.9504 0.9429 -0.0201 -0.0067 -0.0136
 + - cost(#8)=0.972327   [o=17 t=2]
 + -- Parameters = 12.6994 7.0247 -6.1933 -7.4747 3.8218 -5.3660 1.0641 0.9841 0.9834 -0.0055 -0.0083 0.0007
 + - cost(#9)=0.973230   [o=38 t=1]
 + -- Parameters = 16.0594 36.6515 4.6266 -7.1373 -44.3106 12.2183 1.0066 0.9962 1.0046 -0.0003 0.0117 -0.0008
 + - cost(#10)=0.974188   [o=5 t=5]
 + -- Parameters = -30.1258 14.8214 -0.6295 19.9476 2.0786 -40.8088 0.9927 0.9914 0.9913 -0.0004 0.0081 -0.0005
 + - cost(#11)=0.974321   [o=1 t=8]
 + -- Parameters = -31.3358 12.6207 7.0794 25.5915 5.5774 -41.3305 0.9793 0.9646 0.9800 -0.0019 -0.0010 0.0028
 + - cost(#12)=0.973651   [o=87 t=14]
 + -- Parameters = -32.0064 10.6200 16.9040 19.8966 -3.1390 -37.5390 0.9862 0.9915 0.9579 0.0113 0.0018 0.0126
 + - cost(#13)=0.974969   [o=18 t=11]
 + -- Parameters = 10.0612 -8.1584 24.7414 28.2235 11.0597 33.7570 0.9854 0.9990 0.9660 0.0178 0.0101 -0.0054
 + - cost(#14)=0.974994   [o=70 t=6]
 + -- Parameters = 25.2512 5.4002 -0.3434 -3.6298 -0.6015 23.8028 1.0023 1.0039 0.9985 0.0008 -0.0002 0.0013
 + - cost(#15)=0.975709   [o=37 t=9]
 + -- Parameters = -24.6100 5.2129 19.5358 -5.8486 -22.1699 -20.8818 1.0073 1.0071 0.9966 0.0018 0.0144 -0.0073
 + - cost(#16)=0.977004   [o=59 t=7]
 + -- Parameters = 3.0472 3.3439 -8.8667 -23.0999 6.3912 3.7738 1.0014 1.0139 0.9528 0.0202 0.0159 0.0015
 + - cost(#17)=0.978059   [o=24 t=10]
 + -- Parameters = -28.5000 25.4050 22.5279 10.8909 -2.9785 -36.4895 1.0019 0.9973 0.9995 0.0281 -0.0004 0.0007
 + - cost(#18)=0.978810   [o=63 t=15]
 + -- Parameters = -17.3671 5.1021 -10.1818 14.2705 0.6333 11.9137 1.0020 0.9934 0.9761 0.0102 0.0019 -0.0086
 + - cost(#19)=0.777045   [o=-2 t=-2]
 + -- Parameters = -0.4243 0.0949 1.3782 0.0200 0.9123 0.8603 0.9814 0.9888 0.9569 -0.0060 -0.0009 -0.0031
 + - case #1 [o=0 t=0] is now the best
 + - Initial  cost = 0.774962
 + - Initial fine Parameters = -0.5497 -0.1436 1.2423 0.2430 1.5776 0.4300 0.9798 0.9934 0.9683 0.0012 0.0107 0.0123
 + - Finalish cost = 0.774948 ; 291 funcs
 + - ini Finalish Parameters = -0.5485 -0.1614 1.2384 0.2411 1.5778 0.4355 0.9798 0.9937 0.9684 0.0015 0.0106 0.0125
 + - Final    cost = 0.774945 ; 409 funcs
 + Final fine fit Parameters:
       x-shift= -0.5473   y-shift= -0.1612   z-shift=  1.2397  ...  enorm=  1.3646 mm
       z-angle=  0.2454   x-angle=  1.5845   y-angle=  0.4434  ...  total=  1.6644 deg
       x-scale=  0.9797   y-scale=  0.9936   z-scale=  0.9683  ...  vol3D=  0.9426 = base bigger than source
     y/x-shear=  0.0016 z/x-shear=  0.0104 z/y-shear=  0.0125
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.5473 -0.1612 1.2397 0.2454 1.5845 0.4434 0.9797 0.9936 0.9683 0.0016 0.0104 0.0125
++ Unloading unneeded data
++ Wrote -1Dmatrix_save ./MPRAGE.GB13_unif_al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 37.0
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_MPRAGE.GB13_unif_lr_al_junk -overwrite ./MPRAGE.GB13_unif_unflipped_ns+orig
++ processing ./MPRAGE.GB13_unif_unflipped_ns+orig ...
#Script is running (command trimmed):
  3dAllineate -lpa -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./__tt_MPRAGE.GB13_unif_lr_al_junk+orig -prefix ./MPRAGE.GB13_unif_flip_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB13_unif_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_MPRAGE.GB13_unif_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4786264 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 82252 voxels [12.7%] in weight mask
++ Number of points for matching = 82252
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.628 51.120 41.041 (index)
 + source center of mass = 113.031 180.796 163.705 (index)
 + source-target CM = 0.670 -1.265 -0.078 (xyz)
 + estimated center of mass shifts = 0.670 -1.265 -0.078
++ shift param auto-range: -69.9..71.3 -82.2..79.7 -69.8..69.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -9.329918 .. 10.670082  center = 0.670082
 + Range param#2 [y-shift] = -11.265396 .. 8.734604  center = -1.265396
 + Range param#3 [z-shift] = -10.077805 .. 9.922195  center = -0.077805
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -39.329918 .. 40.670082  center = 0.670082
 + Range param#2 [y-shift] = -41.265396 .. 38.734604  center = -1.265396
 + Range param#3 [z-shift] = -40.077805 .. 39.922195  center = -0.077805
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -39.330 ..   40.670
 +       y-shift =  -41.265 ..   38.735
 +       z-shift =  -40.078 ..   39.922
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4786264 [out of 23184225] voxels
 + base mask has 102397 [out of 646570] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=224.886 usiz=420.621
 + - copying weight image
 + - using 82252 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 71624 total points stored in 139 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#ooo+-*[#6=0.983856] **[#8=0.98271] *.*[#11=0.981681] **[#13=0.974867] *-o.+o*[#45=0.97385] **[#63=0.970625] *.o-.+-*[#102=0.970595] *+*[#2125=0.968497] **[#2162=0.963046] *+-o+$+o.
 + - best 88 costs found:
   o= 0 v= 0.963046: -26.00   5.40   6.59   7.50  -7.50 -30.00  [grid]
   o= 1 v= 0.965140: -31.17  10.53   2.66  23.31   3.26 -40.47  [rand]
   o= 2 v= 0.966886: -26.00   5.40 -26.74   7.50  -7.50 -30.00  [grid]
   o= 3 v= 0.967014: -17.66  24.88  -6.12   6.51  20.18  -7.56  [rand]
   o= 4 v= 0.967711: -18.82  15.41   2.52  30.54  19.59 -20.03  [rand]
   o= 5 v= 0.968018: -26.00  25.40  26.59   7.50  -7.50 -30.00  [grid]
   o= 6 v= 0.968497:  27.34   5.40  -6.74  -7.50   7.50  30.00  [grid]
   o= 7 v= 0.968755: -31.17  10.53   2.66  23.31  -3.26 -40.47  [rand]
   o= 8 v= 0.969002: -31.54 -30.31  36.06  40.41  19.09 -40.75  [rand]
   o= 9 v= 0.969028: -17.83   4.59 -14.68  16.04   3.33  12.13  [rand]
   o=10 v= 0.969336: -17.83   4.59 -14.68  16.04  -3.33  12.13  [rand]
   o=11 v= 0.969344: -26.00  25.40   6.59   7.50  -7.50 -30.00  [grid]
   o=12 v= 0.969411: -31.17  10.53  -2.82  23.31   3.26 -40.47  [rand]
   o=13 v= 0.969610: -26.00   5.40  26.59   7.50  -7.50 -30.00  [grid]
   o=14 v= 0.970144: -26.00 -27.93  26.59   7.50  -7.50 -30.00  [grid]
   o=15 v= 0.970285:   7.34   5.40  -6.74 -30.00   7.50  30.00  [grid]
   o=16 v= 0.970595: -26.00   5.40  -6.74   7.50   7.50  -7.50  [grid]
   o=17 v= 0.970625:   7.34  -7.93  -6.74  -7.50  -7.50  -7.50  [grid]
   o=18 v= 0.970686:   5.60  -4.24  29.02  40.99  18.21  33.12  [rand]
   o=19 v= 0.970689:  23.94  29.42  -5.70 -20.48  28.84  27.87  [rand]
   o=20 v= 0.970713:  27.34  25.40   6.59   7.50   7.50   7.50  [grid]
   o=21 v= 0.970724: -26.00  25.40  -6.74  -7.50 -30.00 -30.00  [grid]
   o=22 v= 0.970839: -17.83   4.59  14.52  16.04   3.33 -12.13  [rand]
   o=23 v= 0.970977: -33.16  28.24 -13.03  31.95   9.87 -34.85  [rand]
   o=24 v= 0.971008:  -6.00  25.40   6.59  30.00 -30.00  30.00  [grid]
   o=25 v= 0.971070: -13.53 -10.72  -4.92  15.99  13.53  29.93  [rand]
   o=26 v= 0.971166:  27.34  25.40   6.59  -7.50   7.50  30.00  [grid]
   o=27 v= 0.971228:  19.00  24.88  -6.12   6.51  20.18  -7.56  [rand]
   o=28 v= 0.971319: -15.84  15.55 -11.08  -3.23  15.52  33.24  [rand]
   o=29 v= 0.971342:  11.13  26.00  21.42 -34.95  -5.03  42.69  [rand]
   o=30 v= 0.971418:  11.13  26.00  21.42 -34.95   5.03  42.69  [rand]
   o=31 v= 0.971465:  27.34   5.40  -6.74   7.50   7.50   7.50  [grid]
   o=32 v= 0.971545: -31.36  15.19  23.03  11.69 -21.87 -14.16  [rand]
   o=33 v= 0.971606:  27.34   5.40  26.59   7.50  -7.50  30.00  [grid]
   o=34 v= 0.971661: -22.60  29.42  -5.70  20.48  28.84 -27.87  [rand]
   o=35 v= 0.971746:   7.34  -7.93  26.59  30.00   7.50  30.00  [grid]
   o=36 v= 0.971861:  27.34   5.40   6.59   7.50  -7.50   7.50  [grid]
   o=37 v= 0.971918:   7.34  25.40   6.59  30.00   7.50  30.00  [grid]
   o=38 v= 0.971965:  11.97  32.87  -6.05  -4.11 -32.66  25.74  [rand]
   o=39 v= 0.971988:  19.00  24.88  -6.12  -6.51  20.18   7.56  [rand]
   o=40 v= 0.972056:   7.34  25.40  26.59  30.00   7.50  30.00  [grid]
   o=41 v= 0.972087:  35.54 -31.82  15.69 -11.68  29.04  39.38  [rand]
   o=42 v= 0.972302: -18.82  15.41   2.52 -30.54  19.59 -20.03  [rand]
   o=43 v= 0.972384:   3.12  11.64  -7.78  14.12  31.85  31.94  [rand]
   o=44 v= 0.972399:  -6.00  -7.93  -6.74   7.50  30.00  30.00  [grid]
   o=45 v= 0.972414:  28.53  26.35  -9.89  16.34 -19.59  25.89  [rand]
   o=46 v= 0.972465: -24.75   6.15 -27.19   5.61 -11.01 -21.77  [rand]
   o=47 v= 0.972473:   7.34   5.40  -6.74   7.50   7.50 -30.00  [grid]
   o=48 v= 0.972514: -31.17  10.53  -2.82  23.31  -3.26 -40.47  [rand]
   o=49 v= 0.972557: -17.66  24.88  -6.12   6.51  20.18   7.56  [rand]
   o=50 v= 0.972947: -26.00   5.40  26.59  -7.50 -30.00 -30.00  [grid]
   o=51 v= 0.972950:  27.34   5.40  -6.74   7.50  -7.50   7.50  [grid]
   o=52 v= 0.972972:  27.34  25.40   6.59   7.50  -7.50   7.50  [grid]
   o=53 v= 0.973033:  16.52  26.02  -6.00  21.02   8.83 -40.31  [rand]
   o=54 v= 0.973292:  27.80 -20.14  27.66  -5.55  17.35  23.42  [rand]
   o=55 v= 0.973326:  26.68  29.01  15.64  -5.50   4.28  12.07  [rand]
   o=56 v= 0.973366:  33.15 -15.96  11.73  11.16   9.40  34.39  [rand]
   o=57 v= 0.973417: -26.00  25.40  -6.74   7.50  -7.50 -30.00  [grid]
   o=58 v= 0.973481:  -9.32  32.78   6.44   9.05 -41.60 -20.37  [rand]
   o=59 v= 0.973484:  27.34   5.40   6.59  -7.50   7.50  30.00  [grid]
   o=60 v= 0.973502:  26.68  29.01  15.64   5.50  -4.28  12.07  [rand]
   o=61 v= 0.973520: -26.00  25.40   6.59   7.50   7.50 -30.00  [grid]
   o=62 v= 0.973538: -17.66  24.88  -6.12  -6.51  20.18   7.56  [rand]
   o=63 v= 0.973593:  -6.00  -7.93  -6.74   7.50   7.50  30.00  [grid]
   o=64 v= 0.973657: -16.38  21.43  24.17  12.15 -12.44  39.75  [rand]
   o=65 v= 0.973721:   5.60   1.71  29.02  40.99  18.21  33.12  [rand]
   o=66 v= 0.973743:  29.95 -17.02  29.78 -13.45  19.96  14.96  [rand]
   o=67 v= 0.973743: -35.98  15.96 -22.33   5.26  41.39  40.03  [rand]
   o=68 v= 0.973806:  10.66  32.78  -6.60  -9.05 -41.60  20.37  [rand]
   o=69 v= 0.973835:  26.68  29.01  15.64   5.50   4.28  12.07  [rand]
   o=70 v= 0.973839: -31.54  27.78  36.06  40.41  19.09 -40.75  [rand]
   o=71 v= 0.973850:   7.34   5.40  -6.74  -7.50   7.50  -7.50  [grid]
   o=72 v= 0.973856: -24.75   6.15  27.04   5.61 -11.01 -21.77  [rand]
   o=73 v= 0.973889: -17.83   4.59  14.52  16.04  -3.33 -12.13  [rand]
   o=74 v= 0.973908: -16.38 -23.96  24.17  12.15 -12.44  39.75  [rand]
   o=75 v= 0.973956:  27.34   5.40  26.59  -7.50   7.50  30.00  [grid]
   o=76 v= 0.974006: -26.00   5.40   6.59  -7.50 -30.00  -7.50  [grid]
   o=77 v= 0.974121:  10.66  32.78   6.44  -9.05 -41.60  20.37  [rand]
   o=78 v= 0.974155: -19.11  15.48 -17.75  -2.96   2.59  18.65  [rand]
   o=79 v= 0.974275: -26.00   5.40  -6.74   7.50   7.50   7.50  [grid]
   o=80 v= 0.974437: -26.46 -20.14  27.66   5.55  17.35 -23.42  [rand]
   o=81 v= 0.974445:  -6.00  25.40  26.59 -30.00 -30.00  -7.50  [grid]
   o=82 v= 0.974448: -17.66  24.88   5.97   6.51  20.18  -7.56  [rand]
   o=83 v= 0.974463: -10.63  32.87  -6.05   4.11 -32.66 -25.74  [rand]
   o=84 v= 0.974500:  27.34  -7.93 -26.74   7.50 -30.00  30.00  [grid]
   o=85 v= 0.974516:   7.34  25.40 -26.74  30.00  30.00  30.00  [grid]
   o=86 v= 0.974533: -17.83  -7.12 -14.68  16.04  -3.33  12.13  [rand]
   o=87 v= 0.974537: -14.33 -38.21  18.17  34.16 -13.44  39.30  [rand]
 + - A little optimization:*[#11723=0.962909] *[#11724=0.962817] *[#11727=0.962802] *[#11728=0.962155] *[#11732=0.961758] *[#11733=0.961681] *[#11734=0.961383] *[#11735=0.961332] *[#11736=0.961316] *[#11737=0.961269] *[#11746=0.961171] *[#11747=0.961137] *[#11750=0.960968] .*[#11767=0.95973] *[#11775=0.959302] *[#11776=0.959247] *[#11777=0.959111] *[#11778=0.959015] *[#11784=0.958988] *[#11788=0.958682] *[#11790=0.958469] .....*[#12005=0.957761] *[#12011=0.957757] *[#12013=0.957649] *[#12019=0.957645] *[#12020=0.957632] ..........*[#12486=0.957297] *[#12492=0.956934] *[#12493=0.955825] *[#12494=0.95536] *[#12495=0.954922] *[#12497=0.954511] *[#12498=0.954449] *[#12500=0.95434] *[#12503=0.954096] *[#12505=0.954057] *[#12507=0.953912] *[#12510=0.953832] *[#12511=0.953814] *[#12512=0.953698] *[#12513=0.953559] *[#12515=0.953546] *[#12517=0.953539] *[#12522=0.953532] ...............*[#13232=0.952912] *[#13238=0.952607] *[#13239=0.952397] *[#13241=0.952372] *[#13244=0.952194] *[#13247=0.952176] *[#13248=0.952127] *[#13254=0.952014] .........................................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.960968: -26.56   4.30   5.80   7.29  -8.28 -30.88  [grid]  [f=43]
   o= 1 v= 0.958469: -31.54  16.97   1.95  25.70   3.77 -39.84  [rand]  [f=43]
   o= 2 v= 0.964398: -26.16   4.94 -23.86   6.06  -7.97 -29.51  [grid]  [f=34]
   o= 3 v= 0.961588: -17.91  24.89  -6.24   6.18  14.70  -7.86  [rand]  [f=33]
   o= 4 v= 0.963246: -17.46  15.77   2.94  29.45  16.43 -20.50  [rand]  [f=38]
   o= 5 v= 0.962306: -27.92  20.46  24.37   9.61  -7.24 -36.09  [grid]  [f=46]
   o= 6 v= 0.957632:  26.96   6.56  -4.19  -2.82   7.78  23.72  [grid]  [f=66]
   o= 7 v= 0.960430: -31.18  13.27   3.43  22.18   4.59 -43.85  [rand]  [f=56]
   o= 8 v= 0.965235: -32.65 -34.82  34.38  37.42  17.89 -44.17  [rand]  [f=33]
   o= 9 v= 0.957896: -17.53   5.68  -5.56  11.16   3.96  11.55  [rand]  [f=42]
   o=10 v= 0.960663: -16.91   5.15 -10.38  16.30  -0.77  13.73  [rand]  [f=68]
   o=11 v= 0.962978: -24.99  25.89   6.51   8.18  -0.87 -27.79  [grid]  [f=41]
   o=12 v= 0.958235: -30.91  16.59  -0.66  22.61   1.84 -41.98  [rand]  [f=50]
   o=13 v= 0.961400: -26.83   5.06  23.54   7.38 -13.29 -34.30  [grid]  [f=52]
   o=14 v= 0.963175: -26.65 -32.70  29.63   7.49 -10.04 -30.29  [grid]  [f=41]
   o=15 v= 0.966003:   7.05   2.04  -6.48 -30.22   8.00  28.78  [grid]  [f=46]
   o=16 v= 0.953532: -20.77   6.95  -4.97   9.75   1.83  -5.17  [grid]  [f=64]
   o=17 v= 0.960427:   6.46  -2.48  -9.92  -6.47  -7.62  -6.13  [grid]  [f=53]
   o=18 v= 0.960078:   7.62  -6.94  25.83  39.43  20.96  27.51  [rand]  [f=61]
   o=19 v= 0.969384:  23.58  29.79  -6.52 -21.41  28.47  25.89  [rand]  [f=42]
   o=20 v= 0.962223:  26.03  25.84   3.94   4.69   5.80  14.39  [grid]  [f=65]
   o=21 v= 0.957414: -25.66  35.85  -6.55  -5.57 -31.26 -35.29  [grid]  [f=58]
   o=22 v= 0.964237: -17.32   3.86   9.90  17.09   2.44 -11.05  [rand]  [f=40]
   o=23 v= 0.965692: -29.67  27.26 -13.33  27.79   9.84 -37.23  [rand]  [f=37]
   o=24 v= 0.965100:  -6.62  24.68  12.43  30.21 -29.77  30.36  [grid]  [f=32]
   o=25 v= 0.967319: -13.61  -6.99  -4.95  15.22  12.91  30.10  [rand]  [f=35]
   o=26 v= 0.964188:  26.80  26.11   7.14  -1.25   6.16  25.23  [grid]  [f=55]
   o=27 v= 0.965994:  20.67  29.13  -8.99   4.25  18.26  -7.54  [rand]  [f=38]
   o=28 v= 0.965578: -15.11  12.94  -9.71  -8.05  17.71  32.79  [rand]  [f=52]
   o=29 v= 0.962280:  12.90  23.34  20.87 -36.17  -3.82  38.32  [rand]  [f=47]
   o=30 v= 0.965785:  12.45  26.00  20.83 -37.72   0.69  42.77  [rand]  [f=43]
  *o=31 v= 0.952014:  26.73   2.35  -3.38   4.01  -1.60  14.57  [grid]  [f=58]
   o=32 v= 0.970470: -31.39  15.84  22.68  12.02 -21.31 -15.44  [rand]  [f=43]
   o=33 v= 0.967466:  30.09   3.84  25.18   6.93  -2.03  36.24  [grid]  [f=39]
   o=34 v= 0.966754: -22.29  29.78  -1.72  17.07  27.10 -30.52  [rand]  [f=33]
   o=35 v= 0.965605:   8.00  -7.55  25.63  29.79  12.12  31.00  [grid]  [f=41]
   o=36 v= 0.954094:  23.77   5.65  -0.59   0.85  -4.13  15.37  [grid]  [f=55]
   o=37 v= 0.966235:   7.79  26.08   6.41  29.31  12.33  30.13  [grid]  [f=45]
   o=38 v= 0.964913:  12.02  36.75  -6.23  -4.15 -32.80  24.64  [rand]  [f=39]
   o=39 v= 0.966104:  18.67  25.98  -6.29  -2.49  17.61   6.04  [rand]  [f=48]
   o=40 v= 0.966202:   8.89  26.05  22.63  32.87  12.06  24.94  [grid]  [f=45]
   o=41 v= 0.969058:  37.12 -26.36  15.59 -11.68  29.58  38.85  [rand]  [f=45]
   o=42 v= 0.970258: -18.18  14.89   2.21 -29.13  19.34 -21.42  [rand]  [f=54]
   o=43 v= 0.969257:   4.29  14.25  -7.97  13.60  31.73  32.73  [rand]  [f=42]
   o=44 v= 0.967768:  -5.55  -6.34  -7.16   6.96  27.95  28.13  [grid]  [f=51]
   o=45 v= 0.970614:  28.77  27.82 -11.61  15.90 -19.81  26.02  [rand]  [f=40]
   o=46 v= 0.969729: -26.09   1.27 -29.28   3.54 -12.61 -23.31  [rand]  [f=40]
   o=47 v= 0.965129:  11.36   6.75  -4.83   5.11   8.97 -27.78  [grid]  [f=82]
   o=48 v= 0.959729: -31.73  17.50  -1.32  21.31  -1.03 -40.87  [rand]  [f=41]
   o=49 v= 0.966669: -17.41  20.60  -6.31   3.21  21.15   4.69  [rand]  [f=47]
   o=50 v= 0.965867: -26.18   5.86  25.15  -3.15 -28.58 -32.95  [grid]  [f=50]
   o=51 v= 0.955545:  25.47   4.19  -2.14   7.09  -3.70   8.19  [grid]  [f=46]
   o=52 v= 0.966781:  26.70  25.03   6.48   6.49  -2.85  12.45  [grid]  [f=50]
   o=53 v= 0.969810:  16.03  26.12  -6.04  26.25   8.94 -40.48  [rand]  [f=37]
   o=54 v= 0.969340:  28.74 -22.18  26.81  -6.56  15.48  22.90  [rand]  [f=41]
   o=55 v= 0.967749:  29.66  24.70  14.52  -4.49   6.70  11.04  [rand]  [f=56]
   o=56 v= 0.961784:  37.71 -15.79  12.59  11.52   8.95  31.70  [rand]  [f=39]
   o=57 v= 0.973232: -26.08  25.41  -6.78   7.43  -7.50 -30.03  [grid]  [f=28]
   o=58 v= 0.958813: -20.29  35.59  -0.30  -2.47 -40.34 -27.49  [rand]  [f=64]
   o=59 v= 0.965127:  28.77   5.53   5.87  -3.52   4.98  26.15  [grid]  [f=61]
   o=60 v= 0.966664:  27.18  24.99  14.60   6.17  -2.66  13.31  [rand]  [f=43]
   o=61 v= 0.963618: -22.30  25.19   5.13   7.21   6.79 -28.95  [grid]  [f=37]
   o=62 v= 0.961855: -22.87  18.85  -7.39  -5.07  19.43  10.26  [rand]  [f=47]
   o=63 v= 0.963759: -14.33  -5.95  -5.90  10.61  -1.20  28.73  [grid]  [f=55]
   o=64 v= 0.968803: -16.24  25.00  24.70  13.28 -12.60  38.17  [rand]  [f=40]
   o=65 v= 0.960516:   8.20  -6.22  26.24  37.42  20.94  29.33  [rand]  [f=54]
   o=66 v= 0.971046:  29.76 -12.88  29.99 -14.45  21.43  15.56  [rand]  [f=43]
   o=67 v= 0.970334: -37.21  13.23 -22.59   5.03  41.16  39.93  [rand]  [f=39]
   o=68 v= 0.968820:   9.75  33.20  -6.13  -3.79 -41.50  21.01  [rand]  [f=37]
   o=69 v= 0.969081:  25.55  25.82  16.88   4.80   5.07  11.30  [rand]  [f=41]
   o=70 v= 0.963407: -30.90  26.95  32.96  37.34  22.83 -43.40  [rand]  [f=38]
   o=71 v= 0.956854:   8.30   6.41  -8.10  -3.20   4.42  -8.35  [grid]  [f=66]
   o=72 v= 0.963089: -23.75   3.99  24.11   4.65 -13.48 -25.50  [rand]  [f=52]
   o=73 v= 0.968376: -16.81   5.01  13.34  19.02  -4.13 -12.80  [rand]  [f=41]
   o=74 v= 0.969058: -17.89 -23.64  24.37  13.54 -15.44  37.38  [rand]  [f=71]
   o=75 v= 0.969012:  31.57   5.48  24.22 -10.22   5.08  27.85  [grid]  [f=34]
   o=76 v= 0.971685: -25.74   5.65   4.84  -8.50 -30.92  -9.36  [grid]  [f=56]
   o=77 v= 0.963443:   8.76  35.78   3.83  -8.09 -40.71  13.77  [rand]  [f=43]
   o=78 v= 0.963814: -18.58  15.08  -8.47  -6.18   7.15  16.21  [rand]  [f=46]
   o=79 v= 0.960137: -16.26   6.99  -3.88   5.96   7.74  11.09  [grid]  [f=65]
   o=80 v= 0.969280: -26.01 -21.15  30.79   5.77  15.33 -24.48  [rand]  [f=50]
   o=81 v= 0.970000:  -5.63  28.26  25.72 -29.90 -30.36  -7.70  [grid]  [f=36]
   o=82 v= 0.964583: -18.35  18.94   2.69   4.98  21.10  -6.80  [rand]  [f=58]
   o=83 v= 0.963766: -17.90  33.65  -5.74   5.17 -34.62 -26.14  [rand]  [f=37]
   o=84 v= 0.964996:  28.99  -8.23 -23.12   8.69 -30.51  30.78  [grid]  [f=46]
   o=85 v= 0.961052:  11.15  28.42 -30.00  25.29  29.05  34.99  [grid]  [f=49]
   o=86 v= 0.960313: -17.00  -5.27  -7.08  13.78  -7.05   6.88  [rand]  [f=44]
   o=87 v= 0.970476: -14.82 -32.92  19.03  34.30 -12.54  39.76  [rand]  [f=36]
 + - saving #31 for use with twobest
 + - saving #16 for use with twobest
 + - skip #36 for twobest: too close to set #31
 + - saving #51 for use with twobest
 + - saving #71 for use with twobest
 + - saving #21 for use with twobest
 + - saving # 6 for use with twobest
 + - saving # 9 for use with twobest
 + - saving #12 for use with twobest
 + - skip # 1 for twobest: too close to set #12
 + - saving #58 for use with twobest
 + - skip #48 for twobest: too close to set #12
 + - saving #18 for use with twobest
 + - saving #79 for use with twobest
 + - saving #86 for use with twobest
 + - saving #17 for use with twobest
 + - skip # 7 for twobest: too close to set # 1
 + - skip #65 for twobest: too close to set #18
 + - saving #10 for use with twobest
 + - saving # 0 for use with twobest
 + - saving #85 for use with twobest
 + - saving #13 for use with twobest
 + - saving # 3 for use with twobest
 + - saving #56 for use with twobest
 + - saving #62 for use with twobest
 + - saving #20 for use with twobest
 + - saving #29 for use with twobest
 + - saving # 5 for use with twobest
 + - saving #11 for use with twobest
 + - saving #72 for use with twobest
 + - saving #14 for use with twobest
 + - saving # 4 for use with twobest
 + - saving #70 for use with twobest
 + - saving #77 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=224.886 usiz=420.621
 + - retaining old weight image
 + - using 82252 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 72575 total points stored in 145 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.960752 [o=31 t=0]
 + -- Parameters = 26.7048 3.2438 -2.4894 3.5591 -0.0459 14.8824 1.0006 0.9777 0.9885 0.0050 0.0049 -0.0041
 + - param set #2 has cost=0.962375 [o=16 t=1]
 + -- Parameters = -20.8329 7.3801 -4.9037 9.6195 1.9653 -5.3661 0.9999 1.0043 0.9990 -0.0008 0.0117 0.0000
 + - param set #3 has cost=0.964522 [o=51 t=2]
 + -- Parameters = 25.2443 4.3170 -2.3540 7.1259 -3.6042 8.3393 1.0010 0.9987 0.9962 0.0013 0.0123 -0.0016
 + - param set #4 has cost=0.964710 [o=71 t=3]
 + -- Parameters = 7.9180 6.6560 -7.9218 -3.0379 4.7658 -8.0584 0.9992 0.9990 0.9941 -0.0010 0.0130 -0.0006
 + - param set #5 has cost=0.960745 [o=21 t=4]
 + -- Parameters = -26.0574 35.9713 -6.5758 -5.0441 -31.0331 -34.6763 0.9989 1.0383 0.9955 -0.0021 0.0001 -0.0014
 + - param set #6 has cost=0.965455 [o=6 t=5]
 + -- Parameters = 27.0375 6.5873 -4.2104 -2.7892 7.7381 23.6970 0.9991 0.9999 1.0033 -0.0002 -0.0008 0.0120
 + - param set #7 has cost=0.964715 [o=9 t=6]
 + -- Parameters = -17.4130 5.6470 -5.1048 11.2274 3.9180 11.5129 1.0016 1.0005 1.0079 0.0015 -0.0012 0.0009
 + - param set #8 has cost=0.966078 [o=12 t=7]
 + -- Parameters = -30.4435 16.5807 -0.9197 22.3059 1.6279 -41.9857 1.0348 0.9968 0.9985 -0.0001 -0.0000 -0.0005
 + - param set #9 has cost=0.958609 [o=58 t=8]
 + -- Parameters = -19.6889 33.8231 -0.4419 -2.7486 -39.5410 -28.5196 1.0145 1.0684 0.9880 -0.0126 0.0006 0.0014
 + - param set #10 has cost=0.966512 [o=18 t=9]
 + -- Parameters = 7.3457 -7.2823 25.7808 39.5041 21.1430 27.6306 1.0006 1.0026 0.9979 0.0012 -0.0010 0.0003
 + - param set #11 has cost=0.963506 [o=79 t=10]
 + -- Parameters = -16.2398 6.7411 -3.9355 6.0285 7.3434 10.6765 1.0431 0.9976 0.9999 0.0005 0.0004 -0.0001
 + - param set #12 has cost=0.966110 [o=86 t=11]
 + -- Parameters = -17.1512 -5.5956 -7.0611 14.2140 -6.6861 7.0137 0.9979 1.0017 0.9994 0.0128 -0.0004 0.0006
 + - param set #13 has cost=0.962058 [o=17 t=12]
 + -- Parameters = 5.4475 -2.5699 -9.7052 -8.3244 -8.2096 -4.5181 1.0303 0.9644 1.0099 -0.0124 0.0139 0.0052
 + - param set #14 has cost=0.968684 [o=10 t=13]
 + -- Parameters = -16.8870 5.1571 -10.3433 16.2677 -0.6809 13.5985 1.0021 1.0010 0.9986 -0.0004 -0.0003 0.0001
 + - param set #15 has cost=0.968957 [o=0 t=14]
 + -- Parameters = -26.6991 4.2225 5.8435 7.2276 -8.3735 -30.8423 0.9969 0.9972 1.0009 0.0001 0.0001 -0.0009
 + - param set #16 has cost=0.967036 [o=85 t=15]
 + -- Parameters = 11.0628 28.4167 -29.8848 25.5719 29.2907 35.1539 1.0394 0.9984 0.9976 -0.0013 -0.0017 -0.0015
 + - param set #17 has cost=0.965236 [o=13 t=16]
 + -- Parameters = -28.3619 4.9339 22.4491 5.2559 -13.0402 -35.5866 0.9763 1.0012 0.9261 -0.0036 0.0162 -0.0008
*[#17345=0.95004] *[#17352=0.948145] *[#17357=0.947958] *[#17359=0.943548] *[#17364=0.941834] *[#17366=0.941527] *[#17369=0.93971] *[#17370=0.939638] *[#17372=0.938396] *[#17373=0.938274] *[#17374=0.938147] *[#17378=0.937776] *[#17380=0.937363] *[#17383=0.936641] *[#17384=0.936253] *[#17385=0.935947] *[#17390=0.935349] *[#17391=0.935184] *[#17394=0.93508] *[#17396=0.934983] *[#17398=0.934837] *[#17399=0.934596] *[#17400=0.934269] *[#17401=0.93413] *[#17403=0.933846] *[#17406=0.933625] *[#17407=0.933215] *[#17408=0.933086] *[#17409=0.932718] *[#17410=0.932515] *[#17411=0.931941] *[#17413=0.931714] 
 + - param set #18 has cost=0.931714 [o=-1 t=-1]
 + -- Parameters = 0.4824 1.1641 0.8283 8.3394 0.6982 -0.1365 1.0327 1.0432 0.9374 0.0129 -0.0019 -0.0022
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.447 
 + --- dist(#3,#1) = 0.435 
 + --- dist(#4,#1) = 0.328 
 + --- dist(#5,#1) = 0.185 
 + --- dist(#6,#1) = 0.266 
 + --- dist(#7,#1) = 0.209 
 + --- dist(#8,#1) = 0.31 
 + --- dist(#9,#1) = 0.126 
 + --- dist(#10,#1) = 0.224 
 + --- dist(#11,#1) = 0.394 
 + --- dist(#12,#1) = 0.332 
 + --- dist(#13,#1) = 0.465 
 + --- dist(#14,#1) = 0.22 
 + --- dist(#15,#1) = 0.346 
 + --- dist(#16,#1) = 0.392 
 + --- dist(#17,#1) = 0.217 
 + --- dist(#18,#1) = 0.341 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=224.886 usiz=420.621
 + - retaining old weight image
 + - using 82252 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 72337 total points stored in 146 'TOHD(13.984)' bloks (0 duplicates)
*[#17434=0.931403] *[#17435=0.928567] *[#17436=0.926278] *[#17437=0.919411] *[#17439=0.918642] *[#17440=0.916042] *[#17442=0.916019] *[#17444=0.913987] *[#17462=0.913379] *[#17467=0.913286] *[#17468=0.912868] *[#17469=0.912702] *[#17470=0.912517] *[#17475=0.912468] *[#17476=0.912376] *[#17477=0.912368] *[#17479=0.912311] *[#17480=0.91226] *[#17481=0.912126] *[#17484=0.912013] *[#17489=0.911862] *[#17490=0.911658] *[#17491=0.911531] *[#17494=0.911473] *[#17496=0.911469] *[#17499=0.911421] *[#17500=0.9114] *[#17505=0.911266] *[#17507=0.911257] *[#17510=0.911236] *[#17512=0.911123] *[#17513=0.911113] *[#17514=0.911065] *[#17515=0.911043] *[#17516=0.910992] *[#17517=0.910988] *[#17519=0.910982] *[#17524=0.910935] 
 + - param set #1 has cost=0.910935 [o=-1 t=-1]
 + -- Parameters = 0.7836 0.2275 1.4216 7.8228 1.5681 -1.0472 0.9536 1.0293 0.8385 -0.0144 0.0004 -0.0057
 + - param set #2 has cost=0.964069 [o=58 t=8]
 + -- Parameters = -19.6625 33.8021 -0.4497 -2.7492 -39.5423 -28.5777 1.0143 1.0701 0.9861 -0.0126 0.0090 0.0013
 + - param set #3 has cost=0.965277 [o=21 t=4]
 + -- Parameters = -26.0485 35.9716 -6.2499 -5.0873 -31.0366 -34.6829 0.9985 1.0663 0.9955 -0.0021 -0.0005 -0.0014
 + - param set #4 has cost=0.965772 [o=31 t=0]
 + -- Parameters = 27.3582 3.2158 -3.2900 3.0634 0.1898 15.5439 1.0034 0.9709 0.9713 0.0038 0.0027 0.0046
 + - param set #5 has cost=0.968698 [o=17 t=12]
 + -- Parameters = 5.3735 -2.6604 -9.8045 -8.4472 -8.2145 -4.2917 1.0327 0.9636 1.0033 -0.0137 0.0155 0.0015
 + - param set #6 has cost=0.967260 [o=16 t=1]
 + -- Parameters = -19.4800 7.4032 -4.9451 9.6275 1.7912 -5.1736 0.9652 1.0045 0.9995 0.0018 0.0169 0.0025
 + - param set #7 has cost=0.970015 [o=79 t=10]
 + -- Parameters = -16.1673 6.7701 -4.1161 6.0022 7.2101 10.5830 1.0512 0.9969 0.9988 0.0010 -0.0002 0.0013
 + - param set #8 has cost=0.970194 [o=51 t=2]
 + -- Parameters = 25.2802 5.0206 -2.7414 5.6155 -3.0534 9.3691 0.9940 0.9929 0.9915 0.0078 0.0192 -0.0004
 + - param set #9 has cost=0.970020 [o=71 t=3]
 + -- Parameters = 7.3727 8.0341 -7.6088 -4.0085 5.6626 -7.3195 0.9869 0.9813 0.9582 -0.0091 0.0221 0.0001
 + - param set #10 has cost=0.971808 [o=9 t=6]
 + -- Parameters = -17.3785 5.6858 -5.1348 11.2616 3.9932 11.6926 1.0018 1.0017 1.0083 0.0015 -0.0007 -0.0001
 + - param set #11 has cost=0.967580 [o=13 t=16]
 + -- Parameters = -29.2301 4.0462 21.0985 5.7402 -11.7637 -36.9426 0.9713 0.9987 0.9226 -0.0010 0.0176 -0.0019
 + - param set #12 has cost=0.971472 [o=6 t=5]
 + -- Parameters = 27.0344 6.5841 -4.2290 -2.7718 7.7275 23.6583 0.9993 0.9999 1.0035 -0.0002 0.0075 0.0120
 + - param set #13 has cost=0.968549 [o=12 t=7]
 + -- Parameters = -30.1142 17.7071 -0.7381 23.2403 1.2494 -40.3527 1.0284 0.9899 0.9816 -0.0043 -0.0021 0.0085
 + - param set #14 has cost=0.972560 [o=86 t=11]
 + -- Parameters = -16.7283 -5.2101 -6.7692 14.2638 -6.1895 6.5583 0.9826 0.9871 0.9970 0.0211 -0.0002 -0.0003
 + - param set #15 has cost=0.972660 [o=18 t=9]
 + -- Parameters = 7.3613 -7.2216 25.7154 39.4412 21.2049 27.5990 1.0001 1.0052 0.9965 0.0007 -0.0014 0.0008
 + - param set #16 has cost=0.971238 [o=85 t=15]
 + -- Parameters = 11.4206 28.4918 -29.9315 25.3210 29.2985 35.0049 1.0379 0.9930 0.9931 -0.0012 0.0071 -0.0007
 + - param set #17 has cost=0.975502 [o=10 t=13]
 + -- Parameters = -16.8731 5.4370 -10.3342 16.2207 -0.6383 13.6087 1.0020 1.0013 0.9985 -0.0004 -0.0002 0.0001
 + - param set #18 has cost=0.971824 [o=0 t=14]
 + -- Parameters = -26.5518 4.2557 6.5814 7.1477 -8.8634 -30.2672 1.0123 0.9725 1.0311 -0.0047 -0.0148 0.0028
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.457 
 + --- dist(#3,#1) = 0.447 
 + --- dist(#4,#1) = 0.332 
 + --- dist(#5,#1) = 0.253 
 + --- dist(#6,#1) = 0.399 
 + --- dist(#7,#1) = 0.437 
 + --- dist(#8,#1) = 0.237 
 + --- dist(#9,#1) = 0.23 
 + --- dist(#10,#1) = 0.172 
 + --- dist(#11,#1) = 0.306 
 + --- dist(#12,#1) = 0.401 
 + --- dist(#13,#1) = 0.328 
 + --- dist(#14,#1) = 0.244 
 + --- dist(#15,#1) = 0.342 
 + --- dist(#16,#1) = 0.228 
 + --- dist(#17,#1) = 0.351 
 + --- dist(#18,#1) = 0.23 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=224.886 usiz=420.621
 + - retaining old weight image
 + - using 82252 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 73013 total points stored in 149 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.912887 [o=-1 t=-1]
 + -- Parameters = 0.7170 0.2635 1.5608 7.8951 1.0455 -1.7776 0.9625 1.0065 0.8568 -0.0285 0.0180 -0.0080
 + - param set #2 has cost=0.967396 [o=58 t=8]
 + -- Parameters = -19.6636 33.7832 -0.4013 -2.7073 -39.5386 -28.5489 1.0144 1.0717 0.9818 -0.0127 0.0144 0.0006
 + - param set #3 has cost=0.967966 [o=21 t=4]
 + -- Parameters = -25.4090 36.0416 -6.3486 -6.1036 -30.2058 -33.8001 0.9933 1.0629 0.9994 -0.0016 0.0002 -0.0003
 + - param set #4 has cost=0.968705 [o=31 t=0]
 + -- Parameters = 27.3367 3.2456 -3.3100 2.9560 0.2675 15.5614 1.0045 0.9738 0.9682 0.0039 0.0031 0.0095
 + - param set #5 has cost=0.970980 [o=16 t=1]
 + -- Parameters = -19.6540 7.2681 -5.1105 9.8774 1.6924 -5.0549 0.9642 1.0072 1.0007 0.0069 0.0172 0.0030
 + - param set #6 has cost=0.970318 [o=13 t=16]
 + -- Parameters = -29.2098 3.9719 21.1215 5.7800 -11.8323 -37.1120 0.9711 0.9986 0.9222 -0.0009 0.0176 -0.0022
 + - param set #7 has cost=0.971195 [o=12 t=7]
 + -- Parameters = -29.8060 17.5341 -0.9762 23.3856 1.4739 -40.1767 1.0284 0.9737 0.9823 -0.0091 -0.0059 0.0119
 + - param set #8 has cost=0.965885 [o=17 t=12]
 + -- Parameters = 4.6659 0.0922 -9.5154 -9.1503 -5.7078 -4.9407 1.0407 0.9488 0.9352 -0.0106 0.0425 -0.0237
 + - param set #9 has cost=0.973900 [o=79 t=10]
 + -- Parameters = -16.0667 6.8873 -4.3525 5.6956 7.2718 10.4816 1.0541 0.9911 0.9824 -0.0017 -0.0010 0.0029
 + - param set #10 has cost=0.972140 [o=71 t=3]
 + -- Parameters = 7.9296 7.8459 -7.2614 -3.7150 5.0365 -7.3449 0.9805 0.9821 0.9594 -0.0108 0.0326 0.0014
 + - param set #11 has cost=0.969461 [o=51 t=2]
 + -- Parameters = 24.7802 6.5284 -2.2305 2.2913 -2.3530 11.1631 1.0185 0.9882 0.9218 0.0011 0.0134 -0.0173
 + - param set #12 has cost=0.974969 [o=85 t=15]
 + -- Parameters = 11.5758 28.4981 -29.9174 25.3580 29.3292 34.9725 1.0378 0.9934 0.9937 -0.0013 0.0070 -0.0006
 + - param set #13 has cost=0.972650 [o=6 t=5]
 + -- Parameters = 27.1542 6.5919 -4.2402 -2.8301 7.6961 23.5189 0.9998 0.9990 1.0047 -0.0011 0.0070 0.0121
 + - param set #14 has cost=0.975039 [o=9 t=6]
 + -- Parameters = -17.3695 5.7400 -5.1693 11.3901 4.0697 11.7262 1.0038 1.0031 1.0080 0.0014 -0.0008 -0.0001
 + - param set #15 has cost=0.974461 [o=0 t=14]
 + -- Parameters = -26.2757 4.6367 6.6429 6.8469 -8.7361 -30.3967 1.0230 0.9698 1.0339 -0.0050 -0.0150 0.0026
 + - param set #16 has cost=0.976973 [o=86 t=11]
 + -- Parameters = -16.7648 -5.0330 -6.9188 14.2695 -6.1131 6.5636 0.9820 0.9883 0.9976 0.0206 0.0051 -0.0005
 + - param set #17 has cost=0.977154 [o=18 t=9]
 + -- Parameters = 7.3594 -7.2120 25.7163 39.4424 21.1778 27.5970 1.0002 1.0051 0.9964 0.0007 -0.0014 0.0008
 + - param set #18 has cost=0.978733 [o=10 t=13]
 + -- Parameters = -16.8581 5.4809 -10.3624 16.1240 -0.5977 13.5909 1.0026 1.0008 0.9972 -0.0003 -0.0001 -0.0000
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.189 
 + --- dist(#3,#1) = 0.451 
 + --- dist(#4,#1) = 0.447 
 + --- dist(#5,#1) = 0.333 
 + --- dist(#6,#1) = 0.301 
 + --- dist(#7,#1) = 0.393 
 + --- dist(#8,#1) = 0.255 
 + --- dist(#9,#1) = 0.427 
 + --- dist(#10,#1) = 0.147 
 + --- dist(#11,#1) = 0.33 
 + --- dist(#12,#1) = 0.21 
 + --- dist(#13,#1) = 0.337 
 + --- dist(#14,#1) = 0.408 
 + --- dist(#15,#1) = 0.226 
 + --- dist(#16,#1) = 0.221 
 + --- dist(#17,#1) = 0.351 
 + --- dist(#18,#1) = 0.22 
 + - Total coarse refinement net CPU time = 0.0 s; 5020 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=224.886 usiz=420.621
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 72954 total points stored in 149 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.914330 * [o=-1 t=-1]
 + -- Parameters = 0.7170 0.2635 1.5608 7.8951 1.0455 -1.7776 0.9625 1.0065 0.8568 -0.0285 0.0180 -0.0080
 + - cost(#2)=0.967294   [o=17 t=12]
 + -- Parameters = 4.6659 0.0922 -9.5154 -9.1503 -5.7078 -4.9407 1.0407 0.9488 0.9352 -0.0106 0.0425 -0.0237
 + - cost(#3)=0.967666   [o=58 t=8]
 + -- Parameters = -19.6636 33.7832 -0.4013 -2.7073 -39.5386 -28.5489 1.0144 1.0717 0.9818 -0.0127 0.0144 0.0006
 + - cost(#4)=0.968438   [o=21 t=4]
 + -- Parameters = -25.4090 36.0416 -6.3486 -6.1036 -30.2058 -33.8001 0.9933 1.0629 0.9994 -0.0016 0.0002 -0.0003
 + - cost(#5)=0.969625   [o=31 t=0]
 + -- Parameters = 27.3367 3.2456 -3.3100 2.9560 0.2675 15.5614 1.0045 0.9738 0.9682 0.0039 0.0031 0.0095
 + - cost(#6)=0.970417   [o=51 t=2]
 + -- Parameters = 24.7802 6.5284 -2.2305 2.2913 -2.3530 11.1631 1.0185 0.9882 0.9218 0.0011 0.0134 -0.0173
 + - cost(#7)=0.971372   [o=13 t=16]
 + -- Parameters = -29.2098 3.9719 21.1215 5.7800 -11.8323 -37.1120 0.9711 0.9986 0.9222 -0.0009 0.0176 -0.0022
 + - cost(#8)=0.972007   [o=16 t=1]
 + -- Parameters = -19.6540 7.2681 -5.1105 9.8774 1.6924 -5.0549 0.9642 1.0072 1.0007 0.0069 0.0172 0.0030
 + - cost(#9)=0.971948   [o=12 t=7]
 + -- Parameters = -29.8060 17.5341 -0.9762 23.3856 1.4739 -40.1767 1.0284 0.9737 0.9823 -0.0091 -0.0059 0.0119
 + - cost(#10)=0.973463   [o=71 t=3]
 + -- Parameters = 7.9296 7.8459 -7.2614 -3.7150 5.0365 -7.3449 0.9805 0.9821 0.9594 -0.0108 0.0326 0.0014
 + - cost(#11)=0.973447   [o=6 t=5]
 + -- Parameters = 27.1542 6.5919 -4.2402 -2.8301 7.6961 23.5189 0.9998 0.9990 1.0047 -0.0011 0.0070 0.0121
 + - cost(#12)=0.975059   [o=79 t=10]
 + -- Parameters = -16.0667 6.8873 -4.3525 5.6956 7.2718 10.4816 1.0541 0.9911 0.9824 -0.0017 -0.0010 0.0029
 + - cost(#13)=0.975262   [o=0 t=14]
 + -- Parameters = -26.2757 4.6367 6.6429 6.8469 -8.7361 -30.3967 1.0230 0.9698 1.0339 -0.0050 -0.0150 0.0026
 + - cost(#14)=0.975779   [o=85 t=15]
 + -- Parameters = 11.5758 28.4981 -29.9174 25.3580 29.3292 34.9725 1.0378 0.9934 0.9937 -0.0013 0.0070 -0.0006
 + - cost(#15)=0.975983   [o=9 t=6]
 + -- Parameters = -17.3695 5.7400 -5.1693 11.3901 4.0697 11.7262 1.0038 1.0031 1.0080 0.0014 -0.0008 -0.0001
 + - cost(#16)=0.977945   [o=86 t=11]
 + -- Parameters = -16.7648 -5.0330 -6.9188 14.2695 -6.1131 6.5636 0.9820 0.9883 0.9976 0.0206 0.0051 -0.0005
 + - cost(#17)=0.978009   [o=18 t=9]
 + -- Parameters = 7.3594 -7.2120 25.7163 39.4424 21.1778 27.5970 1.0002 1.0051 0.9964 0.0007 -0.0014 0.0008
 + - cost(#18)=0.979328   [o=10 t=13]
 + -- Parameters = -16.8581 5.4809 -10.3624 16.1240 -0.5977 13.5909 1.0026 1.0008 0.9972 -0.0003 -0.0001 -0.0000
 + - cost(#19)=0.996166   [o=-2 t=-2]
 + -- Parameters = 0.6701 -1.2654 -0.0778 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.913870 * [o=-1 t=-1]
 + -- Parameters = 0.7062 0.2779 1.5464 7.9455 0.6942 -2.3546 0.9659 1.0071 0.8596 -0.0314 0.0275 -0.0140
 + - cost(#2)=0.962265   [o=17 t=12]
 + -- Parameters = 4.5231 1.8463 -9.3453 -8.4117 -5.1714 -4.2858 1.0388 0.9125 0.9129 -0.0246 0.0708 -0.0296
 + - cost(#3)=0.967427   [o=58 t=8]
 + -- Parameters = -19.6326 33.6807 -0.4521 -2.6846 -39.4762 -28.4999 1.0150 1.0748 0.9794 -0.0126 0.0151 0.0001
 + - cost(#4)=0.968037   [o=21 t=4]
 + -- Parameters = -25.3605 35.9633 -6.4358 -6.0990 -30.1567 -33.7225 0.9939 1.0636 0.9993 -0.0097 0.0001 -0.0002
 + - cost(#5)=0.969459   [o=31 t=0]
 + -- Parameters = 27.2872 3.2362 -3.3171 2.9137 0.3280 15.5403 1.0051 0.9723 0.9681 0.0041 -0.0047 0.0090
 + - cost(#6)=0.970283   [o=51 t=2]
 + -- Parameters = 24.8475 6.5136 -2.3008 2.2263 -2.3431 11.1507 1.0175 0.9861 0.9208 0.0024 0.0121 -0.0157
 + - cost(#7)=0.971295   [o=13 t=16]
 + -- Parameters = -29.2525 3.9300 21.1029 5.7939 -11.9315 -37.1134 0.9709 0.9983 0.9243 -0.0015 0.0176 -0.0021
 + - cost(#8)=0.971757   [o=16 t=1]
 + -- Parameters = -19.5043 7.2575 -5.2295 10.0680 1.5547 -5.0302 0.9643 1.0095 1.0033 0.0065 0.0095 0.0023
 + - cost(#9)=0.971938   [o=12 t=7]
 + -- Parameters = -29.8033 17.5277 -0.9952 23.3859 1.4702 -40.1836 1.0285 0.9736 0.9822 -0.0090 -0.0059 0.0119
 + - cost(#10)=0.973160   [o=71 t=3]
 + -- Parameters = 7.9983 7.9782 -7.2775 -3.9231 5.0328 -7.3686 0.9809 0.9819 0.9584 -0.0184 0.0333 0.0016
 + - cost(#11)=0.973447   [o=6 t=5]
 + -- Parameters = 27.1542 6.5919 -4.2402 -2.8301 7.6961 23.5189 0.9998 0.9990 1.0047 -0.0011 0.0070 0.0121
 + - cost(#12)=0.974787   [o=79 t=10]
 + -- Parameters = -16.0944 6.8962 -4.3205 5.6110 7.2561 10.5690 1.0540 0.9920 0.9796 -0.0018 -0.0079 0.0029
 + - cost(#13)=0.975116   [o=0 t=14]
 + -- Parameters = -26.2773 4.6353 6.6822 6.8391 -8.6901 -30.4162 1.0229 0.9695 1.0340 -0.0124 -0.0150 0.0026
 + - cost(#14)=0.974980   [o=85 t=15]
 + -- Parameters = 11.7646 28.6033 -30.2451 25.0857 29.0522 34.6482 1.0574 0.9942 0.9895 -0.0031 0.0092 0.0010
 + - cost(#15)=0.975958   [o=9 t=6]
 + -- Parameters = -17.3685 5.7664 -5.1620 11.3992 4.0242 11.7305 1.0038 1.0031 1.0082 0.0014 -0.0009 -0.0001
 + - cost(#16)=0.977930   [o=86 t=11]
 + -- Parameters = -16.7720 -5.0238 -6.9028 14.2653 -6.1238 6.5554 0.9820 0.9889 0.9974 0.0206 0.0051 -0.0004
 + - cost(#17)=0.977996   [o=18 t=9]
 + -- Parameters = 7.3632 -7.1900 25.7147 39.4475 21.1761 27.5866 1.0001 1.0030 0.9964 0.0007 -0.0013 0.0008
 + - cost(#18)=0.979170   [o=10 t=13]
 + -- Parameters = -16.8044 5.6208 -10.2821 16.1460 -0.4418 13.4894 1.0027 0.9987 0.9952 -0.0003 0.0006 -0.0012
 + - cost(#19)=0.920079   [o=-2 t=-2]
 + -- Parameters = 0.6918 0.3235 1.3579 8.3835 1.6159 -0.8015 0.9799 1.0016 0.8894 -0.0080 -0.0025 -0.0035
 + - case #1 [o=-1 t=-1] is now the best
 + - Initial  cost = 0.913870
 + - Initial fine Parameters = 0.7062 0.2779 1.5464 7.9455 0.6942 -2.3546 0.9659 1.0071 0.8596 -0.0314 0.0275 -0.0140
 + - Finalish cost = 0.913803 ; 243 funcs
 + - ini Finalish Parameters = 0.7137 0.2595 1.5472 7.9146 0.7200 -2.2695 0.9652 1.0069 0.8594 -0.0310 0.0288 -0.0139
 + - Final    cost = 0.913768 ; 818 funcs
 + Final fine fit Parameters:
       x-shift=  0.7070   y-shift=  0.2620   z-shift=  1.5502  ...  enorm=  1.7239 mm
       z-angle=  7.9185   x-angle=  0.6285   y-angle= -2.3231  ...  total=  8.2634 deg
       x-scale=  0.9654   y-scale=  1.0065   z-scale=  0.8596  ...  vol3D=  0.8352 = base bigger than source
     y/x-shear= -0.0311 z/x-shear=  0.0308 z/y-shear= -0.0159
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.7070 0.2620 1.5502 7.9185 0.6285 -2.3231 0.9654 1.0065 0.8596 -0.0311 0.0308 -0.0159
++ Unloading unneeded data
++ Output dataset ./MPRAGE.GB13_unif_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./MPRAGE.GB13_unif_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 41.6
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB13_unif_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB13_unif_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5065779 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 82252 voxels [12.7%] in weight mask
++ Number of points for matching = 82252
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.628 51.120 41.041 (index)
 + source center of mass = 156.702 195.828 141.534 (index)
 + source-target CM = -0.259 -1.024 -1.313 (xyz)
 + estimated center of mass shifts = -0.259 -1.024 -1.313
++ shift param auto-range: -70.9..70.4 -82.0..79.9 -71.1..68.4
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.259476 .. 9.740524  center = -0.259476
 + Range param#2 [y-shift] = -11.024017 .. 8.975983  center = -1.024017
 + Range param#3 [z-shift] = -11.312729 .. 8.687271  center = -1.312729
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.259476 .. 39.740524  center = -0.259476
 + Range param#2 [y-shift] = -41.024017 .. 38.975983  center = -1.024017
 + Range param#3 [z-shift] = -41.312729 .. 38.687271  center = -1.312729
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -40.259 ..   39.741
 +       y-shift =  -41.024 ..   38.976
 +       z-shift =  -41.313 ..   38.687
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5065779 [out of 34609848] voxels
 + base mask has 102397 [out of 646570] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=263.967 usiz=400.5
 + - copying weight image
 + - using 82252 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 312.928 .. 1088.35; base clip 2614.85 .. 9302.16
 +  - versus source range 0 .. 1098.13; base range 0 .. 12075.7
 + 72954 total points stored in 149 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB13_unif_flip_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB13_unif_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5705560 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 82252 voxels [12.7%] in weight mask
++ Number of points for matching = 82252
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.628 51.120 41.041 (index)
 + source center of mass = 156.356 195.121 140.758 (index)
 + source-target CM = -0.501 -1.519 -1.856 (xyz)
 + estimated center of mass shifts = -0.501 -1.519 -1.856
++ shift param auto-range: -71.1..70.1 -82.5..79.4 -71.6..67.9
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.501419 .. 9.498581  center = -0.501419
 + Range param#2 [y-shift] = -11.519257 .. 8.480743  center = -1.519257
 + Range param#3 [z-shift] = -11.856110 .. 8.143890  center = -1.856110
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.501419 .. 39.498581  center = -0.501419
 + Range param#2 [y-shift] = -41.519257 .. 38.480743  center = -1.519257
 + Range param#3 [z-shift] = -41.856110 .. 38.143890  center = -1.856110
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -40.501 ..   39.499
 +       y-shift =  -41.519 ..   38.481
 +       z-shift =  -41.856 ..   38.144
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5705560 [out of 34609848] voxels
 + base mask has 102397 [out of 646570] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=272.527 usiz=396.245
 + - copying weight image
 + - using 82252 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 315.271 .. 1087.09; base clip 2614.85 .. 9302.16
 +  - versus source range 0 .. 1108.2; base range 0 .. 12075.7
 + 72954 total points stored in 149 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
No flip cost is 0.773704 for lpa cost function
Flip cost is 0.914881 for lpa cost function
Data does not need flipping
#++ Creating final output: skullstripped anat data
copying from dataset /mnt/ext5/GA/fmri_data/preproc_data/GB13/MPRAGE.GB13_unif_unflipped_ns+orig to /mnt/ext5/GA/fmri_data/preproc_data/GB13/MPRAGE.GB13_unif_ns+orig
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB13_unif_unflipped_ns+orig MPRAGE.GB13_unif_ns
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat MPRAGE.GB13_unif+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base \
 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off \
 -tshift off" \
 ./MPRAGE.GB13_unif_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB13_unif*

# Finished alignment successfully

auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input MPRAGE.GB13_unif_ns+orig -skull_strip_input no -unifize_input no
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ auto_warp.py version: 0.06
# Output directory /mnt/ext5/GA/fmri_data/preproc_data/GB13/awpy/
#Script is running:
  mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB13/awpy/
cd /mnt/ext5/GA/fmri_data/preproc_data/GB13/awpy/
#Script is running (command trimmed):
  3dcopy /mnt/ext5/GA/fmri_data/preproc_data/GB13/MPRAGE.GB13_unif_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#Script is running (command trimmed):
  3dcopy /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz ./base.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB13/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB13/awpy/anat.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ anat already stripped, re-using
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_15pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 1647.400100 ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (cubic final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m -base dataset __ats_tmp__ref_base.nii_15pad+tlrc has 5 sub-bricks; will only use #0
RMS[0] = 469.075 290.841   ITER = 7/50
469.075

Warping has converged.

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
Cleanup ...
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB13/awpy/anat.aff.nii
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB13/awpy/base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.aff.nii ./base.nii
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB13/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB13/awpy/anat.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.aff.nii 
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ base dataset has more than 1 sub-brick: ignoring all but the first
++ base dataset has more than 1 sub-brick: ignoring all but the first [0]
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=4 ytop=6  zbot=19 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=/mnt/ext5/GA/fmri_data/preproc_data/GB13/awpy/base.nii  source=/mnt/ext5/GA/fmri_data/preproc_data/GB13/awpy/anat.aff.nii
++ AFNI warpomatic: 199 x 239 x 215 volume ; autobbox = 22..176 24..214 20..183 [clock= 3s 590ms]
lev=0 3..195 1..237 1..203: [first cost=-0.61638] ..... done [cost:-0.61638==>-0.66504]
lev=1 patch=145x177x153 [clock= 39s 949ms]........:[cost=-0.70078]:........done [cost:-0.66504==>-0.71351 ; 16 patches optimized, 0 skipped, bbox=5:193,3:235,4:202]
lev=2 patch=109x133x115 [clock= 58s 216ms]........done [cost:-0.71351==>-0.74861 ; 8 patches optimized, 0 skipped, bbox=5:193,3:235,4:202]
lev=3 patch=81x99x85 [clock= 1m 3s 657ms]........done [cost:-0.74861==>-0.79998 ; 23 patches optimized, 4 skipped, bbox=5:193,3:235,4:202]
lev=4 patch=61x75x65 [clock= 1m 17s 195ms]...............done [cost:-0.79998==>-0.88330 ; 88 patches optimized, 37 skipped, bbox=5:193,3:235,4:202]
lev=5 patch=45x57x49 [clock= 1m 37s 723ms].........done [cost:-0.88330==>-0.95131 ; 169 patches optimized, 83 skipped, bbox=5:193,3:235,4:202]
lev=6 patch=35x43x37 [clock= 1m 55s 794ms]....................done [cost:-0.95131==>-1.01040 ; 438 patches optimized, 291 skipped, bbox=5:193,3:235,4:202]
lev=7 patch=25x25x25 [clock= 2m 16s 317ms]..........................................done [cost:-1.01040==>-1.09637 ; 1432 patches optimized, 908 skipped, bbox=5:193,3:235,4:202]
++ ====== total number of parameters 'optimized' = 26238
 +      initial unpenalized cost = -0.616377
 +        final unpenalized cost = -1.10713
 +        final penalized   cost = -1.09637
++ Output dataset ./anat.aff.qw.nii
++ Output dataset ./anat.aff.qw_WARP.nii
++ ===== clock time = 2m 50s 102ms
#++ Applying warps to /mnt/ext5/GA/fmri_data/preproc_data/GB13/MPRAGE.GB13_unif_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.aff.qw_WARP.nii anat.aff.Xat.1D" -master ./base.nii -source /mnt/ext5/GA/fmri_data/preproc_data/GB13/MPRAGE.GB13_unif_ns+orig -prefix ./MPRAGE.GB13_unif_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/mnt/ext5/GA/fmri_data/preproc_data/GB13/MPRAGE.GB13_unif_ns+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./MPRAGE.GB13_unif_ns.aw.nii
++ total Elapsed time = 6.9 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input \
 MPRAGE.GB13_unif_ns+orig -skull_strip_input no -unifize_input no" \
 ./MPRAGE.GB13_unif_ns.aw.nii


3dbucket -DAFNI_NIFTI_VIEW=tlrc -prefix MPRAGE.GB13_unif_ns awpy/MPRAGE.GB13_unif_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
mv awpy/anat.aff.Xat.1D .
mv awpy/anat.aff.qw_WARP.nii .
if ( ! -f MPRAGE.GB13_unif_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb03.GB13.r01.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB13.r01.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 93773 voxels
 + 10335 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.036  pitch=-0.041  yaw=-0.022  dS=-0.864  dL=-0.029  dP=-0.321
++ Mean: roll=+0.081  pitch=+0.143  yaw=+0.221  dS=-0.323  dL=+0.110  dP=-0.152
++ Max : roll=+0.183  pitch=+0.548  yaw=+0.496  dS=+0.077  dL=+0.214  dP=+0.036
++ Max displacements (mm) for each sub-brick:
 0.06(0.00) 0.13(0.10) 0.14(0.09) 0.19(0.06) 0.21(0.06) 0.10(0.16) 0.10(0.10) 0.11(0.05) 0.08(0.04) 0.06(0.09) 0.09(0.08) 0.16(0.07) 0.16(0.03) 0.11(0.09) 0.09(0.10) 0.12(0.06) 0.03(0.10) 0.07(0.08) 0.11(0.09) 0.15(0.06) 0.11(0.07) 0.06(0.13) 0.11(0.07) 0.06(0.07) 0.17(0.16) 0.17(0.10) 0.20(0.05) 0.17(0.06) 0.12(0.14) 0.13(0.06) 0.11(0.04) 0.09(0.13) 0.12(0.03) 0.15(0.06) 0.17(0.03) 0.12(0.15) 0.09(0.09) 0.11(0.03) 0.03(0.09) 0.05(0.08) 0.13(0.08) 0.16(0.08) 0.12(0.08) 0.06(0.12) 0.10(0.07) 0.00(0.10) 0.06(0.06) 0.10(0.04) 0.15(0.08) 0.17(0.07) 0.11(0.11) 0.10(0.11) 0.11(0.04) 0.05(0.12) 0.09(0.05) 0.11(0.07) 0.12(0.05) 0.13(0.08) 0.08(0.11) 0.13(0.07) 0.06(0.08) 0.08(0.08) 0.11(0.06) 0.13(0.06) 0.11(0.02) 0.07(0.13) 0.09(0.07) 0.07(0.05) 0.08(0.10) 0.10(0.06) 0.12(0.07) 0.13(0.03) 0.07(0.14) 0.06(0.06) 0.11(0.05) 0.07(0.13) 0.09(0.07) 0.13(0.08) 0.15(0.04) 0.10(0.05) 0.06(0.12) 0.12(0.09) 0.06(0.10) 0.08(0.08) 0.14(0.11) 0.16(0.04) 0.15(0.04) 0.09(0.14) 0.06(0.07) 0.08(0.03) 0.09(0.06) 0.14(0.11) 0.16(0.04) 0.18(0.06) 0.08(0.11) 0.10(0.10) 0.08(0.04) 0.10(0.08) 0.14(0.07) 0.15(0.07) 0.18(0.06) 0.05(0.14) 0.10(0.10) 0.08(0.07) 0.10(0.10) 0.15(0.07) 0.21(0.10) 0.17(0.03) 0.10(0.16) 0.06(0.06) 0.12(0.06) 0.12(0.11) 0.13(0.08) 0.17(0.08) 0.20(0.06) 0.08(0.16) 0.08(0.07) 0.12(0.05) 0.10(0.10) 0.13(0.08) 0.20(0.10) 0.20(0.03) 0.10(0.14) 0.09(0.07) 0.10(0.04) 0.12(0.10) 0.16(0.08) 0.19(0.09) 0.20(0.03) 0.15(0.11) 0.12(0.03) 0.08(0.08) 0.11(0.08) 0.16(0.06) 0.19(0.08) 0.18(0.02) 0.10(0.13) 0.10(0.07) 0.06(0.06) 0.15(0.14) 0.20(0.06) 0.20(0.05) 0.20(0.03) 0.11(0.11) 0.12(0.12) 0.11(0.04) 0.10(0.07) 0.19(0.15) 0.20(0.03) 0.19(0.05) 0.14(0.07) 0.09(0.12) 0.06(0.04) 0.07(0.06) 0.18(0.15) 0.25(0.08) 0.27(0.05) 0.21(0.07) 0.13(0.14) 0.16(0.07) 0.18(0.17) 0.22(0.06) 0.24(0.08) 0.28(0.05) 0.13(0.15) 0.08(0.11) 0.12(0.06) 0.12(0.13) 0.20(0.09) 0.75(0.59) 0.91(0.17) 0.77(0.17) 0.63(0.14) 0.53(0.13) 0.40(0.14) 0.36(0.07) 0.46(0.10) 0.43(0.04) 0.42(0.04) 0.41(0.04) 0.39(0.02) 0.27(0.14) 0.24(0.09) 0.29(0.10) 0.35(0.07) 0.43(0.11) 0.42(0.06) 0.36(0.07) 0.26(0.11) 0.21(0.10) 0.27(0.10) 0.34(0.08) 0.39(0.09) 0.38(0.05) 0.38(0.02) 0.27(0.14) 0.22(0.10) 0.26(0.08) 0.35(0.11) 0.38(0.08) 0.38(0.06) 0.31(0.10) 0.25(0.08) 0.23(0.04) 0.31(0.10) 0.38(0.09) 0.48(0.13) 0.47(0.05) 0.46(0.05) 0.37(0.10) 0.27(0.11) 0.24(0.05) 0.28(0.07) 0.36(0.10) 0.41(0.06) 0.42(0.09) 0.42(0.02) 0.34(0.09) 0.30(0.07) 0.24(0.09) 0.36(0.16) 0.41(0.06) 0.42(0.08) 0.39(0.05) 0.35(0.06) 0.29(0.09) 0.29(0.05) 0.34(0.11) 0.32(0.05) 0.34(0.10) 0.34(0.07) 0.37(0.08) 0.32(0.07) 0.24(0.11) 0.21(0.05) 0.29(0.09) 0.38(0.11) 0.42(0.06) 0.45(0.10) 0.44(0.05) 0.37(0.09) 0.28(0.12) 0.32(0.09) 0.35(0.04) 0.34(0.04) 0.42(0.15) 0.40(0.01) 0.33(0.15) 0.27(0.07) 0.24(0.07) 0.28(0.07) 0.33(0.06) 0.37(0.08) 0.42(0.06) 0.45(0.06) 0.35(0.12) 0.29(0.09) 0.28(0.02) 0.33(0.10) 0.44(0.14) 0.38(0.08) 0.33(0.07) 0.26(0.09) 0.26(0.05) 0.32(0.09) 0.38(0.07) 0.43(0.08) 0.43(0.04) 0.41(0.03) 0.32(0.11) 0.28(0.08) 0.29(0.02) 0.35(0.09) 0.39(0.07) 0.39(0.02) 0.46(0.09) 0.35(0.14) 0.30(0.07) 0.27(0.09) 0.31(0.06) 0.38(0.10) 0.44(0.10) 0.48(0.05) 0.51(0.03) 0.48(0.05) 0.40(0.12) 0.40(0.04) 0.40(0.05) 0.48(0.14) 0.49(0.06) 0.51(0.08) 0.44(0.09) 0.40(0.08) 0.35(0.10) 0.34(0.08) 0.41(0.08) 0.46(0.13) 0.48(0.08) 0.50(0.05) 0.42(0.12) 0.38(0.07) 0.39(0.05) 0.45(0.13) 0.49(0.07) 0.56(0.11) 0.50(0.08) 0.41(0.11) 0.39(0.08) 0.40(0.02) 0.45(0.07) 0.49(0.10) 0.51(0.05) 0.48(0.04) 0.44(0.06) 0.32(0.16) 0.39(0.17) 0.51(0.15) 0.56(0.09) 0.57(0.08) 0.55(0.05) 0.53(0.07) 0.43(0.14) 0.41(0.04) 0.43(0.03) 0.52(0.11) 0.57(0.08) 0.62(0.10) 0.56(0.07) 0.44(0.15) 0.40(0.08) 0.40(0.03) 0.51(0.13) 0.56(0.07) 0.58(0.05) 0.52(0.07) 0.41(0.15) 0.44(0.04) 0.49(0.06) 0.45(0.09) 0.55(0.25) 0.58(0.07) 0.45(0.16) 0.38(0.10) 0.35(0.09) 0.42(0.11) 0.49(0.08) 0.56(0.11) 0.54(0.02) 0.43(0.13) 0.40(0.05) 0.43(0.03) 0.51(0.12) 0.57(0.08) 0.62(0.08) 0.57(0.07) 0.45(0.14) 0.43(0.04) 0.45(0.03) 0.55(0.14) 0.57(0.06) 0.59(0.08) 0.59(0.03) 0.51(0.11) 0.49(0.04) 0.48(0.06) 0.52(0.10) 0.54(0.04) 0.55(0.08) 0.57(0.03) 0.47(0.12) 0.45(0.05) 0.49(0.04) 0.56(0.12) 0.61(0.08) 0.64(0.06) 0.65(0.04) 0.52(0.14) 0.49(0.07) 0.47(0.03) 0.55(0.13) 1.17(0.69) 1.01(0.20) 0.94(0.09) 0.86(0.11) 0.72(0.15) 0.59(0.13) 0.57(0.06) 0.66(0.10) 0.72(0.07) 0.73(0.07) 0.72(0.04) 0.69(0.06) 0.65(0.08) 0.64(0.03) 0.60(0.09) 0.66(0.09) 0.69(0.06) 0.70(0.07) 0.61(0.10) 0.50(0.13) 0.49(0.07) 0.56(0.08) 0.63(0.09) 0.66(0.06) 0.71(0.09) 0.72(0.04) 0.64(0.09) 0.59(0.07) 0.62(0.06) 0.65(0.06) 0.63(0.02) 0.67(0.08) 0.64(0.04) 0.64(0.03) 0.53(0.14) 0.49(0.09) 0.51(0.05) 0.58(0.13) 0.66(0.11) 0.66(0.04) 0.67(0.03) 0.61(0.11) 0.55(0.08) 0.55(0.04) 0.65(0.14) 0.67(0.06) 0.70(0.10) 0.67(0.03) 0.64(0.04) 0.56(0.09) 0.52(0.07) 0.54(0.04) 0.62(0.12) 0.64(0.08) 0.70(0.07) 0.63(0.07) 0.54(0.12) 0.50(0.08) 0.50(0.01) 0.58(0.11) 0.66(0.12) 0.66(0.06) 0.65(0.03) 0.57(0.12) 0.48(0.11) 0.52(0.05) 0.54(0.06) 0.60(0.10) 0.64(0.08) 0.64(0.05) 0.59(0.08) 0.51(0.08) 0.50(0.05) 0.51(0.03) 0.60(0.12) 0.64(0.06) 0.67(0.10) 0.61(0.07) 0.57(0.06) 0.49(0.11) 0.48(0.06) 0.57(0.13) 0.63(0.07) 0.65(0.08) 0.66(0.03) 0.58(0.09) 0.55(0.07) 0.53(0.05) 0.59(0.10) 0.64(0.06) 0.64(0.08) 0.64(0.01) 0.55(0.10) 0.53(0.03) 0.52(0.05) 0.59(0.10) 0.65(0.08) 0.70(0.08) 0.71(0.03) 0.61(0.13) 0.57(0.06) 0.55(0.07) 0.59(0.07) 0.64(0.07) 0.68(0.09) 0.69(0.04) 0.60(0.12) 0.56(0.04) 0.59(0.04) 0.68(0.11) 0.68(0.06) 0.70(0.07) 0.66(0.05) 0.56(0.13) 0.53(0.04) 0.51(0.07) 0.58(0.09) 0.65(0.09) 0.68(0.09) 0.71(0.06) 0.60(0.13) 0.53(0.08) 0.58(0.06) 0.64(0.07) 0.72(0.10) 0.76(0.07) 0.78(0.06) 0.67(0.12) 0.61(0.08) 0.61(0.07) 0.67(0.06) 0.71(0.06) 0.77(0.08) 0.80(0.06) 0.77(0.04) 0.69(0.09) 0.62(0.09) 0.57(0.07) 0.64(0.10) 0.71(0.08) 0.75(0.07) 0.77(0.06) 0.79(0.02) 0.72(0.09) 0.64(0.11) 0.65(0.05) 0.73(0.09) 0.77(0.06) 0.78(0.04) 0.81(0.07) 0.76(0.10) 0.73(0.05) 0.70(0.05) 0.73(0.04) 0.73(0.06) 0.74(0.05) 0.75(0.05) 0.72(0.03) 0.66(0.10) 0.59(0.09) 0.60(0.04) 0.67(0.08) 0.74(0.12) 0.79(0.07) 0.74(0.06) 0.63(0.14) 0.60(0.06) 0.63(0.07) 0.69(0.08) 0.76(0.10) 0.80(0.06) 0.79(0.04) 0.73(0.10) 0.68(0.07) 0.69(0.02) 0.79(0.11) 0.84(0.08) 0.87(0.04) 0.89(0.06) 0.81(0.11) 0.73(0.10) 0.68(0.05) 0.71(0.06) 0.82(0.14) 0.74(0.11) 0.82(0.13) 1.49(0.72) 1.32(0.20) 1.14(0.17) 0.93(0.23) 0.82(0.14) 0.73(0.11) 0.80(0.09) 0.88(0.09) 0.90(0.07) 0.89(0.06) 0.86(0.05) 0.75(0.13) 0.68(0.09) 0.77(0.14) 0.82(0.05) 0.89(0.13) 0.88(0.05) 0.85(0.08) 0.72(0.15) 0.70(0.07) 0.79(0.10) 0.87(0.10) 0.88(0.07) 0.85(0.04) 0.85(0.02) 0.73(0.14) 0.70(0.07) 0.73(0.07) 0.85(0.12) 0.93(0.11) 0.93(0.06) 0.95(0.03) 0.95(0.02) 0.88(0.11) 0.81(0.09) 0.81(0.04) 0.88(0.08) 0.87(0.04) 0.92(0.11) 0.92(0.02) 0.86(0.10) 0.75(0.12) 0.72(0.15) 0.88(0.17) 0.94(0.12) 1.05(0.14) 0.98(0.08) 0.85(0.17) 0.82(0.05) 0.85(0.06) 0.98(0.14) 1.03(0.10) 1.09(0.10) 1.10(0.06) 1.13(0.03) 0.99(0.15) 0.86(0.14) 0.82(0.06) 0.76(0.10) 0.97(0.24) 0.94(0.05) 0.95(0.12) 1.05(0.14) 1.04(0.10) 1.77(0.78) 1.93(0.22) 1.72(0.21) 1.62(0.13) 1.48(0.15) 1.31(0.19) 1.29(0.09) 1.28(0.05) 1.30(0.11) 1.28(0.05) 1.21(0.07) 1.13(0.10) 1.07(0.09) 1.11(0.09) 1.16(0.05) 1.24(0.14) 1.23(0.06) 1.23(0.05) 1.12(0.13) 1.06(0.08) 1.06(0.05) 1.11(0.07) 1.18(0.09) 1.22(0.09) 1.24(0.04) 1.12(0.13) 1.02(0.12) 0.99(0.05) 1.11(0.14) 1.16(0.09) 1.18(0.07) 1.16(0.03) 1.11(0.05) 1.06(0.07) 1.03(0.08) 1.06(0.05) 1.13(0.09) 1.17(0.07) 1.18(0.09) 1.19(0.03) 1.15(0.06) 1.08(0.09) 1.03(0.07) 1.06(0.04) 1.12(0.08) 1.18(0.10) 1.17(0.03) 1.16(0.02) 1.06(0.13) 1.01(0.05) 1.04(0.07) 1.14(0.12) 1.20(0.09) 1.21(0.04) 1.22(0.03) 1.18(0.05) 1.16(0.05) 1.04(0.14) 0.99(0.06) 1.00(0.07) 1.10(0.11) 1.16(0.07) 1.17(0.07) 1.20(0.03) 1.15(0.08) 1.06(0.12) 1.06(0.07) 1.12(0.07) 1.18(0.07) 1.24(0.08) 1.25(0.05) 1.24(0.03) 1.23(0.02) 1.12(0.12) 1.10(0.04) 1.09(0.06) 1.16(0.08) 1.15(0.06) 1.19(0.10) 1.18(0.06) 1.15(0.03) 1.06(0.11) 1.03(0.06) 1.03(0.07) 1.11(0.08) 1.19(0.11) 1.22(0.05) 1.21(0.06) 1.12(0.10) 1.09(0.07) 1.03(0.09) 1.10(0.09) 1.15(0.09) 1.18(0.05) 1.19(0.10) 1.15(0.06) 1.08(0.08) 1.04(0.07) 1.10(0.06) 1.17(0.09) 1.16(0.04) 1.15(0.06) 1.09(0.07) 1.03(0.07) 1.00(0.06) 1.01(0.07) 1.08(0.08) 1.12(0.07) 1.20(0.10) 1.10(0.13) 1.03(0.09) 0.94(0.11) 0.99(0.12) 1.13(0.17) 1.18(0.10) 1.09(0.10) 0.98(0.17) 0.94(0.05) 0.93(0.04) 1.12(0.23) 1.21(0.10) 1.26(0.15) 1.33(0.13) 1.76(0.47) 1.51(0.29) 1.29(0.23) 1.15(0.17) 1.00(0.19) 0.96(0.06) 1.04(0.10) 1.16(0.12) 1.20(0.08) 1.23(0.07) 1.21(0.05) 1.10(0.15) 1.08(0.02) 1.09(0.10) 1.16(0.08) 1.23(0.13) 1.22(0.04) 1.21(0.05) 1.12(0.12) 1.07(0.07) 1.09(0.04) 1.17(0.09) 1.23(0.10) 1.26(0.06) 1.26(0.02) 1.20(0.07) 1.06(0.15) 1.03(0.04) 1.13(0.11) 1.17(0.05) 1.24(0.09) 1.24(0.05) 1.23(0.04) 1.17(0.08) 1.08(0.10) 1.14(0.08) 1.22(0.08) 1.28(0.11) 1.31(0.05) 1.31(0.04) 1.29(0.05) 1.20(0.11) 1.14(0.07) 1.15(0.05) 1.19(0.06) 1.23(0.07) 1.25(0.06) 1.24(0.03) 1.16(0.11) 1.09(0.07) 1.12(0.06) 1.19(0.08) 1.26(0.11) 1.32(0.08) 1.33(0.06) 1.29(0.04) 1.25(0.06) 1.20(0.06) 1.31(0.13) 1.40(0.12) 1.43(0.04) 1.46(0.05) 1.40(0.07) 1.39(0.06) 1.32(0.09) 1.32(0.06) 1.23(0.10) 1.18(0.07) 1.13(0.08) 1.15(0.06) 1.19(0.07) 1.26(0.10) 1.23(0.06) 1.24(0.03) 1.16(0.10) 1.11(0.07) 1.12(0.06) 1.17(0.06) 1.24(0.09) 1.26(0.06) 1.25(0.05) 1.19(0.07) 1.09(0.12) 1.12(0.04) 1.18(0.07) 1.20(0.07) 1.22(0.09) 1.22(0.02) 1.16(0.07) 1.10(0.09) 1.05(0.07) 1.11(0.07) 1.15(0.06) 1.22(0.14) 1.25(0.04) 1.16(0.10) 1.07(0.10) 1.04(0.06) 1.09(0.07) 1.13(0.05) 1.21(0.11) 1.23(0.05) 1.20(0.04) 1.16(0.07) 1.05(0.13) 1.03(0.05) 1.10(0.10) 1.18(0.10) 1.20(0.04) 1.21(0.10) 1.21(0.02) 1.11(0.12) 1.08(0.07) 1.02(0.07) 1.13(0.13) 1.21(0.09) 1.22(0.09) 1.22(0.03) 1.15(0.08) 1.07(0.10) 1.01(0.06) 1.08(0.08) 1.20(0.13) 1.22(0.09) 1.24(0.05) 1.21(0.04) 1.10(0.14) 1.01(0.11) 0.99(0.10) 1.15(0.18) 1.10(0.12) 1.20(0.11) 1.26(0.08) 1.12(0.17) 1.04(0.10) 1.03(0.04) 1.17(0.15) 1.21(0.06) 1.26(0.12) 1.26(0.03) 1.20(0.07) 1.09(0.13) 1.03(0.06) 1.13(0.12) 1.20(0.07) 1.25(0.12) 1.24(0.02) 1.21(0.05) 1.08(0.15) 1.04(0.06) 1.12(0.08) 1.17(0.06) 1.23(0.11) 1.25(0.05) 1.23(0.04) 1.16(0.09) 1.07(0.11) 1.07(0.02) 1.12(0.05) 1.22(0.11) 1.28(0.09) 1.30(0.07) 1.27(0.05) 1.23(0.05) 1.17(0.07) 1.06(0.17) 1.04(0.10) 1.06(0.13) 1.27(0.25) 1.81(0.59) 1.71(0.18) 1.51(0.24) 1.32(0.21) 1.21(0.12) 1.13(0.10) 1.15(0.05) 1.28(0.13) 1.34(0.08) 1.32(0.06) 1.28(0.07) 1.21(0.10) 1.17(0.07) 1.08(0.11) 1.15(0.08) 1.24(0.11) 1.30(0.10) 1.26(0.07) 1.22(0.04) 1.10(0.14) 1.05(0.09) 1.14(0.11) 1.21(0.07) 1.26(0.08) 1.25(0.07) 1.26(0.02) 1.25(0.03) 1.17(0.09) 1.12(0.07) 1.14(0.07) 1.25(0.12) 1.26(0.05) 1.27(0.06) 1.30(0.04) 1.29(0.03) 1.22(0.10) 1.14(0.08) 1.15(0.05) 1.22(0.07) 1.26(0.08) 1.28(0.04) 1.30(0.07) 1.28(0.05) 1.24(0.07) 1.24(0.03) 1.27(0.06) 1.35(0.11) 1.34(0.13) 1.34(0.09) 1.27(0.12) 1.14(0.14) 1.06(0.11) 1.15(0.09) 1.25(0.13) 1.28(0.08) 1.27(0.02) 1.19(0.11) 1.16(0.05) 1.15(0.04) 1.21(0.08) 1.26(0.07) 1.31(0.10) 1.30(0.02) 1.29(0.07) 1.26(0.04) 1.18(0.10) 1.15(0.05) 1.19(0.05) 1.31(0.15) 1.33(0.04) 1.34(0.06) 1.36(0.04) 1.34(0.03) 1.28(0.07) 1.23(0.06) 1.23(0.05) 1.21(0.07) 1.32(0.13) 1.28(0.05) 1.28(0.05) 1.18(0.11) 1.11(0.10) 1.11(0.05) 1.17(0.11) 1.25(0.11) 1.28(0.08) 1.31(0.05) 1.30(0.03) 1.25(0.10) 1.15(0.12) 1.22(0.08) 1.25(0.06) 1.36(0.14) 1.32(0.08) 1.46(0.18) 1.36(0.13) 1.22(0.19) 1.16(0.08) 1.24(0.09) 1.32(0.09) 1.32(0.06) 1.40(0.12) 1.35(0.05) 1.23(0.14) 1.17(0.07) 1.15(0.05) 1.26(0.14) 1.34(0.09) 1.36(0.08) 1.35(0.02) 1.33(0.04) 1.21(0.14) 1.17(0.06) 1.21(0.09) 1.31(0.12) 1.35(0.07) 1.40(0.07) 1.40(0.03) 1.24(0.20) 1.16(0.09) 1.17(0.07) 1.30(0.15) 1.35(0.05) 1.35(0.06) 1.41(0.07) 1.26(0.17) 1.18(0.09) 1.21(0.03) 1.29(0.09) 1.37(0.12) 1.39(0.04) 1.42(0.11) 1.45(0.03) 1.42(0.07) 1.29(0.13) 1.27(0.12) 1.43(0.23) 1.47(0.08) 1.44(0.19) 1.50(0.06) 1.38(0.15) 1.25(0.17) 1.25(0.03) 1.24(0.07) 1.39(0.17) 1.43(0.08) 1.45(0.10) 1.46(0.03) 1.45(0.03) 1.30(0.17) 1.25(0.06) 1.32(0.08) 1.32(0.05) 1.39(0.12) 1.46(0.09) 1.44(0.05) 1.43(0.04) 1.34(0.12) 1.24(0.10) 1.25(0.04) 1.33(0.10) 1.37(0.05) 1.40(0.08) 1.48(0.09) 1.42(0.08) 1.35(0.10) 1.25(0.11) 1.28(0.05) 1.29(0.05) 1.37(0.10) 1.42(0.07) 1.45(0.06) 1.51(0.07) 1.38(0.13)
++ Max displacement in automask = 1.93 (mm) at sub-brick 631
++ Max delta displ  in automask = 0.78 (mm) at sub-brick 630
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb03.GB13.r01.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB13_unif_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB13_unif_ns+tlrc -dxyz 2.5 -source pb02.GB13.r01.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB13_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB13.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 807.4 sec
3dNwarpApply -master MPRAGE.GB13_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB13_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb03.GB13.r02.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB13.r02.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 91817 voxels
 + 10064 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.064  pitch=+0.135  yaw=+0.389  dS=-1.314  dL=+0.147  dP=-0.343
++ Mean: roll=+0.096  pitch=+0.591  yaw=+0.807  dS=-0.810  dL=+0.296  dP=-0.224
++ Max : roll=+0.278  pitch=+1.275  yaw=+0.976  dS=-0.468  dL=+0.466  dP=-0.073
++ Max displacements (mm) for each sub-brick:
 1.29(0.00) 1.31(0.14) 1.23(0.18) 1.21(0.07) 1.39(0.22) 1.49(0.20) 1.85(0.47) 1.74(0.23) 1.69(0.08) 1.63(0.07) 1.49(0.18) 1.55(0.10) 1.48(0.10) 1.43(0.10) 1.27(0.21) 1.14(0.17) 1.23(0.13) 1.32(0.14) 1.33(0.09) 1.30(0.08) 1.31(0.02) 1.28(0.09) 1.22(0.10) 1.30(0.09) 1.34(0.07) 1.38(0.14) 1.40(0.03) 1.39(0.06) 1.38(0.04) 1.28(0.14) 1.25(0.06) 1.32(0.12) 1.36(0.11) 1.37(0.05) 1.37(0.05) 1.36(0.05) 1.28(0.13) 1.24(0.09) 1.26(0.06) 1.33(0.11) 1.35(0.08) 1.38(0.06) 1.34(0.05) 1.31(0.07) 1.25(0.11) 1.28(0.04) 1.38(0.13) 1.39(0.07) 1.42(0.06) 1.42(0.02) 1.44(0.02) 1.36(0.13) 1.33(0.07) 1.42(0.12) 1.42(0.06) 1.45(0.08) 1.46(0.04) 1.48(0.04) 1.47(0.05) 1.38(0.12) 1.35(0.07) 1.38(0.04) 1.43(0.11) 1.46(0.09) 1.48(0.07) 1.47(0.06) 1.43(0.12) 1.38(0.09) 1.41(0.07) 1.48(0.11) 1.48(0.07) 1.49(0.05) 1.50(0.03) 1.44(0.09) 1.38(0.08) 1.40(0.06) 1.51(0.16) 1.49(0.04) 1.52(0.11) 1.51(0.03) 1.47(0.09) 1.41(0.10) 1.37(0.05) 1.46(0.13) 1.46(0.06) 1.52(0.11) 1.50(0.03) 1.48(0.07) 1.42(0.08) 1.39(0.07) 1.49(0.13) 1.48(0.05) 1.52(0.11) 1.51(0.01) 1.51(0.04) 1.50(0.06) 1.42(0.11) 1.41(0.04) 1.51(0.13) 1.55(0.11) 1.52(0.04) 1.55(0.06) 1.52(0.06) 1.44(0.12) 1.41(0.06) 1.47(0.08) 1.56(0.12) 1.54(0.05) 1.53(0.06) 1.53(0.06) 1.53(0.06) 1.46(0.10) 1.50(0.06) 1.56(0.09) 1.57(0.06) 1.56(0.08) 1.55(0.07) 1.49(0.09) 1.45(0.08) 1.50(0.06) 1.58(0.13) 1.58(0.04) 1.61(0.11) 1.58(0.08) 1.53(0.09) 1.51(0.04) 1.52(0.06) 1.58(0.09) 1.59(0.04) 1.61(0.08) 1.59(0.05) 1.61(0.03) 1.56(0.10) 1.51(0.08) 1.61(0.13) 1.60(0.03) 1.61(0.05) 1.60(0.03) 1.62(0.06) 1.59(0.03) 1.54(0.10) 1.49(0.08) 1.48(0.06) 1.54(0.09) 1.61(0.08) 1.61(0.08) 1.66(0.05) 1.60(0.09) 1.56(0.07) 1.52(0.06) 1.60(0.08) 1.64(0.07) 1.65(0.06) 1.66(0.05) 1.66(0.03) 1.63(0.05) 1.60(0.06) 1.54(0.08) 1.58(0.04) 1.62(0.05) 1.66(0.13) 1.64(0.04) 1.61(0.04) 1.55(0.09) 1.51(0.07) 1.57(0.07) 1.64(0.08) 1.65(0.12) 1.66(0.03) 1.67(0.04) 1.61(0.10) 1.55(0.07) 1.57(0.03) 1.96(0.54) 2.44(0.55) 2.34(0.20) 2.28(0.07) 2.25(0.05) 2.12(0.16) 2.12(0.08) 2.11(0.07) 2.16(0.08) 2.14(0.12) 2.14(0.04) 2.13(0.04) 2.04(0.15) 1.99(0.07) 2.01(0.04) 2.02(0.05) 2.03(0.09) 2.03(0.06) 2.00(0.05) 1.95(0.08) 1.93(0.05) 1.87(0.09) 1.96(0.12) 1.99(0.04) 2.00(0.11) 2.00(0.05) 2.04(0.04) 1.96(0.12) 1.89(0.10) 1.89(0.05) 1.99(0.12) 2.02(0.10) 2.04(0.05) 2.02(0.03) 2.03(0.01) 1.97(0.12) 1.92(0.08) 1.93(0.06) 2.03(0.13) 2.07(0.10) 2.05(0.05) 2.04(0.02) 1.99(0.07) 1.93(0.08) 1.94(0.04) 2.02(0.11) 2.07(0.13) 2.04(0.04) 2.06(0.05) 1.99(0.10) 1.94(0.08) 1.96(0.04) 2.02(0.07) 2.06(0.13) 2.05(0.04) 2.05(0.06) 2.04(0.03) 2.01(0.08) 1.96(0.09) 1.98(0.05) 2.04(0.08) 2.05(0.08) 2.06(0.05) 2.06(0.06) 2.04(0.07) 2.00(0.06) 1.95(0.08) 1.98(0.06) 2.04(0.08) 2.06(0.09) 2.06(0.07) 2.07(0.02) 2.02(0.09) 1.98(0.08) 1.93(0.07) 2.01(0.14) 2.07(0.08) 2.06(0.09) 2.31(0.37) 2.23(0.22) 2.05(0.27) 1.96(0.13) 1.87(0.14) 1.83(0.05) 1.88(0.07) 1.98(0.11) 2.04(0.13) 2.05(0.03) 2.06(0.06) 1.99(0.12) 1.89(0.12) 1.89(0.04) 2.00(0.13) 2.03(0.11) 2.04(0.07) 2.02(0.04) 1.96(0.10) 1.90(0.08) 1.87(0.07) 1.95(0.11) 1.98(0.09) 2.00(0.10) 1.99(0.02) 1.94(0.11) 1.87(0.10) 1.86(0.04) 1.96(0.13) 2.00(0.07) 2.06(0.13) 2.05(0.02) 2.03(0.06) 1.96(0.11) 1.91(0.05) 1.96(0.08) 2.05(0.11) 2.08(0.11) 2.08(0.04) 2.09(0.02) 2.06(0.08) 1.99(0.11) 1.98(0.04) 2.05(0.09) 2.10(0.14) 2.10(0.06) 2.09(0.03) 2.06(0.07) 2.00(0.10) 1.98(0.03) 2.02(0.04) 2.08(0.10) 2.10(0.07) 2.12(0.06) 2.08(0.09) 1.96(0.15) 1.89(0.13) 2.03(0.20) 2.08(0.09) 2.10(0.09) 2.09(0.04) 2.05(0.10) 2.04(0.10) 1.98(0.08) 2.09(0.15) 2.12(0.06) 2.16(0.13) 2.15(0.03) 2.09(0.09) 2.06(0.08) 2.02(0.08) 2.10(0.11) 2.13(0.06) 2.16(0.13) 2.13(0.06) 2.15(0.02) 2.05(0.15) 2.02(0.06) 2.10(0.12) 2.13(0.06) 2.13(0.06) 2.11(0.05) 2.05(0.10) 2.01(0.07) 2.05(0.06) 2.14(0.12) 2.16(0.08) 2.15(0.05) 2.15(0.02) 2.11(0.07) 2.07(0.09) 2.08(0.05) 2.13(0.10) 2.18(0.10) 2.18(0.06) 2.19(0.04) 2.13(0.10) 2.09(0.07) 2.08(0.05) 2.14(0.10) 2.20(0.12) 2.17(0.08) 2.17(0.03) 2.12(0.10) 2.07(0.08) 2.06(0.07) 2.16(0.12) 2.21(0.08) 2.18(0.06) 2.18(0.04) 2.16(0.03) 2.15(0.04) 2.08(0.11) 1.99(0.11) 2.02(0.04) 2.12(0.12) 2.17(0.08) 2.21(0.08) 2.20(0.03) 2.16(0.07) 2.10(0.11) 2.07(0.06) 2.23(0.21) 2.60(0.55) 2.54(0.15) 2.30(0.36) 2.23(0.11) 2.21(0.05) 2.16(0.10) 2.13(0.05) 2.19(0.07) 2.25(0.09) 2.27(0.07) 2.24(0.04) 2.22(0.04) 2.16(0.10) 2.11(0.08) 2.15(0.05) 2.22(0.08) 2.26(0.16) 2.25(0.03) 2.25(0.07) 2.20(0.07) 2.14(0.11) 2.12(0.09) 2.18(0.06) 2.24(0.12) 2.26(0.07) 2.25(0.05) 2.25(0.02) 2.22(0.05) 2.18(0.07) 2.18(0.03) 2.24(0.07) 2.27(0.05) 2.30(0.12) 2.24(0.07) 2.23(0.05) 2.19(0.10) 2.14(0.09) 2.14(0.07) 2.28(0.18) 2.27(0.06) 2.28(0.09) 2.28(0.03) 2.28(0.03) 2.24(0.09) 2.19(0.09) 2.21(0.09) 2.26(0.06) 2.26(0.10) 2.28(0.06) 2.29(0.21) 2.17(0.21) 2.07(0.22) 2.29(0.30) 2.33(0.06) 2.33(0.07) 2.35(0.06) 2.33(0.05) 2.23(0.14) 2.18(0.07) 2.22(0.04) 2.31(0.12) 2.36(0.09) 2.37(0.09) 2.35(0.03) 2.26(0.14) 2.22(0.07) 2.23(0.08) 2.34(0.13) 2.33(0.04) 2.36(0.13) 2.35(0.02) 2.32(0.06) 2.27(0.08) 2.20(0.09) 2.26(0.06) 2.31(0.05) 2.34(0.12) 2.34(0.05) 2.33(0.05) 2.26(0.10) 2.23(0.06) 2.28(0.05) 2.35(0.10) 2.39(0.13) 2.38(0.04) 2.37(0.04) 2.32(0.09) 2.27(0.07) 2.27(0.04) 2.33(0.07) 2.38(0.13) 2.38(0.04) 2.37(0.06) 2.36(0.04) 2.30(0.08) 2.27(0.06) 2.33(0.06) 2.36(0.09) 2.36(0.04) 2.37(0.06) 2.35(0.05) 2.28(0.10) 2.25(0.06) 2.24(0.06) 2.39(0.19) 2.42(0.06) 2.38(0.04) 2.38(0.03) 2.34(0.09) 2.31(0.06) 2.29(0.05) 2.36(0.10) 2.40(0.09) 2.41(0.08) 2.42(0.04) 2.38(0.05) 2.34(0.07) 2.28(0.08) 2.36(0.10) 2.37(0.05) 2.41(0.10) 2.36(0.08) 2.26(0.13) 2.21(0.09) 2.28(0.09) 2.26(0.12) 2.37(0.18) 2.36(0.07) 2.40(0.06) 2.29(0.17) 2.22(0.08) 2.20(0.05) 2.30(0.13) 2.39(0.11) 2.41(0.08) 2.44(0.07) 2.40(0.08) 2.37(0.09) 2.35(0.07) 2.32(0.13) 2.38(0.14) 2.59(0.29) 2.53(0.11) 2.50(0.12) 2.40(0.18) 2.30(0.17) 2.29(0.03) 2.27(0.09) 2.40(0.16) 2.41(0.05) 2.44(0.07) 2.44(0.05) 2.44(0.03) 2.43(0.05) 2.36(0.10) 2.29(0.10) 2.32(0.06) 2.42(0.12) 2.44(0.08) 2.46(0.05) 2.46(0.05) 2.44(0.05) 2.36(0.12) 2.31(0.10) 2.33(0.06) 2.43(0.13) 2.46(0.09) 2.43(0.05) 2.48(0.07) 2.42(0.11) 2.37(0.09) 2.36(0.08) 2.41(0.08) 2.44(0.20) 2.46(0.05) 2.44(0.03) 2.45(0.05) 2.40(0.09) 2.35(0.07) 2.33(0.04) 2.44(0.14) 2.43(0.02) 2.52(0.13) 2.49(0.03) 2.46(0.07) 2.43(0.04) 2.38(0.09) 2.38(0.03) 2.48(0.12) 2.49(0.05) 2.50(0.04) 2.50(0.04) 2.51(0.04) 2.46(0.08) 2.39(0.10) 2.37(0.04) 2.42(0.08) 2.46(0.06) 2.47(0.05) 2.47(0.05) 2.42(0.09) 2.38(0.05) 2.40(0.05) 2.47(0.10) 2.49(0.04) 2.51(0.06) 2.52(0.05) 2.51(0.02) 2.47(0.08) 2.41(0.07) 2.41(0.03) 2.49(0.10) 2.56(0.12) 2.48(0.13) 2.48(0.05) 2.39(0.12) 2.37(0.06) 2.39(0.04) 2.45(0.09) 2.51(0.07) 2.51(0.04) 2.53(0.08) 2.53(0.02) 2.49(0.10) 2.45(0.06) 2.42(0.08) 2.49(0.08) 2.53(0.07) 2.59(0.14) 2.55(0.07) 2.53(0.07) 2.55(0.03) 2.47(0.11) 2.45(0.06) 2.40(0.10) 2.49(0.12) 2.52(0.04) 2.55(0.09) 2.56(0.05) 2.50(0.10) 2.44(0.08) 2.40(0.06) 2.49(0.12) 2.54(0.06) 2.55(0.09) 2.56(0.04) 2.55(0.03) 2.53(0.04) 2.44(0.12) 2.40(0.04) 2.45(0.07) 2.49(0.06) 2.52(0.07) 2.41(0.13) 2.74(0.46) 3.15(0.49) 3.02(0.24) 2.83(0.26) 2.73(0.14) 2.63(0.15) 2.60(0.05) 2.67(0.08) 2.75(0.12) 2.72(0.05) 2.69(0.03) 2.67(0.05) 2.66(0.03) 2.58(0.12) 2.55(0.06) 2.54(0.06) 2.64(0.13) 2.65(0.10) 2.63(0.05) 2.64(0.04) 2.55(0.16) 2.52(0.06) 2.48(0.06) 2.57(0.12) 2.62(0.07) 2.61(0.10) 2.61(0.02) 2.63(0.04) 2.55(0.11) 2.48(0.10) 2.58(0.11) 2.64(0.08) 2.64(0.07) 2.65(0.05) 2.64(0.02) 2.65(0.03) 2.56(0.13) 2.50(0.07) 2.52(0.07) 2.59(0.09) 2.64(0.08) 2.62(0.05) 2.63(0.04) 2.58(0.08) 2.51(0.11) 2.48(0.08) 2.53(0.07) 2.59(0.07) 2.60(0.05) 2.62(0.10) 2.64(0.06) 2.54(0.13) 2.49(0.09) 2.48(0.06) 2.58(0.12) 2.60(0.06) 2.60(0.10) 2.60(0.02) 2.59(0.03) 2.54(0.10) 2.50(0.08) 2.55(0.07) 2.60(0.08) 2.60(0.06) 2.63(0.06) 2.59(0.04) 2.59(0.03) 2.53(0.10) 2.46(0.09) 2.50(0.08) 2.57(0.09) 2.62(0.13) 2.59(0.03) 2.58(0.05) 2.51(0.14) 2.46(0.08) 2.53(0.10) 2.60(0.09) 2.66(0.13) 2.62(0.06) 2.62(0.02) 2.54(0.12) 2.50(0.08) 2.53(0.04) 2.59(0.06) 2.62(0.12) 2.63(0.04) 2.62(0.06) 2.59(0.06) 2.53(0.08) 2.51(0.05) 2.56(0.05) 2.63(0.10) 2.64(0.06) 2.64(0.08) 2.62(0.03) 2.59(0.05) 2.59(0.08) 2.56(0.04) 2.57(0.06) 2.60(0.04) 2.62(0.06) 2.65(0.05) 2.60(0.08) 2.53(0.10) 2.48(0.06) 2.58(0.14) 2.69(0.13) 2.72(0.08) 2.73(0.06) 2.72(0.05) 2.66(0.09) 2.63(0.06) 2.66(0.05) 2.72(0.08) 2.76(0.09) 2.59(0.21) 2.74(0.23) 3.22(0.57) 3.32(0.13) 3.08(0.31) 2.95(0.16) 2.87(0.10) 2.84(0.06) 2.87(0.05) 2.89(0.08) 2.91(0.09) 2.91(0.07) 2.87(0.05) 2.85(0.02) 2.81(0.08) 2.74(0.10) 2.70(0.07) 2.75(0.09) 2.86(0.12) 2.85(0.05) 2.90(0.08) 2.85(0.08) 2.83(0.03) 2.76(0.11) 2.68(0.09) 2.67(0.04) 2.74(0.10) 2.79(0.09) 2.79(0.18) 2.82(0.10) 2.74(0.21) 2.69(0.17) 2.64(0.07) 2.60(0.06) 2.76(0.17) 2.83(0.09) 2.85(0.10) 2.86(0.07) 2.84(0.05) 2.78(0.10) 2.71(0.09) 2.76(0.07) 2.88(0.18) 2.88(0.08) 2.88(0.06) 2.89(0.02) 2.80(0.12) 2.72(0.10) 2.69(0.06) 2.80(0.13) 2.85(0.07) 2.83(0.05) 2.84(0.07) 2.89(0.07) 2.93(0.13) 2.75(0.26) 2.62(0.21) 2.58(0.33) 2.79(0.37) 3.07(0.38) 3.06(0.10) 3.03(0.22) 2.78(0.27) 2.56(0.24) 2.64(0.09) 2.58(0.12) 2.58(0.05) 2.60(0.09) 2.69(0.10) 2.72(0.08) 2.68(0.06) 2.70(0.04) 2.67(0.07) 2.60(0.11) 2.67(0.13) 2.65(0.09) 2.53(0.13) 2.44(0.13) 2.54(0.20) 2.73(0.23) 2.71(0.05) 2.69(0.06) 2.68(0.07) 2.67(0.04) 2.68(0.04) 2.67(0.06) 2.60(0.08) 2.65(0.05) 2.67(0.05) 2.68(0.09) 2.65(0.04) 2.64(0.06) 2.65(0.02) 2.67(0.05) 2.62(0.07) 2.55(0.09) 2.54(0.04) 2.59(0.06) 2.64(0.10) 2.67(0.06) 2.67(0.03) 2.65(0.06) 2.61(0.06) 2.58(0.05) 2.55(0.06) 2.60(0.09) 2.65(0.08) 2.65(0.04) 2.65(0.02) 2.62(0.05) 2.61(0.04) 2.54(0.09) 2.54(0.04) 2.59(0.05) 2.61(0.09) 2.64(0.05) 2.64(0.02) 2.60(0.08) 2.53(0.11) 2.53(0.04) 2.62(0.11) 2.64(0.07) 2.65(0.04) 2.64(0.02) 2.64(0.03) 2.60(0.05) 2.60(0.18) 2.95(0.51) 3.09(0.23) 2.96(0.29) 2.99(0.20) 2.94(0.08) 2.82(0.18) 2.72(0.10) 2.73(0.05) 2.93(0.21) 2.75(0.20) 2.84(0.23) 2.89(0.09) 2.84(0.17) 2.78(0.19) 2.70(0.09) 2.73(0.06) 2.87(0.16) 2.87(0.04) 2.88(0.05) 2.87(0.05) 2.81(0.10) 2.71(0.11) 2.67(0.08) 2.78(0.13) 2.84(0.07) 2.80(0.06) 2.79(0.03) 2.81(0.03) 2.77(0.08) 2.70(0.08) 2.64(0.06) 2.63(0.03) 2.74(0.11) 2.73(0.06) 2.74(0.03) 2.66(0.09) 2.63(0.04) 2.55(0.09) 2.55(0.05) 2.68(0.14) 2.73(0.05) 2.80(0.11) 2.87(0.08) 3.07(0.24) 2.77(0.31) 2.81(0.15) 3.04(0.27) 2.55(0.54) 2.52(0.20) 2.50(0.15) 2.48(0.06) 2.37(0.12) 2.34(0.06) 2.40(0.08) 2.51(0.12) 2.53(0.02) 2.52(0.06) 2.55(0.06) 2.49(0.06) 2.47(0.04) 2.51(0.06) 2.57(0.07) 2.57(0.06) 2.59(0.06) 2.59(0.06) 2.50(0.11) 2.42(0.10) 2.43(0.06) 2.50(0.10) 2.52(0.07) 2.54(0.06) 2.55(0.03) 2.50(0.07) 2.51(0.03) 2.40(0.12) 2.37(0.04) 2.46(0.11) 2.50(0.07) 2.54(0.08) 2.55(0.02) 2.58(0.05) 2.47(0.12) 2.42(0.07) 2.43(0.03) 2.49(0.07) 2.61(0.18) 2.55(0.08) 2.54(0.04) 2.60(0.10) 2.50(0.12) 2.47(0.06) 2.56(0.11) 2.65(0.10) 2.66(0.07) 2.65(0.05) 2.65(0.02) 2.60(0.08) 2.55(0.08) 2.50(0.07) 2.59(0.11) 2.66(0.08) 2.64(0.05) 2.67(0.06) 2.68(0.03) 2.63(0.09) 2.56(0.09) 2.54(0.05) 2.52(0.04) 2.58(0.07) 2.60(0.08) 2.60(0.05) 2.61(0.05) 2.61(0.03) 2.57(0.05) 2.52(0.07) 2.48(0.06) 2.53(0.08) 2.64(0.11) 2.68(0.09) 2.69(0.06) 2.70(0.05) 2.71(0.04) 2.58(0.16) 2.53(0.06) 2.51(0.05) 2.60(0.10) 2.64(0.09) 2.66(0.07) 2.64(0.04) 2.56(0.11) 2.51(0.06) 2.51(0.04) 2.59(0.11) 2.62(0.06) 2.67(0.08) 2.66(0.07) 2.62(0.05) 2.55(0.10) 2.51(0.05) 2.53(0.05) 2.63(0.12) 2.65(0.05) 2.66(0.06) 2.69(0.04) 2.61(0.09) 2.53(0.09) 2.42(0.13) 2.50(0.09) 2.57(0.08) 2.59(0.07) 2.64(0.07) 2.64(0.08) 2.52(0.15) 2.45(0.09) 2.60(0.17) 2.93(0.49) 3.24(0.42) 2.95(0.33) 2.87(0.19) 2.81(0.11) 2.68(0.18) 2.61(0.09) 2.70(0.10) 2.82(0.13) 2.82(0.06) 2.78(0.05) 2.79(0.03) 2.78(0.03) 2.63(0.18) 2.56(0.17) 2.64(0.11) 2.76(0.20) 2.84(0.13) 2.85(0.03) 2.85(0.05) 2.77(0.10) 2.72(0.09) 2.66(0.11) 2.76(0.11) 2.79(0.07) 2.81(0.06) 2.79(0.04) 2.75(0.06) 2.67(0.09) 2.59(0.10) 2.56(0.04) 2.57(0.02) 2.72(0.16) 2.83(0.13) 2.80(0.03) 2.80(0.04) 2.74(0.10) 2.63(0.14) 2.58(0.07) 2.69(0.15) 2.72(0.10) 2.69(0.07) 2.69(0.04) 2.58(0.14) 2.55(0.03) 2.50(0.07) 2.60(0.11) 2.66(0.07) 2.64(0.09) 2.61(0.07) 2.60(0.04) 2.60(0.04) 2.54(0.08) 2.49(0.06) 2.52(0.04) 2.63(0.14) 2.63(0.04) 2.67(0.10) 2.67(0.01) 2.65(0.03) 2.57(0.12) 2.48(0.12) 2.48(0.06) 2.58(0.11) 2.65(0.11) 2.69(0.06) 2.67(0.05) 2.65(0.03) 2.66(0.05) 2.58(0.09)
++ Max displacement in automask = 3.32 (mm) at sub-brick 747
++ Max delta displ  in automask = 0.57 (mm) at sub-brick 746
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb03.GB13.r02.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB13_unif_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB13_unif_ns+tlrc -dxyz 2.5 -source pb02.GB13.r02.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB13_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB13.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 1144.0 sec
3dNwarpApply -master MPRAGE.GB13_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB13_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb03.GB13.r03.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB13.r03.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 91733 voxels
 + 10060 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.004  pitch=+0.512  yaw=+0.748  dS=-1.248  dL=+0.177  dP=-0.362
++ Mean: roll=+0.171  pitch=+0.667  yaw=+0.882  dS=-0.850  dL=+0.366  dP=-0.203
++ Max : roll=+0.312  pitch=+1.140  yaw=+1.025  dS=-0.514  dL=+0.469  dP=-0.055
++ Max displacements (mm) for each sub-brick:
 2.53(0.00) 2.45(0.13) 2.34(0.18) 2.31(0.05) 2.30(0.13) 2.19(0.15) 2.23(0.06) 2.25(0.04) 2.25(0.06) 2.28(0.05) 2.24(0.07) 2.13(0.13) 2.11(0.05) 2.16(0.08) 2.24(0.09) 2.27(0.06) 2.29(0.04) 2.26(0.05) 2.17(0.12) 2.10(0.10) 2.12(0.02) 2.20(0.10) 2.24(0.06) 2.25(0.06) 2.28(0.06) 2.23(0.07) 2.11(0.13) 2.05(0.08) 2.16(0.13) 2.23(0.08) 2.26(0.05) 2.26(0.04) 2.24(0.05) 2.15(0.11) 2.09(0.10) 2.12(0.06) 2.21(0.11) 2.23(0.04) 2.23(0.08) 2.25(0.04) 2.20(0.07) 2.14(0.08) 2.13(0.06) 2.20(0.12) 2.26(0.08) 2.27(0.03) 2.34(0.09) 2.23(0.13) 2.13(0.12) 2.13(0.06) 2.21(0.08) 2.26(0.08) 2.27(0.03) 2.29(0.08) 2.27(0.03) 2.18(0.13) 2.14(0.06) 2.21(0.09) 2.27(0.08) 2.30(0.07) 2.35(0.05) 2.31(0.06) 2.29(0.04) 2.22(0.09) 2.19(0.05) 2.22(0.04) 2.27(0.12) 2.29(0.07) 2.31(0.06) 2.25(0.09) 2.18(0.08) 2.11(0.08) 2.21(0.11) 2.24(0.04) 2.27(0.08) 2.31(0.07) 2.27(0.07) 2.18(0.13) 2.10(0.09) 2.17(0.10) 2.25(0.09) 2.29(0.09) 2.31(0.02) 2.30(0.03) 2.32(0.04) 2.24(0.11) 2.17(0.11) 2.19(0.08) 2.30(0.12) 2.34(0.08) 2.29(0.06) 2.30(0.02) 2.22(0.10) 2.17(0.07) 2.24(0.07) 2.30(0.07) 2.33(0.08) 2.40(0.09) 2.36(0.05) 2.31(0.10) 2.23(0.11) 2.22(0.06) 2.31(0.10) 2.34(0.09) 2.36(0.06) 2.36(0.03) 2.38(0.04) 2.33(0.07) 2.26(0.11) 2.25(0.07) 2.33(0.09) 2.39(0.07) 2.40(0.05) 2.42(0.08) 2.46(0.04) 2.39(0.07) 2.30(0.10) 2.24(0.08) 2.22(0.03) 2.27(0.05) 2.25(0.11) 2.37(0.16) 2.81(0.50) 3.04(0.29) 2.88(0.24) 2.76(0.14) 2.63(0.18) 2.55(0.13) 2.48(0.08) 2.54(0.07) 2.50(0.05) 2.50(0.07) 2.50(0.06) 2.50(0.03) 2.36(0.18) 2.33(0.06) 2.30(0.04) 2.41(0.14) 2.41(0.04) 2.40(0.07) 2.38(0.04) 2.33(0.09) 2.23(0.13) 2.18(0.09) 2.28(0.14) 2.32(0.06) 2.35(0.08) 2.36(0.05) 2.37(0.03) 2.29(0.13) 2.24(0.07) 2.20(0.07) 2.30(0.15) 2.36(0.09) 2.37(0.07) 2.39(0.05) 2.33(0.10) 2.28(0.07) 2.26(0.06) 2.31(0.09) 2.35(0.06) 2.37(0.09) 2.41(0.05) 2.36(0.06) 2.35(0.07) 2.33(0.09) 2.44(0.13) 2.62(0.25) 2.54(0.22) 2.48(0.22) 2.42(0.11) 2.32(0.13) 2.29(0.06) 2.29(0.05) 2.37(0.14) 2.42(0.07) 2.45(0.06) 2.47(0.04) 2.37(0.13) 2.30(0.08) 2.31(0.06) 2.39(0.11) 2.43(0.09) 2.45(0.07) 2.44(0.04) 2.38(0.08) 2.31(0.11) 2.30(0.03) 2.39(0.12) 2.43(0.07) 2.47(0.07) 2.47(0.04) 2.45(0.05) 2.42(0.06) 2.37(0.08) 2.34(0.07) 2.46(0.13) 2.48(0.05) 2.46(0.08) 2.47(0.05) 2.46(0.02) 2.39(0.08) 2.34(0.08) 2.33(0.08) 2.41(0.09) 2.45(0.08) 2.53(0.09) 2.54(0.03) 2.49(0.07) 2.39(0.13) 2.36(0.05) 2.36(0.03) 2.42(0.11) 2.48(0.12) 2.50(0.07) 2.47(0.07) 2.38(0.12) 2.37(0.07) 2.45(0.08) 2.49(0.10) 2.51(0.04) 2.53(0.04) 2.56(0.04) 2.49(0.11) 2.47(0.05) 2.45(0.05) 2.42(0.07) 2.46(0.09) 2.51(0.07) 2.46(0.06) 2.38(0.11) 2.30(0.11) 2.28(0.05) 2.36(0.12) 2.45(0.11) 2.47(0.08) 2.50(0.05) 2.52(0.03) 2.42(0.13) 2.41(0.05) 2.39(0.04) 2.49(0.13) 2.51(0.09) 2.50(0.07) 2.49(0.05) 2.45(0.05) 2.35(0.13) 2.31(0.07) 2.34(0.06) 2.47(0.17) 2.51(0.10) 2.47(0.04) 2.45(0.05) 2.46(0.02) 2.38(0.10) 2.35(0.06) 2.29(0.09) 2.40(0.14) 2.47(0.09) 2.47(0.09) 2.46(0.02) 2.44(0.05) 2.44(0.02) 2.35(0.13) 2.30(0.08) 2.28(0.06) 2.37(0.14) 2.42(0.08) 2.42(0.06) 2.45(0.05) 2.38(0.09) 2.35(0.10) 2.35(0.06) 2.49(0.17) 2.44(0.08) 2.41(0.04) 2.45(0.11) 2.67(0.30) 3.23(0.64) 3.04(0.27) 2.84(0.23) 2.73(0.16) 2.62(0.14) 2.47(0.15) 2.46(0.11) 2.54(0.12) 2.49(0.06) 2.48(0.03) 2.47(0.05) 2.42(0.08) 2.35(0.12) 2.29(0.09) 2.37(0.10) 2.46(0.12) 2.49(0.08) 2.51(0.06) 2.42(0.12) 2.43(0.02) 2.38(0.08) 2.36(0.03) 2.26(0.12) 2.22(0.06) 2.33(0.14) 2.37(0.05) 2.41(0.09) 2.41(0.01) 2.42(0.06) 2.38(0.06) 2.36(0.06) 2.39(0.06) 2.46(0.10) 2.46(0.09) 2.43(0.03) 2.43(0.05) 2.39(0.06) 2.32(0.09) 2.29(0.05) 2.39(0.11) 2.43(0.06) 2.43(0.06) 2.45(0.03) 2.45(0.03) 2.41(0.06) 2.34(0.09) 2.29(0.07) 2.34(0.06) 2.41(0.08) 2.48(0.14) 2.48(0.02) 2.49(0.07) 2.50(0.04) 2.50(0.02) 2.46(0.05) 2.40(0.08) 2.43(0.03) 2.55(0.14) 2.58(0.09) 2.59(0.04) 2.56(0.04) 2.48(0.08) 2.47(0.04) 2.46(0.03) 2.39(0.08) 2.32(0.12) 2.24(0.09) 2.32(0.10) 2.38(0.10) 2.39(0.10) 2.36(0.05) 2.39(0.08) 2.27(0.16) 2.26(0.07) 2.42(0.21) 2.55(0.19) 2.54(0.07) 2.53(0.04) 2.52(0.04) 2.39(0.16) 2.34(0.11) 2.34(0.03) 2.48(0.16) 2.51(0.07) 2.49(0.06) 2.48(0.01) 2.42(0.08) 2.31(0.15) 2.28(0.03) 2.38(0.11) 2.41(0.08) 2.47(0.10) 2.45(0.07) 2.52(0.09) 2.34(0.22) 2.27(0.08) 2.29(0.05) 2.38(0.12) 2.43(0.08) 2.42(0.07) 2.48(0.08) 2.39(0.11) 2.29(0.12) 2.28(0.06) 2.39(0.12) 2.46(0.09) 2.45(0.06) 2.44(0.07) 2.46(0.03) 2.33(0.16) 2.28(0.08) 2.32(0.04) 2.42(0.12) 2.48(0.07) 2.49(0.05) 2.53(0.07) 2.53(0.02) 2.42(0.13) 2.35(0.08) 2.31(0.06) 2.29(0.15) 2.73(0.54) 3.10(0.42) 2.87(0.29) 2.58(0.36) 2.60(0.09) 2.52(0.15) 2.43(0.13) 2.38(0.08) 2.44(0.08) 2.46(0.05) 2.47(0.07) 2.47(0.03) 2.46(0.03) 2.39(0.07) 2.32(0.10) 2.30(0.05) 2.36(0.06) 2.41(0.08) 2.41(0.06) 2.39(0.06) 2.43(0.09) 2.71(0.31) 2.49(0.40) 2.44(0.09) 2.42(0.05) 2.40(0.05) 2.43(0.05) 2.33(0.12) 2.29(0.05) 2.30(0.11) 2.34(0.05) 2.49(0.16) 2.47(0.07) 2.47(0.05) 2.47(0.08) 2.50(0.06) 2.50(0.03) 2.53(0.07) 2.43(0.16) 2.36(0.18) 2.40(0.11) 2.44(0.05) 2.39(0.06) 2.31(0.13) 2.23(0.10) 2.27(0.06) 2.35(0.10) 2.39(0.13) 2.46(0.08) 2.42(0.06) 2.40(0.03) 2.35(0.07) 2.26(0.13) 2.22(0.06) 2.25(0.05) 2.33(0.10) 2.36(0.09) 2.38(0.06) 2.37(0.02) 2.29(0.10) 2.26(0.06) 2.29(0.05) 2.39(0.12) 2.42(0.09) 2.41(0.06) 2.42(0.03) 2.39(0.05) 2.43(0.06) 2.30(0.16) 2.18(0.12) 2.24(0.09) 2.34(0.10) 2.40(0.08) 2.39(0.04) 2.39(0.04) 2.34(0.07) 2.24(0.13) 2.25(0.02) 2.32(0.09) 2.36(0.07) 2.41(0.06) 2.39(0.03) 2.44(0.06) 2.35(0.12) 2.26(0.12) 2.25(0.09) 2.34(0.11) 2.40(0.07) 2.39(0.07) 2.44(0.06) 2.44(0.03) 2.32(0.13) 2.27(0.06) 2.27(0.06) 2.38(0.14) 2.40(0.04) 2.41(0.07) 2.41(0.02) 2.38(0.04) 2.35(0.06) 2.31(0.06) 2.32(0.05) 2.40(0.09) 2.43(0.05) 2.41(0.06) 2.38(0.04) 2.35(0.08) 2.31(0.08) 2.28(0.06) 2.34(0.06) 2.41(0.09) 2.43(0.09) 2.47(0.06) 2.51(0.05) 2.52(0.03) 2.47(0.08) 2.42(0.09) 2.37(0.07) 2.34(0.05) 2.40(0.12) 2.45(0.06) 2.47(0.05) 2.36(0.12) 2.26(0.14) 2.21(0.07) 2.32(0.15) 2.42(0.15) 2.49(0.11) 2.52(0.05) 2.50(0.04) 2.37(0.25) 2.28(0.12) 2.26(0.15) 2.37(0.13) 2.47(0.12) 2.45(0.05) 2.41(0.06) 2.35(0.08) 2.24(0.14) 2.28(0.07) 2.38(0.12) 2.40(0.12) 2.41(0.04) 2.42(0.02) 2.34(0.12) 2.28(0.08) 2.27(0.04) 2.32(0.06) 2.39(0.11) 2.41(0.06) 2.42(0.09) 2.39(0.05) 2.29(0.13) 2.25(0.09) 2.29(0.06) 2.40(0.15) 2.45(0.07) 2.38(0.07) 2.41(0.04) 2.35(0.08) 2.20(0.20) 2.15(0.08) 2.13(0.06) 2.24(0.14) 2.39(0.17) 2.39(0.08) 2.43(0.06) 2.33(0.13) 2.27(0.09) 2.27(0.08) 2.38(0.13) 2.42(0.07) 2.47(0.11) 2.42(0.06) 2.42(0.03) 2.41(0.04) 2.29(0.14) 2.20(0.14) 2.15(0.19) 2.14(0.15) 2.51(0.39) 3.02(0.63) 2.81(0.25) 2.63(0.26) 2.58(0.07) 2.49(0.11) 2.41(0.10) 2.41(0.03) 2.55(0.15) 2.63(0.08) 2.62(0.02) 2.58(0.07) 2.62(0.05) 2.50(0.15) 2.43(0.07) 2.41(0.09) 2.47(0.08) 2.54(0.11) 2.54(0.07) 2.52(0.04) 2.46(0.08) 2.42(0.05) 2.40(0.05) 2.32(0.10) 2.22(0.12) 2.25(0.03) 2.37(0.14) 2.40(0.09) 2.44(0.05) 2.46(0.02) 2.43(0.04) 2.37(0.11) 2.29(0.10) 2.43(0.16) 2.50(0.10) 2.48(0.05) 2.45(0.06) 2.46(0.08) 2.41(0.07) 2.35(0.08) 2.23(0.15) 2.27(0.07) 2.42(0.18) 2.41(0.07) 2.42(0.06) 2.41(0.03) 2.29(0.14) 2.23(0.09) 2.22(0.03) 2.40(0.20) 2.44(0.07) 2.48(0.13) 2.50(0.02) 2.44(0.08) 2.25(0.21) 2.21(0.06) 2.40(0.28) 2.51(0.17) 2.48(0.08) 2.48(0.02) 2.42(0.10) 2.32(0.13) 2.35(0.03) 2.46(0.13) 2.49(0.04) 2.50(0.04) 2.53(0.07) 2.56(0.02) 2.44(0.13) 2.39(0.08) 2.38(0.05) 2.41(0.07) 2.42(0.02) 2.48(0.11) 2.51(0.04) 2.46(0.07) 2.34(0.14) 2.29(0.10) 2.32(0.05) 2.41(0.11) 2.46(0.12) 2.50(0.06) 2.53(0.03) 2.56(0.05) 2.49(0.11) 2.43(0.07) 2.41(0.06) 2.45(0.07) 2.52(0.10) 2.50(0.05) 2.55(0.08) 2.50(0.08) 2.36(0.19) 2.22(0.19) 2.15(0.14) 2.11(0.14) 2.42(0.37) 3.12(0.78) 3.18(0.20) 3.08(0.14) 2.98(0.13) 2.87(0.12) 2.73(0.16) 2.66(0.08) 2.71(0.08) 2.75(0.04) 2.74(0.05) 2.68(0.08) 2.64(0.05) 2.59(0.07) 2.48(0.13) 2.38(0.12) 2.36(0.06) 2.51(0.16) 2.46(0.07) 2.50(0.08) 2.52(0.03) 2.48(0.10) 2.34(0.15) 2.28(0.09) 2.32(0.07) 2.37(0.07) 2.43(0.13) 2.43(0.03) 2.43(0.04) 2.38(0.06) 2.33(0.09) 2.31(0.04) 2.43(0.14) 2.53(0.11) 2.45(0.08) 2.41(0.06) 2.46(0.06) 2.38(0.09) 2.26(0.15) 2.27(0.05) 2.47(0.28) 2.64(0.23) 2.72(0.20) 2.70(0.08) 2.68(0.06) 2.56(0.15) 2.53(0.04) 2.58(0.07) 2.64(0.10) 2.65(0.06) 2.64(0.05) 2.64(0.02) 2.55(0.11) 2.49(0.09) 2.59(0.10) 2.64(0.06) 2.65(0.09) 2.61(0.05) 2.60(0.03) 2.58(0.05) 2.46(0.14) 2.31(0.23) 2.40(0.21) 2.57(0.29) 2.59(0.08) 2.68(0.11) 2.67(0.07) 2.59(0.13) 2.47(0.14) 2.46(0.05) 2.55(0.12) 2.66(0.12) 2.69(0.06) 2.68(0.08) 2.69(0.03) 2.67(0.06) 2.60(0.08) 2.54(0.08) 2.47(0.08) 2.54(0.09) 2.60(0.13) 2.59(0.04) 2.58(0.05) 2.52(0.08) 2.45(0.09) 2.44(0.04) 2.50(0.07) 2.54(0.09) 2.61(0.07) 2.64(0.04) 2.69(0.09) 2.70(0.04) 2.64(0.06) 2.53(0.13) 2.40(0.15) 2.31(0.11) 2.31(0.06) 2.30(0.08) 2.34(0.09) 2.59(0.35) 3.10(0.57) 2.95(0.25) 2.83(0.15) 2.76(0.08) 2.68(0.10) 2.61(0.10) 2.55(0.07) 2.71(0.17) 2.76(0.11) 2.75(0.03) 2.73(0.04) 2.72(0.06) 2.66(0.08) 2.57(0.11) 2.43(0.15) 2.41(0.06) 2.47(0.08) 2.49(0.10) 2.47(0.06) 2.53(0.06) 2.43(0.12) 2.33(0.12) 2.31(0.05) 2.41(0.12) 2.50(0.12) 2.51(0.07) 2.58(0.07) 2.61(0.04) 2.57(0.05) 2.48(0.10) 2.39(0.11) 2.43(0.09) 2.49(0.08) 2.51(0.09) 2.51(0.04) 2.39(0.14) 2.24(0.15) 2.15(0.19) 2.13(0.08) 2.27(0.20) 2.58(0.35) 2.95(0.40) 3.13(0.29) 2.94(0.29) 2.75(0.24) 2.69(0.09) 2.66(0.06) 2.52(0.19) 2.55(0.09) 2.64(0.12) 2.69(0.08) 2.71(0.08) 2.70(0.05) 2.69(0.09) 2.67(0.03) 2.54(0.14) 2.48(0.07) 2.49(0.07) 2.66(0.20) 2.61(0.07) 2.66(0.10) 2.60(0.07) 2.57(0.06) 2.48(0.12) 2.38(0.11) 2.37(0.05) 2.45(0.09) 2.48(0.10) 2.51(0.07) 2.53(0.03) 2.54(0.03) 2.48(0.07) 2.40(0.12) 2.42(0.05) 2.53(0.13) 2.59(0.10) 2.55(0.05) 2.53(0.04) 2.57(0.09) 2.50(0.08) 2.39(0.14) 2.34(0.08) 2.39(0.07) 2.49(0.13) 2.52(0.05) 2.55(0.05) 2.55(0.02) 2.57(0.03) 2.58(0.03) 2.40(0.20) 2.35(0.07) 2.40(0.10) 2.47(0.10) 2.50(0.04) 2.48(0.05) 2.54(0.06) 2.48(0.07) 2.39(0.13) 2.39(0.05) 2.46(0.08) 2.52(0.12) 2.58(0.07) 2.57(0.05) 2.60(0.03) 2.57(0.03) 2.49(0.09) 2.39(0.12) 2.37(0.04) 2.46(0.13) 2.51(0.06) 2.54(0.05) 2.50(0.06) 2.34(0.18) 2.27(0.11) 2.30(0.03) 2.54(0.29) 2.69(0.23) 2.84(0.21) 2.80(0.09) 2.76(0.06) 2.60(0.17) 2.52(0.10) 2.56(0.05) 2.69(0.14) 2.75(0.09) 2.79(0.07) 2.77(0.05) 2.62(0.24) 2.47(0.18) 2.42(0.15) 2.53(0.11) 2.66(0.14) 2.71(0.06) 2.85(0.15) 2.78(0.08) 2.76(0.05) 2.64(0.15) 2.52(0.14) 2.68(0.19) 2.75(0.08) 2.74(0.05) 2.78(0.05) 2.77(0.06) 2.70(0.10) 2.64(0.06) 2.59(0.06) 2.67(0.10) 2.71(0.05) 2.77(0.10) 2.71(0.17) 2.99(0.40) 3.42(0.51) 3.31(0.27) 3.16(0.17) 3.07(0.10) 2.92(0.21) 2.80(0.13) 2.85(0.08) 2.81(0.07) 2.66(0.16) 2.78(0.15) 2.89(0.12) 2.88(0.17) 2.95(0.12) 2.85(0.12) 2.87(0.13) 2.71(0.20) 2.69(0.16) 2.77(0.12) 2.84(0.27) 2.76(0.15) 2.82(0.07) 2.83(0.05) 2.79(0.08) 2.70(0.12) 2.66(0.05) 2.73(0.11) 2.81(0.10) 2.87(0.08) 2.84(0.04) 2.92(0.17) 2.79(0.40) 2.66(0.21) 2.65(0.09) 2.72(0.08) 2.80(0.08) 2.82(0.06) 2.83(0.02) 2.83(0.05) 2.81(0.04) 2.71(0.12) 2.63(0.08) 2.64(0.04) 2.77(0.15) 2.83(0.09) 2.86(0.05) 2.88(0.03) 2.83(0.10) 2.73(0.14) 2.70(0.05) 2.78(0.08) 2.87(0.12) 2.91(0.05) 2.88(0.05) 2.93(0.06) 2.85(0.10) 2.78(0.08) 2.74(0.07) 2.76(0.06) 2.85(0.12) 3.06(0.27) 3.31(0.31) 3.01(0.34) 2.76(0.29) 2.79(0.09) 2.76(0.08) 2.65(0.13) 2.65(0.04) 2.77(0.15) 2.78(0.08) 2.80(0.08) 2.80(0.04) 2.78(0.04) 2.77(0.05) 2.66(0.12) 2.63(0.05) 2.70(0.11) 2.80(0.10) 2.78(0.04) 2.76(0.06) 2.77(0.03) 2.74(0.05) 2.63(0.15) 2.61(0.05) 2.61(0.09) 2.72(0.13) 2.77(0.07) 2.80(0.05) 2.80(0.02) 2.80(0.04) 2.72(0.10) 2.61(0.13) 2.54(0.07) 2.64(0.13) 2.70(0.05) 2.70(0.06) 2.68(0.05) 2.66(0.04) 2.60(0.09) 2.57(0.05) 2.60(0.05) 2.69(0.10) 2.65(0.06) 2.67(0.03) 2.66(0.02) 2.68(0.06) 2.61(0.09) 2.53(0.11) 2.51(0.06) 2.58(0.08) 2.64(0.11) 2.69(0.05) 2.69(0.05) 2.69(0.03) 2.66(0.04) 2.60(0.08) 2.52(0.08) 2.68(0.17) 2.73(0.05) 2.75(0.09) 2.77(0.03) 2.76(0.01) 2.75(0.05) 2.68(0.09) 2.63(0.09) 2.57(0.09) 2.60(0.06) 2.61(0.02) 2.64(0.05) 2.51(0.14) 2.44(0.09) 2.47(0.05) 2.62(0.18) 2.66(0.22) 2.77(0.14) 2.81(0.17) 2.87(0.08) 2.73(0.18) 2.65(0.09) 2.66(0.07) 2.80(0.16) 2.85(0.12) 2.91(0.19) 3.19(0.30) 2.94(0.32) 2.82(0.16) 2.80(0.05) 2.73(0.10) 2.64(0.12) 2.66(0.03) 2.75(0.11) 2.82(0.09) 2.77(0.06) 2.74(0.05) 2.69(0.05) 2.64(0.06) 2.58(0.08) 2.59(0.05) 2.68(0.11) 2.75(0.09) 2.73(0.05) 2.76(0.04) 2.72(0.05) 2.69(0.04) 2.62(0.10) 2.54(0.09) 2.56(0.09) 2.63(0.09) 2.68(0.11) 2.67(0.05) 2.68(0.04)
++ Max displacement in automask = 3.42 (mm) at sub-brick 926
++ Max delta displ  in automask = 0.78 (mm) at sub-brick 676
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb03.GB13.r03.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB13_unif_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB13_unif_ns+tlrc -dxyz 2.5 -source pb02.GB13.r03.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB13_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB13.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 945.5 sec
3dNwarpApply -master MPRAGE.GB13_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB13_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB13.r01.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB13.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB13.r02.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB13.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB13.r03.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
