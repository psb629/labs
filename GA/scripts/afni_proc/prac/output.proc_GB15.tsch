echo auto-generated by afni_proc.py, Fri Jan 20 10:12:48 2023
auto-generated by afni_proc.py, Fri Jan 20 10:12:48 2023
echo (version 7.17, July 16, 2021)
(version 7.17, July 16, 2021)
echo execution started: `date`
date
execution started: Fri Jan 20 10:12:50 AM KST 2023
afni -ver
Precompiled binary linux_ubuntu_16_64: Jul 28 2021 (Version AFNI_21.2.04 'Nerva')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   27 Jul 2021
if ( 0 ) then
if ( 0 > 0 ) then
set subj = GB15
endif
set output_dir = /mnt/ext5/GA/fmri_data/preproc_data/GB15
if ( -d /mnt/ext5/GA/fmri_data/preproc_data/GB15 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir -p /mnt/ext5/GA/fmri_data/preproc_data/GB15
mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB15/stimuli
3dcopy /mnt/ext5/GA/fmri_data/raw_data/GB15/MPRAGE.GB15.nii /mnt/ext5/GA/fmri_data/preproc_data/GB15/MPRAGE.GB15
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB15/blip_forward /mnt/ext5/GA/fmri_data/raw_data/GB15/dist_AP.GB15.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.7 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB15/blip_reverse /mnt/ext5/GA/fmri_data/raw_data/GB15/dist_PA.GB15.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.4 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB15/pb00.GB15.r01.tcat /mnt/ext5/GA/fmri_data/raw_data/GB15/func.GB15.r01.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 76.0 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB15/pb00.GB15.r02.tcat /mnt/ext5/GA/fmri_data/raw_data/GB15/func.GB15.r02.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 34.3 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB15/pb00.GB15.r03.tcat /mnt/ext5/GA/fmri_data/raw_data/GB15/func.GB15.r03.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 30.3 s
set tr_counts = ( 1096 1096 1096 )
cd /mnt/ext5/GA/fmri_data/preproc_data/GB15
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.GB15.r01.tcat+orig.HEAD pb00.GB15.r02.tcat+orig.HEAD pb00.GB15.r03.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 3.1 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 3.0 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 3.1 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB15.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1194.1 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB15.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1194.1 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB15.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1194.1 MB)

-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

3dUnifize -prefix MPRAGE.GB15_unif -GM MPRAGE.GB15+orig
++ 3dUnifize: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + Pre-processing: ADV............................UW[s178077]Gm
++ Output dataset ./MPRAGE.GB15_unif+orig.BRIK
++ ===== Elapsed = 39.4 sec
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB15.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 65729 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB15.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 65685 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB15.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 65661 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 1096 1096 1096 -index_to_run_tr 15
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
set minoutrun = 01
set minouttr = 15
echo min outlier: run 01, TR 15
tee out.min_outlier.txt
min outlier: run 01, TR 15
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.GB15.r01.despike pb00.GB15.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB15.r01.tcat+orig
++ processing all 571206 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #11
++ start OpenMP thread #5
++ start OpenMP thread #14
++ start OpenMP thread #10
++ start OpenMP thread #7
++ start OpenMP thread #6
++ start OpenMP thread #8
++ start OpenMP thread #12
++ start OpenMP thread #3
++ start OpenMP thread #2
++ start OpenMP thread #9
++ start OpenMP thread #4
++ start OpenMP thread #13
++ start OpenMP thread #1
....................................................................................................................................................................................................................................................
++ Elapsed despike time =  9s 200ms

++ FINAL: 412753600 data points, 15625007 edits [3.786%], 1008554 big edits [0.244%]
++ Output dataset ./pb01.GB15.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB15.r02.despike pb00.GB15.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB15.r02.tcat+orig
++ processing all 571206 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #12
++ start OpenMP thread #6
++ start OpenMP thread #3
++ start OpenMP thread #13
++ start OpenMP thread #1
++ start OpenMP thread #5
++ start OpenMP thread #9
++ start OpenMP thread #7
++ start OpenMP thread #4
++ start OpenMP thread #11
++ start OpenMP thread #2
++ start OpenMP thread #14
++ start OpenMP thread #8
++ start OpenMP thread #10
....................................................................................................................................................................................................................................................
++ Elapsed despike time =  9s 458ms

++ FINAL: 412753600 data points, 15611960 edits [3.782%], 836310 big edits [0.203%]
++ Output dataset ./pb01.GB15.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB15.r03.despike pb00.GB15.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB15.r03.tcat+orig
++ processing all 571206 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #12
++ start OpenMP thread #8
++ start OpenMP thread #10
++ start OpenMP thread #9
++ start OpenMP thread #11
++ start OpenMP thread #6
++ start OpenMP thread #7
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #14
++ start OpenMP thread #4
++ start OpenMP thread #3
++ start OpenMP thread #13
++ start OpenMP thread #1
....................................................................................................................................................................................................................................................
++ Elapsed despike time =  9s 461ms

++ FINAL: 412753600 data points, 15662431 edits [3.795%], 881571 big edits [0.214%]
++ Output dataset ./pb01.GB15.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.GB15.r01.tshift pb01.GB15.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB15.r02.tshift pb01.GB15.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB15.r03.tshift pb01.GB15.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTstat -median -prefix rm.blip.med.fwd blip_forward+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.fwd+orig.BRIK
3dTstat -median -prefix rm.blip.med.rev blip_reverse+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.rev+orig.BRIK
3dAutomask -apply_prefix rm.blip.med.masked.fwd rm.blip.med.fwd+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.fwd+orig
++ Forming automask
 + Fixed clip level = 5990.580566
 + Used gradual clip level = 5770.293457 .. 6245.162109
 + Number voxels above clip level = 74462
 + Clustering voxels ...
 + Largest cluster has 73132 voxels
 + Clustering voxels ...
 + Largest cluster has 71636 voxels
 + Filled   371 voxels in small holes; now have 72007 voxels
 + Filled    17 voxels in large holes; now have 72024 voxels
 + Clustering voxels ...
 + Largest cluster has 72022 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 499184 voxels
 + Mask now has 72022 voxels
++ 72022 voxels in the mask [out of 571206: 12.61%]
++ first  16 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first  17 y-planes are zero [from A]
++ last   17 y-planes are zero [from P]
++ first   6 z-planes are zero [from I]
++ last   13 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dAutomask -apply_prefix rm.blip.med.masked.rev rm.blip.med.rev+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.rev+orig
++ Forming automask
 + Fixed clip level = 5670.253906
 + Used gradual clip level = 5254.145508 .. 6295.036133
 + Number voxels above clip level = 76523
 + Clustering voxels ...
 + Largest cluster has 76347 voxels
 + Clustering voxels ...
 + Largest cluster has 73565 voxels
 + Filled   326 voxels in small holes; now have 73891 voxels
 + Filled     1 voxels in large holes; now have 73892 voxels
 + Clustering voxels ...
 + Largest cluster has 73891 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 497307 voxels
 + Mask now has 73899 voxels
++ 73899 voxels in the mask [out of 571206: 12.94%]
++ first  15 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first  12 y-planes are zero [from A]
++ last   17 y-planes are zero [from P]
++ first   6 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dQwarp -plusminus -pmNAMES Rev For -pblur 0.05 0.05 -blur -1 -1 -noweight -minpatch 9 -source rm.blip.med.masked.rev+orig -base rm.blip.med.masked.fwd+orig -prefix blip_warp
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=3 ytop=3  zbot=4 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=./rm.blip.med.masked.fwd+orig.HEAD  source=./rm.blip.med.masked.rev+orig.HEAD
++ AFNI warpomatic start: 89 x 99 x 81 volume ; autobbox = 8..80 10..88 1..74
lev=0 0..88 1..97 0..80: [first cost=-1.61996] ...... done [cost=-1.83011]
lev=1 patch=67x73x61: [first cost=-1.72008] ........ done [cost:-1.77076 ; 8 patches optimized, 0 skipped]
lev=2 patch=51x55x45: [first cost=-1.67317] ......................... done [cost:-1.74429 ; 25 patches optimized, 2 skipped]
lev=3 patch=37x41x35: [first cost=-1.65531] ............ done [cost:-1.72782 ; 41 patches optimized, 23 skipped]
lev=4 patch=29x31x25: [first cost=-1.67986] ................ done [cost:-1.77048 ; 96 patches optimized, 54 skipped]
lev=5 patch=21x23x19: [first cost=-1.77048] ............... done [cost:-1.86718 ; 233 patches optimized, 159 skipped]
lev=6 patch=15x17x15: [first cost=-1.77674] ....................... done [cost:-1.88234 ; 579 patches optimized, 421 skipped]
lev=7 patch=11x13x11: [first cost=-1.88589]  +      cubic12 patch 040..050 042..054 000..010 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xa2b360  xbot=0xa47bf0  xtop=0xa28800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
........................... +      cubic12 patch 070..080 030..042 045..055 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xa2b360  xbot=0xa47bf0  xtop=0xa28800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
........... done [cost:-1.99527 ; 1495 patches optimized, 1235 skipped]
lev=8 patch=9x9x9: [first cost=-1.99419] ....... +      cubic12 patch 063..071 019..027 045..053 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xa2b360  xbot=0xa47bf0  xtop=0xa28800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 +      cubic12 patch 059..067 075..083 017..025 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xa2b360  xbot=0xa47bf0  xtop=0xa28800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.......... +      cubic12 patch 051..059 067..075 061..069 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xa2b360  xbot=0xa47bf0  xtop=0xa28800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.............. +      cubic12 patch 039..047 035..043 069..077 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xa2b360  xbot=0xa47bf0  xtop=0xa28800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
. +      cubic12 patch 035..043 079..087 041..049 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xa2b360  xbot=0xa47bf0  xtop=0xa28800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 +      cubic12 patch 035..043 075..083 049..057 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xa2b360  xbot=0xa47bf0  xtop=0xa28800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
........... +      cubic12 patch 027..035 015..023 021..029 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xa2b360  xbot=0xa47bf0  xtop=0xa28800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
......... +      cubic12 patch 011..019 059..067 049..057 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xa2b360  xbot=0xa47bf0  xtop=0xa28800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 +      cubic12 patch 011..019 059..067 017..025 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0xa2b360  xbot=0xa47bf0  xtop=0xa28800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.. done [cost:-2.08750 ; 3423 patches optimized, 3057 skipped]
++ ====== total number of parameters 'optimized' = 70989
 +      initial unpenalized cost = -1.61996
 +        final unpenalized cost = -2.11633
 +        final penalized   cost = -2.0875
++ Output dataset ./blip_warp_Rev+orig.BRIK
++ Output dataset ./blip_warp_For+orig.BRIK
++ Output dataset ./blip_warp_Rev_WARP+orig.BRIK
++ Output dataset ./blip_warp_For_WARP+orig.BRIK
++ ===== clock time = 40s 578ms
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.fwd+orig -prefix blip_med_for
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for+orig.BRIK
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.masked.fwd+orig -prefix blip_med_for_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for_masked+orig.BRIK
3dNwarpApply -quintic -nwarp blip_warp_Rev_WARP+orig -source rm.blip.med.masked.rev+orig -prefix blip_med_rev_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.rev+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_rev_masked+orig.BRIK
foreach run ( 01 02 03 )
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB15.r01.tshift+orig -prefix pb03.GB15.r01.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB15.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB15.r01.blip+orig.BRIK
++ total Elapsed time = 13.6 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB15.r02.tshift+orig -prefix pb03.GB15.r02.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB15.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB15.r02.blip+orig.BRIK
++ total Elapsed time = 13.3 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB15.r03.tshift+orig -prefix pb03.GB15.r03.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB15.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB15.r03.blip+orig.BRIK
++ total Elapsed time = 13.4 sec
end
3dbucket -prefix vr_base_min_outlier pb03.GB15.r01.blip+orig[15]
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
align_epi_anat.py -anat2epi -anat MPRAGE.GB15_unif+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off -tshift off
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB15/MPRAGE.GB15_unif+orig
#++ Multi-cost is lpa
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB15_unif*
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB15_unif+orig ./MPRAGE.GB15_unif_unflipped+orig
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./MPRAGE.GB15_unif_unflipped+orig -prefix ./MPRAGE.GB15_unif_unflipped_ns
#Script is running (command trimmed):
  3dinfo ./MPRAGE.GB15_unif_unflipped_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB15/MPRAGE.GB15_unif_unflipped_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB15/vr_base_min_outlier+orig is not oblique
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_ts ./vr_base_min_outlier+orig'[0]'
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_min_outlier_ts_ns ./__tt_vr_base_min_outlier_ts+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 4219.236328
 + Used gradual clip level = 4019.322754 .. 4499.951660
 + Number voxels above clip level = 67675
 + Clustering voxels ...
 + Largest cluster has 67112 voxels
 + Clustering voxels ...
 + Largest cluster has 66555 voxels
 + Filled   212 voxels in small holes; now have 66767 voxels
 + Filled     2 voxels in large holes; now have 66769 voxels
 + Clustering voxels ...
 + Largest cluster has 66765 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 504441 voxels
 + Mask now has 66765 voxels
++ 66765 voxels in the mask [out of 571206: 11.69%]
++ first  16 x-planes are zero [from R]
++ last   16 x-planes are zero [from L]
++ first  16 y-planes are zero [from A]
++ last   18 y-planes are zero [from P]
++ first   6 z-planes are zero [from I]
++ last   14 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_min_outlier_ts_ns+orig
#++ Applying threshold of 9768.325195 on /mnt/ext5/GA/fmri_data/preproc_data/GB15/vr_base_min_outlier_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_min_outlier_ts_ns_wt -a ./vr_base_min_outlier_ts_ns+orig -expr 'min(1,(a/9768.325195))'
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpa -wtprefix ./MPRAGE.GB15_unif_unflipped_ns_al_junk_wtal -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB15_unif_unflipped_ns+orig -prefix ./MPRAGE.GB15_unif_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB15_unif_al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB15_unif_unflipped_ns+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4075280 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 66765 voxels [10.9%] in weight mask
++ Number of points for matching = 66765
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.660 48.339 41.120 (index)
 + source center of mass = 112.034 170.964 178.302 (index)
 + source-target CM = -0.233 -1.545 0.662 (xyz)
 + estimated center of mass shifts = -0.233 -1.545 0.662
++ shift param auto-range: -70.9..70.4 -80.8..77.7 -66.5..67.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.233154 .. 9.766846  center = -0.233154
 + Range param#2 [y-shift] = -11.545288 .. 8.454712  center = -1.545288
 + Range param#3 [z-shift] = -9.338417 .. 10.661583  center = 0.661583
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.233154 .. 39.766846  center = -0.233154
 + Range param#2 [y-shift] = -41.545288 .. 38.454712  center = -1.545288
 + Range param#3 [z-shift] = -39.338417 .. 40.661583  center = 0.661583
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000089
++ Final parameter search ranges:
 +       x-shift =  -40.233 ..   39.767
 +       y-shift =  -41.545 ..   38.455
 +       z-shift =  -39.338 ..   40.662
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4075280 [out of 23184225] voxels
 + base mask has 85428 [out of 609801] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=269.195 usiz=395.808
 + - copying weight image
 + - using 66765 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 56476 total points stored in 110 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#oo-o-o++..-+o++o$oo-+- + - best 88 costs found:
   o= 0 v= 0.894282:  -0.23  -1.55   0.66   0.00   0.00   0.00  [grid]
   o= 1 v= 0.959085: -32.07 -13.34  -2.08  23.31   3.26  40.47  [rand]
   o= 2 v= 0.961381: -34.56  15.04  -7.94  16.34   8.64  40.54  [rand]
   o= 3 v= 0.962191: -24.14   5.38  14.59 -13.51 -15.92  -9.43  [rand]
   o= 4 v= 0.962997: -32.07 -13.34   3.40  23.31   3.26  40.47  [rand]
   o= 5 v= 0.963273: -32.07 -13.34  -2.08  23.31  -3.26  40.47  [rand]
   o= 6 v= 0.963860: -34.06 -31.05  13.62  31.95  -9.87  34.85  [rand]
   o= 7 v= 0.963973:   6.43   5.12  -6.01  -7.50   7.50 -30.00  [grid]
   o= 8 v= 0.964355: -35.09 -37.22 -13.59  40.22 -24.26  41.52  [rand]
   o= 9 v= 0.964849:   6.43   5.12  -6.01  -7.50   7.50  -7.50  [grid]
   o=10 v= 0.965076:   6.43   5.12  -6.01   7.50   7.50 -30.00  [grid]
   o=11 v= 0.965291:  26.43   5.12  -6.01   7.50   7.50   7.50  [grid]
   o=12 v= 0.965414:  31.98  27.50 -35.48  40.41  19.09 -40.75  [rand]
   o=13 v= 0.965518:  31.61 -13.34  -2.08 -23.31   3.26 -40.47  [rand]
   o=14 v= 0.965615: -35.09 -37.22  14.91  40.22 -24.26  41.52  [rand]
   o=15 v= 0.965730: -34.56 -18.13  -7.94  16.34   8.64  40.54  [rand]
   o=16 v= 0.966078:   6.43   5.12  -6.01   7.50  -7.50 -30.00  [grid]
   o=17 v= 0.966142:  10.02   7.29  16.30   7.51  21.00  38.82  [rand]
   o=18 v= 0.966158: -34.06  27.96 -12.29  31.95  -9.87  34.85  [rand]
   o=19 v= 0.966383:  -6.90   5.12  -6.01  -7.50   7.50 -30.00  [grid]
   o=20 v= 0.966420:  18.10  24.60  -5.38  -6.51  20.18  -7.56  [rand]
   o=21 v= 0.966738: -34.06 -31.05 -12.29  31.95  -9.87  34.85  [rand]
   o=22 v= 0.967353: -34.56 -18.13   9.26  16.34   8.64  40.54  [rand]
   o=23 v= 0.967366: -32.07 -13.34   3.40  23.31  -3.26  40.47  [rand]
   o=24 v= 0.967655: -32.72  25.44  32.55   9.69  21.75  40.77  [rand]
   o=25 v= 0.967658:  34.09  15.04   9.26  16.34   8.64 -40.54  [rand]
   o=26 v= 0.967859: -36.90  26.22  -4.22  15.70  36.90  27.47  [rand]
   o=27 v= 0.967930: -30.06   7.37  16.30  34.70  33.03  23.64  [rand]
   o=28 v= 0.967964:  36.41 -18.77 -21.59  -5.26 -41.39 -40.03  [rand]
   o=29 v= 0.967966: -32.07  10.25   3.40  23.31   3.26  40.47  [rand]
   o=30 v= 0.968110:  -6.90   5.12  -6.01   7.50   7.50   7.50  [grid]
   o=31 v= 0.968169:  31.79  14.91  23.77 -11.69  21.87  14.16  [rand]
   o=32 v= 0.968411:  -6.90   5.12  -6.01   7.50   7.50  -7.50  [grid]
   o=33 v= 0.968436: -26.90   5.12  -6.01  30.00  -7.50  -7.50  [grid]
   o=34 v= 0.968460: -26.90 -28.21   7.33  30.00   7.50  30.00  [grid]
   o=35 v= 0.968509:  33.54 -33.47  -7.05  12.26 -17.56  17.80  [rand]
   o=36 v= 0.968531: -36.90  26.22   5.55  15.70  36.90  27.47  [rand]
   o=37 v= 0.968540: -31.62 -31.50  -3.74  42.54  -9.20  25.31  [rand]
   o=38 v= 0.968611:  27.95 -15.77  14.15  11.27 -31.24  23.90  [rand]
   o=39 v= 0.968675:   7.66  11.63 -17.27  -4.53  27.86  39.72  [rand]
   o=40 v= 0.968681: -29.60 -29.65   3.41  34.59  -4.09  21.59  [rand]
   o=41 v= 0.968725:  26.43  25.12   7.33 -30.00  30.00   7.50  [grid]
   o=42 v= 0.968826:  36.41 -18.77  22.92  -5.26 -41.39 -40.03  [rand]
   o=43 v= 0.968837:   6.43   5.12  -6.01  -7.50   7.50   7.50  [grid]
   o=44 v= 0.968879:  31.61 -13.34  -2.08 -23.31  -3.26 -40.47  [rand]
   o=45 v= 0.969304:  23.68   5.38  14.59  13.51 -15.92   9.43  [rand]
   o=46 v= 0.969342:  23.68   5.38  14.59 -13.51 -15.92   9.43  [rand]
   o=47 v= 0.969451:  -6.90   5.12   7.33  -7.50  -7.50  -7.50  [grid]
   o=48 v= 0.969479: -24.14  -8.48  14.59 -13.51  15.92  -9.43  [rand]
   o=49 v= 0.969946:  26.43   5.12  -6.01 -30.00   7.50   7.50  [grid]
   o=50 v= 0.969948:  18.26   4.31 -13.94 -16.04  -3.33 -12.13  [rand]
   o=51 v= 0.970021:  33.60  27.96 -12.29  31.95   9.87 -34.85  [rand]
   o=52 v= 0.970114: -36.88 -18.77  22.92  -5.26  41.39  40.03  [rand]
   o=53 v= 0.970167:  -6.90  25.12  -6.01  30.00  30.00  -7.50  [grid]
   o=54 v= 0.970181:  23.68  -8.48  14.59  13.51 -15.92   9.43  [rand]
   o=55 v= 0.970182:  26.43   5.12  -6.01 -30.00  -7.50   7.50  [grid]
   o=56 v= 0.970195:  26.43   5.12   7.33  -7.50  -7.50   7.50  [grid]
   o=57 v= 0.970196: -32.07  10.25  -2.08  23.31   3.26  40.47  [rand]
   o=58 v= 0.970207:  -6.90  -8.21  -6.01   7.50  -7.50  -7.50  [grid]
   o=59 v= 0.970226:  31.61 -13.34   3.40 -23.31  -3.26 -40.47  [rand]
   o=60 v= 0.970395:  34.62 -37.22 -13.59 -40.22 -24.26 -41.52  [rand]
   o=61 v= 0.970457:  34.62  34.13 -13.59  40.22  24.26 -41.52  [rand]
   o=62 v= 0.970462: -34.56  15.04  -7.94  16.34  -8.64  40.54  [rand]
   o=63 v= 0.970586:  23.76   8.72 -17.43 -18.40  10.44 -35.55  [rand]
   o=64 v= 0.970595: -10.23  32.50  -5.86  -9.05  41.60  20.37  [rand]
   o=65 v= 0.970914:  33.60  27.96  13.62  31.95   9.87 -34.85  [rand]
   o=66 v= 0.970946:  26.43   5.12   7.33   7.50  -7.50   7.50  [grid]
   o=67 v= 0.971024:  26.43   5.12  -6.01  -7.50   7.50   7.50  [grid]
   o=68 v= 0.971051: -26.90   5.12  -6.01  -7.50  30.00  -7.50  [grid]
   o=69 v= 0.971056: -32.44  27.50 -35.48  40.41 -19.09  40.75  [rand]
   o=70 v= 0.971097:  -6.90   5.12  -6.01   7.50   7.50  30.00  [grid]
   o=71 v= 0.971194:  34.63 -32.10 -15.11  11.68 -29.04 -39.38  [rand]
   o=72 v= 0.971269:  34.09 -18.13  -7.94  16.34  -8.64 -40.54  [rand]
   o=73 v= 0.971318:  36.44  26.22  -4.22 -15.70  36.90  27.47  [rand]
   o=74 v= 0.971548:  31.61 -13.34   3.40 -23.31   3.26 -40.47  [rand]
   o=75 v= 0.971574:  -6.90  -8.21  -6.01  -7.50  -7.50 -30.00  [grid]
   o=76 v= 0.971623:  26.43   5.12   7.33  -7.50   7.50   7.50  [grid]
   o=77 v= 0.971686:  -5.16  -4.52  29.76  40.99  18.21  33.12  [rand]
   o=78 v= 0.971760:   6.43   5.12  -6.01  30.00  -7.50  30.00  [grid]
   o=79 v= 0.971763:  -6.90   5.12  -6.01  -7.50  -7.50  30.00  [grid]
   o=80 v= 0.971764: -31.62 -31.50   5.07  42.54  -9.20  25.31  [rand]
   o=81 v= 0.971783:  37.53  14.09  -7.09 -31.25  41.23  36.84  [rand]
   o=82 v= 0.971798: -27.29 -25.47   8.14  25.95  25.17  41.69  [rand]
   o=83 v= 0.971857: -11.53  32.59  -5.31  -4.11  32.66  25.74  [rand]
   o=84 v= 0.971869:  34.62  34.13  14.91  40.22  24.26 -41.52  [rand]
   o=85 v= 0.971897: -34.06  27.96  13.62  31.95  -9.87  34.85  [rand]
   o=86 v= 0.971988: -32.07  10.25   3.40  23.31  -3.26  40.47  [rand]
   o=87 v= 0.971988:  23.68   5.38  14.59 -13.51  15.92  -9.43  [rand]
 + - A little optimization:*[#11726=0.886438] *[#11727=0.879597] *[#11730=0.858054] *[#11731=0.84831] *[#11732=0.847644] *[#11740=0.847172] *[#11743=0.846716] *[#11746=0.846287] *[#11747=0.845825] *[#11752=0.84576] *[#11753=0.845537] *[#11756=0.845511] *[#11758=0.845449] *[#11760=0.845413] *[#11762=0.845398] ........................................................................................
 + - costs of the above after a little optimization:
  *o= 0 v= 0.845398:  -0.42  -0.78   2.06   0.06   0.19  -0.58  [grid]  [f=50]
   o= 1 v= 0.952015: -33.01 -18.32  -1.59  24.38   1.50  38.95  [rand]  [f=49]
   o= 2 v= 0.956773: -36.10  13.37  -9.50  14.22   7.18  39.43  [rand]  [f=48]
   o= 3 v= 0.957329: -24.41   6.20  14.21 -14.54 -19.53  -9.38  [rand]  [f=41]
   o= 4 v= 0.953414: -35.17 -13.38  -0.11  22.40   3.35  39.02  [rand]  [f=41]
   o= 5 v= 0.947149: -37.15 -13.40  -0.45  23.26  -4.51  40.75  [rand]  [f=38]
   o= 6 v= 0.959715: -32.88 -30.04  13.56  31.64  -4.93  34.75  [rand]  [f=32]
   o= 7 v= 0.950169:   5.14   3.73  -3.97  -1.48   6.45 -29.30  [grid]  [f=53]
   o= 8 v= 0.956314: -33.13 -37.51 -12.75  44.84 -23.80  41.07  [rand]  [f=39]
   o= 9 v= 0.947074:   7.40   3.57  -4.49  -7.42   3.61 -13.32  [grid]  [f=63]
   o=10 v= 0.946334:   3.86   2.48  -2.97   3.73   6.88 -27.75  [grid]  [f=44]
   o=11 v= 0.962578:  26.55   5.26  -6.42   6.02   6.07   6.81  [grid]  [f=33]
   o=12 v= 0.963493:  32.37  27.15 -35.13  44.39  19.27 -40.76  [rand]  [f=29]
   o=13 v= 0.959762:  35.54 -11.83  -2.49 -23.86   1.71 -39.93  [rand]  [f=46]
   o=14 v= 0.962963: -35.36 -37.69  16.39  40.08 -18.54  42.05  [rand]  [f=31]
   o=15 v= 0.954375: -36.18 -18.93  -8.39  13.34   2.47  44.85  [rand]  [f=54]
   o=16 v= 0.958928:   8.02   4.41  -2.72   5.91  -8.14 -30.57  [grid]  [f=52]
   o=17 v= 0.956706:  10.35   6.62  15.59   8.10  21.36  43.38  [rand]  [f=40]
   o=18 v= 0.964344: -34.38  27.45 -12.98  31.44 -11.42  34.13  [rand]  [f=51]
   o=19 v= 0.962275:  -7.67   4.88  -1.47  -7.45   7.94 -30.16  [grid]  [f=48]
   o=20 v= 0.960339:  17.50  24.63  -4.19  -6.20  27.71  -7.39  [rand]  [f=43]
   o=21 v= 0.960475: -35.29 -31.42 -13.28  29.42 -12.85  40.86  [rand]  [f=35]
   o=22 v= 0.946755: -36.54 -13.81   1.57  19.93  -1.99  42.87  [rand]  [f=62]
   o=23 v= 0.946806: -37.26 -14.54   1.68  21.19  -3.28  39.05  [rand]  [f=52]
   o=24 v= 0.958294: -33.06  30.52  26.74  10.54  19.54  37.93  [rand]  [f=56]
   o=25 v= 0.953460:  39.60  12.32   7.89  14.74   5.59 -39.44  [rand]  [f=47]
   o=26 v= 0.959075: -39.80  23.52   2.41   8.92  31.73  26.37  [rand]  [f=43]
   o=27 v= 0.966013: -30.47   6.82  17.23  34.98  33.78  24.35  [rand]  [f=48]
   o=28 v= 0.958690:  39.52 -15.68 -20.80  -8.08 -33.57 -38.54  [rand]  [f=39]
   o=29 v= 0.955480: -34.18   2.93   3.11  23.00   1.11  40.21  [rand]  [f=45]
   o=30 v= 0.957988:  -6.79   4.84  -3.17   8.04   3.44   4.03  [grid]  [f=49]
   o=31 v= 0.961489:  31.88  18.50  23.61 -11.74  21.81  15.93  [rand]  [f=40]
   o=32 v= 0.936807:  -0.06   3.85  -4.50   2.35   0.22  -1.20  [grid]  [f=83]
   o=33 v= 0.963358: -28.01   3.37  -7.54  25.49  -8.05  -5.89  [grid]  [f=58]
   o=34 v= 0.958999: -30.54 -26.50   4.14  32.96   4.48  28.04  [grid]  [f=52]
   o=35 v= 0.964551:  34.96 -33.43  -3.32  11.74 -17.56  16.76  [rand]  [f=36]
   o=36 v= 0.960601: -39.65  28.46   3.73  11.05  39.97  23.13  [rand]  [f=46]
   o=37 v= 0.958824: -31.99 -23.83  -3.97  43.49 -10.73  25.45  [rand]  [f=48]
   o=38 v= 0.960646:  32.42 -16.48  14.81  12.36 -31.10  25.43  [rand]  [f=32]
   o=39 v= 0.961728:   7.89  10.25 -19.45  -4.33  27.92  40.74  [rand]  [f=53]
   o=40 v= 0.958621: -30.85 -23.53   4.11  35.82  -4.10  21.53  [rand]  [f=43]
   o=41 v= 0.965291:  27.56  23.13   8.13 -30.34  27.97  11.77  [grid]  [f=46]
   o=42 v= 0.961061:  39.61 -18.53  27.45  -6.04 -39.09 -39.39  [rand]  [f=45]
   o=43 v= 0.960378:   3.02   5.37  -5.11  -9.04   4.76   5.56  [grid]  [f=54]
   o=44 v= 0.957419:  36.57 -12.79   0.15 -22.59  -3.50 -43.62  [rand]  [f=66]
   o=45 v= 0.957915:  25.07  10.26  17.60  10.81 -21.19  10.67  [rand]  [f=50]
   o=46 v= 0.962265:  24.48   5.91  18.05 -15.14 -17.01   8.71  [rand]  [f=42]
   o=47 v= 0.853866:  -0.68   0.54   2.10  -0.23  -1.03  -0.81  [grid]  [f=83]
   o=48 v= 0.964881: -22.86  -7.63  14.31  -7.70  15.86  -8.72  [rand]  [f=50]
   o=49 v= 0.952892:  26.47   3.57  -5.49 -24.32   6.86   7.86  [grid]  [f=43]
   o=50 v= 0.954673:  19.48   3.56  -8.50 -14.02  -1.49  -5.75  [rand]  [f=72]
   o=51 v= 0.961383:  38.21  27.14  -8.33  30.37  12.17 -32.83  [rand]  [f=38]
   o=52 v= 0.964703: -36.60 -24.17  23.95  -5.92  40.74  40.44  [rand]  [f=32]
   o=53 v= 0.967595:  -5.80  25.19  -6.34  33.70  29.31  -7.51  [grid]  [f=43]
   o=54 v= 0.967034:  24.26  -9.60  14.66  13.27 -12.02  10.10  [rand]  [f=37]
   o=55 v= 0.955646:  25.57   3.83  -5.49 -21.64  -1.85   5.10  [grid]  [f=65]
   o=56 v= 0.961596:  27.23   7.41   6.87 -14.11  -1.58  10.98  [grid]  [f=43]
   o=57 v= 0.953809: -36.88  21.81   1.33  18.97   0.06  44.34  [rand]  [f=40]
   o=58 v= 0.934894:  -1.84  -4.26  -8.62   4.60 -10.95  -0.80  [grid]  [f=83]
   o=59 v= 0.959584:  35.27 -12.98  -0.57 -24.02  -4.60 -41.00  [rand]  [f=51]
   o=60 v= 0.957415:  33.08 -36.39 -10.82 -43.60 -21.66 -43.87  [rand]  [f=51]
   o=61 v= 0.959528:  39.12  34.16 -17.69  43.40  27.95 -39.14  [rand]  [f=43]
   o=62 v= 0.948788: -38.57  16.82  -2.23  17.33  -6.23  44.70  [rand]  [f=41]
   o=63 v= 0.956016:  28.51   8.27 -16.61 -20.53  10.63 -36.32  [rand]  [f=62]
   o=64 v= 0.963696: -12.31  32.05  -3.31 -12.92  38.27  20.72  [rand]  [f=42]
   o=65 v= 0.962918:  36.13  29.32   8.97  29.22   6.70 -35.50  [rand]  [f=46]
   o=66 v= 0.965252:  27.02   5.38   7.29   7.38  -8.02  11.90  [grid]  [f=40]
   o=67 v= 0.952634:  26.22   3.13  -4.81 -22.34   5.26   8.93  [grid]  [f=54]
   o=68 v= 0.969902: -26.83   5.47  -6.37  -7.58  29.42  -6.61  [grid]  [f=37]
   o=69 v= 0.966558: -32.95  27.60 -35.01  44.47 -19.19  41.16  [rand]  [f=36]
   o=70 v= 0.957535:  -5.27   1.52  -1.72   5.33   8.39  33.07  [grid]  [f=45]
   o=71 v= 0.947865:  39.38 -39.32 -12.74   7.57 -13.80 -36.04  [rand]  [f=53]
   o=72 v= 0.959266:  39.53 -18.91  -8.34  17.11  -8.18 -40.35  [rand]  [f=39]
   o=73 v= 0.969427:  37.31  25.29  -5.28 -14.57  37.47  28.19  [rand]  [f=39]
   o=74 v= 0.956476:  34.90  -9.70  -2.83 -20.33   0.97 -44.62  [rand]  [f=53]
   o=75 v= 0.953777:  -2.85  -4.00  -1.34 -16.21  -4.91 -29.16  [grid]  [f=78]
   o=76 v= 0.964027:  28.49   4.73   6.01  -8.95   5.67  11.00  [grid]  [f=48]
   o=77 v= 0.962754:  -3.80  -1.32  31.87  42.91  18.26  29.59  [rand]  [f=46]
   o=78 v= 0.966779:   6.86   5.95  -4.39  30.35  -3.68  30.57  [grid]  [f=53]
   o=79 v= 0.960160:  -5.31   3.47  -3.04  -3.57   5.76  27.17  [grid]  [f=48]
   o=80 v= 0.959555: -31.49 -25.60  -3.37  42.77 -10.03  26.33  [rand]  [f=61]
   o=81 v= 0.969569:  38.91  15.50  -8.85 -31.79  41.25  35.53  [rand]  [f=34]
   o=82 v= 0.968720: -25.80 -24.58   9.02  24.42  25.43  41.15  [rand]  [f=42]
   o=83 v= 0.964729:  -9.30  32.48  -4.57 -11.91  32.36  27.03  [rand]  [f=41]
   o=84 v= 0.961288:  39.28  34.76  13.15  36.94  26.34 -39.86  [rand]  [f=41]
   o=85 v= 0.969661: -34.14  31.84  12.94  32.04 -10.07  35.08  [rand]  [f=34]
   o=86 v= 0.961693: -35.82   8.67   3.42  23.35  -1.37  40.72  [rand]  [f=43]
   o=87 v= 0.960041:  21.24  -0.77  13.24 -16.85  16.82  -9.94  [rand]  [f=61]
 + - saving # 0 for use with twobest
 + - skip #47 for twobest: too close to set # 0
 + - saving #58 for use with twobest
 + - saving #32 for use with twobest
 + - saving #10 for use with twobest
 + - saving #22 for use with twobest
 + - skip #23 for twobest: too close to set #22
 + - saving # 9 for use with twobest
 + - skip # 5 for twobest: too close to set #22
 + - saving #71 for use with twobest
 + - saving #62 for use with twobest
 + - saving # 7 for use with twobest
 + - saving # 1 for use with twobest
 + - saving #67 for use with twobest
 + - skip #49 for twobest: too close to set #67
 + - saving # 4 for use with twobest
 + - saving #25 for use with twobest
 + - saving #75 for use with twobest
 + - saving #57 for use with twobest
 + - saving #15 for use with twobest
 + - saving #50 for use with twobest
 + - saving #29 for use with twobest
 + - saving #55 for use with twobest
 + - saving #63 for use with twobest
 + - saving # 8 for use with twobest
 + - saving #74 for use with twobest
 + - saving #17 for use with twobest
 + - saving # 2 for use with twobest
 + - saving # 3 for use with twobest
 + - saving #60 for use with twobest
 + - skip #44 for twobest: too close to set #74
 + - saving #70 for use with twobest
 + - saving #45 for use with twobest
 + - saving #30 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=269.195 usiz=395.808
 + - retaining old weight image
 + - using 66765 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 56443 total points stored in 112 'TOHD(14.0453)' bloks (0 duplicates)
*[#15987=0.817234] *[#15999=0.811641] *[#16007=0.811487] *[#16008=0.810733] *[#16015=0.807553] *[#16016=0.806893] *[#16018=0.801534] *[#16019=0.79648] *[#16021=0.795423] *[#16027=0.794634] *[#16030=0.793999] *[#16032=0.790764] *[#16035=0.79042] *[#16038=0.790349] *[#16039=0.787616] *[#16044=0.786952] *[#16045=0.786186] *[#16051=0.785128] *[#16056=0.784432] *[#16057=0.783868] *[#16060=0.783765] *[#16063=0.783415] *[#16064=0.783063] *[#16067=0.782873] *[#16068=0.782719] *[#16069=0.782715] *[#16072=0.782489] *[#16073=0.782252] *[#16076=0.782137] *[#16077=0.782025] *[#16078=0.781783] *[#16079=0.781382] *[#16080=0.780992] *[#16081=0.780802] *[#16084=0.780521] *[#16085=0.780478] 
 + - param set #1 has cost=0.780478 [o=0 t=0]
 + -- Parameters = -0.2684 -0.5094 2.4486 0.0240 0.5009 -0.5984 0.9857 0.9866 0.9790 -0.0028 -0.0020 0.0111
 + - param set #2 has cost=0.942751 [o=58 t=1]
 + -- Parameters = -1.7568 -3.7318 -8.1762 4.1043 -9.3144 -1.8451 0.9976 1.0072 0.9504 0.0028 0.0055 0.0010
 + - param set #3 has cost=0.941888 [o=32 t=2]
 + -- Parameters = -0.4197 4.0085 -4.4107 1.7942 -0.2613 -1.4448 1.0374 0.9932 0.9965 -0.0012 -0.0051 -0.0009
 + - param set #4 has cost=0.955658 [o=10 t=3]
 + -- Parameters = 3.3926 2.2334 -2.8523 4.0581 7.8185 -29.0516 1.0002 0.9967 1.0006 -0.0003 0.0013 -0.0001
 + - param set #5 has cost=0.957099 [o=22 t=4]
 + -- Parameters = -36.6031 -13.5591 1.5605 19.9569 -2.3824 43.0121 0.9998 0.9982 1.0052 -0.0006 -0.0012 -0.0026
 + - param set #6 has cost=0.958206 [o=9 t=5]
 + -- Parameters = 8.3743 4.7931 -5.1823 -5.6663 3.7551 -13.5204 1.0154 0.9966 0.9992 0.0012 -0.0030 0.0191
 + - param set #7 has cost=0.953980 [o=71 t=6]
 + -- Parameters = 39.3690 -39.3630 -12.7898 7.6261 -13.7688 -36.0175 1.0000 0.9997 1.0002 0.0008 -0.0006 -0.0000
 + - param set #8 has cost=0.951297 [o=62 t=7]
 + -- Parameters = -39.0212 16.8060 -2.3418 17.1111 -6.4446 44.7723 1.0379 1.0011 0.9964 0.0003 0.0010 -0.0006
 + - param set #9 has cost=0.956551 [o=7 t=8]
 + -- Parameters = 4.4873 3.5272 -2.8026 -2.1010 7.2071 -30.1491 1.0143 0.9833 1.0395 -0.0016 0.0030 0.0014
 + - param set #10 has cost=0.960688 [o=1 t=9]
 + -- Parameters = -32.9438 -18.2108 -1.6066 24.5883 1.4573 39.0325 0.9975 1.0032 1.0051 -0.0015 0.0003 -0.0004
 + - param set #11 has cost=0.960241 [o=67 t=10]
 + -- Parameters = 26.6371 3.6995 -4.4873 -22.3043 5.6320 8.6513 1.0019 1.0012 1.0041 0.0002 0.0004 0.0003
 + - param set #12 has cost=0.962246 [o=4 t=11]
 + -- Parameters = -35.0817 -13.2904 -0.2222 22.2572 3.4716 39.0073 1.0025 1.0400 1.0053 -0.0010 -0.0008 0.0004
 + - param set #13 has cost=0.948116 [o=25 t=12]
 + -- Parameters = 38.9428 11.9784 12.1463 12.7392 10.5621 -37.5918 1.1350 1.0165 0.9940 -0.0033 -0.0137 -0.0066
 + - param set #14 has cost=0.963372 [o=75 t=13]
 + -- Parameters = -2.5544 -3.7139 -1.2420 -16.4529 -4.5481 -29.3416 1.0094 1.0104 1.0013 -0.0057 -0.0022 -0.0011
 + - param set #15 has cost=0.955967 [o=57 t=14]
 + -- Parameters = -38.4494 21.1579 -0.2219 17.4604 -1.9458 43.8218 1.0065 1.0037 1.0279 0.0031 0.0018 0.0021
 + - param set #16 has cost=0.960542 [o=15 t=15]
 + -- Parameters = -36.1338 -18.9534 -8.2383 13.3465 2.3999 44.9935 0.9993 1.0008 1.0054 0.0003 -0.0002 -0.0006
 + - param set #17 has cost=0.964415 [o=50 t=16]
 + -- Parameters = 19.4707 3.5560 -8.4963 -14.0211 -1.4492 -5.7682 1.0032 0.9997 0.9997 -0.0003 -0.0004 -0.0005
 + - param set #18 has cost=0.784315 [o=-1 t=-1]
 + -- Parameters = -0.6877 -0.6173 2.2210 0.1392 0.5302 -0.9839 0.9807 0.9878 0.9842 0.0075 0.0036 0.0194
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0462 
 + --- dist(#3,#1) = 0.0857 
 + --- dist(#4,#1) = 0.133 
 + --- dist(#5,#1) = 0.49 
 + --- dist(#6,#1) = 0.504 
 + --- dist(#7,#1) = 0.495 
 + --- dist(#8,#1) = 0.316 
 + --- dist(#9,#1) = 0.494 
 + --- dist(#10,#1) = 0.328 
 + --- dist(#11,#1) = 0.485 
 + --- dist(#12,#1) = 0.144 
 + --- dist(#13,#1) = 0.336 
 + --- dist(#14,#1) = 0.507 
 + --- dist(#15,#1) = 0.44 
 + --- dist(#16,#1) = 0.44 
 + --- dist(#17,#1) = 0.319 
 + --- dist(#18,#1) = 0.247 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=269.195 usiz=395.808
 + - retaining old weight image
 + - using 66765 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 56857 total points stored in 115 'TOHD(13.984)' bloks (0 duplicates)
 + - param set #1 has cost=0.781813 [o=0 t=0]
 + -- Parameters = -0.2596 -0.5712 3.4789 0.0898 0.3944 -0.4263 0.9837 0.9844 0.9472 0.0016 -0.0041 0.0059
 + - param set #2 has cost=0.781380 [o=-1 t=-1]
 + -- Parameters = -0.8799 -0.5588 3.4992 -0.0849 0.4778 -1.3759 0.9845 0.9819 0.9489 -0.0044 0.0138 0.0094
 + - param set #3 has cost=0.945617 [o=32 t=2]
 + -- Parameters = -0.3446 3.2520 -4.9524 0.1856 -0.0865 -1.0651 1.0349 0.9942 1.0115 -0.0032 -0.0037 0.0116
 + - param set #4 has cost=0.943036 [o=58 t=1]
 + -- Parameters = -0.3161 -1.7809 -6.7520 0.4212 -8.0753 0.0700 0.9909 0.9945 0.9421 0.0103 -0.0001 -0.0063
 + - param set #5 has cost=0.952899 [o=25 t=12]
 + -- Parameters = 39.4162 11.7620 11.5422 12.5322 10.4485 -37.9977 1.1660 1.0229 0.9977 -0.0019 -0.0132 -0.0079
 + - param set #6 has cost=0.957254 [o=62 t=7]
 + -- Parameters = -39.0974 16.7461 -2.2860 16.6577 -6.4363 44.8759 1.0377 1.0009 0.9943 0.0082 0.0016 -0.0006
 + - param set #7 has cost=0.959919 [o=71 t=6]
 + -- Parameters = 39.3730 -39.3577 -12.7891 7.6275 -13.7678 -36.0178 0.9999 1.0014 0.9984 0.0009 -0.0007 -0.0002
 + - param set #8 has cost=0.963710 [o=10 t=3]
 + -- Parameters = 3.2866 2.5267 -2.7799 4.3170 7.7002 -29.3495 0.9995 0.9960 0.9966 -0.0003 0.0095 -0.0005
 + - param set #9 has cost=0.960555 [o=57 t=14]
 + -- Parameters = -38.4010 21.5478 -0.2263 17.4756 -1.9259 43.8439 1.0093 1.0009 1.0297 0.0038 0.0009 0.0024
 + - param set #10 has cost=0.964425 [o=7 t=8]
 + -- Parameters = 4.4884 3.5113 -2.8389 -2.0439 7.1394 -30.1589 1.0138 0.9844 1.0401 -0.0020 0.0027 0.0011
 + - param set #11 has cost=0.963333 [o=22 t=4]
 + -- Parameters = -36.6028 -13.5603 1.5606 19.9631 -2.3812 43.0183 0.9996 0.9983 1.0054 -0.0006 -0.0012 -0.0026
 + - param set #12 has cost=0.955010 [o=9 t=5]
 + -- Parameters = 8.4456 4.5997 -3.7174 -4.2720 5.2597 -14.9004 1.0835 0.9797 0.9545 0.0082 -0.0015 0.0276
 + - param set #13 has cost=0.967060 [o=67 t=10]
 + -- Parameters = 26.6482 3.9566 -4.4807 -22.2915 5.6287 8.6537 1.0020 1.0013 1.0063 0.0002 0.0005 0.0082
 + - param set #14 has cost=0.966260 [o=15 t=15]
 + -- Parameters = -36.2399 -18.7956 -8.0778 13.2203 2.5503 44.9898 0.9971 1.0002 1.0076 0.0079 -0.0007 -0.0004
 + - param set #15 has cost=0.966641 [o=1 t=9]
 + -- Parameters = -33.0482 -18.9538 -1.9910 24.9605 1.3026 38.8618 0.9965 1.0074 1.0041 -0.0010 -0.0002 -0.0019
 + - param set #16 has cost=0.967634 [o=4 t=11]
 + -- Parameters = -35.0587 -12.9332 -0.1525 22.1191 3.5684 39.0990 1.0030 1.0422 1.0047 -0.0011 0.0077 0.0005
 + - param set #17 has cost=0.970766 [o=75 t=13]
 + -- Parameters = -2.2124 -3.5950 -1.4413 -16.7919 -4.6195 -29.8129 1.0135 1.0114 1.0010 -0.0058 -0.0029 0.0057
 + - param set #18 has cost=0.970039 [o=50 t=16]
 + -- Parameters = 19.4165 3.4487 -8.4202 -14.1202 -1.2801 -6.0367 1.0020 1.0003 1.0035 -0.0003 -0.0002 -0.0005
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0806 
 + --- dist(#3,#1) = 0.128 
 + --- dist(#4,#1) = 0.106 
 + --- dist(#5,#1) = 0.504 
 + --- dist(#6,#1) = 0.15 
 + --- dist(#7,#1) = 0.514 
 + --- dist(#8,#1) = 0.503 
 + --- dist(#9,#1) = 0.502 
 + --- dist(#10,#1) = 0.493 
 + --- dist(#11,#1) = 0.311 
 + --- dist(#12,#1) = 0.32 
 + --- dist(#13,#1) = 0.515 
 + --- dist(#14,#1) = 0.447 
 + --- dist(#15,#1) = 0.344 
 + --- dist(#16,#1) = 0.45 
 + --- dist(#17,#1) = 0.254 
 + --- dist(#18,#1) = 0.316 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=269.195 usiz=395.808
 + - retaining old weight image
 + - using 66765 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 57079 total points stored in 116 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.783382 [o=-1 t=-1]
 + -- Parameters = -0.9353 -0.5678 3.7093 -0.0678 0.4938 -1.3717 0.9841 0.9852 0.9414 -0.0054 0.0143 0.0073
 + - param set #2 has cost=0.782803 [o=0 t=0]
 + -- Parameters = -0.4571 -0.1581 3.7739 -0.0882 -0.0577 -0.6845 0.9854 0.9810 0.9396 -0.0045 -0.0004 -0.0063
 + - param set #3 has cost=0.946042 [o=58 t=1]
 + -- Parameters = -1.1474 -0.4082 -6.4905 0.1434 -6.2538 0.1066 0.9740 0.9891 0.8971 0.0289 -0.0002 -0.0055
 + - param set #4 has cost=0.948536 [o=32 t=2]
 + -- Parameters = 0.4877 3.7787 -4.7692 -0.8889 0.6032 0.1632 1.0337 0.9740 1.0175 -0.0117 -0.0142 0.0330
 + - param set #5 has cost=0.956481 [o=25 t=12]
 + -- Parameters = 39.4044 11.9562 11.5172 12.5076 10.5107 -37.7763 1.1657 1.0416 0.9974 -0.0019 -0.0132 -0.0078
 + - param set #6 has cost=0.961014 [o=9 t=5]
 + -- Parameters = 8.4743 4.5998 -3.6904 -4.1917 5.2320 -14.9521 1.0831 0.9805 0.9531 0.0086 -0.0021 0.0276
 + - param set #7 has cost=0.961117 [o=62 t=7]
 + -- Parameters = -39.0974 16.7461 -2.2860 16.6577 -6.4363 44.8759 1.0377 1.0009 0.9943 0.0082 0.0073 -0.0006
 + - param set #8 has cost=0.963313 [o=71 t=6]
 + -- Parameters = 39.3741 -39.3477 -12.7679 7.6321 -13.7641 -36.0108 1.0000 1.0015 0.9984 0.0010 -0.0004 -0.0005
 + - param set #9 has cost=0.962282 [o=57 t=14]
 + -- Parameters = -38.4724 21.4284 -0.2821 17.4571 -1.8711 43.8902 1.0080 1.0000 1.0311 0.0034 0.0008 0.0029
 + - param set #10 has cost=0.965703 [o=22 t=4]
 + -- Parameters = -36.6364 -13.5628 1.5513 19.9078 -2.3777 42.9840 0.9994 0.9797 1.0075 -0.0012 -0.0013 -0.0027
 + - param set #11 has cost=0.968243 [o=10 t=3]
 + -- Parameters = 3.2805 2.5306 -2.7789 4.3176 7.6684 -29.3520 0.9995 0.9943 0.9967 -0.0004 0.0095 -0.0004
 + - param set #12 has cost=0.969519 [o=7 t=8]
 + -- Parameters = 4.2813 3.5758 -2.9490 -1.7586 6.9989 -30.1601 1.0134 0.9821 1.0425 -0.0027 0.0027 0.0009
 + - param set #13 has cost=0.965611 [o=15 t=15]
 + -- Parameters = -36.1022 -19.0472 -7.8993 13.0430 2.6674 44.9770 1.0155 1.0015 1.0089 0.0082 -0.0007 -0.0002
 + - param set #14 has cost=0.967946 [o=1 t=9]
 + -- Parameters = -33.0605 -19.1019 -2.0806 25.0265 1.2000 38.8973 0.9956 1.0247 1.0057 -0.0013 -0.0013 -0.0020
 + - param set #15 has cost=0.967708 [o=67 t=10]
 + -- Parameters = 26.5182 4.0382 -5.4069 -21.7937 5.9942 8.8305 0.9701 1.0015 0.9973 0.0008 -0.0007 0.0066
 + - param set #16 has cost=0.970039 [o=4 t=11]
 + -- Parameters = -35.0515 -12.9268 -0.1499 22.1324 3.5879 39.0898 1.0031 1.0440 1.0046 -0.0011 0.0077 0.0005
 + - param set #17 has cost=0.973249 [o=50 t=16]
 + -- Parameters = 19.4054 3.4199 -8.4111 -14.1098 -1.3157 -6.0561 1.0018 0.9992 1.0034 -0.0004 0.0002 -0.0009
 + - param set #18 has cost=0.972869 [o=75 t=13]
 + -- Parameters = -2.2274 -3.4140 -1.4030 -16.6696 -4.6676 -29.8049 1.0142 1.0109 1.0033 -0.0040 -0.0038 0.0058
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0662 
 + --- dist(#3,#1) = 0.15 
 + --- dist(#4,#1) = 0.177 
 + --- dist(#5,#1) = 0.498 
 + --- dist(#6,#1) = 0.159 
 + --- dist(#7,#1) = 0.506 
 + --- dist(#8,#1) = 0.495 
 + --- dist(#9,#1) = 0.498 
 + --- dist(#10,#1) = 0.507 
 + --- dist(#11,#1) = 0.485 
 + --- dist(#12,#1) = 0.337 
 + --- dist(#13,#1) = 0.44 
 + --- dist(#14,#1) = 0.319 
 + --- dist(#15,#1) = 0.328 
 + --- dist(#16,#1) = 0.442 
 + --- dist(#17,#1) = 0.324 
 + --- dist(#18,#1) = 0.248 
 + - Total coarse refinement net CPU time = 0.0 s; 4834 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=269.195 usiz=395.808
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 57067 total points stored in 116 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.786444 * [o=0 t=0]
 + -- Parameters = -0.4571 -0.1581 3.7739 -0.0882 -0.0577 -0.6845 0.9854 0.9810 0.9396 -0.0045 -0.0004 -0.0063
 + - cost(#2)=0.787182   [o=-1 t=-1]
 + -- Parameters = -0.9353 -0.5678 3.7093 -0.0678 0.4938 -1.3717 0.9841 0.9852 0.9414 -0.0054 0.0143 0.0073
 + - cost(#3)=0.949346   [o=58 t=1]
 + -- Parameters = -1.1474 -0.4082 -6.4905 0.1434 -6.2538 0.1066 0.9740 0.9891 0.8971 0.0289 -0.0002 -0.0055
 + - cost(#4)=0.950195   [o=32 t=2]
 + -- Parameters = 0.4877 3.7787 -4.7692 -0.8889 0.6032 0.1632 1.0337 0.9740 1.0175 -0.0117 -0.0142 0.0330
 + - cost(#5)=0.956971   [o=25 t=12]
 + -- Parameters = 39.4044 11.9562 11.5172 12.5076 10.5107 -37.7763 1.1657 1.0416 0.9974 -0.0019 -0.0132 -0.0078
 + - cost(#6)=0.962352   [o=9 t=5]
 + -- Parameters = 8.4743 4.5998 -3.6904 -4.1917 5.2320 -14.9521 1.0831 0.9805 0.9531 0.0086 -0.0021 0.0276
 + - cost(#7)=0.962505   [o=62 t=7]
 + -- Parameters = -39.0974 16.7461 -2.2860 16.6577 -6.4363 44.8759 1.0377 1.0009 0.9943 0.0082 0.0073 -0.0006
 + - cost(#8)=0.963590   [o=57 t=14]
 + -- Parameters = -38.4724 21.4284 -0.2821 17.4571 -1.8711 43.8902 1.0080 1.0000 1.0311 0.0034 0.0008 0.0029
 + - cost(#9)=0.963708   [o=71 t=6]
 + -- Parameters = 39.3741 -39.3477 -12.7679 7.6321 -13.7641 -36.0108 1.0000 1.0015 0.9984 0.0010 -0.0004 -0.0005
 + - cost(#10)=0.966556   [o=15 t=15]
 + -- Parameters = -36.1022 -19.0472 -7.8993 13.0430 2.6674 44.9770 1.0155 1.0015 1.0089 0.0082 -0.0007 -0.0002
 + - cost(#11)=0.966702   [o=22 t=4]
 + -- Parameters = -36.6364 -13.5628 1.5513 19.9078 -2.3777 42.9840 0.9994 0.9797 1.0075 -0.0012 -0.0013 -0.0027
 + - cost(#12)=0.968606   [o=67 t=10]
 + -- Parameters = 26.5182 4.0382 -5.4069 -21.7937 5.9942 8.8305 0.9701 1.0015 0.9973 0.0008 -0.0007 0.0066
 + - cost(#13)=0.969236   [o=1 t=9]
 + -- Parameters = -33.0605 -19.1019 -2.0806 25.0265 1.2000 38.8973 0.9956 1.0247 1.0057 -0.0013 -0.0013 -0.0020
 + - cost(#14)=0.970785   [o=10 t=3]
 + -- Parameters = 3.2805 2.5306 -2.7789 4.3176 7.6684 -29.3520 0.9995 0.9943 0.9967 -0.0004 0.0095 -0.0004
 + - cost(#15)=0.970560   [o=7 t=8]
 + -- Parameters = 4.2813 3.5758 -2.9490 -1.7586 6.9989 -30.1601 1.0134 0.9821 1.0425 -0.0027 0.0027 0.0009
 + - cost(#16)=0.970982   [o=4 t=11]
 + -- Parameters = -35.0515 -12.9268 -0.1499 22.1324 3.5879 39.0898 1.0031 1.0440 1.0046 -0.0011 0.0077 0.0005
 + - cost(#17)=0.974229   [o=75 t=13]
 + -- Parameters = -2.2274 -3.4140 -1.4030 -16.6696 -4.6676 -29.8049 1.0142 1.0109 1.0033 -0.0040 -0.0038 0.0058
 + - cost(#18)=0.973479   [o=50 t=16]
 + -- Parameters = 19.4054 3.4199 -8.4111 -14.1098 -1.3157 -6.0561 1.0018 0.9992 1.0034 -0.0004 0.0002 -0.0009
 + - cost(#19)=0.873002   [o=-2 t=-2]
 + -- Parameters = -0.2332 -1.5453 0.6616 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.786254 * [o=0 t=0]
 + -- Parameters = -0.4889 -0.1520 3.7810 -0.0404 -0.0946 -0.7060 0.9849 0.9834 0.9397 -0.0042 0.0001 -0.0062
 + - cost(#2)=0.786974   [o=-1 t=-1]
 + -- Parameters = -0.9893 -0.5772 3.7403 -0.0475 0.5183 -1.4080 0.9836 0.9842 0.9413 -0.0046 0.0148 0.0058
 + - cost(#3)=0.948946   [o=58 t=1]
 + -- Parameters = -0.9320 -0.2365 -6.5331 0.0532 -6.1767 0.0840 0.9830 0.9880 0.9020 0.0335 0.0023 -0.0010
 + - cost(#4)=0.948457   [o=32 t=2]
 + -- Parameters = 0.5031 3.9102 -4.8072 -0.5511 0.6875 -0.2427 1.0310 0.9722 1.0165 -0.0196 -0.0145 0.0355
 + - cost(#5)=0.956969   [o=25 t=12]
 + -- Parameters = 39.4029 11.9556 11.5193 12.5065 10.5113 -37.7759 1.1657 1.0418 0.9974 -0.0019 -0.0132 -0.0077
 + - cost(#6)=0.962325   [o=9 t=5]
 + -- Parameters = 8.4654 4.6062 -3.6951 -4.1834 5.2283 -14.9762 1.0831 0.9806 0.9531 0.0094 -0.0021 0.0276
 + - cost(#7)=0.962422   [o=62 t=7]
 + -- Parameters = -39.0797 16.7661 -2.2146 16.6119 -6.3923 44.8906 1.0384 1.0011 0.9941 0.0083 0.0074 -0.0005
 + - cost(#8)=0.963588   [o=57 t=14]
 + -- Parameters = -38.4701 21.4262 -0.2783 17.4622 -1.8731 43.8924 1.0081 1.0001 1.0310 0.0034 0.0008 0.0029
 + - cost(#9)=0.963596   [o=71 t=6]
 + -- Parameters = 39.3642 -39.3380 -12.7639 7.6312 -13.7738 -36.0156 1.0001 1.0036 1.0007 0.0002 -0.0004 0.0002
 + - cost(#10)=0.966286   [o=15 t=15]
 + -- Parameters = -36.1778 -19.0584 -7.9001 13.0783 2.7139 44.9881 1.0155 1.0017 1.0086 0.0153 -0.0008 0.0000
 + - cost(#11)=0.965724   [o=22 t=4]
 + -- Parameters = -37.2054 -15.4450 0.3376 19.7206 -2.4332 43.3817 1.0088 0.9795 1.0173 0.0001 0.0009 -0.0089
 + - cost(#12)=0.968527   [o=67 t=10]
 + -- Parameters = 26.5302 4.0295 -5.4196 -21.7901 5.9960 8.8574 0.9701 1.0017 0.9973 0.0008 0.0067 0.0066
 + - cost(#13)=0.968871   [o=1 t=9]
 + -- Parameters = -33.0924 -18.8807 -2.2076 25.1164 1.1169 38.8842 0.9955 1.0245 1.0057 -0.0013 -0.0085 -0.0019
 + - cost(#14)=0.970301   [o=10 t=3]
 + -- Parameters = 3.2735 2.5259 -2.7781 4.1835 7.6937 -29.2837 1.0002 0.9903 0.9963 -0.0075 0.0098 0.0004
 + - cost(#15)=0.970157   [o=7 t=8]
 + -- Parameters = 4.3242 3.3862 -3.0392 -1.8177 6.9586 -30.2901 1.0139 0.9827 1.0438 -0.0094 0.0028 0.0011
 + - cost(#16)=0.970977   [o=4 t=11]
 + -- Parameters = -35.0472 -12.9272 -0.1490 22.1295 3.5876 39.0939 1.0031 1.0440 1.0046 -0.0010 0.0084 0.0005
 + - cost(#17)=0.974210   [o=75 t=13]
 + -- Parameters = -2.2368 -3.4230 -1.4133 -16.6335 -4.6188 -29.7676 1.0144 1.0109 1.0037 -0.0042 -0.0038 0.0056
 + - cost(#18)=0.973347   [o=50 t=16]
 + -- Parameters = 19.4075 3.4087 -8.3580 -14.1351 -1.3088 -6.0849 1.0016 0.9991 1.0055 0.0002 0.0002 -0.0009
 + - cost(#19)=0.789607   [o=-2 t=-2]
 + -- Parameters = -0.6221 -0.8600 3.4231 0.1177 0.8873 -0.9410 0.9842 0.9878 0.9502 -0.0001 0.0071 0.0188
 + - case #1 [o=0 t=0] is now the best
 + - Initial  cost = 0.786254
 + - Initial fine Parameters = -0.4889 -0.1520 3.7810 -0.0404 -0.0946 -0.7060 0.9849 0.9834 0.9397 -0.0042 0.0001 -0.0062
 + - Finalish cost = 0.785864 ; 473 funcs
 + - ini Finalish Parameters = -0.7563 -0.1661 3.7673 0.0162 -0.0283 -1.0743 0.9848 0.9836 0.9406 -0.0027 0.0085 -0.0047
 + - Final    cost = 0.785864 ; 266 funcs
 + Final fine fit Parameters:
       x-shift= -0.7563   y-shift= -0.1661   z-shift=  3.7673  ...  enorm=  3.8461 mm
       z-angle=  0.0162   x-angle= -0.0283   y-angle= -1.0743  ...  total=  1.0748 deg
       x-scale=  0.9848   y-scale=  0.9836   z-scale=  0.9406  ...  vol3D=  0.9111 = base bigger than source
     y/x-shear= -0.0027 z/x-shear=  0.0085 z/y-shear= -0.0047
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.7563 -0.1661 3.7673 0.0162 -0.0283 -1.0743 0.9848 0.9836 0.9406 -0.0027 0.0085 -0.0047
++ Unloading unneeded data
++ Wrote -1Dmatrix_save ./MPRAGE.GB15_unif_al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 25.6
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_MPRAGE.GB15_unif_lr_al_junk -overwrite ./MPRAGE.GB15_unif_unflipped_ns+orig
++ processing ./MPRAGE.GB15_unif_unflipped_ns+orig ...
#Script is running (command trimmed):
  3dAllineate -lpa -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./__tt_MPRAGE.GB15_unif_lr_al_junk+orig -prefix ./MPRAGE.GB15_unif_flip_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB15_unif_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_MPRAGE.GB15_unif_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4075280 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 66765 voxels [10.9%] in weight mask
++ Number of points for matching = 66765
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.660 48.339 41.120 (index)
 + source center of mass = 111.966 170.964 178.302 (index)
 + source-target CM = -0.280 -1.545 0.662 (xyz)
 + estimated center of mass shifts = -0.280 -1.545 0.662
++ shift param auto-range: -70.9..70.3 -80.8..77.7 -66.5..67.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.280052 .. 9.719948  center = -0.280052
 + Range param#2 [y-shift] = -11.545288 .. 8.454712  center = -1.545288
 + Range param#3 [z-shift] = -9.338417 .. 10.661583  center = 0.661583
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.280052 .. 39.719948  center = -0.280052
 + Range param#2 [y-shift] = -41.545288 .. 38.454712  center = -1.545288
 + Range param#3 [z-shift] = -39.338417 .. 40.661583  center = 0.661583
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000089
++ Final parameter search ranges:
 +       x-shift =  -40.280 ..   39.720
 +       y-shift =  -41.545 ..   38.455
 +       z-shift =  -39.338 ..   40.662
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4075280 [out of 23184225] voxels
 + base mask has 85428 [out of 609801] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=269.195 usiz=395.808
 + - copying weight image
 + - using 66765 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 56476 total points stored in 110 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#oo-++*[#6=0.971476] *-+.-o-+.*[#38=0.966616] **[#45=0.965327] *-+---*[#89=0.962475] *+o..$oo+..
 + - best 88 costs found:
   o= 0 v= 0.962475:  26.39   5.12   7.33  -7.50  -7.50   7.50  [grid]
   o= 1 v= 0.962614: -32.12 -13.34  -2.08  23.31   3.26  40.47  [rand]
   o= 2 v= 0.963110: -32.12 -13.34  -2.08  23.31  -3.26  40.47  [rand]
   o= 3 v= 0.963438: -32.12 -13.34   3.40  23.31   3.26  40.47  [rand]
   o= 4 v= 0.963458: -34.61  15.04  -7.94  16.34   8.64  40.54  [rand]
   o= 5 v= 0.963637: -34.61 -18.13  -7.94  16.34   8.64  40.54  [rand]
   o= 6 v= 0.964449:  31.56 -13.34  -2.08 -23.31   3.26 -40.47  [rand]
   o= 7 v= 0.964719: -34.11 -31.05  13.62  31.95  -9.87  34.85  [rand]
   o= 8 v= 0.965026:   6.39   5.12   7.33   7.50   7.50  30.00  [grid]
   o= 9 v= 0.965155:   9.97   7.29  16.30   7.51  21.00  38.82  [rand]
   o=10 v= 0.965327:   6.39   5.12  -6.01  -7.50   7.50  -7.50  [grid]
   o=11 v= 0.965465: -34.11 -31.05 -12.29  31.95  -9.87  34.85  [rand]
   o=12 v= 0.965838:  26.39   5.12  -6.01  -7.50  -7.50   7.50  [grid]
   o=13 v= 0.965862: -35.13 -37.22 -13.59  40.22 -24.26  41.52  [rand]
   o=14 v= 0.966009:   6.39   5.12  -6.01   7.50  -7.50 -30.00  [grid]
   o=15 v= 0.966301: -34.61 -18.13   9.26  16.34   8.64  40.54  [rand]
   o=16 v= 0.966470: -24.19   5.38  14.59 -13.51 -15.92  -9.43  [rand]
   o=17 v= 0.966538:  18.05  24.60  -5.38  -6.51  20.18  -7.56  [rand]
   o=18 v= 0.966554:  -6.95   5.12  -6.01  -7.50   7.50 -30.00  [grid]
   o=19 v= 0.966616:  -6.95   5.12  -6.01   7.50   7.50  -7.50  [grid]
   o=20 v= 0.966934:  29.50   9.20  14.62  -4.50   6.71   7.94  [rand]
   o=21 v= 0.966987:  36.37 -18.77  22.92  -5.26 -41.39 -40.03  [rand]
   o=22 v= 0.967084:  34.57 -37.22 -13.59 -40.22 -24.26 -41.52  [rand]
   o=23 v= 0.967088: -32.12 -13.34   3.40  23.31  -3.26  40.47  [rand]
   o=24 v= 0.967211: -36.93 -18.77  22.92  -5.26  41.39  40.03  [rand]
   o=25 v= 0.967381: -36.95  26.22   5.55  15.70  36.90  27.47  [rand]
   o=26 v= 0.967519:   6.39  -8.21  -6.01  -7.50  -7.50  -7.50  [grid]
   o=27 v= 0.967698:  31.56 -13.34   3.40 -23.31  -3.26 -40.47  [rand]
   o=28 v= 0.967719:  31.75  14.91  23.77 -11.69  21.87  14.16  [rand]
   o=29 v= 0.967756:  18.05  24.60   6.71  -6.51 -20.18  -7.56  [rand]
   o=30 v= 0.967944: -14.23  22.32  18.84  -5.58  38.34  17.97  [rand]
   o=31 v= 0.968027: -36.95  26.22  -4.22  15.70  36.90  27.47  [rand]
   o=32 v= 0.968324: -32.77  25.44  32.55   9.69  21.75  40.77  [rand]
   o=33 v= 0.968341:  31.56 -13.34  -2.08 -23.31  -3.26 -40.47  [rand]
   o=34 v= 0.968377:  26.39   5.12   7.33   7.50  -7.50   7.50  [grid]
   o=35 v= 0.968593: -35.13 -37.22  14.91  40.22 -24.26  41.52  [rand]
   o=36 v= 0.968715:  36.37 -18.77 -21.59  -5.26 -41.39 -40.03  [rand]
   o=37 v= 0.968819: -31.67 -31.50  -3.74  42.54  -9.20  25.31  [rand]
   o=38 v= 0.968942:   6.39   5.12  -6.01   7.50   7.50 -30.00  [grid]
   o=39 v= 0.969085:  31.56  10.25  -2.08  23.31  -3.26 -40.47  [rand]
   o=40 v= 0.969117: -29.64 -29.65   3.41  34.59  -4.09  21.59  [rand]
   o=41 v= 0.969121:  36.37 -18.77  22.92   5.26 -41.39 -40.03  [rand]
   o=42 v= 0.969226:   6.39   5.12   7.33  -7.50 -30.00 -30.00  [grid]
   o=43 v= 0.969320: -32.49  27.50 -35.48  40.41 -19.09  40.75  [rand]
   o=44 v= 0.969359:  31.56  10.25  -2.08  23.31   3.26 -40.47  [rand]
   o=45 v= 0.969530:  27.90 -15.77  14.15  11.27 -31.24  23.90  [rand]
   o=46 v= 0.969539:  31.93  27.50 -35.48  40.41  19.09 -40.75  [rand]
   o=47 v= 0.969543:  26.39   5.12  -6.01 -30.00   7.50   7.50  [grid]
   o=48 v= 0.969555:  23.63   5.38  14.59 -13.51 -15.92   9.43  [rand]
   o=49 v= 0.969572:  29.50   9.20  14.62   4.50   6.71   7.94  [rand]
   o=50 v= 0.969707:  26.39  25.12   7.33 -30.00  30.00   7.50  [grid]
   o=51 v= 0.969726:  33.55  27.96  13.62  31.95   9.87 -34.85  [rand]
   o=52 v= 0.969926:  26.39   5.12   7.33  -7.50   7.50   7.50  [grid]
   o=53 v= 0.969966:  26.39  -8.21  -6.01  -7.50 -30.00   7.50  [grid]
   o=54 v= 0.969989:  26.39  25.12  -6.01 -30.00   7.50   7.50  [grid]
   o=55 v= 0.970050: -34.11  27.96  13.62  31.95  -9.87  34.85  [rand]
   o=56 v= 0.970187:  26.39  25.12  -6.01 -30.00  30.00   7.50  [grid]
   o=57 v= 0.970190: -35.13  34.13  14.91  40.22 -24.26  41.52  [rand]
   o=58 v= 0.970245:  31.56  10.25   3.40  23.31   3.26 -40.47  [rand]
   o=59 v= 0.970256:  32.20  13.15  12.47 -11.16   9.40  34.39  [rand]
   o=60 v= 0.970325: -34.61  15.04  -7.94  16.34  -8.64  40.54  [rand]
   o=61 v= 0.970345: -31.67 -31.50   5.07  42.54  -9.20  25.31  [rand]
   o=62 v= 0.970393:  13.14  21.14  32.00   4.37  20.12 -15.12  [rand]
   o=63 v= 0.970581: -34.11  27.96 -12.29  31.95  -9.87  34.85  [rand]
   o=64 v= 0.970610: -36.65  11.29  23.07   3.80 -14.23  -6.51  [rand]
   o=65 v= 0.970757:  23.63  -8.48  14.59  13.51 -15.92   9.43  [rand]
   o=66 v= 0.970809: -38.04  14.09  -7.09  31.25  41.23 -36.84  [rand]
   o=67 v= 0.970810:  26.39   5.12   7.33   7.50   7.50   7.50  [grid]
   o=68 v= 0.970829:   9.97 -10.38  16.30  -7.51  21.00  38.82  [rand]
   o=69 v= 0.970904: -24.19   5.38  14.59 -13.51  15.92  -9.43  [rand]
   o=70 v= 0.970997:  33.55  27.96  13.62  31.95  -9.87 -34.85  [rand]
   o=71 v= 0.971094:  -6.95   5.12   7.33   7.50 -30.00  30.00  [grid]
   o=72 v= 0.971156:  -6.95  -8.21  -6.01  -7.50  -7.50 -30.00  [grid]
   o=73 v= 0.971172:  26.39   5.12  -6.01  -7.50   7.50   7.50  [grid]
   o=74 v= 0.971210:  33.50 -33.47  -7.05  12.26 -17.56  17.80  [rand]
   o=75 v= 0.971231:  26.39  -8.21  -6.01  -7.50   7.50   7.50  [grid]
   o=76 v= 0.971414:  34.05  15.04   9.26  16.34  -8.64 -40.54  [rand]
   o=77 v= 0.971420: -24.19  -8.48  14.59 -13.51  15.92  -9.43  [rand]
   o=78 v= 0.971446: -10.27  32.50  -5.86  -9.05  41.60  20.37  [rand]
   o=79 v= 0.971476:  -6.95   5.12  -6.01   7.50   7.50   7.50  [grid]
   o=80 v= 0.971545:  26.39  25.12  27.33 -30.00 -30.00  30.00  [grid]
   o=81 v= 0.971715:  34.05  15.04  -7.94 -16.34   8.64 -40.54  [rand]
   o=82 v= 0.971730:  26.39  25.12  -6.01  -7.50   7.50   7.50  [grid]
   o=83 v= 0.971750: -34.61  15.04   9.26  16.34   8.64  40.54  [rand]
   o=84 v= 0.971758: -32.12  10.25  -2.08  23.31   3.26  40.47  [rand]
   o=85 v= 0.971800:  23.63   5.38  14.59  13.51 -15.92   9.43  [rand]
   o=86 v= 0.971811:  26.39  -8.21  -6.01  -7.50  -7.50   7.50  [grid]
   o=87 v= 0.971838:   6.39  -8.21  -6.01  -7.50  -7.50 -30.00  [grid]
 + - A little optimization:*[#11722=0.95742] *[#11726=0.957378] *[#11734=0.957126] *[#11735=0.95693] *[#11736=0.956781] *[#11741=0.956756] *[#11745=0.956686] *[#11746=0.956673] .*[#11772=0.956611] *[#11778=0.956225] *[#11780=0.956084] *[#11781=0.955898] *[#11788=0.955848] *[#11789=0.955796] *[#11790=0.955773] *[#11792=0.955689] *[#11793=0.955666] *[#11795=0.955611] *[#11796=0.955442] *[#11801=0.955388] .*[#11811=0.94952] *[#11814=0.946934] *[#11818=0.946348] *[#11821=0.946068] *[#11823=0.94596] *[#11829=0.945888] *[#11830=0.945829] *[#11835=0.945676] *[#11836=0.945533] *[#11837=0.945235] *[#11844=0.945078] *[#11845=0.944971] *[#11847=0.944926] ........*[#12262=0.944876] *[#12264=0.944875] *[#12265=0.944822] *[#12269=0.944778] *[#12270=0.944744] *[#12271=0.944693] *[#12272=0.94469] ..............................................................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.956673:  26.99   4.77   4.44 -10.11  -9.14   7.45  [grid]  [f=40]
   o= 1 v= 0.955388: -36.31 -13.06  -1.73  23.60   2.91  39.91  [rand]  [f=49]
   o= 2 v= 0.944926: -36.96 -12.99  -1.51  21.90  -3.30  41.70  [rand]  [f=47]
   o= 3 v= 0.945150: -37.64 -13.60   0.33  22.10  -3.74  38.93  [rand]  [f=54]
   o= 4 v= 0.956594: -35.21  14.63  -9.56  14.37  12.09  36.81  [rand]  [f=48]
   o= 5 v= 0.958298: -33.69 -18.36  -8.24  16.28   9.05  44.80  [rand]  [f=35]
   o= 6 v= 0.962740:  31.85 -13.61  -3.44 -24.97   3.18 -40.89  [rand]  [f=29]
   o= 7 v= 0.958100: -33.59 -31.28  12.29  32.13  -6.94  34.51  [rand]  [f=44]
   o= 8 v= 0.954208:   7.88   4.36   3.67   7.67   7.36  31.93  [grid]  [f=76]
   o= 9 v= 0.963664:  10.87   7.48  16.33   7.17  20.68  38.90  [rand]  [f=47]
  *o=10 v= 0.944690:   4.24   5.16  -3.97  -7.26   6.07 -15.89  [grid]  [f=83]
   o=11 v= 0.954477: -36.99 -35.16 -10.40  30.00 -14.07  43.72  [rand]  [f=49]
   o=12 v= 0.961849:  26.42   0.73  -5.31  -7.62  -7.76   7.58  [grid]  [f=34]
   o=13 v= 0.959579: -34.39 -37.07  -9.20  40.32 -23.69  41.59  [rand]  [f=31]
   o=14 v= 0.952426:   5.38   4.44  -9.23   6.04  -7.35 -25.62  [grid]  [f=56]
   o=15 v= 0.948473: -37.05  -7.97   1.86  18.72   0.66  38.67  [rand]  [f=61]
   o=16 v= 0.961409: -24.14   5.78  12.25 -16.54 -17.84 -10.37  [rand]  [f=48]
   o=17 v= 0.956533:  18.30  22.86  -6.73  -4.22  21.79  -1.44  [rand]  [f=44]
   o=18 v= 0.952856:  -0.81   5.00  -5.43  -4.82   8.95 -27.64  [grid]  [f=69]
   o=19 v= 0.954708:  -5.84   4.57  -6.01   5.92   2.16  -7.24  [grid]  [f=43]
   o=20 v= 0.957698:  30.33  10.38  14.77  -5.66   8.84  12.94  [rand]  [f=36]
   o=21 v= 0.956002:  39.59 -19.10  25.90  -7.54 -40.83 -40.47  [rand]  [f=42]
   o=22 v= 0.957808:  35.06 -36.13 -12.57 -44.82 -22.80 -43.14  [rand]  [f=39]
   o=23 v= 0.946814: -38.85 -11.56   2.35  24.13  -6.20  37.97  [rand]  [f=55]
   o=24 v= 0.962957: -37.71 -22.28  22.95  -5.20  41.47  40.41  [rand]  [f=31]
   o=25 v= 0.963182: -37.33  26.57   4.95  13.98  37.19  25.95  [rand]  [f=37]
   o=26 v= 0.950585:   1.07  -6.51  -3.45  -7.25  -4.23  -9.31  [grid]  [f=63]
   o=27 v= 0.959109:  34.93 -13.43  -0.04 -25.42  -4.61 -42.29  [rand]  [f=32]
   o=28 v= 0.961825:  31.47  18.34  22.41 -15.57  19.66  15.22  [rand]  [f=55]
   o=29 v= 0.960375:  17.93  25.67   4.84  -6.39 -18.45  -4.23  [rand]  [f=81]
   o=30 v= 0.964450: -14.86  21.81  19.23  -4.55  38.62  19.76  [rand]  [f=41]
   o=31 v= 0.966042: -37.72  25.58  -4.61  13.98  36.96  26.57  [rand]  [f=39]
   o=32 v= 0.958340: -31.90  29.66  25.48   9.37  26.39  40.36  [rand]  [f=50]
   o=33 v= 0.960254:  36.97 -11.95  -1.77 -21.95  -2.46 -42.35  [rand]  [f=50]
   o=34 v= 0.954792:  28.73   3.27   3.14   2.85 -10.48   9.78  [grid]  [f=56]
   o=35 v= 0.966125: -35.77 -40.18  14.51  39.64 -22.63  41.48  [rand]  [f=34]
   o=36 v= 0.961010:  39.21 -18.08 -21.93  -5.75 -38.98 -39.58  [rand]  [f=36]
   o=37 v= 0.961342: -31.86 -39.18  -3.24  41.91 -11.87  25.58  [rand]  [f=44]
   o=38 v= 0.945999:   1.02   3.58  -4.32   4.96   7.39 -31.69  [grid]  [f=52]
   o=39 v= 0.967872:  31.57   9.84  -2.04  23.28   1.09 -40.42  [rand]  [f=45]
   o=40 v= 0.959893: -31.16 -23.80   3.73  35.19  -4.70  20.90  [rand]  [f=45]
   o=41 v= 0.954178:  39.63 -20.49  21.68 -12.90 -40.09 -43.98  [rand]  [f=49]
   o=42 v= 0.960629:   2.90   4.30   6.34 -13.40 -29.13 -29.89  [grid]  [f=51]
   o=43 v= 0.964099: -33.45  26.29 -35.65  42.61 -18.99  36.58  [rand]  [f=39]
   o=44 v= 0.966885:  32.22   9.18  -3.25  20.65   0.19 -40.74  [rand]  [f=39]
   o=45 v= 0.953868:  31.48 -16.45  15.11  13.64 -33.61  24.08  [rand]  [f=52]
   o=46 v= 0.965950:  31.81  27.07 -35.34  44.77  19.04 -40.70  [rand]  [f=37]
   o=47 v= 0.959473:  26.16   1.69  -5.25 -22.38   6.28   6.78  [grid]  [f=48]
   o=48 v= 0.956973:  26.15   5.62  15.20 -11.20 -19.57  10.33  [rand]  [f=48]
   o=49 v= 0.965733:  27.53   8.67  14.55   4.35   6.70   7.34  [rand]  [f=40]
   o=50 v= 0.968374:  26.92  25.28   7.16 -30.08  29.84  11.96  [grid]  [f=28]
   o=51 v= 0.962388:  34.39  26.35  10.87  31.71   4.53 -34.67  [rand]  [f=36]
   o=52 v= 0.956360:  26.58   3.01  12.99  -8.45   5.43  10.25  [grid]  [f=39]
   o=53 v= 0.966776:  26.72  -8.71  -5.76  -7.24 -25.69   7.88  [grid]  [f=39]
   o=54 v= 0.957164:  25.36  20.86  -6.21 -30.20   7.88   6.92  [grid]  [f=37]
   o=55 v= 0.954451: -38.54  27.34   7.32  23.88  -9.77  39.18  [rand]  [f=47]
   o=56 v= 0.959773:  23.76  20.99  -1.62 -28.12  32.03   6.41  [grid]  [f=38]
   o=57 v= 0.962869: -35.51  27.04  13.09  39.18 -25.12  43.73  [rand]  [f=42]
   o=58 v= 0.961628:  29.97   5.93   4.25  23.59   0.94 -40.68  [rand]  [f=51]
   o=59 v= 0.965085:  34.32  13.16  11.56  -9.93   9.00  32.64  [rand]  [f=48]
   o=60 v= 0.945872: -39.64  12.87  -6.22  16.85  -6.42  44.69  [rand]  [f=57]
   o=61 v= 0.965554: -31.29 -30.94   4.54  41.56  -4.03  24.89  [rand]  [f=36]
   o=62 v= 0.958905:  13.77  27.97  33.34   2.19  16.24 -13.99  [rand]  [f=50]
   o=63 v= 0.968424: -34.46  27.27  -6.81  32.62  -9.79  35.93  [rand]  [f=40]
   o=64 v= 0.962027: -37.54  11.73  20.41   1.74 -15.24  -8.68  [rand]  [f=40]
   o=65 v= 0.963041:  28.03  -8.43  14.15  12.14 -14.66   9.71  [rand]  [f=36]
   o=66 v= 0.966611: -39.46  14.65 -10.52  32.96  41.76 -36.93  [rand]  [f=51]
   o=67 v= 0.960367:  26.37  11.03   1.86   0.40   5.90   7.67  [grid]  [f=46]
   o=68 v= 0.966554:   8.38  -9.48  14.51  -9.65  21.39  37.34  [rand]  [f=48]
   o=69 v= 0.965823: -24.83   4.58  14.28 -13.46  18.96  -9.96  [rand]  [f=52]
   o=70 v= 0.962527:  34.36  28.09  11.76  28.00   1.16 -35.80  [rand]  [f=39]
   o=71 v= 0.969674:  -6.81   5.37   6.33   7.53 -31.36  29.13  [grid]  [f=40]
   o=72 v= 0.961773:  -5.19  -7.48  -5.01  -8.44  -2.11 -30.52  [grid]  [f=56]
   o=73 v= 0.959406:  25.69   5.27  -4.82  -6.09   3.59  11.00  [grid]  [f=47]
   o=74 v= 0.963332:  34.05 -34.88  -4.12  11.85 -10.70  16.40  [rand]  [f=41]
   o=75 v= 0.962443:  26.53  -8.39  -0.45  -5.84   0.92   9.49  [grid]  [f=46]
   o=76 v= 0.959804:  30.89   5.84   7.00  18.58  -8.86 -39.88  [rand]  [f=62]
   o=77 v= 0.964884: -24.04  -5.31  13.93 -12.48  15.48  -8.83  [rand]  [f=43]
   o=78 v= 0.965242: -13.97  32.92  -5.24  -9.19  41.96  19.92  [rand]  [f=37]
   o=79 v= 0.950619: -13.29   2.75  -4.33   6.06   3.05  11.99  [grid]  [f=54]
   o=80 v= 0.967351:  26.63  25.38  33.46 -33.27 -32.85  34.79  [grid]  [f=58]
   o=81 v= 0.959016:  39.60  15.43 -10.08 -16.26   3.19 -44.56  [rand]  [f=47]
   o=82 v= 0.965016:  25.58  20.46  -3.49  -8.40   7.22   7.76  [grid]  [f=57]
   o=83 v= 0.957454: -39.82  26.09   6.33  16.08  -1.91  43.26  [rand]  [f=51]
   o=84 v= 0.965649: -35.63  10.18  -2.60  24.27   3.42  40.98  [rand]  [f=37]
   o=85 v= 0.961489:  28.04   6.05  12.34  14.01 -16.16   9.46  [rand]  [f=49]
   o=86 v= 0.961100:  24.75  -1.14  -6.71 -10.03  -8.67   3.09  [grid]  [f=42]
   o=87 v= 0.952909:   4.60  -4.94  -2.86  -6.88 -10.65 -28.91  [grid]  [f=58]
 + - saving #10 for use with twobest
 + - saving # 2 for use with twobest
 + - skip # 3 for twobest: too close to set # 2
 + - saving #60 for use with twobest
 + - saving #38 for use with twobest
 + - skip #23 for twobest: too close to set # 2
 + - saving #15 for use with twobest
 + - saving #26 for use with twobest
 + - saving #79 for use with twobest
 + - saving #14 for use with twobest
 + - saving #18 for use with twobest
 + - saving #87 for use with twobest
 + - saving #45 for use with twobest
 + - saving #41 for use with twobest
 + - saving # 8 for use with twobest
 + - saving #55 for use with twobest
 + - saving #11 for use with twobest
 + - saving #19 for use with twobest
 + - saving #34 for use with twobest
 + - saving # 1 for use with twobest
 + - saving #21 for use with twobest
 + - saving #52 for use with twobest
 + - saving #17 for use with twobest
 + - saving # 4 for use with twobest
 + - saving # 0 for use with twobest
 + - saving #48 for use with twobest
 + - saving #54 for use with twobest
 + - saving #83 for use with twobest
 + - saving #20 for use with twobest
 + - saving #22 for use with twobest
 + - saving # 7 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=269.195 usiz=395.808
 + - retaining old weight image
 + - using 66765 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 56443 total points stored in 112 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.954590 [o=10 t=0]
 + -- Parameters = 4.5546 6.4914 -4.5619 -6.7142 6.4248 -14.2586 1.0012 0.9770 0.9842 -0.0000 0.0043 0.0270
 + - param set #2 has cost=0.955300 [o=2 t=1]
 + -- Parameters = -36.9497 -13.0209 -1.5885 22.3902 -3.2084 41.6770 1.0003 1.0008 1.0385 -0.0008 0.0007 0.0000
 + - param set #3 has cost=0.950912 [o=60 t=2]
 + -- Parameters = -39.9187 13.2092 -5.9608 16.5635 -5.8943 44.9687 1.0536 1.0070 1.0033 0.0015 0.0016 0.0012
 + - param set #4 has cost=0.956502 [o=38 t=3]
 + -- Parameters = 0.9718 3.5471 -4.5656 4.7937 7.1608 -32.0919 1.0031 0.9983 0.9962 0.0003 -0.0017 0.0122
 + - param set #5 has cost=0.957368 [o=15 t=4]
 + -- Parameters = -37.1924 -9.1650 1.4136 18.3334 0.0576 43.2816 1.0049 0.9998 0.9997 0.0007 0.0008 -0.0007
 + - param set #6 has cost=0.958288 [o=26 t=5]
 + -- Parameters = 0.2800 -5.2883 -3.4952 -8.1963 -4.2864 -8.9927 1.0486 1.0113 1.0086 0.0039 0.0043 0.0026
 + - param set #7 has cost=0.960726 [o=79 t=6]
 + -- Parameters = -13.1024 2.7585 -4.4189 5.7567 3.4164 12.2055 1.0026 0.9971 0.9974 -0.0002 -0.0005 -0.0004
 + - param set #8 has cost=0.959585 [o=14 t=7]
 + -- Parameters = 6.0600 4.0092 -8.8997 6.7686 -6.9811 -24.1587 1.0041 1.0078 1.0026 0.0010 0.0167 0.0021
 + - param set #9 has cost=0.951922 [o=18 t=8]
 + -- Parameters = 1.6061 5.9049 -6.2387 -4.1456 4.3507 -23.8850 0.9673 0.9705 1.0078 0.0122 0.0175 0.0141
 + - param set #10 has cost=0.964534 [o=87 t=9]
 + -- Parameters = 4.6049 -4.8738 -2.9092 -6.3177 -11.0517 -29.0994 0.9992 0.9992 1.0048 0.0127 0.0001 0.0009
 + - param set #11 has cost=0.963832 [o=45 t=10]
 + -- Parameters = 31.5196 -16.7354 15.6002 13.6508 -33.5906 24.1042 0.9997 1.0002 0.9968 0.0008 0.0119 0.0000
 + - param set #12 has cost=0.960559 [o=41 t=11]
 + -- Parameters = 39.5987 -20.4567 21.6610 -12.9023 -40.0835 -43.9765 1.0005 1.0000 1.0028 -0.0000 -0.0008 -0.0000
 + - param set #13 has cost=0.963209 [o=8 t=12]
 + -- Parameters = 7.8898 4.5727 5.1864 7.2469 7.4766 32.6984 0.9987 0.9935 1.0484 -0.0036 -0.0001 -0.0026
 + - param set #14 has cost=0.961167 [o=55 t=13]
 + -- Parameters = -38.5478 27.3248 7.3398 23.8476 -9.7475 39.2038 1.0001 1.0008 1.0004 -0.0000 -0.0001 -0.0001
 + - param set #15 has cost=0.961551 [o=11 t=14]
 + -- Parameters = -37.0444 -35.3504 -10.5282 30.1545 -13.9986 43.2860 0.9982 1.0023 0.9989 0.0004 -0.0008 -0.0001
 + - param set #16 has cost=0.961007 [o=19 t=15]
 + -- Parameters = -4.6501 4.4472 -5.5499 6.4323 2.1274 -6.1074 1.0046 0.9990 1.0005 0.0009 -0.0000 0.0102
 + - param set #17 has cost=0.961721 [o=34 t=16]
 + -- Parameters = 28.6852 3.5239 3.0771 2.9939 -10.2497 9.8434 1.0025 0.9842 1.0004 0.0015 -0.0007 0.0025
*[#17333=0.942799] *[#17334=0.941676] *[#17335=0.940228] *[#17336=0.939714] *[#17337=0.939458] *[#17338=0.938486] *[#17339=0.937723] *[#17340=0.937349] *[#17341=0.93705] *[#17343=0.935829] *[#17344=0.934224] *[#17345=0.932238] *[#17347=0.932156] *[#17348=0.931963] *[#17349=0.931367] *[#17353=0.930621] *[#17354=0.93059] *[#17356=0.929506] *[#17357=0.928772] *[#17358=0.928351] *[#17359=0.927856] *[#17361=0.927403] *[#17362=0.927301] *[#17363=0.927004] *[#17366=0.926974] *[#17367=0.926896] *[#17370=0.926854] *[#17371=0.926718] *[#17372=0.926183] *[#17373=0.926018] *[#17376=0.926015] *[#17380=0.925379] *[#17381=0.925225] *[#17382=0.924898] *[#17387=0.924802] *[#17389=0.924644] *[#17391=0.924493] *[#17392=0.924439] *[#17393=0.924321] *[#17396=0.923706] *[#17397=0.923546] *[#17399=0.923502] *[#17400=0.923295] *[#17403=0.923081] 
 + - param set #18 has cost=0.923081 [o=-1 t=-1]
 + -- Parameters = 0.7916 1.0923 2.8501 1.6303 -0.7940 -2.8590 0.9955 0.9932 0.9728 0.0180 0.0057 0.0059
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.531 
 + --- dist(#3,#1) = 0.234 
 + --- dist(#4,#1) = 0.127 
 + --- dist(#5,#1) = 0.495 
 + --- dist(#6,#1) = 0.325 
 + --- dist(#7,#1) = 0.513 
 + --- dist(#8,#1) = 0.109 
 + --- dist(#9,#1) = 0.237 
 + --- dist(#10,#1) = 0.485 
 + --- dist(#11,#1) = 0.174 
 + --- dist(#12,#1) = 0.105 
 + --- dist(#13,#1) = 0.492 
 + --- dist(#14,#1) = 0.513 
 + --- dist(#15,#1) = 0.349 
 + --- dist(#16,#1) = 0.395 
 + --- dist(#17,#1) = 0.384 
 + --- dist(#18,#1) = 0.292 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=269.195 usiz=395.808
 + - retaining old weight image
 + - using 66765 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 56857 total points stored in 115 'TOHD(13.984)' bloks (0 duplicates)
*[#17450=0.922973] *[#17451=0.922807] *[#17452=0.922754] *[#17455=0.922536] *[#17456=0.922243] *[#17457=0.922228] *[#17459=0.922197] *[#17460=0.922118] *[#17463=0.921853] *[#17466=0.921764] *[#17469=0.921529] *[#17470=0.9213] *[#17472=0.920438] *[#17475=0.920374] *[#17477=0.920308] *[#17480=0.920268] *[#17481=0.920028] *[#17482=0.919648] *[#17485=0.919413] *[#17486=0.919002] *[#17487=0.918236] *[#17488=0.917414] *[#17491=0.916249] *[#17498=0.91623] *[#17500=0.914313] *[#17501=0.913311] *[#17502=0.913268] *[#17504=0.913133] *[#17505=0.913115] *[#17507=0.912409] *[#17508=0.911758] *[#17509=0.91146] *[#17510=0.910346] *[#17511=0.909309] *[#17512=0.908792] *[#17513=0.908523] *[#17514=0.907502] 
 + - param set #1 has cost=0.907502 [o=-1 t=-1]
 + -- Parameters = -0.5167 -0.8169 4.9420 0.1245 0.5315 -3.7576 0.9434 1.0003 0.8966 0.0039 0.0171 0.0283
 + - param set #2 has cost=0.955172 [o=60 t=2]
 + -- Parameters = -39.8771 13.1161 -5.5455 13.3014 -6.0417 44.6853 1.0537 1.0058 1.0018 0.0010 0.0013 0.0023
 + - param set #3 has cost=0.959171 [o=18 t=8]
 + -- Parameters = 1.2344 5.8866 -6.1386 -3.1391 5.4257 -24.4603 0.9745 0.9518 1.0310 0.0077 0.0129 0.0263
 + - param set #4 has cost=0.964251 [o=10 t=0]
 + -- Parameters = 4.4622 6.7529 -4.3777 -6.5391 7.0679 -14.2391 1.0064 0.9726 0.9867 -0.0008 0.0053 0.0360
 + - param set #5 has cost=0.960889 [o=2 t=1]
 + -- Parameters = -36.9188 -13.0321 -1.3105 22.4070 -3.1990 41.6885 1.0002 1.0025 1.0648 -0.0000 -0.0001 0.0000
 + - param set #6 has cost=0.960998 [o=38 t=3]
 + -- Parameters = 1.0435 5.5927 -5.3418 4.6017 7.3331 -32.0962 1.0139 0.9548 0.9967 0.0038 -0.0033 0.0181
 + - param set #7 has cost=0.960734 [o=15 t=4]
 + -- Parameters = -36.8130 -9.6409 1.7867 18.4554 0.0873 44.4408 1.0023 1.0070 1.0339 -0.0006 0.0010 -0.0025
 + - param set #8 has cost=0.961292 [o=26 t=5]
 + -- Parameters = 0.4611 -5.3001 -3.5809 -7.9313 -4.3147 -8.8664 1.0492 1.0118 1.0111 0.0072 0.0039 0.0022
 + - param set #9 has cost=0.965932 [o=14 t=7]
 + -- Parameters = 6.3606 3.8387 -8.5110 6.8086 -6.5807 -24.7883 1.0024 1.0066 1.0042 -0.0008 0.0196 0.0015
 + - param set #10 has cost=0.963956 [o=41 t=11]
 + -- Parameters = 39.5923 -20.7006 21.7618 -16.5695 -39.7825 -44.4370 1.0020 1.0012 1.0033 0.0002 -0.0008 -0.0009
 + - param set #11 has cost=0.967775 [o=79 t=6]
 + -- Parameters = -12.9922 2.9816 -4.6452 5.5292 3.5862 11.9624 1.0056 0.9918 0.9874 -0.0017 -0.0002 0.0102
 + - param set #12 has cost=0.963541 [o=19 t=15]
 + -- Parameters = -2.9020 4.1342 -5.5919 4.3309 0.9753 -4.0174 1.0249 1.0067 1.0167 0.0005 -0.0001 0.0084
 + - param set #13 has cost=0.967761 [o=55 t=13]
 + -- Parameters = -38.5458 27.3400 7.3533 23.8457 -9.7359 39.2109 1.0001 1.0009 1.0003 -0.0000 -0.0001 -0.0002
 + - param set #14 has cost=0.964358 [o=11 t=14]
 + -- Parameters = -38.1777 -35.9879 -9.8265 31.9699 -13.3472 44.5921 0.9777 1.0006 1.0006 -0.0076 -0.0031 -0.0078
 + - param set #15 has cost=0.967302 [o=34 t=16]
 + -- Parameters = 28.1323 3.4357 2.9382 2.5197 -9.7295 9.4430 1.0014 0.9825 1.0401 0.0038 -0.0007 0.0023
 + - param set #16 has cost=0.968937 [o=8 t=12]
 + -- Parameters = 7.9439 4.7120 5.2018 6.5852 8.0794 32.9161 1.0005 0.9895 1.0457 -0.0025 0.0004 -0.0045
 + - param set #17 has cost=0.969452 [o=45 t=10]
 + -- Parameters = 31.5341 -16.7716 15.8294 13.6972 -33.5835 24.1833 0.9997 1.0006 0.9959 0.0010 0.0121 0.0084
 + - param set #18 has cost=0.970707 [o=87 t=9]
 + -- Parameters = 4.7185 -4.8728 -2.9566 -6.1730 -11.0778 -29.2438 1.0000 1.0020 1.0053 0.0212 0.0003 0.0007
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.538 
 + --- dist(#3,#1) = 0.23 
 + --- dist(#4,#1) = 0.536 
 + --- dist(#5,#1) = 0.505 
 + --- dist(#6,#1) = 0.315 
 + --- dist(#7,#1) = 0.165 
 + --- dist(#8,#1) = 0.173 
 + --- dist(#9,#1) = 0.501 
 + --- dist(#10,#1) = 0.13 
 + --- dist(#11,#1) = 0.537 
 + --- dist(#12,#1) = 0.234 
 + --- dist(#13,#1) = 0.358 
 + --- dist(#14,#1) = 0.477 
 + --- dist(#15,#1) = 0.175 
 + --- dist(#16,#1) = 0.407 
 + --- dist(#17,#1) = 0.401 
 + --- dist(#18,#1) = 0.283 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=269.195 usiz=395.808
 + - retaining old weight image
 + - using 66765 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 57079 total points stored in 116 'TOHD(13.9467)' bloks (0 duplicates)
*[#19200=0.907179] *[#19203=0.907092] *[#19206=0.906598] *[#19207=0.906329] *[#19208=0.906193] *[#19211=0.906065] *[#19212=0.905887] *[#19215=0.905643] *[#19218=0.905439] *[#19219=0.905197] *[#19220=0.904827] *[#19221=0.904294] *[#19222=0.904222] *[#19223=0.904101] *[#19226=0.90377] *[#19227=0.903009] *[#19228=0.901597] *[#19229=0.900969] *[#19233=0.90029] *[#19237=0.900223] *[#19238=0.900154] *[#19239=0.899912] *[#19242=0.899864] *[#19245=0.899773] *[#19246=0.899744] *[#19247=0.899695] *[#19249=0.899686] *[#19250=0.899666] *[#19251=0.899604] *[#19252=0.899591] *[#19254=0.89952] *[#19256=0.899463] *[#19257=0.899438] *[#19258=0.899374] *[#19261=0.899359] *[#19262=0.899327] *[#19263=0.899319] *[#19264=0.899317] *[#19268=0.899165] *[#19269=0.89908] *[#19270=0.898987] *[#19272=0.898985] *[#19273=0.898759] *[#19274=0.898702] *[#19277=0.898655] *[#19280=0.898621] *[#19283=0.898524] *[#19286=0.898507] *[#19288=0.898468] *[#19289=0.898421] *[#19290=0.898404] *[#19291=0.898404] *[#19293=0.898342] *[#19294=0.898308] 
 + - param set #1 has cost=0.898308 [o=-1 t=-1]
 + -- Parameters = -1.3803 -1.0643 6.1139 1.9029 2.1534 -5.8522 0.9376 0.9569 0.8648 -0.0039 0.0093 0.0200
 + - param set #2 has cost=0.956862 [o=60 t=2]
 + -- Parameters = -40.0936 13.6644 -5.1770 11.7664 -5.9971 44.9900 1.0709 0.9715 1.0105 -0.0051 0.0016 0.0045
 + - param set #3 has cost=0.964064 [o=18 t=8]
 + -- Parameters = 1.2333 5.7117 -6.2116 -3.1373 5.4493 -24.4404 0.9742 0.9529 1.0301 0.0072 0.0135 0.0330
 + - param set #4 has cost=0.963328 [o=15 t=4]
 + -- Parameters = -36.8615 -9.5131 1.7995 18.3712 0.1378 44.2992 1.0021 1.0074 1.0334 0.0007 0.0007 -0.0024
 + - param set #5 has cost=0.963293 [o=2 t=1]
 + -- Parameters = -36.9172 -13.0470 -1.2889 22.3991 -3.2078 41.6881 1.0002 1.0025 1.0649 -0.0000 -0.0000 0.0001
 + - param set #6 has cost=0.965270 [o=38 t=3]
 + -- Parameters = 1.2640 5.6955 -5.4098 4.6151 7.2344 -31.5208 1.0202 0.9523 0.9972 0.0016 0.0041 0.0204
 + - param set #7 has cost=0.965767 [o=26 t=5]
 + -- Parameters = 0.5192 -5.2463 -3.6707 -7.9787 -4.3034 -8.8324 1.0495 1.0116 1.0137 0.0073 0.0043 0.0026
 + - param set #8 has cost=0.966901 [o=19 t=15]
 + -- Parameters = -2.3217 4.3937 -5.6790 2.5805 1.8826 -2.6300 1.0270 1.0008 1.0175 -0.0013 -0.0063 0.0217
 + - param set #9 has cost=0.964846 [o=41 t=11]
 + -- Parameters = 39.6071 -20.6996 21.7639 -16.6072 -39.8536 -44.4370 1.0019 1.0023 1.0032 0.0002 -0.0009 0.0052
 + - param set #10 has cost=0.969355 [o=10 t=0]
 + -- Parameters = 4.4819 6.7960 -4.5006 -6.4564 7.2016 -14.1717 1.0082 0.9717 0.9875 -0.0014 0.0058 0.0444
 + - param set #11 has cost=0.966931 [o=11 t=14]
 + -- Parameters = -38.2379 -35.9714 -9.8276 31.8078 -13.4182 44.5622 0.9772 1.0005 1.0013 -0.0074 -0.0032 -0.0069
 + - param set #12 has cost=0.969956 [o=14 t=7]
 + -- Parameters = 6.3571 3.8985 -8.3445 6.8287 -6.6317 -24.9822 1.0018 1.0072 1.0058 -0.0005 0.0200 0.0017
 + - param set #13 has cost=0.971078 [o=34 t=16]
 + -- Parameters = 28.1310 3.4335 2.9403 2.5199 -9.7330 9.4507 1.0014 0.9825 1.0400 0.0096 -0.0007 0.0023
 + - param set #14 has cost=0.969927 [o=55 t=13]
 + -- Parameters = -38.5279 27.3152 7.4300 23.8235 -9.6894 39.5165 0.9999 1.0008 1.0012 0.0000 -0.0003 0.0003
 + - param set #15 has cost=0.968831 [o=79 t=6]
 + -- Parameters = -12.6510 3.4845 -5.1441 5.8168 3.7020 11.3682 1.0009 0.9936 0.9289 -0.0046 -0.0068 -0.0012
 + - param set #16 has cost=0.971913 [o=8 t=12]
 + -- Parameters = 8.4196 5.0933 5.5038 6.0126 8.5792 32.7288 1.0061 0.9905 1.0498 -0.0059 -0.0013 -0.0098
 + - param set #17 has cost=0.973636 [o=45 t=10]
 + -- Parameters = 31.5351 -16.7531 15.8270 13.7020 -33.5923 24.1635 0.9996 1.0024 0.9959 0.0010 0.0121 0.0085
 + - param set #18 has cost=0.975123 [o=87 t=9]
 + -- Parameters = 4.7174 -4.8766 -2.9411 -6.1352 -11.0791 -29.2753 0.9997 1.0019 1.0066 0.0270 0.0003 0.0011
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.565 
 + --- dist(#3,#1) = 0.528 
 + --- dist(#4,#1) = 0.557 
 + --- dist(#5,#1) = 0.238 
 + --- dist(#6,#1) = 0.512 
 + --- dist(#7,#1) = 0.285 
 + --- dist(#8,#1) = 0.214 
 + --- dist(#9,#1) = 0.22 
 + --- dist(#10,#1) = 0.56 
 + --- dist(#11,#1) = 0.191 
 + --- dist(#12,#1) = 0.176 
 + --- dist(#13,#1) = 0.504 
 + --- dist(#14,#1) = 0.213 
 + --- dist(#15,#1) = 0.369 
 + --- dist(#16,#1) = 0.429 
 + --- dist(#17,#1) = 0.411 
 + --- dist(#18,#1) = 0.26 
 + - Total coarse refinement net CPU time = 0.0 s; 5045 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=269.195 usiz=395.808
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 57067 total points stored in 116 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.901201 * [o=-1 t=-1]
 + -- Parameters = -1.3803 -1.0643 6.1139 1.9029 2.1534 -5.8522 0.9376 0.9569 0.8648 -0.0039 0.0093 0.0200
 + - cost(#2)=0.957952   [o=60 t=2]
 + -- Parameters = -40.0936 13.6644 -5.1770 11.7664 -5.9971 44.9900 1.0709 0.9715 1.0105 -0.0051 0.0016 0.0045
 + - cost(#3)=0.964426   [o=2 t=1]
 + -- Parameters = -36.9172 -13.0470 -1.2889 22.3991 -3.2078 41.6881 1.0002 1.0025 1.0649 -0.0000 -0.0000 0.0001
 + - cost(#4)=0.963710   [o=15 t=4]
 + -- Parameters = -36.8615 -9.5131 1.7995 18.3712 0.1378 44.2992 1.0021 1.0074 1.0334 0.0007 0.0007 -0.0024
 + - cost(#5)=0.965947   [o=18 t=8]
 + -- Parameters = 1.2333 5.7117 -6.2116 -3.1373 5.4493 -24.4404 0.9742 0.9529 1.0301 0.0072 0.0135 0.0330
 + - cost(#6)=0.964933   [o=41 t=11]
 + -- Parameters = 39.6071 -20.6996 21.7639 -16.6072 -39.8536 -44.4370 1.0019 1.0023 1.0032 0.0002 -0.0009 0.0052
 + - cost(#7)=0.967329   [o=38 t=3]
 + -- Parameters = 1.2640 5.6955 -5.4098 4.6151 7.2344 -31.5208 1.0202 0.9523 0.9972 0.0016 0.0041 0.0204
 + - cost(#8)=0.967611   [o=26 t=5]
 + -- Parameters = 0.5192 -5.2463 -3.6707 -7.9787 -4.3034 -8.8324 1.0495 1.0116 1.0137 0.0073 0.0043 0.0026
 + - cost(#9)=0.968541   [o=19 t=15]
 + -- Parameters = -2.3217 4.3937 -5.6790 2.5805 1.8826 -2.6300 1.0270 1.0008 1.0175 -0.0013 -0.0063 0.0217
 + - cost(#10)=0.967891   [o=11 t=14]
 + -- Parameters = -38.2379 -35.9714 -9.8276 31.8078 -13.4182 44.5622 0.9772 1.0005 1.0013 -0.0074 -0.0032 -0.0069
 + - cost(#11)=0.970094   [o=79 t=6]
 + -- Parameters = -12.6510 3.4845 -5.1441 5.8168 3.7020 11.3682 1.0009 0.9936 0.9289 -0.0046 -0.0068 -0.0012
 + - cost(#12)=0.971162   [o=10 t=0]
 + -- Parameters = 4.4819 6.7960 -4.5006 -6.4564 7.2016 -14.1717 1.0082 0.9717 0.9875 -0.0014 0.0058 0.0444
 + - cost(#13)=0.970871   [o=55 t=13]
 + -- Parameters = -38.5279 27.3152 7.4300 23.8235 -9.6894 39.5165 0.9999 1.0008 1.0012 0.0000 -0.0003 0.0003
 + - cost(#14)=0.970738   [o=14 t=7]
 + -- Parameters = 6.3571 3.8985 -8.3445 6.8287 -6.6317 -24.9822 1.0018 1.0072 1.0058 -0.0005 0.0200 0.0017
 + - cost(#15)=0.971825   [o=34 t=16]
 + -- Parameters = 28.1310 3.4335 2.9403 2.5199 -9.7330 9.4507 1.0014 0.9825 1.0400 0.0096 -0.0007 0.0023
 + - cost(#16)=0.973299   [o=8 t=12]
 + -- Parameters = 8.4196 5.0933 5.5038 6.0126 8.5792 32.7288 1.0061 0.9905 1.0498 -0.0059 -0.0013 -0.0098
 + - cost(#17)=0.974449   [o=45 t=10]
 + -- Parameters = 31.5351 -16.7531 15.8270 13.7020 -33.5923 24.1635 0.9996 1.0024 0.9959 0.0010 0.0121 0.0085
 + - cost(#18)=0.975420   [o=87 t=9]
 + -- Parameters = 4.7174 -4.8766 -2.9411 -6.1352 -11.0791 -29.2753 0.9997 1.0019 1.0066 0.0270 0.0003 0.0011
 + - cost(#19)=0.966828   [o=-2 t=-2]
 + -- Parameters = -0.2801 -1.5453 0.6616 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.899739 * [o=-1 t=-1]
 + -- Parameters = -1.1841 -1.1475 6.3695 1.4046 2.4051 -5.5946 0.9435 0.9572 0.8589 -0.0163 0.0104 0.0209
 + - cost(#2)=0.956877   [o=60 t=2]
 + -- Parameters = -40.1219 13.9393 -4.9839 11.6654 -5.9711 44.8837 1.0724 0.9721 0.9901 -0.0057 0.0014 0.0054
 + - cost(#3)=0.964064   [o=2 t=1]
 + -- Parameters = -36.9110 -13.0078 -1.3577 22.4907 -3.2853 41.7752 1.0003 1.0029 1.0678 0.0004 -0.0077 0.0003
 + - cost(#4)=0.963322   [o=15 t=4]
 + -- Parameters = -36.8831 -9.3720 1.7171 18.4537 0.1826 44.3679 1.0010 1.0090 1.0348 0.0080 0.0011 -0.0024
 + - cost(#5)=0.965046   [o=18 t=8]
 + -- Parameters = 1.2323 5.5041 -6.2782 -2.8605 5.5780 -24.8547 0.9731 0.9484 1.0332 -0.0023 0.0162 0.0376
 + - cost(#6)=0.964929   [o=41 t=11]
 + -- Parameters = 39.6182 -20.6961 21.7543 -16.6243 -39.8498 -44.4392 1.0019 1.0024 1.0032 0.0002 -0.0009 0.0051
 + - cost(#7)=0.966772   [o=38 t=3]
 + -- Parameters = 1.2143 5.7127 -5.3864 4.5053 7.0457 -31.2404 1.0202 0.9545 1.0008 0.0036 0.0089 0.0299
 + - cost(#8)=0.967573   [o=26 t=5]
 + -- Parameters = 0.5827 -5.1900 -3.7146 -8.0638 -4.2591 -8.8100 1.0506 1.0115 1.0145 0.0073 0.0042 0.0027
 + - cost(#9)=0.967737   [o=19 t=15]
 + -- Parameters = -1.8535 4.3511 -5.4507 2.6513 1.7755 -1.9558 1.0281 1.0048 1.0183 -0.0019 -0.0148 0.0224
 + - cost(#10)=0.967756   [o=11 t=14]
 + -- Parameters = -38.2362 -35.9688 -9.8269 31.8062 -13.4156 44.5661 0.9772 1.0004 0.9783 -0.0074 -0.0032 -0.0068
 + - cost(#11)=0.970050   [o=79 t=6]
 + -- Parameters = -12.6499 3.4643 -5.1413 5.8207 3.6698 11.3811 1.0007 0.9934 0.9309 -0.0046 -0.0069 -0.0011
 + - cost(#12)=0.970471   [o=10 t=0]
 + -- Parameters = 4.6503 7.0471 -4.2910 -6.4856 7.9421 -14.1640 1.0056 0.9677 0.9945 -0.0039 0.0077 0.0534
 + - cost(#13)=0.969377   [o=55 t=13]
 + -- Parameters = -39.1656 26.8615 7.7879 23.1209 -8.9670 40.5038 1.0075 1.0000 1.0048 -0.0036 -0.0001 -0.0021
 + - cost(#14)=0.970594   [o=14 t=7]
 + -- Parameters = 6.3398 3.9168 -8.2873 6.9028 -6.4566 -25.0260 1.0010 1.0070 1.0072 -0.0001 0.0201 0.0092
 + - cost(#15)=0.971117   [o=34 t=16]
 + -- Parameters = 28.0956 3.6738 2.9279 2.5235 -10.0803 9.4225 1.0020 0.9795 1.0462 0.0090 -0.0106 0.0019
 + - cost(#16)=0.973013   [o=8 t=12]
 + -- Parameters = 8.5337 5.2965 5.5372 5.8970 8.4355 32.4858 1.0091 0.9886 1.0516 -0.0061 0.0006 -0.0121
 + - cost(#17)=0.974449   [o=45 t=10]
 + -- Parameters = 31.5351 -16.7531 15.8270 13.7020 -33.5923 24.1635 0.9996 1.0024 0.9959 0.0010 0.0121 0.0085
 + - cost(#18)=0.975250   [o=87 t=9]
 + -- Parameters = 4.7388 -4.8348 -2.8672 -6.1005 -11.1124 -29.3878 1.0015 1.0057 1.0073 0.0269 0.0004 0.0010
 + - cost(#19)=0.898586 * [o=-2 t=-2]
 + -- Parameters = -1.7102 0.7059 7.4284 1.5578 -1.8085 -6.6138 0.9430 0.9678 0.8239 -0.0190 0.0210 -0.0331
 + - case #19 [o=-2 t=-2] is now the best
 + - Initial  cost = 0.898586
 + - Initial fine Parameters = -1.7102 0.7059 7.4284 1.5578 -1.8085 -6.6138 0.9430 0.9678 0.8239 -0.0190 0.0210 -0.0331
*[#22974=0.897802] *[#22982=0.897718] *[#22983=0.89765] *[#22984=0.897457] *[#22985=0.897302] *[#22986=0.897137] *[#22987=0.896922] *[#22990=0.896797] *[#23005=0.89679] *[#23007=0.896678] *[#23010=0.896646] *[#23012=0.896616] *[#23015=0.89661] *[#23017=0.896519] *[#23020=0.896514] *[#23021=0.896509] *[#23022=0.896479] *[#23023=0.896401] *[#23024=0.896377] *[#23025=0.896294] *[#23030=0.896259] *[#23032=0.896258] *[#23033=0.896233] *[#23037=0.896161] *[#23038=0.896149] *[#23040=0.896093] *[#23041=0.896048] *[#23044=0.896048] *[#23046=0.895978] *[#23049=0.895919] *[#23052=0.895899] *[#23053=0.895872] *[#23055=0.895766] *[#23058=0.895717] *[#23059=0.895684] *[#23062=0.89563] *[#23063=0.895602] *[#23064=0.895516] *[#23067=0.895408] *[#23068=0.895378] *[#23069=0.895294] *[#23070=0.895193] *[#23071=0.895082] *[#23072=0.894979] *[#23073=0.894969] *[#23082=0.894625] *[#23084=0.894615] *[#23085=0.894566] *[#23086=0.894553] *[#23091=0.894498] *[#23092=0.894461] *[#23095=0.894452] *[#23096=0.894448] *[#23098=0.894448] *[#23100=0.894419] *[#23103=0.894403] *[#23104=0.894379] *[#23107=0.894377] *[#23109=0.894334] *[#23110=0.894299] *[#23111=0.894248] *[#23114=0.89411] *[#23131=0.894076] *[#23134=0.89404] *[#23146=0.894036] *[#23147=0.894034] *[#23148=0.894033] *[#23149=0.894031] *[#23152=0.894026] *[#23155=0.89402] *[#23156=0.894015] *[#23159=0.893999] *[#23160=0.893983] *[#23161=0.893975] *[#23164=0.893972] *[#23166=0.893962] *[#23167=0.893953] *[#23168=0.893944] *[#23169=0.893936] *[#23172=0.893926] *[#23173=0.89392] *[#23174=0.893918] *[#23175=0.893913] *[#23178=0.893912] *[#23179=0.893904] *[#23180=0.893883] *[#23181=0.893882] *[#23182=0.893878] *[#23183=0.893868] *[#23186=0.893864] *[#23191=0.89386] *[#23193=0.893859] *[#23194=0.893858] *[#23195=0.893856] *[#23196=0.893853] *[#23197=0.89385] *[#23200=0.893849] *[#23201=0.893847] *[#23202=0.893846] *[#23203=0.893844] *[#23204=0.893839] *[#23205=0.893833] *[#23206=0.893833] *[#23209=0.893832] *[#23210=0.893831] *[#23211=0.893828] *[#23212=0.893825] *[#23214=0.893824] *[#23215=0.893821] *[#23216=0.893818] *[#23217=0.893813] *[#23220=0.893811] *[#23223=0.893807] *[#23224=0.893805] *[#23228=0.8938] *[#23229=0.893799] *[#23230=0.893798] *[#23232=0.893794] *[#23233=0.893793] *[#23234=0.893791] *[#23235=0.893789] *[#23236=0.893785] *[#23237=0.893776] *[#23238=0.893773] *[#23242=0.893751] *[#23247=0.893745] *[#23248=0.893742] *[#23249=0.89374] *[#23250=0.893736] *[#23251=0.893733] *[#23252=0.893729] *[#23255=0.893723] *[#23257=0.893722] *[#23258=0.893719] *[#23259=0.893718] *[#23262=0.893716] *[#23263=0.893712] *[#23264=0.893705] *[#23265=0.893702] *[#23268=0.893701] *[#23272=0.893693] *[#23275=0.89369] *[#23276=0.893687] *[#23277=0.893686] *[#23278=0.893685] *[#23279=0.893684] *[#23280=0.893683] *[#23281=0.893681] *[#23282=0.893681] *[#23283=0.89368] *[#23285=0.893678] *[#23286=0.893675] *[#23287=0.893673] *[#23288=0.89367] *[#23289=0.893669] *[#23291=0.893669] *[#23293=0.893667] *[#23294=0.893661] *[#23295=0.893656] *[#23296=0.893648] *[#23297=0.893645] *[#23298=0.893644] *[#23301=0.893643] *[#23304=0.893638] *[#23305=0.893635] *[#23306=0.893631] *[#23307=0.893628] *[#23310=0.893626] *[#23311=0.893625] *[#23312=0.893625] *[#23313=0.893622] *[#23314=0.893618] *[#23315=0.893617] *[#23318=0.893613] *[#23319=0.89361] *[#23320=0.893607] *[#23327=0.893604] *[#23328=0.893598] *[#23329=0.893591] *[#23330=0.893589] *[#23333=0.893587] *[#23334=0.893583] *[#23335=0.89358] *[#23336=0.893575] *[#23337=0.89357] *[#23338=0.893567] *[#23341=0.893559] *[#23344=0.893552] *[#23348=0.893547] *[#23351=0.893544] *[#23352=0.893543] *[#23353=0.893542] *[#23354=0.893539] *[#23355=0.893535] *[#23358=0.89353] *[#23359=0.893522] *[#23362=0.893512] *[#23363=0.893509] *[#23364=0.893501] *[#23365=0.893501] *[#23372=0.893494] *[#23373=0.893491] *[#23374=0.893487] *[#23377=0.893485] *[#23379=0.893483] *[#23384=0.893482] *[#23389=0.89348] *[#23390=0.893479] *[#23397=0.893478] *[#23398=0.893477] *[#23399=0.893475] *[#23400=0.893473] *[#23401=0.893472] *[#23402=0.893468] *[#23413=0.893467] *[#23414=0.893467] *[#23417=0.893465] *[#23418=0.893464] *[#23419=0.893463] *[#23420=0.893462] *[#23427=0.89346] *[#23428=0.89346] *[#23429=0.893458] *[#23434=0.893457] *[#23435=0.893456] *[#23436=0.893455] *[#23441=0.893455] *[#23443=0.893453] *[#23446=0.893451] *[#23447=0.89345] *[#23448=0.893449] *[#23451=0.893448] *[#23452=0.893447] *[#23453=0.893445] *[#23456=0.893444] *[#23457=0.893441] *[#23459=0.893439] *[#23460=0.893432] *[#23461=0.893428] *[#23462=0.893428] *[#23464=0.893423] *[#23465=0.893422] *[#23468=0.893421] *[#23471=0.89342] *[#23472=0.893419] *[#23477=0.893418] *[#23480=0.893417] *[#23485=0.893416] *[#23491=0.893415] *[#23492=0.893415] *[#23493=0.893414] *[#23496=0.893413] *[#23499=0.893412] *[#23500=0.893412] *[#23501=0.893411] *[#23502=0.89341] *[#23503=0.893409] *[#23506=0.893409] *[#23508=0.893408] *[#23510=0.893408] *[#23511=0.893405] *[#23512=0.893405] *[#23513=0.893404] *[#23516=0.893402] *[#23517=0.893401] *[#23518=0.893401] *[#23519=0.8934] *[#23520=0.893399] *[#23521=0.893399] *[#23522=0.893399] *[#23527=0.893397] *[#23530=0.893395] *[#23533=0.893393] *[#23534=0.893391] *[#23535=0.89339] *[#23538=0.89339] *[#23544=0.893389] *[#23547=0.893389] *[#23549=0.893388] *[#23550=0.893386] *[#23551=0.893384] *[#23556=0.893383] *[#23557=0.893382] *[#23558=0.893381] *[#23559=0.89338] *[#23560=0.893377] *[#23565=0.893375] *[#23566=0.893375] *[#23567=0.893374] *[#23572=0.893374] *[#23574=0.893374] *[#23579=0.893373] *[#23580=0.893373] *[#23582=0.893373] *[#23585=0.893372] *[#23586=0.893371] *[#23587=0.893371] *[#23590=0.89337] *[#23591=0.89337] *[#23593=0.893369] *[#23606=0.893369] *[#23607=0.893368] *[#23621=0.893368] *[#23624=0.893368] *[#23625=0.893368] *[#23630=0.893368] *[#23634=0.893368] *[#23651=0.893368] *[#23652=0.893368] *[#23667=0.893368] *[#23678=0.893367] 
 + - Finalish cost = 0.893367 ; 742 funcs
 + - ini Finalish Parameters = -1.2742 0.9682 7.2811 0.1254 -2.3267 -5.3820 0.9424 0.9646 0.8266 -0.0881 0.0016 -0.0439
*[#23765=0.893367] *[#23812=0.893364] *[#23813=0.893364] *[#23821=0.893358] *[#23824=0.893358] *[#23836=0.893357] *[#23846=0.893356] *[#23857=0.893355] *[#23866=0.893354] *[#23877=0.893353] *[#23886=0.893351] *[#23891=0.893351] *[#23893=0.89335] *[#23896=0.893348] *[#23907=0.893347] *[#23910=0.893345] *[#23915=0.893345] *[#23917=0.893344] *[#23942=0.893343] *[#23947=0.893343] *[#23953=0.893341] *[#23958=0.89334] *[#23959=0.89334] *[#23962=0.893339] *[#23987=0.893339] *[#24010=0.893338] *[#24017=0.893338] *[#24019=0.893335] *[#24022=0.893335] *[#24036=0.893334] *[#24042=0.893334] *[#24049=0.893332] *[#24059=0.893332] *[#24060=0.893332] *[#24064=0.893332] *[#24070=0.89333] *[#24077=0.89333] *[#24078=0.89333] *[#24081=0.893326] *[#24084=0.893326] *[#24085=0.893325] *[#24086=0.893324] *[#24090=0.893324] *[#24095=0.893324] *[#24096=0.893323] *[#24099=0.89332] *[#24102=0.893319] *[#24103=0.893317] *[#24104=0.893316] *[#24117=0.893314] *[#24118=0.893313] *[#24119=0.893311] *[#24120=0.89331] *[#24143=0.893309] *[#24167=0.893309] *[#24168=0.893309] *[#24172=0.893309] *[#24173=0.893309] *[#24174=0.893308] *[#24175=0.893308] *[#24176=0.893308] *[#24177=0.893308] *[#24179=0.893308] *[#24180=0.893308] *[#24182=0.893307] *[#24203=0.893307] *[#24208=0.893307] *[#24210=0.893307] *[#24214=0.893307] *[#24224=0.893307] *[#24230=0.893307] *[#24239=0.893307] *[#24252=0.893307] *[#24255=0.893307] *[#24276=0.893307] *[#24277=0.893307] *[#24278=0.893307] *[#24319=0.893307] *[#24329=0.893307] *[#24331=0.893307] *[#24353=0.893307] 
 + - Final    cost = 0.893307 ; 690 funcs
 + Final fine fit Parameters:
       x-shift= -1.3225   y-shift=  1.0880   z-shift=  7.2572  ...  enorm=  7.4566 mm
       z-angle=  0.1673   x-angle= -2.5368   y-angle= -5.5390  ...  total=  6.0975 deg
       x-scale=  0.9436   y-scale=  0.9653   z-scale=  0.8270  ...  vol3D=  0.7533 = base bigger than source
     y/x-shear= -0.0868 z/x-shear=  0.0063 z/y-shear= -0.0479
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -1.3225 1.0880 7.2572 0.1673 -2.5368 -5.5390 0.9436 0.9653 0.8270 -0.0868 0.0063 -0.0479
++ Unloading unneeded data
++ Output dataset ./MPRAGE.GB15_unif_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./MPRAGE.GB15_unif_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 69.2
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB15_unif_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB15_unif_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4453145 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 66765 voxels [10.9%] in weight mask
++ Number of points for matching = 66765
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.660 48.339 41.120 (index)
 + source center of mass = 161.215 184.704 137.302 (index)
 + source-target CM = 0.129 -1.233 -1.920 (xyz)
 + estimated center of mass shifts = 0.129 -1.233 -1.920
++ shift param auto-range: -70.5..70.7 -80.5..78.0 -69.1..65.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -9.870506 .. 10.129494  center = 0.129494
 + Range param#2 [y-shift] = -11.232986 .. 8.767014  center = -1.232986
 + Range param#3 [z-shift] = -11.919571 .. 8.080429  center = -1.919571
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -39.870506 .. 40.129494  center = 0.129494
 + Range param#2 [y-shift] = -41.232986 .. 38.767014  center = -1.232986
 + Range param#3 [z-shift] = -41.919571 .. 38.080429  center = -1.919571
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000089
++ Final parameter search ranges:
 +       x-shift =  -39.871 ..   40.129
 +       y-shift =  -41.233 ..   38.767
 +       z-shift =  -41.920 ..   38.080
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 4453145 [out of 32151072] voxels
 + base mask has 85428 [out of 609801] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=298.974 usiz=380.488
 + - copying weight image
 + - using 66765 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 316.432 .. 1079.17; base clip 2918.25 .. 10356.9
 +  - versus source range 0 .. 1115.16; base range 0 .. 13282.9
 + 57067 total points stored in 116 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB15_unif_flip_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB15_unif_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5366324 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 66765 voxels [10.9%] in weight mask
++ Number of points for matching = 66765
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.660 48.339 41.120 (index)
 + source center of mass = 159.848 184.096 134.956 (index)
 + source-target CM = -0.827 -1.658 -3.562 (xyz)
 + estimated center of mass shifts = -0.827 -1.658 -3.562
++ shift param auto-range: -71.4..69.8 -80.9..77.6 -70.7..63.6
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.826920 .. 9.173080  center = -0.826920
 + Range param#2 [y-shift] = -11.658203 .. 8.341797  center = -1.658203
 + Range param#3 [z-shift] = -13.561584 .. 6.438416  center = -3.561584
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.826920 .. 39.173080  center = -0.826920
 + Range param#2 [y-shift] = -41.658203 .. 38.341797  center = -1.658203
 + Range param#3 [z-shift] = -43.561584 .. 36.438416  center = -3.561584
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000089
++ Final parameter search ranges:
 +       x-shift =  -40.827 ..   39.173
 +       y-shift =  -41.658 ..   38.342
 +       z-shift =  -43.562 ..   36.438
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5366324 [out of 32151072] voxels
 + base mask has 85428 [out of 609801] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=318.905 usiz=370.628
 + - copying weight image
 + - using 66765 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 318.049 .. 1076.05; base clip 2918.25 .. 10356.9
 +  - versus source range 0 .. 1135.1; base range 0 .. 13282.9
 + 57067 total points stored in 116 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
No flip cost is 0.784999 for lpa cost function
Flip cost is 0.895486 for lpa cost function
Data does not need flipping
#++ Creating final output: skullstripped anat data
copying from dataset /mnt/ext5/GA/fmri_data/preproc_data/GB15/MPRAGE.GB15_unif_unflipped_ns+orig to /mnt/ext5/GA/fmri_data/preproc_data/GB15/MPRAGE.GB15_unif_ns+orig
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB15_unif_unflipped_ns+orig MPRAGE.GB15_unif_ns
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat MPRAGE.GB15_unif+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base \
 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off \
 -tshift off" \
 ./MPRAGE.GB15_unif_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB15_unif*

# Finished alignment successfully

auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input MPRAGE.GB15_unif_ns+orig -skull_strip_input no -unifize_input no
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ auto_warp.py version: 0.06
# Output directory /mnt/ext5/GA/fmri_data/preproc_data/GB15/awpy/
#Script is running:
  mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB15/awpy/
cd /mnt/ext5/GA/fmri_data/preproc_data/GB15/awpy/
#Script is running (command trimmed):
  3dcopy /mnt/ext5/GA/fmri_data/preproc_data/GB15/MPRAGE.GB15_unif_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#Script is running (command trimmed):
  3dcopy /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz ./base.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB15/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB15/awpy/anat.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ anat already stripped, re-using
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_15pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 1565.740100 ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (cubic final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m -base dataset __ats_tmp__ref_base.nii_15pad+tlrc has 5 sub-bricks; will only use #0
RMS[0] = 534.852 272.681   ITER = 4/50
534.852

Warping has converged.

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
Cleanup ...
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB15/awpy/anat.aff.nii
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB15/awpy/base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.aff.nii ./base.nii
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB15/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB15/awpy/anat.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.aff.nii 
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ base dataset has more than 1 sub-brick: ignoring all but the first
++ base dataset has more than 1 sub-brick: ignoring all but the first [0]
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=4 ytop=6  zbot=19 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=/mnt/ext5/GA/fmri_data/preproc_data/GB15/awpy/base.nii  source=/mnt/ext5/GA/fmri_data/preproc_data/GB15/awpy/anat.aff.nii
++ AFNI warpomatic: 199 x 239 x 215 volume ; autobbox = 22..176 24..214 20..183 [clock= 3s 432ms]
lev=0 3..195 1..237 1..203: [first cost=-0.68386] ..... done [cost:-0.68386==>-0.74609]
lev=1 patch=145x177x153 [clock= 41s 726ms]........:[cost=-0.76094]:........done [cost:-0.74609==>-0.76558 ; 16 patches optimized, 0 skipped, bbox=6:193,5:235,3:201]
lev=2 patch=109x133x115 [clock= 58s 862ms]........done [cost:-0.76558==>-0.78055 ; 8 patches optimized, 0 skipped, bbox=6:193,5:235,3:201]
lev=3 patch=81x99x85 [clock= 1m 4s 622ms]......done [cost:-0.78055==>-0.84078 ; 23 patches optimized, 4 skipped, bbox=6:193,5:235,3:201]
lev=4 patch=61x75x65 [clock= 1m 17s 842ms]................done [cost:-0.84078==>-0.91776 ; 88 patches optimized, 37 skipped, bbox=6:193,5:235,3:201]
lev=5 patch=45x57x49 [clock= 1m 38s 70ms].............done [cost:-0.91776==>-0.97827 ; 169 patches optimized, 83 skipped, bbox=6:193,5:235,3:201]
lev=6 patch=35x43x37 [clock= 1m 56s 410ms]..................done [cost:-0.97827==>-1.03883 ; 438 patches optimized, 291 skipped, bbox=6:193,5:235,3:201]
lev=7 patch=25x25x25 [clock= 2m 19s 870ms].......................................done [cost:-1.03883==>-1.12697 ; 1432 patches optimized, 908 skipped, bbox=6:193,5:235,3:201]
++ ====== total number of parameters 'optimized' = 26238
 +      initial unpenalized cost = -0.683856
 +        final unpenalized cost = -1.14173
 +        final penalized   cost = -1.12697
++ Output dataset ./anat.aff.qw.nii
++ Output dataset ./anat.aff.qw_WARP.nii
++ ===== clock time = 3m 38s 311ms
#++ Applying warps to /mnt/ext5/GA/fmri_data/preproc_data/GB15/MPRAGE.GB15_unif_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.aff.qw_WARP.nii anat.aff.Xat.1D" -master ./base.nii -source /mnt/ext5/GA/fmri_data/preproc_data/GB15/MPRAGE.GB15_unif_ns+orig -prefix ./MPRAGE.GB15_unif_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/mnt/ext5/GA/fmri_data/preproc_data/GB15/MPRAGE.GB15_unif_ns+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./MPRAGE.GB15_unif_ns.aw.nii
++ total Elapsed time = 13.2 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input \
 MPRAGE.GB15_unif_ns+orig -skull_strip_input no -unifize_input no" \
 ./MPRAGE.GB15_unif_ns.aw.nii


3dbucket -DAFNI_NIFTI_VIEW=tlrc -prefix MPRAGE.GB15_unif_ns awpy/MPRAGE.GB15_unif_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
mv awpy/anat.aff.Xat.1D .
mv awpy/anat.aff.qw_WARP.nii .
if ( ! -f MPRAGE.GB15_unif_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb03.GB15.r01.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB15.r01.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 72109 voxels
 + 8678 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.010  pitch=-0.026  yaw=-0.037  dS=-0.414  dL=-0.014  dP=-0.550
++ Mean: roll=+0.185  pitch=+0.256  yaw=+0.179  dS=+0.118  dL=+0.111  dP=-0.241
++ Max : roll=+0.334  pitch=+0.718  yaw=+0.327  dS=+0.272  dL=+0.201  dP=+0.083
++ Max displacements (mm) for each sub-brick:
 0.24(0.00) 0.20(0.05) 0.13(0.09) 0.09(0.05) 0.09(0.04) 0.13(0.08) 0.15(0.06) 0.14(0.04) 0.13(0.09) 0.05(0.10) 0.05(0.09) 0.07(0.07) 0.05(0.06) 0.02(0.05) 0.02(0.04) 0.00(0.02) 0.05(0.05) 0.11(0.11) 0.13(0.07) 0.11(0.04) 0.11(0.06) 0.08(0.04) 0.09(0.05) 0.08(0.08) 0.15(0.08) 0.15(0.05) 0.10(0.08) 0.10(0.07) 0.07(0.04) 0.08(0.03) 0.10(0.07) 0.13(0.06) 0.13(0.04) 0.09(0.10) 0.10(0.06) 0.11(0.03) 0.09(0.03) 0.13(0.04) 0.15(0.11) 0.18(0.04) 0.14(0.05) 0.10(0.07) 0.10(0.02) 0.09(0.04) 0.08(0.03) 0.15(0.08) 0.18(0.10) 0.20(0.06) 0.19(0.10) 0.15(0.05) 0.13(0.04) 0.14(0.05) 0.18(0.07) 0.19(0.03) 0.18(0.05) 0.15(0.05) 0.15(0.07) 0.16(0.05) 0.14(0.03) 0.14(0.03) 0.17(0.05) 0.22(0.06) 0.23(0.04) 0.21(0.05) 0.17(0.06) 0.15(0.05) 0.17(0.04) 0.18(0.06) 0.24(0.07) 0.26(0.05) 0.23(0.04) 0.21(0.08) 0.20(0.03) 0.21(0.06) 0.19(0.03) 0.21(0.02) 0.25(0.04) 0.28(0.04) 0.25(0.09) 0.25(0.08) 0.23(0.06) 0.23(0.02) 0.21(0.03) 0.25(0.06) 0.29(0.10) 0.32(0.05) 0.28(0.03) 0.26(0.05) 0.25(0.05) 0.25(0.02) 0.25(0.05) 0.28(0.07) 0.32(0.04) 0.32(0.02) 0.28(0.05) 0.28(0.06) 0.27(0.02) 0.26(0.02) 0.31(0.06) 0.33(0.07) 0.36(0.05) 0.31(0.05) 0.28(0.05) 0.28(0.04) 0.27(0.03) 0.28(0.05) 0.33(0.08) 0.36(0.07) 0.36(0.05) 0.30(0.07) 0.30(0.07) 0.31(0.06) 0.33(0.05) 0.35(0.06) 0.37(0.11) 0.41(0.04) 0.36(0.06) 0.35(0.09) 0.32(0.07) 0.32(0.04) 0.32(0.04) 0.35(0.05) 0.36(0.07) 0.39(0.09) 0.42(0.06) 0.37(0.07) 0.37(0.09) 0.38(0.03) 0.39(0.04) 0.38(0.05) 0.40(0.05) 0.43(0.05) 0.44(0.02) 0.52(0.18) 0.47(0.08) 0.45(0.03) 0.45(0.04) 0.45(0.06) 0.49(0.06) 0.50(0.11) 0.55(0.06) 0.54(0.03) 0.51(0.05) 0.50(0.05) 0.47(0.05) 0.46(0.07) 0.45(0.05) 0.48(0.05) 0.50(0.09) 0.53(0.05) 0.50(0.07) 0.48(0.07) 0.49(0.06) 0.47(0.04) 0.47(0.03) 0.49(0.06) 0.50(0.07) 0.51(0.05) 0.46(0.07) 0.46(0.08) 0.44(0.04) 0.44(0.05) 0.46(0.04) 0.52(0.08) 0.52(0.09) 0.48(0.12) 0.45(0.04) 0.43(0.09) 0.44(0.04) 0.42(0.04) 0.40(0.06) 0.37(0.04) 0.37(0.04) 0.42(0.08) 0.43(0.08) 0.43(0.05) 0.45(0.09) 0.39(0.07) 0.41(0.03) 0.40(0.04) 0.41(0.03) 0.48(0.09) 0.48(0.07) 0.47(0.05) 0.44(0.05) 0.39(0.06) 0.39(0.02) 0.38(0.02) 0.39(0.07) 0.41(0.06) 0.49(0.09) 0.47(0.10) 0.47(0.04) 0.44(0.07) 0.42(0.06) 0.41(0.04) 0.41(0.03) 0.38(0.15) 0.43(0.09) 0.45(0.13) 0.43(0.06) 0.41(0.06) 0.43(0.05) 0.48(0.08) 0.51(0.04) 0.50(0.03) 0.46(0.08) 0.44(0.04) 0.44(0.05) 0.47(0.05) 0.44(0.04) 0.49(0.06) 0.46(0.12) 0.40(0.12) 0.48(0.19) 0.47(0.10) 0.44(0.04) 0.45(0.06) 0.51(0.08) 0.52(0.05) 0.51(0.03) 0.49(0.05) 0.50(0.07) 0.46(0.04) 0.47(0.03) 0.67(0.26) 0.67(0.08) 0.68(0.08) 0.69(0.04) 0.65(0.05) 0.57(0.10) 0.53(0.07) 0.56(0.06) 0.55(0.05) 0.53(0.07) 0.56(0.09) 0.56(0.09) 0.54(0.08) 0.53(0.06) 0.49(0.06) 0.44(0.05) 0.45(0.05) 0.50(0.08) 0.52(0.04) 0.53(0.09) 0.56(0.06) 0.55(0.07) 0.53(0.08) 0.50(0.05) 0.49(0.03) 0.50(0.02) 0.54(0.07) 0.54(0.06) 0.53(0.03) 0.51(0.07) 0.48(0.05) 0.49(0.06) 0.47(0.03) 0.50(0.08) 0.50(0.09) 0.52(0.05) 0.49(0.04) 0.56(0.12) 0.61(0.09) 0.64(0.09) 0.61(0.05) 0.63(0.04) 0.60(0.05) 0.50(0.12) 0.56(0.09) 0.57(0.04) 0.57(0.04) 0.55(0.06) 0.56(0.05) 0.54(0.03) 0.54(0.04) 0.56(0.08) 0.59(0.07) 0.58(0.05) 0.54(0.09) 0.53(0.07) 0.52(0.05) 0.58(0.07) 0.67(0.10) 0.73(0.10) 0.75(0.08) 0.70(0.06) 0.69(0.05) 0.66(0.06) 0.66(0.09) 0.62(0.04) 0.66(0.07) 0.67(0.10) 0.68(0.07) 0.64(0.06) 0.61(0.06) 0.71(0.12) 0.74(0.08) 0.70(0.10) 0.69(0.02) 0.71(0.04) 0.70(0.06) 0.70(0.03) 0.71(0.05) 0.71(0.06) 0.68(0.08) 0.66(0.06) 0.64(0.06) 0.61(0.10) 0.62(0.04) 0.59(0.06) 0.56(0.07) 0.56(0.05) 0.61(0.06) 0.77(0.19) 0.73(0.10) 0.78(0.07) 0.75(0.03) 0.73(0.04) 0.73(0.05) 0.72(0.06) 0.73(0.08) 0.71(0.02) 0.73(0.06) 0.72(0.10) 0.74(0.06) 0.75(0.02) 0.72(0.04) 0.72(0.08) 0.73(0.06) 0.75(0.06) 0.73(0.03) 0.73(0.06) 0.70(0.14) 0.71(0.05) 0.68(0.05) 0.63(0.07) 0.62(0.03) 0.61(0.03) 0.59(0.05) 0.64(0.08) 0.65(0.07) 0.62(0.08) 0.59(0.08) 0.58(0.06) 0.57(0.04) 0.58(0.06) 0.59(0.04) 0.61(0.06) 0.63(0.08) 0.61(0.06) 0.57(0.06) 0.60(0.06) 0.59(0.05) 0.59(0.05) 0.58(0.03) 0.62(0.05) 0.60(0.08) 0.60(0.04) 0.56(0.08) 0.54(0.07) 0.52(0.05) 0.50(0.06) 0.60(0.10) 0.62(0.03) 0.61(0.09) 0.61(0.02) 0.57(0.04) 0.60(0.08) 0.59(0.04) 0.58(0.03) 0.60(0.03) 0.63(0.07) 0.62(0.04) 0.62(0.03) 0.60(0.05) 0.61(0.07) 0.59(0.03) 0.59(0.05) 0.59(0.07) 0.64(0.06) 0.60(0.06) 0.64(0.05) 0.71(0.10) 0.64(0.08) 0.61(0.06) 0.59(0.06) 0.65(0.08) 0.65(0.08) 0.68(0.04) 0.66(0.04) 0.77(0.22) 0.72(0.10) 0.65(0.09) 0.63(0.09) 0.57(0.07) 0.58(0.03) 0.61(0.12) 0.66(0.07) 0.71(0.06) 0.77(0.09) 0.67(0.12) 0.63(0.05) 0.61(0.06) 0.63(0.07) 0.70(0.09) 0.79(0.13) 0.77(0.08) 0.72(0.08) 0.73(0.06) 0.72(0.04) 0.72(0.02) 0.74(0.08) 0.74(0.08) 0.79(0.05) 0.82(0.06) 0.79(0.07) 0.76(0.07) 0.82(0.09) 0.74(0.09) 0.77(0.04) 0.77(0.09) 0.79(0.07) 0.79(0.02) 0.79(0.02) 0.79(0.09) 0.78(0.09) 0.79(0.05) 0.77(0.05) 0.82(0.08) 0.79(0.09) 0.80(0.02) 0.77(0.07) 0.78(0.04) 0.79(0.03) 0.78(0.01) 0.83(0.06) 0.83(0.08) 0.83(0.06) 0.80(0.05) 0.75(0.11) 0.65(0.12) 0.61(0.06) 0.66(0.06) 0.66(0.11) 0.67(0.05) 0.65(0.02) 0.65(0.03) 0.63(0.03) 0.63(0.04) 0.61(0.05) 0.64(0.07) 0.68(0.08) 0.69(0.05) 0.67(0.04) 0.67(0.04) 0.67(0.04) 0.66(0.05) 0.68(0.05) 0.70(0.05) 0.70(0.09) 0.68(0.08) 0.64(0.07) 0.59(0.07) 0.54(0.05) 0.59(0.07) 0.70(0.11) 0.68(0.05) 0.73(0.06) 0.67(0.06) 0.65(0.08) 0.63(0.04) 0.68(0.05) 0.67(0.13) 0.70(0.05) 0.68(0.03) 0.67(0.06) 0.68(0.06) 0.65(0.03) 0.67(0.04) 0.66(0.06) 0.68(0.05) 0.67(0.05) 0.65(0.06) 0.65(0.06) 0.66(0.07) 0.65(0.03) 0.67(0.06) 0.65(0.05) 0.73(0.09) 0.69(0.07) 0.67(0.04) 0.65(0.04) 0.63(0.04) 0.64(0.05) 0.74(0.14) 0.81(0.10) 0.79(0.07) 0.80(0.07) 0.79(0.06) 0.81(0.05) 0.79(0.05) 0.80(0.06) 0.75(0.07) 0.73(0.05) 0.74(0.10) 0.76(0.07) 0.76(0.03) 0.72(0.05) 0.71(0.07) 0.80(0.13) 0.81(0.07) 0.75(0.06) 0.77(0.07) 0.78(0.06) 0.81(0.07) 0.82(0.06) 0.81(0.04) 0.78(0.04) 0.80(0.04) 0.78(0.03) 0.82(0.05) 0.79(0.13) 0.81(0.04) 0.75(0.06) 0.77(0.08) 0.70(0.06) 0.72(0.03) 0.72(0.04) 0.74(0.07) 0.75(0.04) 0.73(0.05) 0.75(0.09) 0.85(0.13) 0.81(0.11) 0.78(0.04) 0.78(0.04) 0.78(0.09) 0.81(0.07) 0.78(0.09) 0.81(0.06) 0.81(0.05) 0.90(0.12) 0.84(0.10) 0.82(0.04) 0.83(0.06) 0.72(0.14) 0.75(0.04) 0.84(0.11) 0.80(0.09) 0.76(0.06) 0.72(0.08) 0.72(0.09) 0.74(0.09) 0.76(0.04) 0.73(0.04) 0.71(0.07) 0.71(0.05) 0.69(0.06) 0.70(0.05) 0.70(0.01) 0.74(0.07) 0.73(0.07) 0.75(0.03) 0.72(0.04) 0.74(0.06) 0.73(0.04) 0.73(0.06) 0.74(0.08) 0.77(0.07) 0.74(0.06) 0.71(0.08) 0.70(0.08) 0.68(0.02) 0.70(0.03) 0.71(0.03) 0.72(0.05) 0.72(0.07) 0.72(0.07) 0.72(0.04) 0.69(0.06) 0.70(0.03) 0.69(0.04) 0.74(0.07) 0.73(0.10) 0.72(0.03) 0.68(0.08) 0.70(0.06) 0.68(0.05) 0.70(0.06) 0.68(0.03) 0.69(0.05) 0.66(0.03) 0.70(0.08) 0.72(0.07) 0.66(0.17) 0.66(0.04) 0.65(0.04) 0.65(0.08) 0.59(0.09) 0.60(0.07) 0.76(0.17) 0.74(0.03) 0.76(0.06) 0.71(0.09) 0.68(0.04) 0.68(0.08) 0.70(0.06) 0.68(0.05) 0.70(0.04) 0.69(0.03) 0.71(0.04) 0.75(0.05) 0.74(0.08) 0.73(0.03) 0.70(0.06) 0.68(0.07) 0.69(0.06) 0.71(0.04) 0.74(0.05) 0.74(0.02) 0.78(0.06) 0.78(0.06) 0.77(0.05) 0.74(0.06) 0.80(0.09) 0.76(0.07) 0.77(0.03) 0.82(0.07) 0.83(0.07) 0.85(0.03) 0.81(0.05) 0.81(0.07) 0.81(0.03) 0.81(0.04) 0.81(0.02) 0.83(0.06) 0.82(0.06) 0.80(0.03) 0.78(0.08) 0.76(0.06) 0.78(0.05) 0.78(0.02) 0.80(0.03) 0.85(0.06) 0.80(0.09) 0.81(0.02) 0.78(0.04) 0.78(0.08) 0.76(0.03) 0.77(0.03) 0.77(0.03) 0.80(0.05) 0.82(0.08) 0.82(0.05) 0.82(0.01) 0.79(0.05) 0.80(0.05) 0.78(0.04) 0.78(0.05) 0.78(0.03) 0.80(0.05) 0.84(0.07) 0.84(0.08) 0.82(0.04) 0.82(0.07) 0.81(0.06) 0.90(0.11) 0.89(0.04) 0.85(0.09) 0.80(0.12) 0.82(0.09) 0.85(0.04) 0.83(0.03) 0.82(0.07) 0.80(0.06) 0.85(0.06) 0.81(0.04) 0.82(0.02) 0.85(0.07) 0.83(0.06) 0.92(0.10) 0.88(0.07) 0.90(0.07) 0.85(0.10) 0.87(0.03) 0.80(0.10) 0.81(0.10) 0.84(0.06) 0.83(0.10) 0.83(0.07) 0.79(0.07) 0.78(0.05) 0.81(0.05) 0.78(0.03) 0.82(0.06) 0.82(0.07) 0.79(0.05) 0.77(0.06) 0.79(0.06) 0.80(0.05) 0.81(0.03) 0.87(0.07) 0.85(0.07) 0.85(0.05) 0.83(0.03) 0.84(0.05) 0.83(0.05) 0.83(0.02) 0.87(0.05) 0.87(0.08) 0.87(0.03) 0.85(0.04) 0.88(0.09) 0.84(0.06) 0.85(0.02) 0.85(0.05) 0.87(0.07) 0.86(0.05) 0.87(0.07) 0.99(0.15) 0.99(0.11) 0.93(0.06) 0.87(0.10) 0.90(0.08) 0.88(0.08) 0.90(0.12) 0.90(0.08) 0.92(0.04) 0.89(0.04) 0.90(0.03) 0.88(0.04) 0.90(0.04) 0.86(0.04) 0.87(0.05) 0.88(0.05) 0.90(0.06) 0.90(0.04) 0.87(0.03) 0.88(0.08) 0.88(0.05) 0.90(0.06) 0.89(0.04) 0.92(0.05) 0.92(0.05) 0.92(0.04) 0.89(0.10) 0.89(0.06) 0.89(0.04) 0.90(0.03) 0.93(0.09) 0.96(0.04) 0.92(0.05) 0.90(0.05) 0.91(0.06) 0.91(0.03) 0.93(0.05) 0.90(0.11) 0.93(0.05) 0.91(0.04) 0.89(0.06) 0.89(0.06) 0.90(0.04) 1.02(0.14) 1.12(0.18) 1.06(0.10) 1.06(0.02) 1.00(0.07) 1.01(0.07) 1.02(0.05) 1.02(0.03) 1.04(0.04) 1.03(0.07) 1.06(0.09) 1.03(0.07) 1.00(0.04) 0.97(0.06) 0.94(0.06) 0.95(0.08) 0.95(0.05) 0.98(0.06) 0.99(0.05) 0.99(0.07) 0.98(0.03) 0.98(0.03) 0.94(0.03) 0.94(0.06) 0.93(0.04) 0.96(0.04) 0.96(0.06) 0.98(0.08) 0.92(0.08) 0.93(0.08) 0.97(0.06) 0.93(0.07) 0.93(0.03) 0.96(0.06) 0.96(0.08) 0.97(0.02) 0.95(0.06) 0.95(0.07) 0.94(0.07) 0.93(0.03) 1.01(0.08) 0.97(0.10) 0.97(0.03) 0.95(0.04) 0.92(0.06) 0.94(0.06) 0.92(0.03) 0.91(0.04) 0.99(0.09) 0.96(0.10) 0.95(0.04) 0.92(0.05) 0.90(0.04) 0.91(0.05) 0.91(0.01) 0.95(0.06) 0.96(0.07) 0.98(0.06) 0.98(0.05) 0.95(0.03) 0.92(0.08) 0.93(0.08) 0.93(0.04) 0.94(0.03) 0.95(0.02) 0.98(0.05) 0.97(0.05) 0.97(0.05) 0.92(0.06) 0.90(0.04) 0.94(0.06) 0.92(0.05) 0.95(0.05) 0.97(0.07) 0.97(0.04) 0.95(0.05) 0.96(0.07) 0.97(0.06) 0.93(0.06) 0.93(0.04) 0.95(0.07) 0.94(0.07) 0.97(0.06) 0.97(0.03) 1.05(0.13) 1.08(0.10) 1.04(0.08) 1.03(0.04) 1.02(0.03) 1.01(0.06) 1.03(0.08) 1.02(0.05) 1.02(0.07) 0.99(0.06) 1.03(0.06) 1.04(0.03) 1.03(0.02) 1.05(0.05) 1.05(0.08) 1.06(0.03) 1.02(0.06) 1.01(0.05) 0.99(0.08) 1.01(0.06) 1.13(0.13) 1.12(0.08) 1.10(0.06) 1.02(0.08) 1.00(0.07) 0.99(0.05) 1.00(0.06) 1.01(0.03) 1.02(0.02) 1.06(0.07) 1.06(0.06) 1.06(0.06) 1.02(0.09) 1.00(0.06) 1.01(0.05) 1.01(0.03) 1.02(0.03) 1.07(0.06) 1.07(0.08) 1.06(0.03) 1.01(0.06) 1.01(0.06) 1.01(0.04) 1.00(0.03) 1.03(0.04) 1.05(0.07) 1.07(0.04) 1.07(0.04) 1.05(0.07) 1.04(0.06) 1.03(0.06) 1.05(0.05) 1.06(0.04) 1.07(0.05) 1.06(0.05) 1.04(0.07) 1.02(0.08) 1.04(0.06) 1.02(0.04) 1.03(0.02) 1.03(0.02) 1.06(0.05) 1.07(0.04) 1.08(0.03) 1.03(0.08) 1.02(0.06) 1.01(0.04) 1.05(0.06) 1.02(0.04) 1.05(0.04) 1.05(0.07) 1.09(0.05) 1.20(0.16) 1.12(0.09) 1.11(0.06) 1.11(0.04) 1.13(0.06) 1.14(0.07) 1.16(0.05) 1.15(0.08) 1.12(0.10) 1.09(0.09) 1.07(0.03) 1.05(0.05) 1.05(0.06) 1.04(0.05) 1.04(0.02) 1.04(0.03) 1.06(0.06) 1.05(0.06) 1.03(0.08) 1.02(0.07) 1.02(0.07) 1.03(0.04) 1.07(0.04) 1.21(0.16) 1.17(0.07) 1.13(0.07) 1.08(0.07) 1.04(0.08) 1.07(0.03) 1.04(0.04) 1.06(0.04) 1.07(0.06) 1.08(0.06) 1.09(0.10) 1.05(0.08) 1.02(0.07) 1.00(0.06) 1.02(0.04) 1.01(0.03) 1.03(0.02) 1.05(0.11) 1.06(0.05) 1.04(0.02) 1.01(0.05) 0.98(0.13) 1.02(0.07) 1.17(0.18) 1.14(0.05) 1.12(0.05) 1.12(0.02) 1.08(0.05) 1.11(0.06) 1.05(0.10) 1.04(0.05) 1.13(0.11) 1.24(0.17) 1.18(0.08) 1.15(0.05) 1.10(0.09) 1.11(0.06) 1.09(0.04) 1.06(0.08) 1.04(0.05) 1.10(0.06) 1.08(0.08) 1.06(0.04) 1.06(0.06) 1.04(0.03) 1.04(0.06) 1.03(0.07) 1.07(0.10) 1.07(0.05) 1.05(0.06) 1.01(0.09) 1.01(0.05) 1.01(0.03) 0.99(0.07) 1.02(0.09) 1.01(0.05) 1.03(0.05) 0.97(0.09) 1.00(0.05) 0.97(0.03) 0.95(0.04) 0.97(0.04) 0.98(0.04) 1.00(0.05) 1.01(0.07) 1.01(0.08) 1.00(0.08) 1.06(0.11) 1.05(0.10) 1.06(0.09) 1.01(0.07) 1.03(0.15) 1.03(0.09) 1.05(0.12) 1.03(0.08) 1.04(0.08) 1.04(0.05) 1.05(0.07) 1.05(0.09) 1.04(0.08) 1.02(0.03) 1.08(0.07) 1.06(0.06) 1.07(0.05) 1.10(0.05) 1.16(0.08) 1.29(0.16) 1.28(0.10) 1.26(0.05) 1.25(0.02) 1.24(0.05) 1.24(0.05) 1.21(0.04) 1.14(0.11) 1.11(0.06) 1.14(0.04) 1.14(0.08) 1.17(0.08) 1.12(0.05) 1.11(0.06) 1.08(0.07) 1.09(0.03) 1.10(0.06) 1.08(0.03) 1.11(0.03) 1.16(0.07) 1.10(0.07) 1.14(0.04) 1.12(0.08) 1.10(0.03) 1.10(0.04) 1.09(0.04) 1.10(0.03) 1.10(0.03) 1.12(0.06) 1.11(0.04) 1.13(0.08) 1.15(0.04) 1.09(0.06) 1.10(0.04) 1.04(0.09) 1.05(0.04) 1.06(0.10) 1.09(0.07) 1.04(0.08) 1.01(0.11) 1.06(0.12) 0.97(0.11) 0.97(0.20) 1.10(0.16) 1.13(0.06) 1.18(0.07) 1.17(0.08) 1.20(0.05) 1.19(0.03) 1.19(0.02) 1.20(0.07) 1.16(0.08) 1.17(0.04) 1.20(0.07) 1.24(0.05) 1.24(0.03) 1.42(0.27) 1.58(0.20) 1.41(0.20) 1.38(0.11) 1.35(0.08) 1.26(0.12) 1.26(0.09) 1.33(0.09) 1.36(0.07) 1.35(0.03) 1.30(0.06) 1.29(0.02)
++ Max displacement in automask = 1.58 (mm) at sub-brick 1085
++ Max delta displ  in automask = 0.27 (mm) at sub-brick 1084
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb03.GB15.r01.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB15_unif_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB15_unif_ns+tlrc -dxyz 2.5 -source pb02.GB15.r01.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB15_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB15.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 720.7 sec
3dNwarpApply -master MPRAGE.GB15_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB15_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb03.GB15.r02.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB15.r02.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 72479 voxels
 + 8827 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.045  pitch=+0.578  yaw=-0.390  dS=-1.180  dL=-0.060  dP=-0.469
++ Mean: roll=+0.199  pitch=+1.068  yaw=-0.128  dS=-0.779  dL=+0.004  dP=-0.242
++ Max : roll=+0.394  pitch=+1.458  yaw=+0.172  dS=-0.506  dL=+0.055  dP=+0.009
++ Max displacements (mm) for each sub-brick:
 1.64(0.00) 1.66(0.04) 1.61(0.05) 1.57(0.06) 1.54(0.05) 1.52(0.02) 1.57(0.05) 1.56(0.05) 1.58(0.03) 1.59(0.05) 1.59(0.03) 1.53(0.07) 1.52(0.07) 1.55(0.04) 1.54(0.05) 1.58(0.04) 1.56(0.03) 1.61(0.05) 1.60(0.03) 1.61(0.06) 1.51(0.10) 1.51(0.03) 1.57(0.06) 1.57(0.04) 1.63(0.06) 1.62(0.18) 1.70(0.10) 1.65(0.06) 1.62(0.06) 1.59(0.04) 1.59(0.03) 1.66(0.08) 1.65(0.04) 1.72(0.10) 1.67(0.08) 1.67(0.05) 1.67(0.03) 1.61(0.07) 1.59(0.08) 1.58(0.05) 1.63(0.07) 1.64(0.04) 1.65(0.07) 1.69(0.05) 1.61(0.09) 1.58(0.05) 1.55(0.03) 1.63(0.08) 1.67(0.05) 1.69(0.04) 1.72(0.03) 1.67(0.06) 1.65(0.08) 1.62(0.04) 1.67(0.06) 1.67(0.05) 1.69(0.04) 1.71(0.03) 1.68(0.03) 1.67(0.06) 1.58(0.08) 1.61(0.05) 1.66(0.05) 1.65(0.05) 1.66(0.03) 1.66(0.03) 1.68(0.03) 1.65(0.04) 1.67(0.05) 1.59(0.09) 1.57(0.05) 1.59(0.03) 1.59(0.06) 1.62(0.02) 1.60(0.05) 1.65(0.05) 1.59(0.06) 1.59(0.08) 1.55(0.09) 1.60(0.06) 1.63(0.05) 1.62(0.04) 1.65(0.04) 1.60(0.08) 1.57(0.07) 1.53(0.06) 1.54(0.05) 1.60(0.07) 1.61(0.03) 1.66(0.06) 1.64(0.03) 1.62(0.03) 1.59(0.06) 1.57(0.03) 1.63(0.07) 1.61(0.07) 1.67(0.06) 1.63(0.05) 1.68(0.05) 1.60(0.08) 1.59(0.04) 1.59(0.04) 1.60(0.04) 1.65(0.06) 1.67(0.04) 1.67(0.03) 1.62(0.05) 1.62(0.05) 1.59(0.04) 1.63(0.04) 1.61(0.05) 1.64(0.03) 1.66(0.03) 1.66(0.02) 1.68(0.12) 1.64(0.05) 1.64(0.06) 1.63(0.04) 1.69(0.06) 1.66(0.05) 1.69(0.05) 1.68(0.03) 1.70(0.02) 1.68(0.04) 1.65(0.05) 1.64(0.02) 1.66(0.08) 1.70(0.04) 1.70(0.02) 1.71(0.03) 1.64(0.08) 1.64(0.04) 1.64(0.02) 1.65(0.04) 1.68(0.04) 1.68(0.03) 1.74(0.06) 1.67(0.07) 1.67(0.07) 1.65(0.04) 1.67(0.03) 1.70(0.04) 1.68(0.03) 1.72(0.04) 1.73(0.03) 1.76(0.03) 1.75(0.07) 1.68(0.07) 1.69(0.04) 1.71(0.07) 1.77(0.06) 1.80(0.04) 1.81(0.03) 1.83(0.07) 1.78(0.06) 1.73(0.07) 1.68(0.05) 1.72(0.04) 1.76(0.06) 1.77(0.06) 1.80(0.04) 1.79(0.02) 1.79(0.03) 1.80(0.02) 1.79(0.03) 1.76(0.06) 1.71(0.05) 1.71(0.03) 1.75(0.04) 1.76(0.07) 1.80(0.05) 1.79(0.02) 1.78(0.03) 1.74(0.06) 1.68(0.06) 1.72(0.07) 1.76(0.04) 1.75(0.08) 1.79(0.05) 1.77(0.04) 1.76(0.09) 1.70(0.06) 1.70(0.03) 1.74(0.05) 1.74(0.05) 1.79(0.04) 1.80(0.01) 1.80(0.01) 1.80(0.05) 1.75(0.06) 1.73(0.03) 1.76(0.07) 1.79(0.06) 1.81(0.02) 1.79(0.03) 1.83(0.12) 1.82(0.08) 1.81(0.04) 1.84(0.03) 1.79(0.06) 1.77(0.08) 1.72(0.05) 1.73(0.06) 1.79(0.07) 1.82(0.04) 1.88(0.06) 1.83(0.06) 1.83(0.09) 1.80(0.03) 1.81(0.04) 1.85(0.05) 1.86(0.04) 1.90(0.05) 1.92(0.03) 1.92(0.03) 1.87(0.06) 1.81(0.06) 1.83(0.02) 1.83(0.05) 1.89(0.06) 1.90(0.03) 1.91(0.02) 1.93(0.03) 1.91(0.02) 1.86(0.06) 1.82(0.05) 1.87(0.08) 1.91(0.16) 1.93(0.17) 1.94(0.05) 1.92(0.03) 1.90(0.04) 1.84(0.07) 1.82(0.02) 1.87(0.05) 1.89(0.06) 1.92(0.05) 1.93(0.01) 1.94(0.02) 1.92(0.08) 1.88(0.05) 1.88(0.02) 1.87(0.05) 1.88(0.15) 1.89(0.05) 1.92(0.04) 1.94(0.02) 1.95(0.01) 1.91(0.05) 1.87(0.05) 1.88(0.04) 1.88(0.06) 1.91(0.04) 1.92(0.05) 1.93(0.05) 1.96(0.04) 1.94(0.03) 1.90(0.08) 1.82(0.08) 1.85(0.05) 1.86(0.05) 1.91(0.05) 1.94(0.06) 1.94(0.05) 1.98(0.09) 1.92(0.13) 1.93(0.17) 1.87(0.08) 1.84(0.06) 1.83(0.08) 1.88(0.08) 1.95(0.08) 1.96(0.09) 1.96(0.03) 1.99(0.05) 1.98(0.12) 2.01(0.13) 1.95(0.08) 1.93(0.05) 1.92(0.01) 1.95(0.03) 2.00(0.05) 1.99(0.06) 2.01(0.03) 2.00(0.04) 2.00(0.04) 1.99(0.02) 1.97(0.04) 2.01(0.07) 1.98(0.04) 1.94(0.07) 1.88(0.06) 1.87(0.02) 1.92(0.05) 1.93(0.08) 1.97(0.05) 1.98(0.02) 1.99(0.02) 1.96(0.04) 1.91(0.05) 1.91(0.06) 1.95(0.06) 1.97(0.05) 2.01(0.05) 1.98(0.04) 2.00(0.06) 1.93(0.08) 1.90(0.04) 1.92(0.02) 1.92(0.05) 1.97(0.07) 1.98(0.03) 1.98(0.02) 1.96(0.06) 1.90(0.05) 1.91(0.02) 1.94(0.05) 1.96(0.07) 1.99(0.04) 1.99(0.04) 2.01(0.03) 2.00(0.04) 1.95(0.05) 1.94(0.02) 1.95(0.05) 1.99(0.05) 1.99(0.03) 1.98(0.02) 2.01(0.03) 2.00(0.03) 1.98(0.02) 1.94(0.06) 1.90(0.05) 1.94(0.08) 1.99(0.06) 2.00(0.03) 2.04(0.04) 2.02(0.04) 2.01(0.14) 1.98(0.05) 1.98(0.07) 2.01(0.03) 2.02(0.06) 2.07(0.06) 2.07(0.04) 2.03(0.04) 1.99(0.06) 1.93(0.06) 1.99(0.08) 2.02(0.06) 2.04(0.06) 2.07(0.04) 2.07(0.02) 2.09(0.03) 2.06(0.06) 1.99(0.08) 1.97(0.04) 1.99(0.02) 1.99(0.05) 2.01(0.03) 2.00(0.02) 2.04(0.04) 2.07(0.03) 2.06(0.01) 2.05(0.06) 1.99(0.07) 1.98(0.06) 1.99(0.04) 2.06(0.07) 2.10(0.04) 2.11(0.02) 2.10(0.05) 2.04(0.07) 2.02(0.04) 2.02(0.04) 2.07(0.05) 2.11(0.05) 2.12(0.02) 2.15(0.05) 2.09(0.07) 2.07(0.06) 2.01(0.08) 2.05(0.05) 2.06(0.17) 2.07(0.04) 2.11(0.06) 2.10(0.03) 2.11(0.06) 2.04(0.07) 2.04(0.02) 2.07(0.03) 2.07(0.07) 2.10(0.03) 2.10(0.02) 2.12(0.04) 2.12(0.01) 2.15(0.05) 2.11(0.05) 2.07(0.05) 2.05(0.04) 2.06(0.05) 2.11(0.06) 2.10(0.07) 2.14(0.04) 2.12(0.03) 2.14(0.02) 2.10(0.05) 2.06(0.05) 2.05(0.02) 2.06(0.05) 2.12(0.07) 2.13(0.04) 2.17(0.05) 2.14(0.05) 2.11(0.06) 2.05(0.05) 2.06(0.04) 2.10(0.04) 2.10(0.03) 2.16(0.06) 2.15(0.03) 2.15(0.05) 2.09(0.06) 2.09(0.05) 2.09(0.03) 2.11(0.05) 2.13(0.03) 2.12(0.03) 2.15(0.11) 2.07(0.11) 2.07(0.09) 2.02(0.05) 2.08(0.07) 2.12(0.05) 2.14(0.04) 2.19(0.06) 2.18(0.03) 2.19(0.04) 2.13(0.06) 2.12(0.03) 2.10(0.03) 2.14(0.06) 2.19(0.05) 2.20(0.03) 2.22(0.04) 2.21(0.04) 2.22(0.08) 2.11(0.12) 2.07(0.05) 2.09(0.02) 2.11(0.06) 2.16(0.05) 2.16(0.02) 2.19(0.06) 2.18(0.12) 2.15(0.09) 2.13(0.11) 2.18(0.19) 2.18(0.06) 2.21(0.03) 2.19(0.03) 2.22(0.04) 2.17(0.07) 2.12(0.06) 2.13(0.03) 2.13(0.07) 2.18(0.05) 2.18(0.05) 2.15(0.06) 2.19(0.05) 2.16(0.06) 2.13(0.16) 2.04(0.09) 2.09(0.06) 2.13(0.09) 2.16(0.06) 2.19(0.04) 2.19(0.04) 2.22(0.04) 2.19(0.05) 2.19(0.16) 2.10(0.10) 2.08(0.03) 2.10(0.02) 2.11(0.06) 2.16(0.05) 2.15(0.06) 2.18(0.04) 2.15(0.09) 2.11(0.12) 2.10(0.10) 2.04(0.10) 2.11(0.09) 2.14(0.05) 2.16(0.03) 2.25(0.10) 2.16(0.09) 2.13(0.07) 2.07(0.08) 2.11(0.06) 2.15(0.05) 2.16(0.06) 2.22(0.09) 2.20(0.04) 2.21(0.07) 2.13(0.08) 2.09(0.05) 2.11(0.03) 2.13(0.09) 2.19(0.06) 2.18(0.03) 2.18(0.03) 2.17(0.03) 2.10(0.06) 2.10(0.08) 2.04(0.06) 2.12(0.11) 2.17(0.06) 2.20(0.06) 2.23(0.03) 2.17(0.09) 2.14(0.08) 2.07(0.08) 2.12(0.06) 2.14(0.07) 2.14(0.04) 2.17(0.05) 2.20(0.06) 2.21(0.03) 2.13(0.07) 2.09(0.07) 2.12(0.06) 2.14(0.05) 2.17(0.04) 2.18(0.02) 2.18(0.01) 2.21(0.04) 2.20(0.02) 2.16(0.06) 2.13(0.04) 2.12(0.03) 2.19(0.08) 2.22(0.06) 2.23(0.03) 2.26(0.04) 2.23(0.03) 2.23(0.05) 2.42(0.30) 2.61(0.20) 2.61(0.35) 2.59(0.07) 2.59(0.07) 2.63(0.08) 2.54(0.12) 2.50(0.07) 2.53(0.07) 2.60(0.07) 2.62(0.04) 2.63(0.03) 2.69(0.07) 2.73(0.04) 2.80(0.08) 2.74(0.07) 2.70(0.07) 2.66(0.05) 2.68(0.05) 2.73(0.06) 2.73(0.02) 2.77(0.05) 2.76(0.04) 2.78(0.05) 2.74(0.06) 2.70(0.09) 2.61(0.09) 2.66(0.06) 2.68(0.04) 2.70(0.02) 2.71(0.02) 2.71(0.02) 2.75(0.04) 2.68(0.08) 2.66(0.05) 2.58(0.08) 2.54(0.16) 2.47(0.09) 2.52(0.12) 2.61(0.09) 2.63(0.10) 2.67(0.04) 2.70(0.05) 2.72(0.03) 2.74(0.02) 2.72(0.05) 2.69(0.05) 2.64(0.05) 2.69(0.08) 2.69(0.06) 2.73(0.05) 2.70(0.15) 2.75(0.11) 2.74(0.03) 2.76(0.03) 2.75(0.03) 2.70(0.07) 2.65(0.06) 2.67(0.05) 2.68(0.07) 2.69(0.04) 2.72(0.04) 2.71(0.03) 2.75(0.04) 2.73(0.06) 2.75(0.05) 2.73(0.05) 2.75(0.04) 2.65(0.10) 2.61(0.05) 2.60(0.04) 2.64(0.06) 2.69(0.05) 2.70(0.02) 2.74(0.05) 2.72(0.06) 2.70(0.07) 2.67(0.03) 2.68(0.04) 2.75(0.09) 2.75(0.03) 2.78(0.05) 2.75(0.06) 2.70(0.05) 2.69(0.02) 2.70(0.03) 2.76(0.07) 2.77(0.05) 2.78(0.05) 2.81(0.03) 2.77(0.05) 2.72(0.11) 2.65(0.08) 2.69(0.05) 2.75(0.07) 2.75(0.05) 2.77(0.04) 2.77(0.02) 2.80(0.05) 2.80(0.06) 2.83(0.04) 2.72(0.14) 2.69(0.09) 2.66(0.05) 2.68(0.07) 2.76(0.07) 2.74(0.04) 2.81(0.08) 2.80(0.05) 2.83(0.05) 2.80(0.04) 2.75(0.07) 2.69(0.06) 2.67(0.04) 2.73(0.08) 2.76(0.07) 2.81(0.05) 2.81(0.03) 2.82(0.02) 2.79(0.06) 2.73(0.06) 2.72(0.02) 2.73(0.05) 2.80(0.06) 2.83(0.04) 2.84(0.04) 2.82(0.03) 2.78(0.05) 2.75(0.04) 2.73(0.03) 2.77(0.05) 2.85(0.08) 2.80(0.12) 2.83(0.07) 2.90(0.08) 2.98(0.09) 3.01(0.05) 2.96(0.08) 2.92(0.07) 2.94(0.02) 2.95(0.02) 2.97(0.03) 2.98(0.03) 2.97(0.03) 2.93(0.05) 2.84(0.09) 2.81(0.04) 2.87(0.06) 2.89(0.05) 2.92(0.04) 2.92(0.09) 2.96(0.09) 2.93(0.04) 2.89(0.06) 2.81(0.07) 2.78(0.04) 2.84(0.07) 2.86(0.03) 2.88(0.03) 2.90(0.03) 2.91(0.02) 2.88(0.10) 2.83(0.06) 2.84(0.05) 2.85(0.03) 2.91(0.07) 2.96(0.06) 2.96(0.02) 2.93(0.08) 2.84(0.09) 2.84(0.04) 2.85(0.04) 2.91(0.06) 2.93(0.03) 2.94(0.02) 2.95(0.02) 2.92(0.04) 2.86(0.07) 2.81(0.06) 2.86(0.06) 2.88(0.07) 2.94(0.06) 2.95(0.04) 3.01(0.08) 2.95(0.08) 2.95(0.06) 2.91(0.05) 2.97(0.09) 3.00(0.08) 3.03(0.03) 3.01(0.04) 2.97(0.08) 2.92(0.06) 2.92(0.03) 2.94(0.03) 2.94(0.06) 2.96(0.05) 2.92(0.16) 2.90(0.07) 2.88(0.03) 2.87(0.07) 2.83(0.04) 2.87(0.04) 2.90(0.05) 2.92(0.03) 2.95(0.03) 2.95(0.03) 3.01(0.11) 2.97(0.04) 2.93(0.05) 2.88(0.05) 2.89(0.05) 2.93(0.05) 2.94(0.03) 2.96(0.03) 2.97(0.03) 2.96(0.06) 2.90(0.07) 2.89(0.02) 2.90(0.06) 2.94(0.16) 2.93(0.05) 2.96(0.07) 2.94(0.04) 2.98(0.05) 2.95(0.05) 2.95(0.08) 2.88(0.07) 2.92(0.06) 2.99(0.07) 3.03(0.08) 3.02(0.07) 2.99(0.07) 2.95(0.07) 2.90(0.06) 2.93(0.05) 2.96(0.12) 3.02(0.08) 3.03(0.02) 3.05(0.03) 2.96(0.10) 2.94(0.06) 2.90(0.05) 2.96(0.06) 2.96(0.05) 3.01(0.05) 3.00(0.02) 3.01(0.02) 2.93(0.08) 2.93(0.06) 2.93(0.05) 2.98(0.06) 3.01(0.04) 2.98(0.07) 2.96(0.04) 2.90(0.05) 2.90(0.03) 2.91(0.05) 2.96(0.06) 3.00(0.08) 3.01(0.07) 3.01(0.04) 2.98(0.05) 2.96(0.05) 2.88(0.09) 2.91(0.04) 2.97(0.18) 2.98(0.10) 2.98(0.02) 2.98(0.02) 2.96(0.06) 2.94(0.07) 2.94(0.07) 2.92(0.08) 2.96(0.04) 2.98(0.03) 2.94(0.04) 2.89(0.07) 2.85(0.04) 2.92(0.09) 2.95(0.06) 2.95(0.16) 2.94(0.06) 2.96(0.02) 2.95(0.07) 2.90(0.06) 2.91(0.07) 2.89(0.10) 2.94(0.06) 2.95(0.02) 2.95(0.04) 2.96(0.01) 2.94(0.03) 2.96(0.05) 2.94(0.03) 2.97(0.06) 2.90(0.09) 2.87(0.06) 2.79(0.08) 2.85(0.06) 2.90(0.05) 2.97(0.07) 2.96(0.08) 2.91(0.07) 2.93(0.05) 2.94(0.02) 2.95(0.02) 2.97(0.03) 2.92(0.08) 2.91(0.07) 2.93(0.04) 2.99(0.07) 3.02(0.07) 3.01(0.09) 3.02(0.12) 2.97(0.07) 2.99(0.04) 2.92(0.07) 2.89(0.04) 2.90(0.04) 2.93(0.08) 2.98(0.05) 2.98(0.03) 3.01(0.04) 3.00(0.04) 3.06(0.10) 3.05(0.02) 2.98(0.07) 2.93(0.07) 2.80(0.16) 2.75(0.13) 2.77(0.11) 2.85(0.08) 2.94(0.09) 2.97(0.08) 2.98(0.04) 3.00(0.03) 2.99(0.05) 3.01(0.05) 2.98(0.05) 2.96(0.06) 2.90(0.06) 2.91(0.07) 2.92(0.04) 2.93(0.04) 2.96(0.04) 2.98(0.04) 3.03(0.05) 3.04(0.02) 3.04(0.05) 3.05(0.08) 2.98(0.09) 2.90(0.08) 2.87(0.05) 2.89(0.02) 2.89(0.03) 2.92(0.03) 2.94(0.04) 2.94(0.02) 2.96(0.06) 2.94(0.03) 2.91(0.07) 2.86(0.06) 2.87(0.05) 2.94(0.06) 2.95(0.02) 2.99(0.05) 2.97(0.04) 2.99(0.02) 2.93(0.07) 2.89(0.06) 2.88(0.04) 2.88(0.05) 2.94(0.07) 2.94(0.04) 2.97(0.03) 2.96(0.04) 2.89(0.08) 2.86(0.04) 2.87(0.03) 2.94(0.07) 2.99(0.05) 3.00(0.03) 3.04(0.05) 2.98(0.08) 2.94(0.06) 2.90(0.04) 2.96(0.07) 3.02(0.14) 3.05(0.08) 3.06(0.05) 3.03(0.04) 3.01(0.07) 2.91(0.15) 2.93(0.06) 2.98(0.05) 3.01(0.05) 3.07(0.07) 3.06(0.05) 3.09(0.03) 3.04(0.05) 3.01(0.09) 2.98(0.12) 2.96(0.04) 2.99(0.04) 2.99(0.05) 3.03(0.04) 3.04(0.03) 2.98(0.06) 2.94(0.04) 2.92(0.03) 2.98(0.07) 3.03(0.05) 3.04(0.02) 3.07(0.03) 2.99(0.08) 2.96(0.05) 2.91(0.05) 2.96(0.06) 2.98(0.03) 3.02(0.04) 3.07(0.11) 3.06(0.04) 3.01(0.07) 2.91(0.10) 2.92(0.04) 2.94(0.03) 2.99(0.07) 3.03(0.05) 3.03(0.06) 3.07(0.05) 3.06(0.02) 3.03(0.10) 2.97(0.15) 3.01(0.06) 3.04(0.06) 3.03(0.02) 3.06(0.08) 3.03(0.05) 3.07(0.05) 2.98(0.10) 2.93(0.06) 2.89(0.06) 2.93(0.06) 2.99(0.06) 3.00(0.04) 3.03(0.07) 2.99(0.12) 2.93(0.08) 2.88(0.06) 2.92(0.07) 2.99(0.08) 3.02(0.04) 3.08(0.06) 3.06(0.03) 3.11(0.05) 3.06(0.05) 3.03(0.05) 3.00(0.07) 3.04(0.11) 3.07(0.08) 3.05(0.05) 3.04(0.05) 2.97(0.08) 2.96(0.06) 2.98(0.06) 3.01(0.05) 3.06(0.06) 3.08(0.11) 3.12(0.11) 3.08(0.06) 3.03(0.08) 2.96(0.09) 2.96(0.02) 2.98(0.06) 2.98(0.10) 3.02(0.06) 3.03(0.03) 3.02(0.02) 3.00(0.06) 2.97(0.06) 2.97(0.05) 2.96(0.05) 2.97(0.05) 3.02(0.05) 3.03(0.03) 3.05(0.04) 2.99(0.06) 2.97(0.07) 2.97(0.03) 2.98(0.03) 3.01(0.04) 3.04(0.03) 3.07(0.03) 3.00(0.13) 2.93(0.08) 2.93(0.02) 2.95(0.03) 2.97(0.04) 3.01(0.04) 3.03(0.04) 3.06(0.05) 3.00(0.06) 2.96(0.04) 2.98(0.05) 3.05(0.09) 3.09(0.06) 3.08(0.02) 3.07(0.02) 3.02(0.07) 2.96(0.11) 2.98(0.07) 3.02(0.05) 3.05(0.10) 3.07(0.06) 3.07(0.04) 3.07(0.02) 2.96(0.12) 2.90(0.06) 2.89(0.03) 2.96(0.08) 3.00(0.04) 2.98(0.05) 2.98(0.02) 2.90(0.09) 2.86(0.05) 2.87(0.03) 2.92(0.07) 2.97(0.06) 2.96(0.02) 2.97(0.02) 2.90(0.08) 2.87(0.04) 2.91(0.06) 2.93(0.06) 2.96(0.05) 2.95(0.02) 2.98(0.04) 2.97(0.02) 2.96(0.02) 2.97(0.02) 2.91(0.06) 2.88(0.05) 2.83(0.06) 2.89(0.07) 2.91(0.05) 2.93(0.04) 3.02(0.10) 2.95(0.11)
++ Max displacement in automask = 3.12 (mm) at sub-brick 1016
++ Max delta displ  in automask = 0.35 (mm) at sub-brick 549
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb03.GB15.r02.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB15_unif_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB15_unif_ns+tlrc -dxyz 2.5 -source pb02.GB15.r02.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB15_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB15.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 723.7 sec
3dNwarpApply -master MPRAGE.GB15_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB15_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb03.GB15.r03.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB15.r03.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 72494 voxels
 + 8839 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.196  pitch=+1.124  yaw=-0.643  dS=-0.975  dL=-0.151  dP=-0.892
++ Mean: roll=+0.468  pitch=+1.587  yaw=-0.461  dS=-0.442  dL=-0.062  dP=-0.672
++ Max : roll=+0.582  pitch=+1.887  yaw=-0.138  dS=+0.070  dL=+0.012  dP=-0.420
++ Max displacements (mm) for each sub-brick:
 2.38(0.00) 2.31(0.10) 2.32(0.07) 2.40(0.09) 2.42(0.08) 2.38(0.06) 2.38(0.04) 2.34(0.06) 2.30(0.07) 2.24(0.06) 2.26(0.07) 2.25(0.05) 2.25(0.03) 2.28(0.04) 2.26(0.04) 2.27(0.04) 2.27(0.02) 2.27(0.02) 2.28(0.01) 2.26(0.02) 2.25(0.09) 2.15(0.12) 2.19(0.05) 2.23(0.06) 2.24(0.02) 2.27(0.03) 2.24(0.04) 2.30(0.06) 2.46(0.20) 2.21(0.28) 1.94(0.39) 1.94(0.20) 1.91(0.08) 1.94(0.07) 1.96(0.03) 1.98(0.03) 1.95(0.03) 1.96(0.09) 1.94(0.05) 1.92(0.07) 1.98(0.07) 1.97(0.02) 1.99(0.03) 1.97(0.03) 2.00(0.04) 1.95(0.10) 1.95(0.09) 1.92(0.06) 1.91(0.09) 1.91(0.05) 1.90(0.02) 1.94(0.06) 1.92(0.07) 1.91(0.10) 2.01(0.11) 1.98(0.08) 1.90(0.09) 1.90(0.10) 1.94(0.06) 1.96(0.03) 1.98(0.07) 1.98(0.06) 1.96(0.03) 1.96(0.08) 1.99(0.06) 2.02(0.05) 1.99(0.04) 1.99(0.08) 1.98(0.05) 1.93(0.08) 1.99(0.07) 1.99(0.02) 1.99(0.05) 2.01(0.09) 2.01(0.07) 1.94(0.07) 1.98(0.07) 1.96(0.03) 1.97(0.03) 1.99(0.05) 1.98(0.08) 1.94(0.05) 1.95(0.08) 1.97(0.02) 1.97(0.03) 1.98(0.02) 1.99(0.02) 2.12(0.18) 2.02(0.13) 1.94(0.09) 1.96(0.09) 1.97(0.02) 1.98(0.02) 2.03(0.06) 2.03(0.09) 2.01(0.05) 2.01(0.08) 1.99(0.05) 1.99(0.02) 1.99(0.01) 1.99(0.03) 1.98(0.04) 1.99(0.03) 1.96(0.07) 1.93(0.08) 1.95(0.04) 1.95(0.06) 1.96(0.06) 1.96(0.03) 1.97(0.02) 1.97(0.01) 1.97(0.05) 1.99(0.08) 1.95(0.06) 1.94(0.10) 1.97(0.05) 1.97(0.03) 2.00(0.03) 2.00(0.02) 2.02(0.03) 2.00(0.02) 2.00(0.08) 1.93(0.11) 1.99(0.11) 2.01(0.04) 2.02(0.05) 1.99(0.06) 1.96(0.03) 2.00(0.06) 2.02(0.03) 2.17(0.19) 2.18(0.04) 2.12(0.07) 2.14(0.04) 2.15(0.02) 2.17(0.04) 2.15(0.09) 2.13(0.06) 2.13(0.03) 2.14(0.10) 2.19(0.05) 2.20(0.05) 2.24(0.11) 2.21(0.05) 2.24(0.04) 2.21(0.04) 2.17(0.05) 2.07(0.10) 2.03(0.05) 2.07(0.06) 2.15(0.09) 2.25(0.11) 2.20(0.15) 2.24(0.05) 2.22(0.08) 2.24(0.11) 2.20(0.05) 2.26(0.08) 2.32(0.07) 2.35(0.04) 2.43(0.19) 2.32(0.11) 2.31(0.08) 2.26(0.06) 2.33(0.08) 2.36(0.06) 2.40(0.04) 2.41(0.03) 2.41(0.02) 2.43(0.06) 2.41(0.07) 2.42(0.06) 2.31(0.11) 2.23(0.08) 2.28(0.06) 2.32(0.06) 2.35(0.04) 2.40(0.06) 2.41(0.03) 2.35(0.06) 2.30(0.06) 2.26(0.06) 2.28(0.03) 2.35(0.08) 2.35(0.03) 2.39(0.04) 2.39(0.03) 2.41(0.01) 2.36(0.07) 2.30(0.06) 2.31(0.04) 2.35(0.07) 2.37(0.05) 2.35(0.04) 2.29(0.08) 2.24(0.06) 2.26(0.02) 2.26(0.02) 2.26(0.02) 2.19(0.09) 2.20(0.06) 2.34(0.17) 2.41(0.09) 2.42(0.04) 2.47(0.05) 2.45(0.06) 2.42(0.06) 2.40(0.04) 2.45(0.07) 2.43(0.07) 2.44(0.03) 2.47(0.04) 2.47(0.04) 2.46(0.05) 2.47(0.12) 2.40(0.10) 2.32(0.08) 2.37(0.08) 2.47(0.12) 2.57(0.19) 2.51(0.09) 2.52(0.06) 2.53(0.05) 2.56(0.04) 2.58(0.05) 2.51(0.07) 2.50(0.07) 2.56(0.06) 2.58(0.03) 2.59(0.03) 2.59(0.01) 2.59(0.04) 2.59(0.02) 2.61(0.02) 2.61(0.07) 2.55(0.07) 2.60(0.15) 2.64(0.07) 2.66(0.03) 2.69(0.05) 2.68(0.03) 2.67(0.06) 2.59(0.08) 2.56(0.09) 2.61(0.08) 2.62(0.04) 2.67(0.10) 2.69(0.05) 2.69(0.02) 2.69(0.02) 2.69(0.03) 2.70(0.07) 2.66(0.05) 2.63(0.08) 2.67(0.05) 2.65(0.03) 2.66(0.06) 2.70(0.05) 2.71(0.04) 2.63(0.09) 2.54(0.16) 2.48(0.06) 2.51(0.04) 2.52(0.05) 2.56(0.07) 2.62(0.06) 2.64(0.03) 2.66(0.05) 2.61(0.07) 2.58(0.06) 2.58(0.06) 2.60(0.05) 2.70(0.11) 2.71(0.06) 2.67(0.03) 2.70(0.03) 2.72(0.03) 2.69(0.06) 2.66(0.06) 2.67(0.05) 2.71(0.03) 2.75(0.04) 2.81(0.06) 2.86(0.06) 2.91(0.05) 2.88(0.07) 2.89(0.12) 2.80(0.09) 2.84(0.09) 2.88(0.04) 2.89(0.03) 2.91(0.03) 2.96(0.05) 3.00(0.04) 3.06(0.06) 3.03(0.06) 3.00(0.04) 2.96(0.04) 2.94(0.03) 2.96(0.04) 2.97(0.02) 2.95(0.02) 2.89(0.06) 2.86(0.04) 2.93(0.07) 2.98(0.07) 2.96(0.03) 2.96(0.02) 2.95(0.03) 2.88(0.08) 2.84(0.08) 2.76(0.14) 2.73(0.09) 2.85(0.14) 2.89(0.06) 2.95(0.06) 2.96(0.08) 3.02(0.07) 3.04(0.09) 3.06(0.09) 3.03(0.09) 3.04(0.04) 3.00(0.07) 2.91(0.10) 2.87(0.12) 2.96(0.12) 3.02(0.06) 3.06(0.12) 3.04(0.08) 3.06(0.02) 3.05(0.01) 3.11(0.07) 3.08(0.09) 2.99(0.10) 3.03(0.07) 3.03(0.09) 3.06(0.06) 3.06(0.05) 3.11(0.06) 3.10(0.07) 3.14(0.04) 3.09(0.07) 3.03(0.07) 2.99(0.15) 3.03(0.07) 3.07(0.07) 3.08(0.04) 3.12(0.05) 3.14(0.04) 3.21(0.07) 3.17(0.07) 3.08(0.12) 3.00(0.08) 3.06(0.07) 3.10(0.04) 3.12(0.05) 3.15(0.05) 3.15(0.02) 3.17(0.07) 3.06(0.12) 3.00(0.07) 3.02(0.05) 3.03(0.06) 3.06(0.04) 3.06(0.05) 3.10(0.05) 3.10(0.02) 3.17(0.09) 3.08(0.09) 3.02(0.07) 2.99(0.07) 3.03(0.06) 3.07(0.05) 3.11(0.04) 3.16(0.08) 3.13(0.15) 3.12(0.06) 3.09(0.03) 3.04(0.08) 3.12(0.10) 3.14(0.05) 3.22(0.09) 3.25(0.03) 3.21(0.05) 3.13(0.09) 3.13(0.07) 3.20(0.10) 3.19(0.09) 3.21(0.04) 3.21(0.04) 3.22(0.12) 3.12(0.11) 3.14(0.08) 3.18(0.06) 3.17(0.08) 3.15(0.05) 3.02(0.16) 2.98(0.12) 2.97(0.10) 2.95(0.08) 3.00(0.13) 3.13(0.16) 3.14(0.14) 3.17(0.06) 3.16(0.06) 3.14(0.09) 3.05(0.13) 3.07(0.10) 3.17(0.11) 3.18(0.04) 3.25(0.12) 3.29(0.12) 3.22(0.09) 3.18(0.05) 3.16(0.03) 3.20(0.05) 3.23(0.04) 3.26(0.04) 3.26(0.03) 3.26(0.03) 3.25(0.12) 3.19(0.09) 3.19(0.11) 3.11(0.10) 3.16(0.07) 3.14(0.06) 3.16(0.02) 3.16(0.03) 3.15(0.03) 3.16(0.02) 3.14(0.07) 3.09(0.09) 3.17(0.09) 3.19(0.03) 3.23(0.06) 3.19(0.07) 3.03(0.16) 2.97(0.07) 3.09(0.12) 3.14(0.06) 3.16(0.10) 3.22(0.12) 3.15(0.07) 3.13(0.08) 3.20(0.07) 3.22(0.05) 3.23(0.02) 3.26(0.08) 3.24(0.04) 3.18(0.08) 3.18(0.09) 3.25(0.08) 3.28(0.06) 3.32(0.07) 3.28(0.12) 3.18(0.12) 3.24(0.07) 3.30(0.06) 3.38(0.09) 3.38(0.06) 3.28(0.13) 3.30(0.13) 3.38(0.12) 3.37(0.15) 3.37(0.05) 3.38(0.04) 3.36(0.10) 3.25(0.12) 3.32(0.12) 3.35(0.22) 3.32(0.10) 3.34(0.03) 3.36(0.03) 3.40(0.09) 3.39(0.04) 3.39(0.04) 3.35(0.08) 3.31(0.04) 3.43(0.27) 3.40(0.10) 3.34(0.17) 3.49(0.36) 2.98(0.56) 2.91(0.30) 2.89(0.04) 2.89(0.13) 3.05(0.18) 3.00(0.05) 2.98(0.05) 2.88(0.10) 2.91(0.07) 2.98(0.08) 3.04(0.07) 3.06(0.05) 3.07(0.02) 3.10(0.05) 3.10(0.03) 3.09(0.05) 3.06(0.05) 3.00(0.09) 2.91(0.09) 2.98(0.09) 2.97(0.07) 3.01(0.05) 2.99(0.05) 2.95(0.10) 2.93(0.07) 2.99(0.07) 3.02(0.08) 3.03(0.05) 3.06(0.03) 3.05(0.02) 2.95(0.10) 2.91(0.04) 2.93(0.02) 2.95(0.03) 2.97(0.03) 2.99(0.06) 2.97(0.03) 3.02(0.05) 3.01(0.02) 3.04(0.04) 3.01(0.04) 3.03(0.04) 3.03(0.03) 3.06(0.04) 3.06(0.02) 3.05(0.03) 2.98(0.07) 2.93(0.05) 2.99(0.08) 3.02(0.10) 3.07(0.06) 3.07(0.06) 3.15(0.15) 3.17(0.11) 3.09(0.09) 3.08(0.03) 3.13(0.06) 3.19(0.07) 3.18(0.04) 3.23(0.05) 3.22(0.06) 3.23(0.03) 3.21(0.03) 3.15(0.07) 3.09(0.07) 3.07(0.08) 3.15(0.12) 3.15(0.10) 3.20(0.11) 3.20(0.08) 3.14(0.22) 3.18(0.09) 3.16(0.12) 3.15(0.04) 3.10(0.08) 3.05(0.05) 3.01(0.06) 3.01(0.05) 3.10(0.12) 3.14(0.05) 3.14(0.04) 3.16(0.04) 3.18(0.04) 3.20(0.04) 3.14(0.11) 3.14(0.06) 3.20(0.07) 3.23(0.09) 3.25(0.03) 3.22(0.08) 3.21(0.03) 3.19(0.06) 3.18(0.02) 3.15(0.04) 3.21(0.08) 3.24(0.05) 3.25(0.09) 3.24(0.03) 3.23(0.02) 3.24(0.02) 3.23(0.02) 3.18(0.08) 3.10(0.09) 3.13(0.08) 3.17(0.07) 3.20(0.03) 3.23(0.03) 3.25(0.03) 3.21(0.07) 3.15(0.07) 3.15(0.02) 3.19(0.06) 3.26(0.07) 3.25(0.02) 3.30(0.08) 3.29(0.03) 3.31(0.03) 3.25(0.07) 3.24(0.05) 3.17(0.06) 3.11(0.06) 3.19(0.11) 3.23(0.04) 3.29(0.07) 3.32(0.04) 3.37(0.07) 3.37(0.03) 3.35(0.03) 3.29(0.07) 3.24(0.06) 3.19(0.09) 3.22(0.05) 3.29(0.11) 3.32(0.11) 3.35(0.06) 3.37(0.03) 3.40(0.04) 3.39(0.06) 3.35(0.05) 3.30(0.10) 3.32(0.06) 3.36(0.06) 3.36(0.08) 3.42(0.10) 3.44(0.02) 3.37(0.07) 3.32(0.06) 3.32(0.07) 3.39(0.08) 3.48(0.11) 3.49(0.10) 3.49(0.03) 3.53(0.07) 3.51(0.03) 3.44(0.08) 3.38(0.07) 3.35(0.03) 3.40(0.06) 3.42(0.07) 3.46(0.05) 3.45(0.05) 3.48(0.05) 3.46(0.04) 3.46(0.03) 3.42(0.06) 3.40(0.05) 3.33(0.06) 3.33(0.06) 3.38(0.06) 3.41(0.07) 3.49(0.09) 3.48(0.03) 3.50(0.03) 3.47(0.23) 3.44(0.11) 3.35(0.09) 3.31(0.04) 3.28(0.06) 3.33(0.05) 3.38(0.05) 3.43(0.06) 3.51(0.10) 3.50(0.04) 3.47(0.05) 3.40(0.08) 3.38(0.04) 3.39(0.06) 3.41(0.04) 3.46(0.05) 3.53(0.07) 3.55(0.03) 3.50(0.06) 3.47(0.07) 3.40(0.07) 3.36(0.07) 3.38(0.05) 3.40(0.04) 3.46(0.06) 3.51(0.05) 3.56(0.06) 3.53(0.05) 3.45(0.08) 3.41(0.04) 3.44(0.05) 3.48(0.05) 3.52(0.07) 3.57(0.14) 3.52(0.06) 3.46(0.08) 3.42(0.07) 3.43(0.04) 3.48(0.04) 3.53(0.05) 3.55(0.03) 3.53(0.03) 3.49(0.04) 3.47(0.05) 3.47(0.06) 3.56(0.11) 3.56(0.03) 3.53(0.07) 3.44(0.09) 3.40(0.06) 3.44(0.05) 3.46(0.07) 3.53(0.10) 3.57(0.06) 3.58(0.04) 3.55(0.07) 3.47(0.09) 3.37(0.13) 3.33(0.04) 3.39(0.06) 3.40(0.05) 3.44(0.04) 3.46(0.03) 3.54(0.08) 3.53(0.02) 3.50(0.04) 3.49(0.05) 3.51(0.07) 3.51(0.05) 3.50(0.02) 3.45(0.06) 3.42(0.04) 3.43(0.09) 3.45(0.13) 3.43(0.12) 3.48(0.06) 3.49(0.02) 3.51(0.02) 3.52(0.03) 3.54(0.03) 3.50(0.07) 3.43(0.07) 3.40(0.07) 3.40(0.04) 3.45(0.06) 3.50(0.05) 3.53(0.05) 3.59(0.09) 3.60(0.03) 3.61(0.07) 3.52(0.10) 3.46(0.06) 3.51(0.06) 3.50(0.05) 3.56(0.07) 3.59(0.03) 3.61(0.04) 3.55(0.08) 3.51(0.07) 3.53(0.08) 3.56(0.06) 3.59(0.06) 3.60(0.03) 3.60(0.06) 3.65(0.07) 3.65(0.03) 3.63(0.06) 3.57(0.07) 3.54(0.09) 3.55(0.06) 3.56(0.05) 3.62(0.06) 3.65(0.09) 3.57(0.14) 3.47(0.13) 3.41(0.07) 3.35(0.07) 3.40(0.05) 3.44(0.04) 3.52(0.08) 3.55(0.06) 3.54(0.02) 3.57(0.05) 3.53(0.07) 3.49(0.05) 3.47(0.05) 3.58(0.11) 3.66(0.10) 3.66(0.14) 3.71(0.13) 3.75(0.05) 3.74(0.05) 3.69(0.07) 3.62(0.08) 3.55(0.08) 3.41(0.16) 3.37(0.10) 3.37(0.10) 3.40(0.12) 3.48(0.09) 3.53(0.07) 3.55(0.05) 3.58(0.13) 3.56(0.09) 3.62(0.13) 3.60(0.04) 3.59(0.06) 3.53(0.06) 3.56(0.07) 3.51(0.14) 3.57(0.11) 3.65(0.20) 3.65(0.06) 3.64(0.04) 3.60(0.10) 3.62(0.14) 3.55(0.08) 3.56(0.03) 3.53(0.05) 3.49(0.06) 3.41(0.09) 3.38(0.07) 3.41(0.04) 3.48(0.07) 3.50(0.06) 3.49(0.03) 3.52(0.05) 3.53(0.02) 3.49(0.05) 3.44(0.06) 3.43(0.02) 3.47(0.05) 3.50(0.05) 3.53(0.04) 3.55(0.04) 3.59(0.05) 3.54(0.06) 3.50(0.05) 3.47(0.03) 3.46(0.12) 3.52(0.08) 3.56(0.06) 3.62(0.06) 3.65(0.05) 3.66(0.07) 3.63(0.04) 3.53(0.10) 3.51(0.03) 3.44(0.10) 3.51(0.08) 3.60(0.10) 3.63(0.06) 3.68(0.05) 3.62(0.07) 3.57(0.07) 3.48(0.10) 3.51(0.06) 3.53(0.07) 3.54(0.04) 3.57(0.06) 3.56(0.04) 3.55(0.08) 3.48(0.08) 3.48(0.05) 3.50(0.03) 3.50(0.04) 3.53(0.03) 3.52(0.02) 3.55(0.04) 3.54(0.03) 3.53(0.03) 3.46(0.08) 3.43(0.04) 3.49(0.10) 3.49(0.05) 3.52(0.04) 3.54(0.03) 3.53(0.03) 3.51(0.03) 3.45(0.06) 3.44(0.02) 3.45(0.05) 3.48(0.04) 3.45(0.05) 3.46(0.03) 3.47(0.06) 3.44(0.07) 3.43(0.03) 3.42(0.06) 3.38(0.04) 3.41(0.06) 3.46(0.06) 3.49(0.03) 3.52(0.04) 3.51(0.03) 3.51(0.16) 3.43(0.14) 3.42(0.04) 3.45(0.04) 3.47(0.05) 3.50(0.03) 3.50(0.04) 3.52(0.03) 3.46(0.07) 3.41(0.05) 3.42(0.03) 3.44(0.06) 3.50(0.07) 3.55(0.13) 3.56(0.06) 3.57(0.04) 3.51(0.08) 3.49(0.03) 3.44(0.07) 3.49(0.07) 3.53(0.05) 3.56(0.04) 3.72(0.19) 3.71(0.07) 3.66(0.13) 3.60(0.08) 3.54(0.06) 3.51(0.04) 3.52(0.04) 3.59(0.08) 3.59(0.05) 3.63(0.04) 3.66(0.10) 3.65(0.04) 3.62(0.05) 3.56(0.06) 3.61(0.07) 3.64(0.09) 3.64(0.05) 3.66(0.04) 3.64(0.03) 3.62(0.13) 3.58(0.04) 3.60(0.06) 3.67(0.12) 3.71(0.08) 3.74(0.07) 3.70(0.10) 3.66(0.04) 3.62(0.06) 3.57(0.06) 3.56(0.02) 3.58(0.03) 3.58(0.03) 3.61(0.04) 3.61(0.03) 3.59(0.04) 3.54(0.05) 3.52(0.08) 3.55(0.05) 3.55(0.06) 3.58(0.04) 3.54(0.07) 3.48(0.06) 3.52(0.07) 3.57(0.06) 3.59(0.05) 3.65(0.07) 3.60(0.06) 3.57(0.03) 3.56(0.13) 3.58(0.04) 3.64(0.08) 3.67(0.05) 3.66(0.06) 3.59(0.09) 3.53(0.07) 3.54(0.08) 3.55(0.03) 3.54(0.05) 3.58(0.05) 3.57(0.04) 3.61(0.10) 3.55(0.08) 3.47(0.10) 3.46(0.02) 3.49(0.04) 3.53(0.04) 3.59(0.07) 3.61(0.14) 3.60(0.09) 3.54(0.06) 3.50(0.04) 3.52(0.03) 3.52(0.07) 3.55(0.07) 3.55(0.02) 3.56(0.02) 3.53(0.05) 3.49(0.04) 3.49(0.06) 3.50(0.07) 3.61(0.11) 3.63(0.04) 3.64(0.02) 3.62(0.06) 3.52(0.11) 3.51(0.03) 3.53(0.06) 3.59(0.07) 3.67(0.09) 3.66(0.14) 3.67(0.05) 3.67(0.06) 3.69(0.08) 3.63(0.09) 3.57(0.09) 3.49(0.10) 3.55(0.08) 3.57(0.05) 3.60(0.03) 3.60(0.01) 3.61(0.02) 3.60(0.07) 3.52(0.09) 3.52(0.03) 3.52(0.04) 3.58(0.06) 3.58(0.16) 3.58(0.05) 3.53(0.06) 3.52(0.05) 3.51(0.03) 3.53(0.07) 3.57(0.04) 3.57(0.04) 3.62(0.08) 3.63(0.03) 3.60(0.04) 3.54(0.07) 3.51(0.10) 3.49(0.05) 3.50(0.04) 3.55(0.05) 3.58(0.04) 3.60(0.03) 3.59(0.05) 3.54(0.05) 3.51(0.03) 3.56(0.08) 3.62(0.09) 3.63(0.03) 3.63(0.03) 3.56(0.08) 3.50(0.06) 3.53(0.03) 3.56(0.08) 3.60(0.05) 3.57(0.08) 3.55(0.05) 3.52(0.05) 3.54(0.07) 3.50(0.06) 3.51(0.05) 3.52(0.03) 3.57(0.05) 3.57(0.04) 3.57(0.05) 3.62(0.05) 3.56(0.07) 3.54(0.04) 3.49(0.07) 3.45(0.12) 3.48(0.13) 3.53(0.10) 3.52(0.04) 3.51(0.05) 3.56(0.05) 3.54(0.02) 3.56(0.04) 3.47(0.09) 3.49(0.06) 3.47(0.06) 3.50(0.05) 3.52(0.02) 3.51(0.03) 3.53(0.03) 3.52(0.04) 3.52(0.02) 3.51(0.04) 3.53(0.06) 3.49(0.05) 3.47(0.07) 3.40(0.07) 3.45(0.06) 3.40(0.13) 3.39(0.12) 3.37(0.08) 3.32(0.08) 3.29(0.03) 3.24(0.06) 3.26(0.06) 3.34(0.09) 3.36(0.02) 3.39(0.03) 3.38(0.04)
++ Max displacement in automask = 3.75 (mm) at sub-brick 785
++ Max delta displ  in automask = 0.56 (mm) at sub-brick 482
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb03.GB15.r03.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB15_unif_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB15_unif_ns+tlrc -dxyz 2.5 -source pb02.GB15.r03.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB15_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB15.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 1194.4 sec
3dNwarpApply -master MPRAGE.GB15_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB15_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB15.r01.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB15.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB15.r02.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB15.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB15.r03.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB15.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB15_unif_al_junk_mat.aff12.1D -I
3dNwarpApply -master MPRAGE.GB15_unif_ns+tlrc -dxyz 2.5 -source vr_base_min_outlier+orig -nwarp anat.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base_min_outlier
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB15_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'vr_base_min_outlier+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./final_epi_vr_base_min_outlier+tlrc.BRIK
++ total Elapsed time = 48.0 sec
3dcopy MPRAGE.GB15_unif_ns+tlrc anat_final.GB15
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dAllineate -base final_epi_vr_base_min_outlier+tlrc -allcostX -input anat_final.GB15+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.GB15+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base_min_outlier+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'TOHD(12.9425)'
 +        -cmass x y z shifts =    0.095    0.483    2.279
 +  shift search range is +/- =   69.817   85.868   69.817
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.0890003
   sp   = 0.278131
   mi   = 2.85762
   crM  = 0.0188757
   nmi  = 0.830874
   je   = 2.85762
   hel  = -0.123547
   crA  = 0.137397
   crU  = 0.138927
   lss  = 0.911
   lpc  = 0.456563
   lpa  = 0.543437
   lpc+ = 0.553724
   lpa+ = 0.640597
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.0
++ ###########################################################
3dNwarpApply -source MPRAGE.GB15_unif+orig -master anat_final.GB15+tlrc -ainterp wsinc5 -nwarp anat.aff.qw_WARP.nii anat.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'MPRAGE.GB15_unif+orig'
++ -master dataset is 'anat_final.GB15+tlrc'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 6.6 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb04.volreg pb04.GB15.r01.volreg+tlrc.HEAD pb04.GB15.r02.volreg+tlrc.HEAD pb04.GB15.r03.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 89.2 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 603.5 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 488.1 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB15.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB15.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
