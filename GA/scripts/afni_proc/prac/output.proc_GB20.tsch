echo auto-generated by afni_proc.py, Fri Jan 20 08:00:10 2023
auto-generated by afni_proc.py, Fri Jan 20 08:00:10 2023
echo (version 7.17, July 16, 2021)
(version 7.17, July 16, 2021)
echo execution started: `date`
date
execution started: Fri Jan 20 08:00:11 AM KST 2023
afni -ver
Precompiled binary linux_ubuntu_16_64: Jul 28 2021 (Version AFNI_21.2.04 'Nerva')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   27 Jul 2021
if ( 0 ) then
if ( 0 > 0 ) then
set subj = GB20
endif
set output_dir = /mnt/ext5/GA/fmri_data/preproc_data/GB20
if ( -d /mnt/ext5/GA/fmri_data/preproc_data/GB20 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir -p /mnt/ext5/GA/fmri_data/preproc_data/GB20
mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB20/stimuli
3dcopy /mnt/ext5/GA/fmri_data/raw_data/GB20/MPRAGE.GB20.nii /mnt/ext5/GA/fmri_data/preproc_data/GB20/MPRAGE.GB20
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB20/blip_forward /mnt/ext5/GA/fmri_data/raw_data/GB20/dist_AP.GB20.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB20/blip_reverse /mnt/ext5/GA/fmri_data/raw_data/GB20/dist_PA.GB20.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.3 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB20/pb00.GB20.r01.tcat /mnt/ext5/GA/fmri_data/raw_data/GB20/func.GB20.r01.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 142.5 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB20/pb00.GB20.r02.tcat /mnt/ext5/GA/fmri_data/raw_data/GB20/func.GB20.r02.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 266.8 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB20/pb00.GB20.r03.tcat /mnt/ext5/GA/fmri_data/raw_data/GB20/func.GB20.r03.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 101.0 s
set tr_counts = ( 1096 1096 1096 )
cd /mnt/ext5/GA/fmri_data/preproc_data/GB20
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.GB20.r01.tcat+orig.HEAD pb00.GB20.r02.tcat+orig.HEAD pb00.GB20.r03.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 59.1 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 116.3 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 67.8 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB20.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1121.0 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB20.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1121.0 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB20.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1121.0 MB)
........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

3dUnifize -prefix MPRAGE.GB20_unif -GM MPRAGE.GB20+orig
++ 3dUnifize: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + Pre-processing: ADV...............................UW[s135464]Gm
++ Output dataset ./MPRAGE.GB20_unif+orig.BRIK
++ ===== Elapsed = 41.1 sec
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB20.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 64640 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB20.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 64592 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB20.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 64708 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 1096 1096 1096 -index_to_run_tr 52
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
set minoutrun = 01
set minouttr = 52
echo min outlier: run 01, TR 52
tee out.min_outlier.txt
min outlier: run 01, TR 52
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.GB20.r01.despike pb00.GB20.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB20.r01.tcat+orig
++ processing all 536263 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #7
++ start OpenMP thread #13
++ start OpenMP thread #11
++ start OpenMP thread #9
++ start OpenMP thread #10
++ start OpenMP thread #14
++ start OpenMP thread #1
++ start OpenMP thread #5
++ start OpenMP thread #8
++ start OpenMP thread #6
++ start OpenMP thread #12
++ start OpenMP thread #4
++ start OpenMP thread #2
++ start OpenMP thread #3
.....................................................................................................................................................................................................................................
++ Elapsed despike time =  8s 875ms

++ FINAL: 412730584 data points, 15139782 edits [3.668%], 699915 big edits [0.170%]
++ Output dataset ./pb01.GB20.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB20.r02.despike pb00.GB20.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB20.r02.tcat+orig
++ processing all 536263 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #11
++ start OpenMP thread #8
++ start OpenMP thread #3
++ start OpenMP thread #14
++ start OpenMP thread #7
++ start OpenMP thread #10
++ start OpenMP thread #1
++ start OpenMP thread #12
++ start OpenMP thread #6
++ start OpenMP thread #9
++ start OpenMP thread #4
++ start OpenMP thread #2
++ start OpenMP thread #13
++ start OpenMP thread #5
.....................................................................................................................................................................................................................................
++ Elapsed despike time =  8s 499ms

++ FINAL: 412730584 data points, 15960343 edits [3.867%], 1274887 big edits [0.309%]
++ Output dataset ./pb01.GB20.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB20.r03.despike pb00.GB20.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB20.r03.tcat+orig
++ processing all 536263 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #13
++ start OpenMP thread #9
++ start OpenMP thread #10
++ start OpenMP thread #1
++ start OpenMP thread #11
++ start OpenMP thread #6
++ start OpenMP thread #5
++ start OpenMP thread #12
++ start OpenMP thread #2
++ start OpenMP thread #8
++ start OpenMP thread #14
++ start OpenMP thread #4
++ start OpenMP thread #7
++ start OpenMP thread #3
.....................................................................................................................................................................................................................................
++ Elapsed despike time =  8s 515ms

++ FINAL: 412730584 data points, 14954618 edits [3.623%], 689590 big edits [0.167%]
++ Output dataset ./pb01.GB20.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.GB20.r01.tshift pb01.GB20.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB20.r02.tshift pb01.GB20.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB20.r03.tshift pb01.GB20.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTstat -median -prefix rm.blip.med.fwd blip_forward+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.fwd+orig.BRIK
3dTstat -median -prefix rm.blip.med.rev blip_reverse+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.rev+orig.BRIK
3dAutomask -apply_prefix rm.blip.med.masked.fwd rm.blip.med.fwd+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.fwd+orig
++ Forming automask
 + Fixed clip level = 5537.707520
 + Used gradual clip level = 5295.228027 .. 5795.938477
 + Number voxels above clip level = 74819
 + Clustering voxels ...
 + Largest cluster has 72503 voxels
 + Clustering voxels ...
 + Largest cluster has 70711 voxels
 + Filled   368 voxels in small holes; now have 71079 voxels
 + Filled     3 voxels in large holes; now have 71082 voxels
 + Clustering voxels ...
 + Largest cluster has 71079 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 465184 voxels
 + Mask now has 71079 voxels
++ 71079 voxels in the mask [out of 536263: 13.25%]
++ first  16 x-planes are zero [from R]
++ last   16 x-planes are zero [from L]
++ first  18 y-planes are zero [from A]
++ last   12 y-planes are zero [from P]
++ first   5 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dAutomask -apply_prefix rm.blip.med.masked.rev rm.blip.med.rev+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.rev+orig
++ Forming automask
 + Fixed clip level = 5205.375000
 + Used gradual clip level = 4806.330078 .. 5941.868652
 + Number voxels above clip level = 77187
 + Clustering voxels ...
 + Largest cluster has 76575 voxels
 + Clustering voxels ...
 + Largest cluster has 73714 voxels
 + Filled   322 voxels in small holes; now have 74036 voxels
 + Filled     1 voxels in large holes; now have 74037 voxels
 + Clustering voxels ...
 + Largest cluster has 74033 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 462222 voxels
 + Mask now has 74041 voxels
++ 74041 voxels in the mask [out of 536263: 13.81%]
++ first  16 x-planes are zero [from R]
++ last   16 x-planes are zero [from L]
++ first  14 y-planes are zero [from A]
++ last   12 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last   11 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dQwarp -plusminus -pmNAMES Rev For -pblur 0.05 0.05 -blur -1 -1 -noweight -minpatch 9 -source rm.blip.med.masked.rev+orig -base rm.blip.med.masked.fwd+orig -prefix blip_warp
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=3 ytop=3  zbot=5 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=./rm.blip.med.masked.fwd+orig.HEAD  source=./rm.blip.med.masked.rev+orig.HEAD
++ AFNI warpomatic start: 89 x 97 x 79 volume ; autobbox = 9..80 12..91 0..74
lev=0 1..88 3..96 0..78: [first cost=-1.49467] ...... done [cost=-1.65544]
lev=1 patch=65x71x59: [first cost=-1.53849] ........ done [cost:-1.57115 ; 8 patches optimized, 0 skipped]
lev=2 patch=49x53x45: [first cost=-1.48417] ....................... done [cost:-1.57218 ; 23 patches optimized, 4 skipped]
lev=3 patch=37x39x33: [first cost=-1.49331] .................. done [cost:-1.56285 ; 42 patches optimized, 22 skipped]
lev=4 patch=27x29x25: [first cost=-1.52058] ................. done [cost:-1.59931 ; 109 patches optimized, 71 skipped]
lev=5 patch=21x23x19: [first cost=-1.59928] .................... done [cost:-1.67092 ; 235 patches optimized, 157 skipped]
lev=6 patch=15x17x15: [first cost=-1.60214] .......................... done [cost:-1.68676 ; 563 patches optimized, 437 skipped]
lev=7 patch=11x13x11: [first cost=-1.67552] ........................... +      cubic12 patch 071..083 062..074 040..050 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x24b8bf0  xbot=0x249c360  xtop=0x2499800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.. +      cubic12 patch 041..051 080..095 045..055 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x24b8bf0  xbot=0x249c360  xtop=0x2499800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.... done [cost:-1.77094 ; 1440 patches optimized, 1108 skipped]
lev=8 patch=9x9x9: [first cost=-1.77044] . +      cubic12 patch 071..079 054..062 017..025 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x24b8bf0  xbot=0x249c360  xtop=0x2499800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 +      cubic12 patch 071..079 046..054 025..033 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x24b8bf0  xbot=0x249c360  xtop=0x2499800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 +      cubic12 patch 071..079 042..050 041..049 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x24b8bf0  xbot=0x249c360  xtop=0x2499800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
....... +      cubic12 patch 059..067 078..086 021..029 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x24b8bf0  xbot=0x249c360  xtop=0x2499800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
......... +      cubic12 patch 051..059 046..054 065..073 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x24b8bf0  xbot=0x249c360  xtop=0x2499800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.......... +      cubic12 patch 039..047 082..090 049..057 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x24b8bf0  xbot=0x249c360  xtop=0x2499800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 +      cubic12 patch 039..047 082..090 041..049 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x24b8bf0  xbot=0x249c360  xtop=0x2499800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
..... +      cubic12 patch 035..043 054..062 069..077 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x24b8bf0  xbot=0x249c360  xtop=0x2499800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
................. +      cubic12 patch 011..019 030..038 033..041 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x24b8bf0  xbot=0x249c360  xtop=0x2499800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
. done [cost:-1.83093 ; 3355 patches optimized, 3125 skipped]
++ ====== total number of parameters 'optimized' = 69489
 +      initial unpenalized cost = -1.49467
 +        final unpenalized cost = -1.86222
 +        final penalized   cost = -1.83093
++ Output dataset ./blip_warp_Rev+orig.BRIK
++ Output dataset ./blip_warp_For+orig.BRIK
++ Output dataset ./blip_warp_Rev_WARP+orig.BRIK
++ Output dataset ./blip_warp_For_WARP+orig.BRIK
++ ===== clock time = 34s 546ms
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.fwd+orig -prefix blip_med_for
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for+orig.BRIK
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.masked.fwd+orig -prefix blip_med_for_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for_masked+orig.BRIK
3dNwarpApply -quintic -nwarp blip_warp_Rev_WARP+orig -source rm.blip.med.masked.rev+orig -prefix blip_med_rev_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.rev+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_rev_masked+orig.BRIK
foreach run ( 01 02 03 )
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB20.r01.tshift+orig -prefix pb03.GB20.r01.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB20.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB20.r01.blip+orig.BRIK
++ total Elapsed time = 216.5 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB20.r02.tshift+orig -prefix pb03.GB20.r02.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB20.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB20.r02.blip+orig.BRIK
++ total Elapsed time = 132.8 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB20.r03.tshift+orig -prefix pb03.GB20.r03.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB20.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB20.r03.blip+orig.BRIK
++ total Elapsed time = 138.8 sec
end
3dbucket -prefix vr_base_min_outlier pb03.GB20.r01.blip+orig[52]
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
align_epi_anat.py -anat2epi -anat MPRAGE.GB20_unif+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off -tshift off
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB20/MPRAGE.GB20_unif+orig
#++ Multi-cost is lpa
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB20_unif*
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB20_unif+orig ./MPRAGE.GB20_unif_unflipped+orig
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./MPRAGE.GB20_unif_unflipped+orig -prefix ./MPRAGE.GB20_unif_unflipped_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 96, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 108, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 120, avoid_vent -1
Warning 3dSkullStrip: Stubborn intersection remaining at smoothing of 120. Ignoring it.#Script is running (command trimmed):
  3dinfo ./MPRAGE.GB20_unif_unflipped_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB20/MPRAGE.GB20_unif_unflipped_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB20/vr_base_min_outlier+orig is not oblique
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_ts ./vr_base_min_outlier+orig'[0]'
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_min_outlier_ts_ns ./__tt_vr_base_min_outlier_ts+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 3897.752930
 + Used gradual clip level = 3535.108643 .. 4169.210938
 + Number voxels above clip level = 68642
 + Clustering voxels ...
 + Largest cluster has 66765 voxels
 + Clustering voxels ...
 + Largest cluster has 65125 voxels
 + Filled   200 voxels in small holes; now have 65325 voxels
 + Filled     1 voxels in large holes; now have 65326 voxels
 + Clustering voxels ...
 + Largest cluster has 65323 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 470940 voxels
 + Mask now has 65323 voxels
++ 65323 voxels in the mask [out of 536263: 12.18%]
++ first  17 x-planes are zero [from R]
++ last   17 x-planes are zero [from L]
++ first  18 y-planes are zero [from A]
++ last   13 y-planes are zero [from P]
++ first   6 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_min_outlier_ts_ns+orig
#++ Applying threshold of 9145.486328 on /mnt/ext5/GA/fmri_data/preproc_data/GB20/vr_base_min_outlier_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_min_outlier_ts_ns_wt -a ./vr_base_min_outlier_ts_ns+orig -expr 'min(1,(a/9145.486328))'
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpa -wtprefix ./MPRAGE.GB20_unif_unflipped_ns_al_junk_wtal -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB20_unif_unflipped_ns+orig -prefix ./MPRAGE.GB20_unif_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB20_unif_al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB20_unif_unflipped_ns+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4074337 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 65323 voxels [11.4%] in weight mask
++ Number of points for matching = 65323
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.620 50.423 39.151 (index)
 + source center of mass = 111.764 185.752 173.167 (index)
 + source-target CM = -0.871 -1.255 0.202 (xyz)
 + estimated center of mass shifts = -0.871 -1.255 0.202
++ shift param auto-range: -71.5..69.7 -78.8..76.3 -64.4..64.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.871078 .. 9.128922  center = -0.871078
 + Range param#2 [y-shift] = -11.254753 .. 8.745247  center = -1.254753
 + Range param#3 [z-shift] = -9.798302 .. 10.201698  center = 0.201698
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.871078 .. 39.128922  center = -0.871078
 + Range param#2 [y-shift] = -41.254753 .. 38.745247  center = -1.254753
 + Range param#3 [z-shift] = -39.798302 .. 40.201698  center = 0.201698
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -40.871 ..   39.129
 +       y-shift =  -41.255 ..   38.745
 +       z-shift =  -39.798 ..   40.202
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4074337 [out of 23184225] voxels
 + base mask has 83166 [out of 574028] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=266.571 usiz=397.385
 + - copying weight image
 + - using 65323 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 56468 total points stored in 111 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#oo---o-..+-o--++-$o + - best 88 costs found:
   o= 0 v= 0.840537:  -0.87  -1.25   0.20   0.00   0.00   0.00  [grid]
   o= 1 v= 0.955394: -35.20 -17.84   8.80  16.34  -8.64  40.54  [rand]
   o= 2 v= 0.957218:   5.80   5.41  -6.46  -7.50   7.50  -7.50  [grid]
   o= 3 v= 0.957541:  25.80  25.41   6.87 -30.00  30.00   7.50  [grid]
   o= 4 v= 0.958360:  -7.54   5.41  -6.46  -7.50   7.50 -30.00  [grid]
   o= 5 v= 0.960986: -27.54  -7.92  -6.46   7.50   7.50  -7.50  [grid]
   o= 6 v= 0.961381:  33.46  15.33  -8.40 -16.34  -8.64 -40.54  [rand]
   o= 7 v= 0.961436:   5.80   5.41  -6.46   7.50  -7.50 -30.00  [grid]
   o= 8 v= 0.961534:  -7.54   5.41  -6.46   7.50   7.50   7.50  [grid]
   o= 9 v= 0.963086:   5.80   5.41  -6.46  -7.50  -7.50  -7.50  [grid]
   o=10 v= 0.963233: -19.20  24.89   6.25   6.51  20.18   7.56  [rand]
   o=11 v= 0.963509:  30.97 -13.05  -2.54 -23.31  -3.26 -40.47  [rand]
   o=12 v= 0.963516:   5.80 -27.92  26.87  30.00 -30.00 -30.00  [grid]
   o=13 v= 0.963682: -35.74  29.30  15.97 -11.68  29.04  39.38  [rand]
   o=14 v= 0.963693: -19.20  24.89  -5.84   6.51  20.18  -7.56  [rand]
   o=15 v= 0.963808:   5.80   5.41  -6.46   7.50  -7.50  -7.50  [grid]
   o=16 v= 0.963896:  -7.54   5.41  -6.46  -7.50  -7.50 -30.00  [grid]
   o=17 v= 0.963981:   5.80  -7.92   6.87   7.50   7.50  30.00  [grid]
   o=18 v= 0.964399: -24.41   7.29 -15.77  26.66  31.62  32.06  [rand]
   o=19 v= 0.964583:  33.46 -17.84  -8.40 -16.34  -8.64 -40.54  [rand]
   o=20 v= 0.964800: -24.78   5.68  14.13 -13.51 -15.92  -9.43  [rand]
   o=21 v= 0.964889:  -7.54   5.41  -6.46   7.50  -7.50 -30.00  [grid]
   o=22 v= 0.964958:  13.33   8.20   5.04 -15.99 -13.53  29.93  [rand]
   o=23 v= 0.965125:  33.46 -17.84   8.80  16.34   8.64 -40.54  [rand]
   o=24 v= 0.965222: -35.20  15.33  -8.40  16.34  -8.64  40.54  [rand]
   o=25 v= 0.965224: -35.20  15.33   8.80 -16.34   8.64  40.54  [rand]
   o=26 v= 0.965307: -33.30 -15.60   5.80   8.22   9.03  36.72  [rand]
   o=27 v= 0.965311:  -7.54  -7.92   6.87  30.00  30.00  -7.50  [grid]
   o=28 v= 0.965590: -12.47   3.30   4.10  24.53 -29.49 -26.10  [rand]
   o=29 v= 0.965635: -33.30 -15.60   5.80   8.22  -9.03  36.72  [rand]
   o=30 v= 0.965777:  -7.54   5.41  -6.46   7.50   7.50 -30.00  [grid]
   o=31 v= 0.965869: -14.90  14.46 -14.47  24.25  37.55  -4.41  [rand]
   o=32 v= 0.966015: -35.20 -17.84   8.80  16.34   8.64  40.54  [rand]
   o=33 v= 0.966053:  -4.95   4.97  -7.59  -4.32 -22.85  18.95  [rand]
   o=34 v= 0.966084:   6.02   7.82   3.68 -42.18 -25.76  19.54  [rand]
   o=35 v= 0.966140: -23.34  27.90 -29.82  27.43 -11.56 -19.13  [rand]
   o=36 v= 0.966381:  -7.54   5.41  -6.46   7.50  -7.50   7.50  [grid]
   o=37 v= 0.966384:  25.80   5.41  -6.46 -30.00  -7.50   7.50  [grid]
   o=38 v= 0.966466: -35.74 -31.81  15.97 -11.68  29.04  39.38  [rand]
   o=39 v= 0.966472: -27.54  25.41   6.87  -7.50  -7.50  -7.50  [grid]
   o=40 v= 0.966506:   5.80  -7.92   6.87   7.50  -7.50  30.00  [grid]
   o=41 v= 0.966561:   5.80   5.41   6.87 -30.00 -30.00  30.00  [grid]
   o=42 v= 0.966745:   5.80  -7.92   6.87   7.50 -30.00 -30.00  [grid]
   o=43 v= 0.966760: -33.30 -15.60  -5.40   8.22   9.03  36.72  [rand]
   o=44 v= 0.966975:  30.97  10.54  -2.54 -23.31  -3.26 -40.47  [rand]
   o=45 v= 0.967475: -33.36 -15.95  12.01  11.16   9.40  34.39  [rand]
   o=46 v= 0.967578:  25.80   5.41  -6.46   7.50  -7.50   7.50  [grid]
   o=47 v= 0.967691:  33.99 -31.81  15.97  11.68  29.04 -39.38  [rand]
   o=48 v= 0.967917:  -7.54   5.41  -6.46  30.00  -7.50 -30.00  [grid]
   o=49 v= 0.967996:  -7.54  25.41   6.87  -7.50  30.00   7.50  [grid]
   o=50 v= 0.968039:  17.62   4.60 -14.40 -16.04   3.33 -12.13  [rand]
   o=51 v= 0.968117:  31.56 -15.60  -5.40  -8.22  -9.03 -36.72  [rand]
   o=52 v= 0.968186: -32.71  10.54   2.94  23.31   3.26  40.47  [rand]
   o=53 v= 0.968194:  10.73   3.30  -3.69  24.53 -29.49 -26.10  [rand]
   o=54 v= 0.968196:  -7.54   5.41  -6.46   7.50  -7.50  -7.50  [grid]
   o=55 v= 0.968198:  -7.54  -7.92   6.87  30.00  30.00 -30.00  [grid]
   o=56 v= 0.968294:  33.46 -17.84  -8.40  16.34   8.64 -40.54  [rand]
   o=57 v= 0.968418:   5.80   5.41   6.87   7.50   7.50  30.00  [grid]
   o=58 v= 0.968494: -32.71 -13.05   2.94  23.31  -3.26  40.47  [rand]
   o=59 v= 0.968499:  25.80  -7.92  -6.46  -7.50   7.50   7.50  [grid]
   o=60 v= 0.968535:  33.46  15.33  -8.40 -16.34   8.64 -40.54  [rand]
   o=61 v= 0.968559:  25.80  25.41   6.87 -30.00   7.50   7.50  [grid]
   o=62 v= 0.968598:  -7.54  -7.92  -6.46  -7.50  -7.50 -30.00  [grid]
   o=63 v= 0.968636:   5.80   5.41  -6.46   7.50  -7.50  30.00  [grid]
   o=64 v= 0.968646:  25.80   5.41  -6.46  -7.50   7.50   7.50  [grid]
   o=65 v= 0.968668: -19.20  24.89  -5.84   6.51  20.18   7.56  [rand]
   o=66 v= 0.968775: -27.54  -7.92  -6.46  -7.50   7.50  -7.50  [grid]
   o=67 v= 0.968826:  31.62  25.74  32.09   9.69  21.75 -40.77  [rand]
   o=68 v= 0.968907: -19.20  24.89   6.25  -6.51 -20.18   7.56  [rand]
   o=69 v= 0.969050: -11.20 -30.07  15.21  30.67 -17.79  20.52  [rand]
   o=70 v= 0.969058: -27.54   5.41  -6.46  30.00   7.50  -7.50  [grid]
   o=71 v= 0.969076: -33.36  25.74  32.09   9.69  21.75  40.77  [rand]
   o=72 v= 0.969077:  25.80   5.41  -6.46 -30.00   7.50   7.50  [grid]
   o=73 v= 0.969077:  23.04  -8.18 -13.73 -13.51  15.92  -9.43  [rand]
   o=74 v= 0.969101: -27.54  25.41 -26.46 -30.00   7.50 -30.00  [grid]
   o=75 v= 0.969125: -32.71 -13.05   2.94  23.31   3.26  40.47  [rand]
   o=76 v= 0.969144: -33.36  13.44 -11.61  11.16   9.40  34.39  [rand]
   o=77 v= 0.969234:   5.80  25.41  26.87  -7.50  30.00  -7.50  [grid]
   o=78 v= 0.969265: -35.20  15.33  -8.40 -16.34   8.64  40.54  [rand]
   o=79 v= 0.969273:  17.62   4.60 -14.40 -16.04  -3.33 -12.13  [rand]
   o=80 v= 0.969311:  30.97  10.54  -2.54 -23.31   3.26 -40.47  [rand]
   o=81 v= 0.969322: -19.37   4.60 -14.40  16.04   3.33  12.13  [rand]
   o=82 v= 0.969494: -35.74  29.30 -15.57 -11.68  29.04  39.38  [rand]
   o=83 v= 0.969583: -23.22  15.13 -15.63  41.11  22.86  -3.97  [rand]
   o=84 v= 0.969650: -32.71  10.54   2.94  23.31  -3.26  40.47  [rand]
   o=85 v= 0.969701:  25.80  25.41 -26.46 -30.00   7.50 -30.00  [grid]
   o=86 v= 0.969716:  -7.54  25.41   6.87  30.00  30.00  -7.50  [grid]
   o=87 v= 0.969730: -27.54  25.41   6.87  30.00  30.00  -7.50  [grid]
 + - A little optimization:*[#11724=0.838471] *[#11727=0.827767] *[#11729=0.81593] *[#11735=0.815366] *[#11737=0.81516] *[#11738=0.81444] *[#11740=0.814359] *[#11742=0.814325] *[#11743=0.814177] *[#11746=0.814052] ........................................................................................
 + - costs of the above after a little optimization:
  *o= 0 v= 0.814052:  -0.69  -0.79   0.89   0.68   0.04  -0.46  [grid]  [f=35]
   o= 1 v= 0.947687: -38.95 -17.94   8.60  16.97  -8.69  40.61  [rand]  [f=42]
   o= 2 v= 0.944923:   5.23   3.23  -5.93  -7.53   9.33  -2.60  [grid]  [f=51]
   o= 3 v= 0.951062:  24.28  25.45   4.98 -32.14  28.08   6.62  [grid]  [f=36]
   o= 4 v= 0.949861:  -7.93   4.57  -7.10  -6.60   5.62 -34.65  [grid]  [f=47]
   o= 5 v= 0.955700: -24.55  -8.21  -6.91   8.04   7.69  -7.95  [grid]  [f=44]
   o= 6 v= 0.951048:  33.05  15.23  -9.16 -10.33  -6.57 -44.84  [rand]  [f=45]
   o= 7 v= 0.955080:   6.03   2.24  -6.54  10.10  -7.36 -29.26  [grid]  [f=64]
   o= 8 v= 0.945112:  -6.88   4.72  -6.32   6.85   4.73  15.22  [grid]  [f=58]
   o= 9 v= 0.930913:   5.99   1.92  -5.94  -3.37  -2.09  -6.45  [grid]  [f=58]
   o=10 v= 0.957300: -19.07  24.27   6.32   8.01  26.29   8.18  [rand]  [f=35]
   o=11 v= 0.954542:  33.49 -14.69  -2.24 -19.62  -7.69 -43.53  [rand]  [f=41]
   o=12 v= 0.961376:   5.20 -28.28  26.62  29.45 -29.53 -28.87  [grid]  [f=48]
   o=13 v= 0.942811: -39.40  27.51  15.72 -14.81  24.60  44.96  [rand]  [f=52]
   o=14 v= 0.956613: -21.86  25.05  -6.82   4.84  20.87  -8.47  [rand]  [f=37]
   o=15 v= 0.932736:   6.66  -1.51  -6.38  -2.64  -8.25  -7.62  [grid]  [f=71]
   o=16 v= 0.942775:  -7.50   4.16  -0.06 -11.75  -9.86 -32.73  [grid]  [f=49]
   o=17 v= 0.941259:   5.69  -1.33   5.29   7.19   4.10  30.60  [grid]  [f=55]
   o=18 v= 0.961477: -22.63   7.70 -15.89  25.49  29.91  32.45  [rand]  [f=40]
   o=19 v= 0.950540:  33.27 -16.66  -3.43 -15.12  -9.47 -41.01  [rand]  [f=60]
   o=20 v= 0.955381: -27.60   7.07  13.45 -14.26 -16.52 -11.42  [rand]  [f=37]
   o=21 v= 0.941679:  -4.08   2.34  -2.55  -0.40  -3.99 -23.28  [grid]  [f=45]
   o=22 v= 0.950609:   9.88   6.71   5.53 -15.18 -13.18  30.01  [rand]  [f=54]
   o=23 v= 0.957951:  33.73 -17.68   7.28  12.65   9.59 -44.26  [rand]  [f=49]
   o=24 v= 0.948541: -39.26  18.85  -8.25  15.27  -8.94  44.06  [rand]  [f=40]
   o=25 v= 0.946569: -40.07  17.25  13.37 -20.06  23.03  44.76  [rand]  [f=49]
   o=26 v= 0.950243: -37.74 -16.74   8.28   2.31   5.95  44.75  [rand]  [f=43]
   o=27 v= 0.951778:  -5.59  -6.47   7.52  32.43  30.86  -8.48  [grid]  [f=52]
   o=28 v= 0.958783: -12.62   4.37   4.29  21.13 -31.02 -31.26  [rand]  [f=57]
   o=29 v= 0.948187: -38.71 -19.82   6.04   7.92  -3.48  40.73  [rand]  [f=44]
   o=30 v= 0.932042:  -8.58   0.34   0.35   4.56   9.86 -33.32  [grid]  [f=83]
   o=31 v= 0.954634: -13.00  16.05 -15.49  20.50  36.04  -5.02  [rand]  [f=62]
   o=32 v= 0.957736: -32.65 -20.12   7.03  14.58   8.76  39.21  [rand]  [f=39]
   o=33 v= 0.944631:  -3.88   4.63  -8.02  -1.86  -6.65  25.26  [rand]  [f=56]
   o=34 v= 0.960887:   7.52   7.67   4.39 -37.34 -26.40  21.97  [rand]  [f=43]
   o=35 v= 0.963851: -23.41  27.53 -29.81  26.98 -14.07 -20.43  [rand]  [f=39]
   o=36 v= 0.938240:  -7.20   1.07  -5.48   5.55  -2.28   7.85  [grid]  [f=83]
   o=37 v= 0.949636:  23.29   2.48  -7.60 -30.64  -5.45   4.34  [grid]  [f=41]
   o=38 v= 0.956165: -36.82 -30.53  17.30 -11.03  27.78  43.56  [rand]  [f=41]
   o=39 v= 0.958289: -25.16  24.07   6.36  -8.98 -13.36  -6.83  [grid]  [f=36]
   o=40 v= 0.939349:   4.90  -1.09   4.87   7.98  -3.64  29.57  [grid]  [f=64]
   o=41 v= 0.956215:   7.06   5.33   6.20 -29.27 -27.92  34.42  [grid]  [f=72]
   o=42 v= 0.960863:   8.56  -8.50   5.94   6.65 -30.68 -30.00  [grid]  [f=46]
   o=43 v= 0.959907: -33.60 -15.68  -4.26   8.40   8.39  42.86  [rand]  [f=48]
   o=44 v= 0.949965:  33.03  13.71  -9.15  -9.15  -5.78 -44.73  [rand]  [f=56]
   o=45 v= 0.962223: -37.38 -15.42  11.99  11.15   9.44  34.34  [rand]  [f=29]
   o=46 v= 0.960199:  25.53   5.48  -7.31   5.42  -2.70   7.93  [grid]  [f=66]
   o=47 v= 0.957446:  34.66 -30.77  15.76  16.58  29.92 -44.97  [rand]  [f=46]
   o=48 v= 0.953399: -13.94   3.95  -0.50  27.26 -16.86 -34.48  [grid]  [f=76]
   o=49 v= 0.963923: -11.50  25.42   7.29  -7.61  30.12   8.22  [grid]  [f=31]
   o=50 v= 0.960259:  14.11   4.70 -14.71 -16.26   2.91 -12.56  [rand]  [f=44]
   o=51 v= 0.950155:  37.71 -15.13  -4.57  -7.46 -10.15 -36.58  [rand]  [f=36]
   o=52 v= 0.964877: -33.02  15.50   2.39  22.59  -0.25  41.05  [rand]  [f=48]
   o=53 v= 0.965942:  11.38   3.84  -3.86  23.25 -26.53 -25.94  [rand]  [f=43]
   o=54 v= 0.946412:  -5.92   1.29  -6.39   7.58  -1.13  -6.53  [grid]  [f=64]
   o=55 v= 0.955420:  -8.03  -6.29   7.95  27.77  33.68 -29.33  [grid]  [f=50]
   o=56 v= 0.957421:  36.52  -7.61 -10.94  16.59  10.69 -40.85  [rand]  [f=53]
   o=57 v= 0.942761:   5.50  -1.50   4.85   7.66   4.82  29.46  [grid]  [f=57]
   o=58 v= 0.947484: -39.48 -13.08   2.88   8.77 -12.73  40.25  [rand]  [f=53]
   o=59 v= 0.958262:  25.04  -3.20  -5.64  -8.54   5.89   7.88  [grid]  [f=44]
   o=60 v= 0.952466:  34.04  15.80 -11.43 -10.40   2.73 -44.19  [rand]  [f=51]
   o=61 v= 0.958122:  24.13  26.95  12.76 -31.77   5.70   3.94  [grid]  [f=45]
   o=62 v= 0.944630:  -8.82   0.20   0.69   3.41  -4.64 -31.78  [grid]  [f=67]
   o=63 v= 0.941302:   3.74   0.85  -0.01   6.28  -5.64  29.39  [grid]  [f=66]
   o=64 v= 0.965924:  23.95   6.87  -6.69  -8.22   6.40   7.79  [grid]  [f=49]
   o=65 v= 0.954651: -19.04  24.08 -11.68   2.98  20.30   3.60  [rand]  [f=48]
   o=66 v= 0.952427: -21.37  -8.37  -6.08  -6.02   4.76  -5.61  [grid]  [f=51]
   o=67 v= 0.950071:  33.17  26.26  37.56   6.22  15.60 -44.17  [rand]  [f=54]
   o=68 v= 0.963765: -19.41  26.12   6.43  -7.27 -13.19   7.69  [rand]  [f=40]
   o=69 v= 0.959444:  -9.32 -31.37  12.99  31.28 -16.89  21.36  [rand]  [f=57]
   o=70 v= 0.960023: -23.07   7.93  -6.43  28.65   8.18  -5.56  [grid]  [f=47]
   o=71 v= 0.954091: -32.71  26.10  27.82   6.83  16.74  39.38  [rand]  [f=45]
   o=72 v= 0.958600:  24.51  -0.79  -7.06 -30.38   8.03   8.46  [grid]  [f=45]
   o=73 v= 0.963331:  19.96  -5.29 -13.84 -13.74  13.64 -10.93  [rand]  [f=43]
   o=74 v= 0.967840: -27.34  25.50 -25.99 -29.63   6.67 -30.24  [grid]  [f=37]
   o=75 v= 0.958178: -29.05 -10.21   5.28  26.92  11.13  43.84  [rand]  [f=54]
   o=76 v= 0.965212: -36.82  13.13 -11.58  10.32   6.48  34.76  [rand]  [f=52]
   o=77 v= 0.965196:   6.48  27.40  27.24  -8.63  28.56 -10.70  [grid]  [f=49]
   o=78 v= 0.946666: -37.58  11.49  -5.44 -14.61  13.64  43.92  [rand]  [f=68]
   o=79 v= 0.947337:  16.94   0.10  -7.11 -13.97  -1.28  -8.99  [rand]  [f=43]
   o=80 v= 0.955385:  34.19   9.64  -5.20 -11.14  -2.67 -43.81  [rand]  [f=53]
   o=81 v= 0.949603: -17.92   1.99  -5.03  14.74  -2.09   6.52  [rand]  [f=49]
   o=82 v= 0.945157: -38.13  24.14 -14.98 -13.54  20.83  44.99  [rand]  [f=56]
   o=83 v= 0.956111: -22.38  13.22 -15.16  32.50  21.98  -3.52  [rand]  [f=61]
   o=84 v= 0.956562: -38.20  -1.24  -5.57  20.05  -7.10  44.80  [rand]  [f=51]
   o=85 v= 0.967255:  25.95  26.08 -23.25 -29.68   6.17 -30.55  [grid]  [f=43]
   o=86 v= 0.965308:  -7.25  25.11   7.47  34.28  28.82  -9.09  [grid]  [f=44]
   o=87 v= 0.961501: -27.13  21.59   7.63  29.90  29.95  -7.50  [grid]  [f=33]
 + - saving # 0 for use with twobest
 + - saving # 9 for use with twobest
 + - saving #30 for use with twobest
 + - saving #15 for use with twobest
 + - saving #36 for use with twobest
 + - saving #40 for use with twobest
 + - saving #17 for use with twobest
 + - saving #63 for use with twobest
 + - saving #21 for use with twobest
 + - skip #57 for twobest: too close to set #17
 + - saving #16 for use with twobest
 + - saving #13 for use with twobest
 + - saving #62 for use with twobest
 + - saving #33 for use with twobest
 + - saving # 2 for use with twobest
 + - saving # 8 for use with twobest
 + - saving #82 for use with twobest
 + - saving #54 for use with twobest
 + - saving #25 for use with twobest
 + - saving #78 for use with twobest
 + - saving #79 for use with twobest
 + - saving #58 for use with twobest
 + - saving # 1 for use with twobest
 + - saving #29 for use with twobest
 + - saving #24 for use with twobest
 + - saving #81 for use with twobest
 + - saving #37 for use with twobest
 + - saving # 4 for use with twobest
 + - saving #44 for use with twobest
 + - saving #67 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=266.571 usiz=397.385
 + - retaining old weight image
 + - using 65323 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 55801 total points stored in 111 'TOHD(14.0453)' bloks (0 duplicates)
*[#16189=0.804632] *[#16199=0.80289] *[#16214=0.800553] *[#16215=0.797689] *[#16217=0.796597] *[#16219=0.795953] *[#16220=0.795428] *[#16224=0.794079] *[#16225=0.793686] *[#16234=0.792564] *[#16237=0.792378] *[#16238=0.791942] *[#16240=0.791743] *[#16241=0.79146] *[#16242=0.790478] *[#16243=0.78977] *[#16244=0.789649] *[#16245=0.789434] *[#16247=0.789345] *[#16248=0.789] *[#16249=0.788862] *[#16250=0.78818] *[#16251=0.788019] *[#16252=0.787453] *[#16253=0.78731] *[#16254=0.787088] *[#16255=0.786767] *[#16256=0.786729] *[#16257=0.786563] *[#16259=0.786407] *[#16260=0.786141] *[#16262=0.786113] *[#16264=0.78589] *[#16265=0.785649] *[#16266=0.785372] *[#16267=0.784882] *[#16268=0.784326] *[#16269=0.784045] *[#16270=0.784024] *[#16272=0.783766] *[#16277=0.783323] *[#16280=0.783018] *[#16281=0.782585] *[#16282=0.782256] *[#16283=0.782162] *[#16286=0.782025] *[#16287=0.781792] 
 + - param set #1 has cost=0.781792 [o=0 t=0]
 + -- Parameters = -0.5808 -0.9119 1.0575 1.1596 0.3994 -0.1070 0.9781 0.9916 0.9936 0.0138 -0.0109 0.0076
 + - param set #2 has cost=0.938124 [o=9 t=1]
 + -- Parameters = 6.3532 0.4766 -4.8519 -4.7169 -2.4950 -4.3829 0.9828 1.0139 0.9942 0.0005 0.0177 -0.0044
 + - param set #3 has cost=0.950786 [o=30 t=2]
 + -- Parameters = -8.4336 0.4714 0.5128 4.5757 10.1720 -33.3315 0.9982 0.9978 1.0047 0.0131 -0.0009 0.0010
 + - param set #4 has cost=0.951486 [o=15 t=3]
 + -- Parameters = 6.7190 -1.0962 -6.7565 -2.5433 -8.6917 -8.8440 0.9937 0.9885 1.0005 -0.0000 0.0015 0.0166
 + - param set #5 has cost=0.942902 [o=36 t=4]
 + -- Parameters = -7.2629 -0.2992 -5.3620 5.6540 -2.8691 9.3076 0.9942 1.0186 1.0223 0.0236 -0.0000 -0.0142
 + - param set #6 has cost=0.944487 [o=40 t=5]
 + -- Parameters = 4.6481 -1.6301 3.0251 7.0101 -3.7654 28.9504 1.0083 1.0178 1.0310 0.0063 0.0173 0.0066
 + - param set #7 has cost=0.946699 [o=17 t=6]
 + -- Parameters = 4.9959 -2.8423 3.4933 7.7047 1.4843 30.0026 0.9921 1.0320 1.0236 0.0114 0.0169 0.0095
 + - param set #8 has cost=0.948847 [o=63 t=7]
 + -- Parameters = 3.7397 0.1313 -0.2520 5.2940 -4.9755 29.3539 0.9982 1.0182 0.9935 -0.0012 -0.0019 0.0106
 + - param set #9 has cost=0.940914 [o=21 t=8]
 + -- Parameters = -3.2838 0.9286 -2.7265 -0.3415 -4.2380 -26.5256 0.9603 1.0237 1.0171 0.0036 -0.0007 0.0049
 + - param set #10 has cost=0.950792 [o=16 t=9]
 + -- Parameters = -7.6553 4.4001 0.0388 -11.7043 -9.4601 -32.7699 1.0019 0.9998 1.0448 -0.0002 -0.0020 0.0026
 + - param set #11 has cost=0.947188 [o=13 t=10]
 + -- Parameters = -39.8793 23.9241 16.1264 -15.1964 23.6579 44.6415 1.0013 0.9971 1.0000 -0.0026 0.0002 -0.0003
 + - param set #12 has cost=0.937094 [o=62 t=11]
 + -- Parameters = -9.4171 -0.9257 -0.5227 5.6544 -4.8022 -29.3463 1.0114 1.0745 1.0183 0.0022 -0.0052 0.0025
 + - param set #13 has cost=0.949495 [o=33 t=12]
 + -- Parameters = -4.0492 5.8336 -7.7797 -1.8569 -6.3813 24.9189 0.9804 0.9972 1.0097 0.0187 -0.0012 -0.0035
 + - param set #14 has cost=0.954479 [o=2 t=13]
 + -- Parameters = 5.5884 3.2669 -5.2885 -7.4755 7.5020 -2.5992 0.9873 0.9832 1.0045 -0.0017 0.0019 -0.0013
 + - param set #15 has cost=0.950034 [o=8 t=14]
 + -- Parameters = -6.6505 4.7179 -6.2443 6.4948 4.6405 15.3819 0.9969 1.0002 1.0027 0.0160 0.0024 0.0035
 + - param set #16 has cost=0.948978 [o=82 t=15]
 + -- Parameters = -38.2842 23.3686 -14.9583 -17.9253 20.5676 44.9991 1.0008 1.0034 1.0025 -0.0009 -0.0008 0.0008
 + - param set #17 has cost=0.931179 [o=54 t=16]
 + -- Parameters = -3.6956 -0.0347 -5.2699 5.4036 -0.0169 -3.6714 1.0264 1.0051 0.9374 0.0060 -0.0058 0.0008
*[#17926=0.781642] *[#17927=0.780887] *[#17928=0.780654] *[#17934=0.779528] 
 + - param set #18 has cost=0.779528 [o=-1 t=-1]
 + -- Parameters = -0.5259 -0.7657 1.2928 0.7354 0.2592 -0.3463 0.9784 0.9885 0.9881 0.0043 -0.0030 -0.0057
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0596 
 + --- dist(#3,#1) = 0.082 
 + --- dist(#4,#1) = 0.322 
 + --- dist(#5,#1) = 0.0932 
 + --- dist(#6,#1) = 0.291 
 + --- dist(#7,#1) = 0.107 
 + --- dist(#8,#1) = 0.326 
 + --- dist(#9,#1) = 0.337 
 + --- dist(#10,#1) = 0.5 
 + --- dist(#11,#1) = 0.33 
 + --- dist(#12,#1) = 0.504 
 + --- dist(#13,#1) = 0.281 
 + --- dist(#14,#1) = 0.175 
 + --- dist(#15,#1) = 0.367 
 + --- dist(#16,#1) = 0.36 
 + --- dist(#17,#1) = 0.101 
 + --- dist(#18,#1) = 0.0912 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=266.571 usiz=397.385
 + - retaining old weight image
 + - using 65323 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 55530 total points stored in 112 'TOHD(13.984)' bloks (0 duplicates)
*[#17942=0.777788] *[#17952=0.777558] *[#17954=0.776713] *[#17962=0.775229] *[#17963=0.773516] *[#17970=0.772683] *[#17971=0.772385] *[#17978=0.771507] *[#17981=0.771285] *[#17982=0.770577] *[#17983=0.770319] *[#17985=0.769927] *[#17988=0.769874] *[#17994=0.769624] *[#17995=0.769426] *[#17998=0.769181] *[#17999=0.769105] *[#18004=0.768755] *[#18006=0.768451] *[#18007=0.768278] *[#18010=0.768001] *[#18011=0.76793] *[#18015=0.767722] *[#18016=0.767124] *[#18019=0.766859] *[#18022=0.766697] *[#18023=0.766617] *[#18030=0.766457] *[#18039=0.766388] *[#18042=0.766315] *[#18046=0.766096] *[#18051=0.766066] 
 + - param set #1 has cost=0.766066 [o=-1 t=-1]
 + -- Parameters = -0.5818 -0.8676 2.4530 0.9159 0.4082 -0.3396 0.9757 0.9762 0.9576 0.0136 -0.0048 -0.0050
 + - param set #2 has cost=0.768658 [o=0 t=0]
 + -- Parameters = -0.4931 -1.2153 2.1649 0.9406 0.9281 -0.1767 0.9729 0.9821 0.9647 0.0133 -0.0091 0.0099
 + - param set #3 has cost=0.933232 [o=54 t=16]
 + -- Parameters = -2.5630 0.2225 -5.7250 3.5059 -0.8411 -2.7798 1.0345 1.0123 0.9506 0.0143 -0.0018 0.0053
 + - param set #4 has cost=0.949518 [o=62 t=11]
 + -- Parameters = -9.7264 -1.1422 -0.4514 5.5832 -4.7067 -29.4387 1.0131 1.0744 1.0206 0.0113 -0.0076 0.0030
 + - param set #5 has cost=0.938522 [o=9 t=1]
 + -- Parameters = 5.5512 0.8296 -5.4604 -4.7683 -1.1539 -4.8031 0.9298 0.9958 0.9702 0.0080 0.0380 0.0147
 + - param set #6 has cost=0.946098 [o=21 t=8]
 + -- Parameters = -1.8637 -0.1072 -2.5435 0.2278 -2.4479 -27.0331 0.9224 1.0355 1.0183 0.0009 -0.0091 0.0011
 + - param set #7 has cost=0.952201 [o=36 t=4]
 + -- Parameters = -7.5087 -0.3029 -5.1771 6.2492 -3.2233 9.1903 0.9817 1.0229 1.0300 0.0237 0.0015 -0.0176
 + - param set #8 has cost=0.954886 [o=40 t=5]
 + -- Parameters = 4.7924 -2.0397 3.0112 7.2295 -3.4705 28.6901 1.0221 1.0132 1.0357 0.0065 0.0250 0.0072
 + - param set #9 has cost=0.958237 [o=17 t=6]
 + -- Parameters = 5.1742 -2.7664 3.0545 7.4073 1.3513 29.8827 0.9921 1.0320 1.0442 0.0051 0.0168 0.0133
 + - param set #10 has cost=0.950398 [o=13 t=10]
 + -- Parameters = -39.1337 23.8693 16.0935 -15.3385 19.7271 44.7558 1.0006 0.9975 0.9986 -0.0021 -0.0012 -0.0006
 + - param set #11 has cost=0.958325 [o=63 t=7]
 + -- Parameters = 3.9172 0.3460 -0.3266 5.2538 -5.0002 29.1554 1.0023 1.0190 0.9957 -0.0004 -0.0021 0.0095
 + - param set #12 has cost=0.952449 [o=82 t=15]
 + -- Parameters = -38.3602 23.1571 -15.0579 -17.6719 19.8808 44.9995 1.0022 1.0041 1.0003 -0.0023 0.0073 0.0019
 + - param set #13 has cost=0.954828 [o=33 t=12]
 + -- Parameters = -4.1543 6.0465 -7.7658 -1.5969 -6.2007 25.0988 0.9790 1.0008 1.0082 0.0299 -0.0013 -0.0032
 + - param set #14 has cost=0.957406 [o=8 t=14]
 + -- Parameters = -6.1353 4.6038 -5.8346 7.2123 5.2076 15.5040 0.9866 1.0036 1.0028 0.0180 0.0015 0.0032
 + - param set #15 has cost=0.961778 [o=30 t=2]
 + -- Parameters = -8.4057 0.1387 0.3519 4.7718 9.7004 -32.9134 0.9958 0.9986 1.0023 0.0091 -0.0017 0.0019
 + - param set #16 has cost=0.962944 [o=16 t=9]
 + -- Parameters = -7.9818 4.1078 0.0903 -11.3278 -9.2866 -32.8074 1.0086 1.0016 1.0505 0.0102 -0.0056 0.0020
 + - param set #17 has cost=0.953664 [o=15 t=3]
 + -- Parameters = 6.7765 -0.1471 -6.6798 -2.7687 -6.5888 -8.5799 0.9917 0.9813 1.0025 0.0004 0.0104 0.0162
 + - param set #18 has cost=0.942564 [o=2 t=13]
 + -- Parameters = 4.6414 1.8783 -5.4863 -6.4301 -1.6065 -2.3090 0.9450 1.0125 0.9619 -0.0098 0.0110 -0.0025
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0668 
 + --- dist(#3,#1) = 0.102 
 + --- dist(#4,#1) = 0.193 
 + --- dist(#5,#1) = 0.105 
 + --- dist(#6,#1) = 0.297 
 + --- dist(#7,#1) = 0.323 
 + --- dist(#8,#1) = 0.501 
 + --- dist(#9,#1) = 0.106 
 + --- dist(#10,#1) = 0.504 
 + --- dist(#11,#1) = 0.114 
 + --- dist(#12,#1) = 0.283 
 + --- dist(#13,#1) = 0.323 
 + --- dist(#14,#1) = 0.176 
 + --- dist(#15,#1) = 0.336 
 + --- dist(#16,#1) = 0.328 
 + --- dist(#17,#1) = 0.362 
 + --- dist(#18,#1) = 0.361 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=266.571 usiz=397.385
 + - retaining old weight image
 + - using 65323 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 55368 total points stored in 112 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.768559 [o=-1 t=-1]
 + -- Parameters = -0.6274 -0.5676 2.5568 1.0252 0.1935 -0.4218 0.9733 0.9783 0.9554 0.0145 -0.0052 -0.0051
 + - param set #2 has cost=0.770304 [o=0 t=0]
 + -- Parameters = -0.5968 -1.0687 2.5341 1.0424 0.7908 -0.3557 0.9720 0.9783 0.9550 0.0154 -0.0081 0.0052
 + - param set #3 has cost=0.941124 [o=54 t=16]
 + -- Parameters = -2.2261 0.1857 -5.7452 2.9061 -1.4838 -2.4500 1.0325 1.0172 0.9556 0.0197 -0.0000 0.0066
 + - param set #4 has cost=0.941450 [o=9 t=1]
 + -- Parameters = 6.0353 1.1347 -4.9426 -5.5343 -1.4997 -5.6087 0.9122 0.9998 0.9924 0.0135 0.0423 0.0168
 + - param set #5 has cost=0.949257 [o=2 t=13]
 + -- Parameters = 4.6504 1.4004 -5.4041 -6.0065 -1.5361 -2.5139 0.9473 1.0188 0.9637 -0.0097 0.0174 -0.0027
 + - param set #6 has cost=0.945694 [o=21 t=8]
 + -- Parameters = 0.4501 -0.9574 -1.2891 1.1900 -3.5558 -27.0307 0.8760 1.0335 1.0077 0.0160 -0.0274 -0.0011
 + - param set #7 has cost=0.955519 [o=62 t=11]
 + -- Parameters = -9.9451 -1.2679 -0.2975 5.8801 -4.8626 -29.2920 1.0166 1.0774 1.0212 0.0121 -0.0082 0.0022
 + - param set #8 has cost=0.952771 [o=13 t=10]
 + -- Parameters = -38.9403 24.1319 17.3832 -15.6099 19.8833 44.7524 1.0004 0.9993 1.0287 -0.0038 -0.0011 -0.0025
 + - param set #9 has cost=0.955204 [o=36 t=4]
 + -- Parameters = -7.6829 0.1866 -5.8606 6.9955 -3.9724 10.6734 0.9164 1.0213 1.0552 0.0175 0.0074 -0.0262
 + - param set #10 has cost=0.956011 [o=82 t=15]
 + -- Parameters = -38.3282 23.1592 -15.0590 -17.6948 19.9097 44.9692 1.0028 1.0061 0.9992 -0.0020 0.0074 0.0019
 + - param set #11 has cost=0.945292 [o=15 t=3]
 + -- Parameters = 5.8129 -0.4094 -6.1261 -3.2404 -5.1267 -8.3351 0.9275 0.9853 1.0365 0.0031 0.0154 0.0181
 + - param set #12 has cost=0.958486 [o=33 t=12]
 + -- Parameters = -4.2075 6.1413 -7.7303 -1.5163 -6.2280 25.2048 0.9765 1.0001 1.0096 0.0352 -0.0014 -0.0039
 + - param set #13 has cost=0.955726 [o=40 t=5]
 + -- Parameters = 4.5784 -1.5575 2.4807 6.8308 -4.3074 28.2939 1.0226 1.0157 1.0587 0.0028 0.0403 0.0109
 + - param set #14 has cost=0.961325 [o=8 t=14]
 + -- Parameters = -6.0297 4.8976 -6.1664 7.1861 6.1706 15.6945 0.9884 0.9936 1.0090 0.0216 0.0094 0.0074
 + - param set #15 has cost=0.960525 [o=17 t=6]
 + -- Parameters = 5.1505 -2.9838 3.1963 7.2489 1.8241 29.8815 0.9908 1.0333 1.0471 0.0024 0.0173 0.0201
 + - param set #16 has cost=0.960136 [o=63 t=7]
 + -- Parameters = 3.8056 0.3124 -0.2805 5.3172 -4.9699 29.3145 1.0050 1.0203 0.9957 0.0065 -0.0023 0.0093
 + - param set #17 has cost=0.964777 [o=30 t=2]
 + -- Parameters = -8.3036 0.0718 -0.0265 4.5108 9.5823 -32.3327 0.9972 0.9993 1.0109 0.0070 -0.0012 0.0027
 + - param set #18 has cost=0.964126 [o=16 t=9]
 + -- Parameters = -7.6791 3.6048 0.9290 -11.2735 -9.4257 -33.9244 0.9927 1.0077 1.0441 0.0127 -0.0132 0.0019
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0464 
 + --- dist(#3,#1) = 0.104 
 + --- dist(#4,#1) = 0.214 
 + --- dist(#5,#1) = 0.116 
 + --- dist(#6,#1) = 0.296 
 + --- dist(#7,#1) = 0.109 
 + --- dist(#8,#1) = 0.502 
 + --- dist(#9,#1) = 0.143 
 + --- dist(#10,#1) = 0.321 
 + --- dist(#11,#1) = 0.319 
 + --- dist(#12,#1) = 0.504 
 + --- dist(#13,#1) = 0.285 
 + --- dist(#14,#1) = 0.33 
 + --- dist(#15,#1) = 0.337 
 + --- dist(#16,#1) = 0.179 
 + --- dist(#17,#1) = 0.372 
 + --- dist(#18,#1) = 0.355 
 + - Total coarse refinement net CPU time = 0.0 s; 5778 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=266.571 usiz=397.385
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 55607 total points stored in 113 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.777168 * [o=-1 t=-1]
 + -- Parameters = -0.6274 -0.5676 2.5568 1.0252 0.1935 -0.4218 0.9733 0.9783 0.9554 0.0145 -0.0052 -0.0051
 + - cost(#2)=0.778707   [o=0 t=0]
 + -- Parameters = -0.5968 -1.0687 2.5341 1.0424 0.7908 -0.3557 0.9720 0.9783 0.9550 0.0154 -0.0081 0.0052
 + - cost(#3)=0.943298   [o=54 t=16]
 + -- Parameters = -2.2261 0.1857 -5.7452 2.9061 -1.4838 -2.4500 1.0325 1.0172 0.9556 0.0197 -0.0000 0.0066
 + - cost(#4)=0.943924   [o=9 t=1]
 + -- Parameters = 6.0353 1.1347 -4.9426 -5.5343 -1.4997 -5.6087 0.9122 0.9998 0.9924 0.0135 0.0423 0.0168
 + - cost(#5)=0.947476   [o=15 t=3]
 + -- Parameters = 5.8129 -0.4094 -6.1261 -3.2404 -5.1267 -8.3351 0.9275 0.9853 1.0365 0.0031 0.0154 0.0181
 + - cost(#6)=0.947717   [o=21 t=8]
 + -- Parameters = 0.4501 -0.9574 -1.2891 1.1900 -3.5558 -27.0307 0.8760 1.0335 1.0077 0.0160 -0.0274 -0.0011
 + - cost(#7)=0.951506   [o=2 t=13]
 + -- Parameters = 4.6504 1.4004 -5.4041 -6.0065 -1.5361 -2.5139 0.9473 1.0188 0.9637 -0.0097 0.0174 -0.0027
 + - cost(#8)=0.953021   [o=13 t=10]
 + -- Parameters = -38.9403 24.1319 17.3832 -15.6099 19.8833 44.7524 1.0004 0.9993 1.0287 -0.0038 -0.0011 -0.0025
 + - cost(#9)=0.956287   [o=36 t=4]
 + -- Parameters = -7.6829 0.1866 -5.8606 6.9955 -3.9724 10.6734 0.9164 1.0213 1.0552 0.0175 0.0074 -0.0262
 + - cost(#10)=0.957140   [o=62 t=11]
 + -- Parameters = -9.9451 -1.2679 -0.2975 5.8801 -4.8626 -29.2920 1.0166 1.0774 1.0212 0.0121 -0.0082 0.0022
 + - cost(#11)=0.957311   [o=40 t=5]
 + -- Parameters = 4.5784 -1.5575 2.4807 6.8308 -4.3074 28.2939 1.0226 1.0157 1.0587 0.0028 0.0403 0.0109
 + - cost(#12)=0.956176   [o=82 t=15]
 + -- Parameters = -38.3282 23.1592 -15.0590 -17.6948 19.9097 44.9692 1.0028 1.0061 0.9992 -0.0020 0.0074 0.0019
 + - cost(#13)=0.959477   [o=33 t=12]
 + -- Parameters = -4.2075 6.1413 -7.7303 -1.5163 -6.2280 25.2048 0.9765 1.0001 1.0096 0.0352 -0.0014 -0.0039
 + - cost(#14)=0.961343   [o=63 t=7]
 + -- Parameters = 3.8056 0.3124 -0.2805 5.3172 -4.9699 29.3145 1.0050 1.0203 0.9957 0.0065 -0.0023 0.0093
 + - cost(#15)=0.961939   [o=17 t=6]
 + -- Parameters = 5.1505 -2.9838 3.1963 7.2489 1.8241 29.8815 0.9908 1.0333 1.0471 0.0024 0.0173 0.0201
 + - cost(#16)=0.962506   [o=8 t=14]
 + -- Parameters = -6.0297 4.8976 -6.1664 7.1861 6.1706 15.6945 0.9884 0.9936 1.0090 0.0216 0.0094 0.0074
 + - cost(#17)=0.965798   [o=16 t=9]
 + -- Parameters = -7.6791 3.6048 0.9290 -11.2735 -9.4257 -33.9244 0.9927 1.0077 1.0441 0.0127 -0.0132 0.0019
 + - cost(#18)=0.965731   [o=30 t=2]
 + -- Parameters = -8.3036 0.0718 -0.0265 4.5108 9.5823 -32.3327 0.9972 0.9993 1.0109 0.0070 -0.0012 0.0027
 + - cost(#19)=0.832848   [o=-2 t=-2]
 + -- Parameters = -0.8711 -1.2548 0.2017 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.777023 * [o=-1 t=-1]
 + -- Parameters = -0.6472 -0.5315 2.6105 1.0331 0.1569 -0.4549 0.9724 0.9786 0.9542 0.0146 -0.0045 -0.0061
 + - cost(#2)=0.777506   [o=0 t=0]
 + -- Parameters = -0.5949 -0.6654 2.7184 1.0046 0.2620 -0.4581 0.9740 0.9791 0.9517 0.0119 -0.0061 -0.0049
 + - cost(#3)=0.942476   [o=54 t=16]
 + -- Parameters = -2.1222 0.2684 -5.6570 2.9128 -1.3619 -2.2762 1.0336 1.0159 0.9558 0.0199 0.0075 0.0059
 + - cost(#4)=0.943563   [o=9 t=1]
 + -- Parameters = 6.1643 1.2250 -4.9255 -5.6311 -1.4384 -5.6817 0.9109 1.0007 0.9928 0.0052 0.0417 0.0178
 + - cost(#5)=0.945041   [o=15 t=3]
 + -- Parameters = 5.6662 -0.6217 -5.5511 -2.9566 -4.5088 -7.6476 0.9253 0.9951 1.0424 0.0056 0.0165 0.0286
 + - cost(#6)=0.946513   [o=21 t=8]
 + -- Parameters = 1.0611 -1.1552 -1.3991 1.3639 -3.3019 -26.4825 0.8677 1.0301 1.0152 0.0173 -0.0328 0.0038
 + - cost(#7)=0.951139   [o=2 t=13]
 + -- Parameters = 4.6314 1.4598 -5.3291 -6.0135 -1.4486 -2.6820 0.9490 1.0192 0.9666 -0.0169 0.0211 -0.0029
 + - cost(#8)=0.952814   [o=13 t=10]
 + -- Parameters = -38.9052 24.1230 17.3606 -15.5978 19.8966 44.7771 1.0008 0.9994 1.0289 0.0031 -0.0006 -0.0025
 + - cost(#9)=0.955862   [o=36 t=4]
 + -- Parameters = -7.6237 0.0015 -5.6893 7.0295 -3.8407 10.8275 0.9124 1.0263 1.0515 0.0162 -0.0025 -0.0276
 + - cost(#10)=0.957020   [o=62 t=11]
 + -- Parameters = -9.9230 -1.2643 -0.3070 5.8800 -4.8050 -29.2076 1.0158 1.0782 1.0240 0.0130 -0.0084 0.0021
 + - cost(#11)=0.956538   [o=40 t=5]
 + -- Parameters = 4.4956 -1.5150 2.4881 6.8028 -4.2146 28.1536 1.0208 1.0163 1.0608 0.0023 0.0498 0.0104
 + - cost(#12)=0.956110   [o=82 t=15]
 + -- Parameters = -38.3202 23.1569 -15.0536 -17.6999 19.9040 44.9862 1.0029 1.0061 0.9992 -0.0020 0.0074 -0.0055
 + - cost(#13)=0.959098   [o=33 t=12]
 + -- Parameters = -4.5506 6.1661 -7.6922 -1.3323 -5.8867 25.1458 0.9745 1.0035 1.0079 0.0459 -0.0010 -0.0039
 + - cost(#14)=0.961257   [o=63 t=7]
 + -- Parameters = 3.8378 0.4108 -0.3969 5.3339 -5.0619 29.3894 1.0038 1.0198 0.9929 0.0068 -0.0037 0.0093
 + - cost(#15)=0.961343   [o=17 t=6]
 + -- Parameters = 5.2178 -3.0472 3.2644 7.1982 1.8125 29.6694 0.9911 1.0339 1.0479 0.0015 0.0251 0.0218
 + - cost(#16)=0.962041   [o=8 t=14]
 + -- Parameters = -5.9760 4.9189 -6.0317 6.7799 6.0263 15.4694 0.9898 0.9924 1.0155 0.0250 0.0093 0.0168
 + - cost(#17)=0.964534   [o=16 t=9]
 + -- Parameters = -7.7342 3.2425 1.0945 -11.3901 -9.5373 -34.3691 0.9889 1.0131 1.0414 0.0138 -0.0169 0.0092
 + - cost(#18)=0.965185   [o=30 t=2]
 + -- Parameters = -8.4336 0.3639 -0.2503 4.5805 9.3956 -32.1818 0.9998 0.9982 1.0189 0.0047 -0.0013 0.0046
 + - cost(#19)=0.777080   [o=-2 t=-2]
 + -- Parameters = -0.7379 -0.4831 2.8964 0.9746 0.1130 -0.5882 0.9707 0.9749 0.9471 0.0130 -0.0023 -0.0065
 + - case #1 [o=-1 t=-1] is now the best
 + - Initial  cost = 0.777023
 + - Initial fine Parameters = -0.6472 -0.5315 2.6105 1.0331 0.1569 -0.4549 0.9724 0.9786 0.9542 0.0146 -0.0045 -0.0061
 + - Finalish cost = 0.775712 ; 1106 funcs
 + - ini Finalish Parameters = -0.5798 0.5294 3.0887 1.0715 -1.0469 -0.4079 0.9707 0.9724 0.9426 0.0164 -0.0032 -0.0302
 + - Final    cost = 0.775712 ; 269 funcs
 + Final fine fit Parameters:
       x-shift= -0.5809   y-shift=  0.5290   z-shift=  3.0906  ...  enorm=  3.1889 mm
       z-angle=  1.0696   x-angle= -1.0451   y-angle= -0.4076  ...  total=  1.5526 deg
       x-scale=  0.9707   y-scale=  0.9724   z-scale=  0.9426  ...  vol3D=  0.8897 = base bigger than source
     y/x-shear=  0.0164 z/x-shear= -0.0032 z/y-shear= -0.0302
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.5809 0.5290 3.0906 1.0696 -1.0451 -0.4076 0.9707 0.9724 0.9426 0.0164 -0.0032 -0.0302
++ Unloading unneeded data
++ Wrote -1Dmatrix_save ./MPRAGE.GB20_unif_al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 33.4
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_MPRAGE.GB20_unif_lr_al_junk -overwrite ./MPRAGE.GB20_unif_unflipped_ns+orig
++ processing ./MPRAGE.GB20_unif_unflipped_ns+orig ...
#Script is running (command trimmed):
  3dAllineate -lpa -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./__tt_MPRAGE.GB20_unif_lr_al_junk+orig -prefix ./MPRAGE.GB20_unif_flip_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB20_unif_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_MPRAGE.GB20_unif_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4074337 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 65323 voxels [11.4%] in weight mask
++ Number of points for matching = 65323
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.620 50.423 39.151 (index)
 + source center of mass = 112.236 185.752 173.167 (index)
 + source-target CM = -0.541 -1.255 0.202 (xyz)
 + estimated center of mass shifts = -0.541 -1.255 0.202
++ shift param auto-range: -71.2..70.1 -78.8..76.3 -64.4..64.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.540871 .. 9.459129  center = -0.540871
 + Range param#2 [y-shift] = -11.254753 .. 8.745247  center = -1.254753
 + Range param#3 [z-shift] = -9.798302 .. 10.201698  center = 0.201698
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.540871 .. 39.459129  center = -0.540871
 + Range param#2 [y-shift] = -41.254753 .. 38.745247  center = -1.254753
 + Range param#3 [z-shift] = -39.798302 .. 40.201698  center = 0.201698
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -40.541 ..   39.459
 +       y-shift =  -41.255 ..   38.745
 +       z-shift =  -39.798 ..   40.202
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4074337 [out of 23184225] voxels
 + base mask has 83166 [out of 574028] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=266.571 usiz=397.385
 + - copying weight image
 + - using 65323 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 56468 total points stored in 111 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#oo-+oo+--.o+*[#22=0.966966] *--.*[#45=0.946499] *oo..-.+.+-$.-
 + - best 88 costs found:
   o= 0 v= 0.946499:   6.13   5.41  -6.46  -7.50   7.50  -7.50  [grid]
   o= 1 v= 0.955178:   6.13   5.41  -6.46  -7.50  -7.50  -7.50  [grid]
   o= 2 v= 0.958137:  26.13  25.41   6.87 -30.00  30.00   7.50  [grid]
   o= 3 v= 0.960756:  33.79  15.33  -8.40 -16.34  -8.64 -40.54  [rand]
   o= 4 v= 0.962017:  -7.21   5.41  -6.46  -7.50  -7.50  30.00  [grid]
   o= 5 v= 0.962312: -32.38  10.54   2.94  23.31  -3.26  40.47  [rand]
   o= 6 v= 0.962317:  31.30 -13.05   2.94 -23.31  -3.26 -40.47  [rand]
   o= 7 v= 0.962755:   6.13   5.41  -6.46 -30.00   7.50   7.50  [grid]
   o= 8 v= 0.963136: -34.87 -17.84   8.80  16.34  -8.64  40.54  [rand]
   o= 9 v= 0.963348:   6.13   5.41  -6.46   7.50  -7.50 -30.00  [grid]
   o=10 v= 0.963512:  31.30 -13.05  -2.54 -23.31  -3.26 -40.47  [rand]
   o=11 v= 0.964171:   3.54   4.97  -7.59  -4.32 -22.85 -18.95  [rand]
   o=12 v= 0.964228:   6.13   5.41  -6.46   7.50  -7.50  -7.50  [grid]
   o=13 v= 0.964443:  26.13   5.41  -6.46 -30.00   7.50   7.50  [grid]
   o=14 v= 0.964511: -27.21   5.41  -6.46  30.00  -7.50  -7.50  [grid]
   o=15 v= 0.964602:   6.35   7.82   3.68 -42.18 -25.76  19.54  [rand]
   o=16 v= 0.964793: -27.21  -7.92  -6.46   7.50   7.50  -7.50  [grid]
   o=17 v= 0.964817: -34.87  15.33  -8.40  16.34  -8.64  40.54  [rand]
   o=18 v= 0.964944: -32.38  10.54   2.94  23.31   3.26  40.47  [rand]
   o=19 v= 0.965287:   6.13   5.41  -6.46 -30.00  -7.50   7.50  [grid]
   o=20 v= 0.965535: -27.21  25.41   6.87  -7.50  -7.50  -7.50  [grid]
   o=21 v= 0.965785:   6.13 -27.92  26.87  30.00 -30.00 -30.00  [grid]
   o=22 v= 0.965792:  -7.21   5.41   6.87  -7.50   7.50 -30.00  [grid]
   o=23 v= 0.965835: -17.05  15.56 -10.81   3.23  15.52  33.24  [rand]
   o=24 v= 0.965976: -35.41  29.30  15.97 -11.68  29.04  39.38  [rand]
   o=25 v= 0.966081: -24.53   9.02 -17.89  18.40  10.44  35.55  [rand]
   o=26 v= 0.966135: -18.87  24.89  -5.84   6.51  20.18   7.56  [rand]
   o=27 v= 0.966219:  31.89 -15.60   5.80  -8.22  -9.03 -36.72  [rand]
   o=28 v= 0.966312:  -7.21  -7.92   6.87  30.00  30.00 -30.00  [grid]
   o=29 v= 0.966413: -14.49  22.61 -17.98  -5.58  38.34  17.97  [rand]
   o=30 v= 0.966701: -12.14  -5.81   4.10  24.53  29.49 -26.10  [rand]
   o=31 v= 0.966788:   6.13   5.41   6.87 -30.00  -7.50  30.00  [grid]
   o=32 v= 0.966854:  -7.21   5.41  -6.46  -7.50  -7.50 -30.00  [grid]
   o=33 v= 0.966966:  -7.21   5.41  -6.46   7.50  -7.50   7.50  [grid]
   o=34 v= 0.966980:  33.79 -17.84   8.80 -16.34  -8.64 -40.54  [rand]
   o=35 v= 0.966983: -32.38  10.54  -2.54  23.31  -3.26  40.47  [rand]
   o=36 v= 0.966986:   6.13  25.41  26.87  -7.50  30.00  -7.50  [grid]
   o=37 v= 0.967042:  26.13   5.41  -6.46 -30.00  -7.50   7.50  [grid]
   o=38 v= 0.967221:  31.30 -13.05   2.94 -23.31   3.26 -40.47  [rand]
   o=39 v= 0.967233:  -7.21   5.41  -6.46 -30.00  -7.50   7.50  [grid]
   o=40 v= 0.967311: -27.21   5.41  -6.46  30.00  -7.50   7.50  [grid]
   o=41 v= 0.967343:  26.13  -7.92  -6.46  -7.50   7.50   7.50  [grid]
   o=42 v= 0.967372:  31.89 -15.60   5.80  -8.22   9.03 -36.72  [rand]
   o=43 v= 0.967427: -27.21   5.41  -6.46   7.50   7.50  -7.50  [grid]
   o=44 v= 0.967430:  -7.21  -7.92   6.87  30.00  30.00  -7.50  [grid]
   o=45 v= 0.967464: -27.21   5.41  -6.46  30.00   7.50  -7.50  [grid]
   o=46 v= 0.967535:  33.79 -17.84  -8.40 -16.34  -8.64 -40.54  [rand]
   o=47 v= 0.967606:  23.37   5.68  14.13  13.51 -15.92   9.43  [rand]
   o=48 v= 0.967649:  -7.21  -7.92  -6.46  -7.50   7.50 -30.00  [grid]
   o=49 v= 0.967721: -14.49  22.61 -17.98   5.58  38.34  17.97  [rand]
   o=50 v= 0.967771:  -7.21   5.41  -6.46  -7.50   7.50 -30.00  [grid]
   o=51 v= 0.967798:   6.13  -7.92  -6.46  -7.50  -7.50  -7.50  [grid]
   o=52 v= 0.967963:   6.13  -7.92   6.87   7.50  -7.50  30.00  [grid]
   o=53 v= 0.968033: -35.41 -31.81  15.97 -11.68  29.04  39.38  [rand]
   o=54 v= 0.968114:   6.13   5.41  -6.46 -30.00  -7.50  -7.50  [grid]
   o=55 v= 0.968237: -24.89  28.44 -12.82  28.68  38.91  32.36  [rand]
   o=56 v= 0.968365: -27.21  25.41   6.87  30.00  -7.50  -7.50  [grid]
   o=57 v= 0.968420:  -0.54  -1.25   0.20   0.00   0.00   0.00  [grid]
   o=58 v= 0.968574: -32.75  27.79  36.34  40.41 -19.09  40.75  [rand]
   o=59 v= 0.968589:   6.13   5.41  26.87  30.00 -30.00 -30.00  [grid]
   o=60 v= 0.968718:  -7.21  25.41   6.87  -7.50  30.00  -7.50  [grid]
   o=61 v= 0.968740:  34.32  29.30  15.97  11.68  29.04 -39.38  [rand]
   o=62 v= 0.968766:  26.13   5.41  -6.46  -7.50  -7.50   7.50  [grid]
   o=63 v= 0.968782: -32.38 -13.05   2.94  23.31   3.26  40.47  [rand]
   o=64 v= 0.968785:   6.13  -7.92   6.87  -7.50  -7.50  30.00  [grid]
   o=65 v= 0.968805: -33.03  25.74 -31.69   9.69  21.75  40.77  [rand]
   o=66 v= 0.968808:  31.30 -13.05  -2.54 -23.31   3.26 -40.47  [rand]
   o=67 v= 0.968822: -27.21   5.41   6.87  30.00   7.50  -7.50  [grid]
   o=68 v= 0.968904:  26.51 -25.17   7.68  25.95  25.17  41.69  [rand]
   o=69 v= 0.968994:  33.79  15.33   8.80  16.34   8.64 -40.54  [rand]
   o=70 v= 0.969001: -32.38  10.54  -2.54  23.31   3.26  40.47  [rand]
   o=71 v= 0.969044:  33.79 -17.84   8.80  16.34   8.64 -40.54  [rand]
   o=72 v= 0.969050:   6.13   5.41   6.87 -30.00   7.50  30.00  [grid]
   o=73 v= 0.969135:   6.13   5.41  -6.46 -30.00   7.50  -7.50  [grid]
   o=74 v= 0.969145:  13.66 -10.71   5.04  15.99  13.53  29.93  [rand]
   o=75 v= 0.969178: -32.97 -15.60  -5.40   8.22   9.03  36.72  [rand]
   o=76 v= 0.969297:   6.13  25.41  -6.46 -30.00  30.00 -30.00  [grid]
   o=77 v= 0.969338:  28.47 -28.40  33.81   7.44  27.42  25.63  [rand]
   o=78 v= 0.969375:  34.88 -30.76   3.31  13.33  -5.58  13.04  [rand]
   o=79 v= 0.969450: -24.08   7.29 -15.77  26.66  31.62  32.06  [rand]
   o=80 v= 0.969458:  34.32 -31.81  15.97  11.68  29.04 -39.38  [rand]
   o=81 v= 0.969474: -19.04   4.60 -14.40  16.04   3.33  12.13  [rand]
   o=82 v= 0.969477:  26.13  -7.92  -6.46  -7.50  -7.50   7.50  [grid]
   o=83 v= 0.969507: -27.21 -27.92  26.87  30.00  30.00  30.00  [grid]
   o=84 v= 0.969516: -26.85  24.70 -17.59  15.82  17.65  37.25  [rand]
   o=85 v= 0.969543:  26.13  -7.92  -6.46   7.50   7.50   7.50  [grid]
   o=86 v= 0.969644: -10.36  23.50  11.58  -3.10  34.36   2.55  [rand]
   o=87 v= 0.969656:  -7.21   5.41  -6.46  -7.50   7.50  30.00  [grid]
 + - A little optimization:*[#11722=0.944021] *[#11726=0.943125] *[#11727=0.942085] *[#11729=0.940892] *[#11732=0.940477] *[#11738=0.940377] *[#11743=0.940295] *[#11746=0.940244] *[#11749=0.940219] *[#11750=0.94015] *[#11753=0.940142] .*[#11767=0.939806] *[#11769=0.93715] *[#11771=0.935907] *[#11772=0.930273] *[#11773=0.927418] *[#11774=0.927039] *[#11780=0.925952] *[#11781=0.925746] *[#11782=0.925378] *[#11783=0.924238] *[#11784=0.922887] *[#11789=0.922563] *[#11792=0.922264] *[#11794=0.922206] *[#11795=0.922194] *[#11796=0.922152] *[#11797=0.922141] *[#11800=0.921959] *[#11801=0.921753] *[#11805=0.921695] *[#11807=0.921675] *[#11808=0.921633] *[#11809=0.921608] *[#11812=0.921599] *[#11813=0.921505] *[#11814=0.921485] *[#11817=0.921481] *[#11819=0.921426] .......................................................................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.940142:   6.08   5.98  -8.23  -7.21   6.32 -10.82  [grid]  [f=45]
  *o= 1 v= 0.921426:   7.74   0.72  -4.92  -8.61  -3.81  -5.88  [grid]  [f=64]
   o= 2 v= 0.952129:  23.82  24.88   5.21 -30.08  26.77   6.56  [grid]  [f=45]
   o= 3 v= 0.956148:  34.47  15.75  -9.38 -16.32  -4.07 -44.81  [rand]  [f=33]
   o= 4 v= 0.950404:  -4.78   5.66  -8.60 -10.03  -7.03  28.76  [grid]  [f=56]
   o= 5 v= 0.957581: -33.03  10.04   2.47  22.60  -3.56  44.63  [rand]  [f=37]
   o= 6 v= 0.948569:  35.48 -16.54   3.83 -12.68 -12.80 -43.74  [rand]  [f=52]
   o= 7 v= 0.948540:   6.41   5.84  -5.33 -25.63  -0.89   6.41  [grid]  [f=60]
   o= 8 v= 0.940910: -39.43 -18.68   0.41  10.80  -7.63  41.98  [rand]  [f=52]
   o= 9 v= 0.953975:   6.41   6.61 -10.66   7.10 -10.97 -23.65  [grid]  [f=47]
   o=10 v= 0.949072:  34.12 -13.77  -3.57 -12.37  -9.79 -43.02  [rand]  [f=47]
   o=11 v= 0.943883:   3.72   2.03  -9.03  -2.90 -13.28 -17.19  [rand]  [f=55]
   o=12 v= 0.945837:  14.50   3.67 -10.26   0.47  -6.43  -8.53  [grid]  [f=70]
   o=13 v= 0.951554:  23.25   4.30  -6.20 -29.60   5.45   6.29  [grid]  [f=60]
   o=14 v= 0.958261: -25.72   2.60  -6.42  29.13  -8.37  -7.24  [grid]  [f=40]
   o=15 v= 0.953447:   7.17   6.10   5.55 -34.32 -21.84  23.13  [rand]  [f=83]
   o=16 v= 0.954978: -23.29  -7.43  -5.62   7.38   6.51  -6.57  [grid]  [f=36]
   o=17 v= 0.948652: -37.88  16.12  -6.11  12.07 -11.90  44.40  [rand]  [f=50]
   o=18 v= 0.959171: -33.20   7.66   3.05  17.86   2.38  38.83  [rand]  [f=41]
   o=19 v= 0.952514:   9.79   4.41  -8.43 -27.64  -5.68   7.77  [grid]  [f=80]
   o=20 v= 0.963220: -26.25  25.39   6.60  -7.91  -9.49  -7.71  [grid]  [f=42]
   o=21 v= 0.962493:   6.34 -27.92  27.45  30.54 -28.03 -28.64  [grid]  [f=51]
   o=22 v= 0.937044:  -8.30  -1.07   1.28 -11.69  12.05 -24.67  [grid]  [f=83]
   o=23 v= 0.965616: -17.18  15.56 -10.77   3.17  15.52  33.33  [rand]  [f=31]
   o=24 v= 0.950629: -40.48  28.17  15.89 -12.41  26.46  39.05  [rand]  [f=51]
   o=25 v= 0.950415: -25.98   9.90 -20.23  31.12   8.70  37.68  [rand]  [f=58]
   o=26 v= 0.955032: -19.93  25.07  -5.00   2.09  15.90   1.44  [rand]  [f=45]
   o=27 v= 0.948520:  35.16 -15.64   4.48 -12.79 -12.50 -38.43  [rand]  [f=54]
   o=28 v= 0.960476:  -6.83 -13.51   7.40  29.37  31.03 -30.07  [grid]  [f=50]
   o=29 v= 0.959162: -14.77  22.15 -13.81  -5.10  39.17  17.42  [rand]  [f=35]
   o=30 v= 0.963950: -12.04  -5.86   5.02  29.23  29.32 -27.10  [rand]  [f=41]
   o=31 v= 0.940366:  10.74   7.87   4.56 -28.83  -4.74  29.26  [grid]  [f=70]
   o=32 v= 0.956324:  -7.40   3.65  -9.51  -6.09  -4.77 -28.53  [grid]  [f=57]
   o=33 v= 0.943686:  -8.67   1.93  -7.31  11.09  -2.33  11.90  [grid]  [f=70]
   o=34 v= 0.948647:  33.50 -17.14   4.65 -10.63 -14.80 -42.59  [rand]  [f=51]
   o=35 v= 0.958775: -32.78  10.04   3.13  22.45  -2.18  42.86  [rand]  [f=42]
   o=36 v= 0.963423:   6.33  25.80  29.57  -7.57  30.00  -6.16  [grid]  [f=53]
   o=37 v= 0.949480:  22.31   4.49  -5.01 -32.74 -11.28   3.90  [grid]  [f=48]
   o=38 v= 0.955734:  31.09 -17.25   0.32 -22.27  -2.01 -37.40  [rand]  [f=54]
   o=39 v= 0.960454:  -4.14   5.30  -6.51 -31.28  -5.33   9.32  [grid]  [f=48]
   o=40 v= 0.960570: -28.16   3.29  -6.99  28.60  -3.62   7.90  [grid]  [f=48]
   o=41 v= 0.954907:  22.54  -7.88  -4.78  -4.72   7.55  10.82  [grid]  [f=40]
   o=42 v= 0.953883:  32.63 -22.46   0.63  -7.27   0.57 -43.00  [rand]  [f=47]
   o=43 v= 0.957658: -27.90   3.36  -6.28   4.98   2.66  -9.97  [grid]  [f=54]
   o=44 v= 0.963486:  -7.43  -6.50   7.36  30.79  30.07  -8.07  [grid]  [f=51]
   o=45 v= 0.964469: -24.91   9.59  -6.68  29.53   8.43  -6.99  [grid]  [f=53]
   o=46 v= 0.950506:  33.42 -17.82   0.51 -19.21 -11.76 -43.69  [rand]  [f=42]
   o=47 v= 0.961384:  25.29   5.75  11.00  10.41 -15.63   7.10  [rand]  [f=38]
   o=48 v= 0.933402:  -5.07  -3.28  -0.50  -4.45   7.60 -26.72  [grid]  [f=77]
   o=49 v= 0.955660: -14.49  22.80 -10.06   9.38  36.61  17.02  [rand]  [f=38]
   o=50 v= 0.954057:  -2.22   4.54  -7.08  -7.81   8.41 -25.90  [grid]  [f=72]
   o=51 v= 0.922451:   8.38   0.81  -5.27 -10.23  -3.83  -4.64  [grid]  [f=83]
   o=52 v= 0.946063:   5.08  -1.34   4.67   6.05  -6.03  33.43  [grid]  [f=70]
   o=53 v= 0.944683: -39.05 -29.24  18.46 -13.74  18.67  43.56  [rand]  [f=45]
   o=54 v= 0.954844:   6.83   4.97  -5.28 -29.50  -5.43  -1.02  [grid]  [f=49]
   o=55 v= 0.966422: -24.10  27.88 -12.80  28.30  38.98  32.42  [rand]  [f=38]
   o=56 v= 0.965686: -26.92  24.94   7.57  28.42  -7.17 -10.00  [grid]  [f=46]
   o=57 v= 0.934436:   2.18  -1.35   1.20  -1.33   2.60   5.54  [grid]  [f=75]
   o=58 v= 0.963283: -32.67  24.30  35.72  38.78 -20.81  40.09  [rand]  [f=35]
   o=59 v= 0.963980:   5.68   5.17  27.42  30.61 -24.74 -29.39  [grid]  [f=30]
   o=60 v= 0.960214:  -6.23  23.73   2.39 -10.41  33.46  -8.60  [grid]  [f=41]
   o=61 v= 0.951936:  34.42  25.40  17.57  14.58  19.47 -44.95  [rand]  [f=50]
   o=62 v= 0.954373:  23.07   5.82  -6.57  -3.71  -5.41   7.28  [grid]  [f=72]
   o=63 v= 0.948433: -38.22 -25.35   2.08  13.13  -2.74  44.99  [rand]  [f=59]
   o=64 v= 0.946115:   8.78  -1.72   5.11  -0.94  -7.42  32.75  [grid]  [f=76]
   o=65 v= 0.966404: -33.24  25.32 -31.36  10.73  22.15  40.85  [rand]  [f=37]
   o=66 v= 0.959657:  29.88 -17.03   2.65 -22.22  -3.42 -43.26  [rand]  [f=48]
   o=67 v= 0.949445: -21.77   5.78   4.57  25.96   9.31  -4.20  [grid]  [f=64]
   o=68 v= 0.964732:  26.13 -25.31   7.70  27.50  22.90  39.09  [rand]  [f=52]
   o=69 v= 0.955732:  35.14  14.67  13.94  14.56   9.25 -44.19  [rand]  [f=46]
   o=70 v= 0.958386: -33.61   9.98   3.29  22.18  -2.85  43.67  [rand]  [f=49]
   o=71 v= 0.957150:  33.33 -15.60   6.46  11.81  12.10 -44.38  [rand]  [f=45]
   o=72 v= 0.935337:   8.63   3.26   4.46 -31.84  10.31  25.71  [grid]  [f=64]
   o=73 v= 0.950256:   3.89   6.98  -6.62 -29.84   2.13   1.70  [grid]  [f=70]
   o=74 v= 0.959396:  14.05 -11.88   5.18  21.39  13.85  29.46  [rand]  [f=47]
   o=75 v= 0.953232: -39.34 -23.14  -1.21   8.79   4.91  39.43  [rand]  [f=52]
   o=76 v= 0.962803:   5.94  24.82  -6.19 -29.07  25.25 -25.20  [grid]  [f=40]
   o=77 v= 0.966912:  28.28 -28.60  34.20   7.07  31.92  25.46  [rand]  [f=38]
   o=78 v= 0.964232:  35.47 -26.16   3.63  13.10  -6.83  13.83  [rand]  [f=44]
   o=79 v= 0.962260: -22.91   8.68 -20.91  23.44  33.18  36.09  [rand]  [f=48]
   o=80 v= 0.962970:  36.81 -31.96  14.70  10.57  27.83 -40.90  [rand]  [f=45]
   o=81 v= 0.957992: -19.55   4.74 -15.12  13.87  10.74   7.87  [rand]  [f=47]
   o=82 v= 0.959261:  25.23  -8.35   1.42  -7.36 -11.80  11.89  [grid]  [f=45]
   o=83 v= 0.963593: -24.42 -26.33  23.83  29.23  28.34  29.88  [grid]  [f=41]
   o=84 v= 0.962452: -28.33  18.12 -19.28  16.26  18.82  36.39  [rand]  [f=37]
   o=85 v= 0.957227:  22.20  -7.57  -5.06   6.51   7.27   7.70  [grid]  [f=41]
   o=86 v= 0.962834: -11.11  22.85   7.57  -2.20  36.21   3.32  [rand]  [f=39]
   o=87 v= 0.951518:  -2.84   3.65  -8.03  -7.81   3.48  27.42  [grid]  [f=83]
 + - saving # 1 for use with twobest
 + - skip #51 for twobest: too close to set # 1
 + - saving #48 for use with twobest
 + - saving #57 for use with twobest
 + - saving #72 for use with twobest
 + - saving #22 for use with twobest
 + - saving # 0 for use with twobest
 + - saving #31 for use with twobest
 + - saving # 8 for use with twobest
 + - saving #33 for use with twobest
 + - saving #11 for use with twobest
 + - saving #53 for use with twobest
 + - saving #12 for use with twobest
 + - saving #52 for use with twobest
 + - saving #64 for use with twobest
 + - saving #63 for use with twobest
 + - saving #27 for use with twobest
 + - saving # 7 for use with twobest
 + - saving # 6 for use with twobest
 + - skip #34 for twobest: too close to set #27
 + - saving #17 for use with twobest
 + - saving #10 for use with twobest
 + - saving #67 for use with twobest
 + - saving #37 for use with twobest
 + - saving #73 for use with twobest
 + - saving # 4 for use with twobest
 + - saving #25 for use with twobest
 + - saving #46 for use with twobest
 + - saving #24 for use with twobest
 + - saving #87 for use with twobest
 + - saving #13 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=266.571 usiz=397.385
 + - retaining old weight image
 + - using 65323 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 55801 total points stored in 111 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.938901 [o=1 t=0]
 + -- Parameters = 8.1477 1.2858 -5.6775 -9.3385 -3.4258 -6.0200 0.9836 0.9995 0.9933 0.0039 0.0178 0.0005
 + - param set #2 has cost=0.949179 [o=48 t=1]
 + -- Parameters = -4.9642 -3.2846 -0.1046 -4.4466 7.5858 -27.4998 0.9923 1.0036 0.9910 0.0012 -0.0006 0.0006
*[#16582=0.919561] *[#16585=0.917479] *[#16586=0.917237] *[#16588=0.916767] *[#16589=0.916006] *[#16590=0.915719] *[#16591=0.914223] *[#16592=0.912216] *[#16593=0.911431] *[#16594=0.910414] *[#16599=0.90836] *[#16600=0.907552] *[#16603=0.906689] *[#16604=0.906339] *[#16607=0.905728] *[#16610=0.905423] *[#16613=0.904684] *[#16615=0.903833] *[#16616=0.903745] *[#16618=0.903495] *[#16619=0.902822] *[#16620=0.90231] *[#16621=0.902011] *[#16622=0.901098] *[#16627=0.900377] *[#16632=0.899926] *[#16635=0.899519] 
 + - param set #3 has cost=0.899519 [o=57 t=2]
 + -- Parameters = 2.3570 -0.1984 3.4809 -2.1196 1.2068 5.9272 0.9644 1.0069 0.9361 -0.0328 0.0044 0.0117
 + - param set #4 has cost=0.948266 [o=72 t=3]
 + -- Parameters = 9.1446 3.0592 3.5560 -31.4852 11.1916 25.5995 1.0112 1.0017 1.0199 0.0012 -0.0002 0.0014
 + - param set #5 has cost=0.948642 [o=22 t=4]
 + -- Parameters = -8.0416 -0.4944 -0.0813 -12.0107 12.1164 -23.4232 1.0110 1.0068 1.0188 0.0189 0.0031 0.0000
 + - param set #6 has cost=0.949008 [o=0 t=5]
 + -- Parameters = 6.2497 6.2555 -8.5177 -6.9829 6.4734 -10.7109 1.0067 0.9942 0.9906 0.0071 -0.0013 0.0023
 + - param set #7 has cost=0.954042 [o=31 t=6]
 + -- Parameters = 11.0043 8.3149 3.7924 -29.1111 -4.6919 29.0751 1.0128 0.9928 1.0171 0.0025 -0.0007 0.0004
 + - param set #8 has cost=0.948976 [o=8 t=7]
 + -- Parameters = -39.3519 -18.7556 0.7351 10.7391 -7.0426 42.0529 1.0019 0.9957 0.9994 -0.0003 0.0006 -0.0000
 + - param set #9 has cost=0.953145 [o=33 t=8]
 + -- Parameters = -8.5816 1.8625 -7.0168 11.7577 -1.8781 12.6191 1.0049 1.0003 0.9982 0.0035 0.0017 0.0013
 + - param set #10 has cost=0.947881 [o=11 t=9]
 + -- Parameters = 3.1010 2.8467 -9.3279 -2.4519 -7.8573 -20.2589 0.9396 0.9730 0.9618 0.0104 0.0134 0.0080
 + - param set #11 has cost=0.952896 [o=53 t=10]
 + -- Parameters = -39.8389 -29.0782 18.1101 -14.0483 16.9274 42.9111 0.9958 0.9965 0.9953 0.0004 -0.0011 -0.0002
 + - param set #12 has cost=0.949764 [o=12 t=11]
 + -- Parameters = 14.3926 3.2346 -10.6103 0.8731 -5.9872 -8.8435 1.0025 1.0375 1.0021 -0.0009 0.0002 -0.0001
 + - param set #13 has cost=0.952067 [o=52 t=12]
 + -- Parameters = 5.9960 -1.6060 3.5570 2.4107 -5.6363 32.0100 1.0159 1.0121 1.0379 0.0024 0.0030 0.0027
 + - param set #14 has cost=0.954317 [o=64 t=13]
 + -- Parameters = 7.7054 -1.5836 4.2571 -0.1145 -2.8460 35.7270 1.0247 1.0294 1.0269 0.0071 0.0071 0.0449
 + - param set #15 has cost=0.947701 [o=63 t=14]
 + -- Parameters = -38.3725 -20.6004 1.5190 10.9585 -5.0734 42.5400 0.9982 0.9780 0.9833 -0.0014 0.0000 0.0007
 + - param set #16 has cost=0.953031 [o=27 t=15]
 + -- Parameters = 35.1126 -15.6839 4.2581 -12.9632 -12.6491 -38.5681 0.9989 1.0026 1.0000 -0.0006 0.0117 -0.0007
 + - param set #17 has cost=0.943570 [o=7 t=16]
 + -- Parameters = 5.6972 2.8529 -5.8303 -19.8658 -2.3104 6.7066 1.0458 0.9898 0.9971 -0.0065 0.0069 0.0024
 + - param set #18 has cost=0.900960 [o=-1 t=-1]
 + -- Parameters = 2.1679 0.8617 3.5642 -1.3702 0.3811 5.2738 0.9652 0.9774 0.9359 0.0066 0.0271 -0.0030
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.177 
 + --- dist(#3,#1) = 0.165 
 + --- dist(#4,#1) = 0.197 
 + --- dist(#5,#1) = 0.509 
 + --- dist(#6,#1) = 0.291 
 + --- dist(#7,#1) = 0.326 
 + --- dist(#8,#1) = 0.326 
 + --- dist(#9,#1) = 0.521 
 + --- dist(#10,#1) = 0.185 
 + --- dist(#11,#1) = 0.371 
 + --- dist(#12,#1) = 0.176 
 + --- dist(#13,#1) = 0.29 
 + --- dist(#14,#1) = 0.527 
 + --- dist(#15,#1) = 0.494 
 + --- dist(#16,#1) = 0.163 
 + --- dist(#17,#1) = 0.3 
 + --- dist(#18,#1) = 0.331 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=266.571 usiz=397.385
 + - retaining old weight image
 + - using 65323 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 55530 total points stored in 112 'TOHD(13.984)' bloks (0 duplicates)
*[#18077=0.899425] *[#18078=0.899326] *[#18081=0.899229] *[#18082=0.89917] *[#18083=0.899123] *[#18084=0.899118] *[#18088=0.89908] *[#18090=0.899022] *[#18095=0.899005] *[#18098=0.898964] *[#18099=0.898953] *[#18102=0.898877] *[#18103=0.898795] *[#18104=0.89879] *[#18106=0.898744] *[#18108=0.898703] *[#18109=0.898562] *[#18110=0.898484] *[#18111=0.898338] 
 + - param set #1 has cost=0.898338 [o=57 t=2]
 + -- Parameters = 2.1847 0.2684 4.3621 -2.2811 0.6381 5.3627 0.9580 0.9927 0.9137 -0.0447 0.0158 -0.0094
 + - param set #2 has cost=0.898960 [o=-1 t=-1]
 + -- Parameters = 1.7941 -0.0378 5.2253 -1.4149 0.8706 4.7776 0.9539 0.9836 0.8924 -0.0117 0.0311 -0.0092
 + - param set #3 has cost=0.939336 [o=1 t=0]
 + -- Parameters = 8.9869 1.8102 -6.0231 -9.5687 -2.7203 -6.4495 0.9615 0.9635 0.9895 0.0145 0.0190 0.0036
 + - param set #4 has cost=0.950344 [o=7 t=16]
 + -- Parameters = 5.6145 2.9276 -6.0720 -19.9284 -2.5401 6.4318 1.0457 0.9866 0.9831 0.0003 0.0106 0.0027
 + - param set #5 has cost=0.950627 [o=63 t=14]
 + -- Parameters = -38.2498 -20.3205 1.7039 10.3745 -5.6346 43.6217 0.9979 0.9727 0.9583 -0.0018 -0.0017 -0.0004
 + - param set #6 has cost=0.957021 [o=11 t=9]
 + -- Parameters = 3.7838 2.7260 -9.4293 -2.6624 -7.9933 -20.2872 0.9292 0.9756 0.9595 0.0084 0.0205 0.0071
 + - param set #7 has cost=0.959981 [o=72 t=3]
 + -- Parameters = 9.2899 3.1323 3.2463 -31.6480 10.5924 25.9676 1.0207 0.9887 1.0242 0.0033 -0.0021 0.0003
 + - param set #8 has cost=0.958075 [o=22 t=4]
 + -- Parameters = -8.0622 -0.5182 -1.2796 -12.6109 12.0471 -23.0159 1.0087 1.0118 1.0352 0.0265 -0.0001 -0.0017
 + - param set #9 has cost=0.953182 [o=8 t=7]
 + -- Parameters = -39.3452 -18.7329 0.7446 10.7320 -7.0203 42.0504 1.0021 0.9957 0.9992 0.0004 0.0001 -0.0001
 + - param set #10 has cost=0.958542 [o=0 t=5]
 + -- Parameters = 6.3579 6.3350 -8.5475 -6.9028 6.5354 -10.7966 1.0029 0.9925 0.9900 0.0066 -0.0003 0.0020
 + - param set #11 has cost=0.958308 [o=48 t=1]
 + -- Parameters = -4.6347 -3.3352 -0.1124 -4.6729 7.8476 -27.3197 0.9924 1.0014 0.9897 0.0021 -0.0033 0.0023
 + - param set #12 has cost=0.958659 [o=12 t=11]
 + -- Parameters = 14.5119 2.9905 -10.3504 0.8008 -5.7470 -9.0277 1.0024 1.0366 1.0041 0.0016 0.0087 0.0019
 + - param set #13 has cost=0.961496 [o=52 t=12]
 + -- Parameters = 6.7018 -2.0599 4.0632 3.5150 -5.6782 32.5650 1.0210 0.9965 1.0392 0.0016 0.0040 0.0095
 + - param set #14 has cost=0.955590 [o=53 t=10]
 + -- Parameters = -37.9912 -28.8033 18.0135 -14.1042 16.8866 42.8551 0.9980 0.9934 0.9923 -0.0000 -0.0026 -0.0010
 + - param set #15 has cost=0.960918 [o=27 t=15]
 + -- Parameters = 34.9338 -15.9365 4.2334 -13.2098 -13.5064 -42.2769 1.0010 1.0040 0.9992 0.0008 0.0118 0.0000
 + - param set #16 has cost=0.961744 [o=33 t=8]
 + -- Parameters = -8.5796 1.9852 -7.0859 11.8835 -1.9360 12.5681 1.0080 1.0000 0.9990 0.0115 0.0009 0.0010
 + - param set #17 has cost=0.962491 [o=31 t=6]
 + -- Parameters = 11.3308 7.4257 3.7043 -27.6876 -5.0107 29.2937 1.0246 0.9774 1.0169 0.0073 -0.0023 0.0034
 + - param set #18 has cost=0.959919 [o=64 t=13]
 + -- Parameters = 7.3890 -1.7399 4.5915 0.8953 -3.8912 32.8704 1.0283 1.0203 1.0289 0.0036 0.0091 0.0448
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.149 
 + --- dist(#3,#1) = 0.266 
 + --- dist(#4,#1) = 0.203 
 + --- dist(#5,#1) = 0.505 
 + --- dist(#6,#1) = 0.519 
 + --- dist(#7,#1) = 0.502 
 + --- dist(#8,#1) = 0.285 
 + --- dist(#9,#1) = 0.321 
 + --- dist(#10,#1) = 0.363 
 + --- dist(#11,#1) = 0.231 
 + --- dist(#12,#1) = 0.208 
 + --- dist(#13,#1) = 0.306 
 + --- dist(#14,#1) = 0.326 
 + --- dist(#15,#1) = 0.529 
 + --- dist(#16,#1) = 0.302 
 + --- dist(#17,#1) = 0.253 
 + --- dist(#18,#1) = 0.282 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=266.571 usiz=397.385
 + - retaining old weight image
 + - using 65323 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 55368 total points stored in 112 'TOHD(13.9467)' bloks (0 duplicates)
*[#19881=0.898122] *[#19884=0.898043] *[#19886=0.897911] *[#19890=0.8978] *[#19891=0.897739] *[#19894=0.897651] *[#19895=0.897595] *[#19896=0.897553] *[#19897=0.897502] *[#19898=0.897399] *[#19899=0.897175] *[#19900=0.896811] *[#19901=0.896666] *[#19902=0.896296] *[#19906=0.896214] *[#19914=0.896185] *[#19915=0.896084] *[#19921=0.896079] *[#19924=0.89603] *[#19925=0.895951] *[#19926=0.89592] *[#19927=0.895867] *[#19928=0.895854] *[#19931=0.895844] *[#19932=0.895795] *[#19933=0.89579] *[#19934=0.895744] *[#19941=0.895624] *[#19942=0.895609] *[#19945=0.895582] *[#19946=0.895543] *[#19949=0.895528] *[#19954=0.895522] *[#19955=0.895493] *[#19956=0.895489] *[#19958=0.895483] *[#19960=0.895469] *[#19961=0.895429] 
 + - param set #1 has cost=0.895429 [o=57 t=2]
 + -- Parameters = 1.6991 0.6354 4.4077 -1.7478 -0.9560 4.7563 0.9526 0.9396 0.9169 -0.0802 0.0175 -0.0287
 + - param set #2 has cost=0.896582 [o=-1 t=-1]
 + -- Parameters = 1.3959 0.3456 5.4501 -2.1763 0.6053 4.1454 0.9446 0.9469 0.8847 -0.0644 0.0243 -0.0201
 + - param set #3 has cost=0.948924 [o=1 t=0]
 + -- Parameters = 9.0134 2.2294 -5.9285 -9.9653 -2.5599 -6.5865 0.9526 0.9554 0.9868 0.0134 0.0222 0.0019
 + - param set #4 has cost=0.954028 [o=7 t=16]
 + -- Parameters = 5.6034 3.2249 -4.8733 -20.3710 -1.7730 6.4893 1.0464 0.9812 0.9542 0.0056 0.0037 -0.0056
 + - param set #5 has cost=0.954667 [o=63 t=14]
 + -- Parameters = -38.2609 -20.3636 1.7176 10.4317 -5.5856 43.6866 0.9991 0.9709 0.9561 -0.0018 -0.0025 0.0048
 + - param set #6 has cost=0.956674 [o=8 t=7]
 + -- Parameters = -39.3452 -18.7329 0.7446 10.7320 -7.0203 42.0504 1.0021 0.9957 0.9992 0.0004 0.0001 -0.0001
 + - param set #7 has cost=0.957604 [o=53 t=10]
 + -- Parameters = -38.0091 -28.8082 18.2219 -14.1505 16.9289 42.8139 0.9979 0.9930 0.9929 -0.0006 0.0029 -0.0009
 + - param set #8 has cost=0.959328 [o=11 t=9]
 + -- Parameters = 4.3037 2.4498 -10.5696 -2.9588 -8.0224 -19.1286 0.9099 0.9698 0.9428 0.0024 0.0219 -0.0009
 + - param set #9 has cost=0.961597 [o=22 t=4]
 + -- Parameters = -8.0606 -0.5144 -1.4355 -12.5542 12.0758 -22.8104 1.0078 1.0108 1.0387 0.0261 -0.0020 -0.0002
 + - param set #10 has cost=0.961446 [o=48 t=1]
 + -- Parameters = -4.1205 -3.2914 0.1261 -4.4658 7.6354 -27.4573 0.9707 1.0027 0.9887 0.0020 -0.0049 0.0019
 + - param set #11 has cost=0.962676 [o=0 t=5]
 + -- Parameters = 6.7225 6.5863 -8.5296 -5.9633 6.1878 -11.9043 0.9918 0.9944 0.9877 0.0059 0.0015 -0.0011
 + - param set #12 has cost=0.961634 [o=12 t=11]
 + -- Parameters = 14.5276 2.8673 -10.4442 1.0123 -5.6656 -9.0234 1.0033 1.0370 1.0047 0.0075 0.0088 0.0022
 + - param set #13 has cost=0.962343 [o=64 t=13]
 + -- Parameters = 7.4373 -1.6634 4.7983 0.5987 -3.8035 32.7909 1.0322 1.0197 1.0261 0.0021 0.0092 0.0461
 + - param set #14 has cost=0.962594 [o=72 t=3]
 + -- Parameters = 9.2885 3.8889 3.2138 -31.7869 10.3861 26.0639 1.0207 0.9728 1.0371 0.0039 -0.0012 -0.0008
 + - param set #15 has cost=0.965031 [o=27 t=15]
 + -- Parameters = 34.9338 -15.9365 4.2334 -13.2098 -13.5064 -42.2769 1.0010 1.0040 0.9992 0.0008 0.0118 0.0057
 + - param set #16 has cost=0.958715 [o=52 t=12]
 + -- Parameters = 6.5452 -1.8565 5.2254 2.7059 -6.7722 32.2614 1.0135 0.9923 1.0585 -0.0349 0.0419 0.0355
 + - param set #17 has cost=0.967098 [o=33 t=8]
 + -- Parameters = -8.3133 2.1483 -7.2612 11.7106 -1.9963 12.9582 1.0074 0.9957 1.0083 0.0170 0.0013 -0.0001
 + - param set #18 has cost=0.966460 [o=31 t=6]
 + -- Parameters = 11.2514 7.5622 3.5443 -28.2431 -4.7024 29.0629 1.0239 0.9746 1.0275 0.0060 -0.0033 0.0020
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0711 
 + --- dist(#3,#1) = 0.421 
 + --- dist(#4,#1) = 0.386 
 + --- dist(#5,#1) = 0.5 
 + --- dist(#6,#1) = 0.513 
 + --- dist(#7,#1) = 0.496 
 + --- dist(#8,#1) = 0.306 
 + --- dist(#9,#1) = 0.372 
 + --- dist(#10,#1) = 0.37 
 + --- dist(#11,#1) = 0.479 
 + --- dist(#12,#1) = 0.395 
 + --- dist(#13,#1) = 0.37 
 + --- dist(#14,#1) = 0.379 
 + --- dist(#15,#1) = 0.387 
 + --- dist(#16,#1) = 0.523 
 + --- dist(#17,#1) = 0.388 
 + --- dist(#18,#1) = 0.438 
 + - Total coarse refinement net CPU time = 0.0 s; 5444 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=266.571 usiz=397.385
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 55607 total points stored in 113 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.898851 * [o=57 t=2]
 + -- Parameters = 1.6991 0.6354 4.4077 -1.7478 -0.9560 4.7563 0.9526 0.9396 0.9169 -0.0802 0.0175 -0.0287
 + - cost(#2)=0.899947   [o=-1 t=-1]
 + -- Parameters = 1.3959 0.3456 5.4501 -2.1763 0.6053 4.1454 0.9446 0.9469 0.8847 -0.0644 0.0243 -0.0201
 + - cost(#3)=0.951283   [o=1 t=0]
 + -- Parameters = 9.0134 2.2294 -5.9285 -9.9653 -2.5599 -6.5865 0.9526 0.9554 0.9868 0.0134 0.0222 0.0019
 + - cost(#4)=0.955634   [o=7 t=16]
 + -- Parameters = 5.6034 3.2249 -4.8733 -20.3710 -1.7730 6.4893 1.0464 0.9812 0.9542 0.0056 0.0037 -0.0056
 + - cost(#5)=0.955046   [o=63 t=14]
 + -- Parameters = -38.2609 -20.3636 1.7176 10.4317 -5.5856 43.6866 0.9991 0.9709 0.9561 -0.0018 -0.0025 0.0048
 + - cost(#6)=0.956973   [o=8 t=7]
 + -- Parameters = -39.3452 -18.7329 0.7446 10.7320 -7.0203 42.0504 1.0021 0.9957 0.9992 0.0004 0.0001 -0.0001
 + - cost(#7)=0.958091   [o=53 t=10]
 + -- Parameters = -38.0091 -28.8082 18.2219 -14.1505 16.9289 42.8139 0.9979 0.9930 0.9929 -0.0006 0.0029 -0.0009
 + - cost(#8)=0.960374   [o=52 t=12]
 + -- Parameters = 6.5452 -1.8565 5.2254 2.7059 -6.7722 32.2614 1.0135 0.9923 1.0585 -0.0349 0.0419 0.0355
 + - cost(#9)=0.961872   [o=11 t=9]
 + -- Parameters = 4.3037 2.4498 -10.5696 -2.9588 -8.0224 -19.1286 0.9099 0.9698 0.9428 0.0024 0.0219 -0.0009
 + - cost(#10)=0.962232   [o=48 t=1]
 + -- Parameters = -4.1205 -3.2914 0.1261 -4.4658 7.6354 -27.4573 0.9707 1.0027 0.9887 0.0020 -0.0049 0.0019
 + - cost(#11)=0.962490   [o=22 t=4]
 + -- Parameters = -8.0606 -0.5144 -1.4355 -12.5542 12.0758 -22.8104 1.0078 1.0108 1.0387 0.0261 -0.0020 -0.0002
 + - cost(#12)=0.963179   [o=12 t=11]
 + -- Parameters = 14.5276 2.8673 -10.4442 1.0123 -5.6656 -9.0234 1.0033 1.0370 1.0047 0.0075 0.0088 0.0022
 + - cost(#13)=0.963595   [o=64 t=13]
 + -- Parameters = 7.4373 -1.6634 4.7983 0.5987 -3.8035 32.7909 1.0322 1.0197 1.0261 0.0021 0.0092 0.0461
 + - cost(#14)=0.964200   [o=72 t=3]
 + -- Parameters = 9.2885 3.8889 3.2138 -31.7869 10.3861 26.0639 1.0207 0.9728 1.0371 0.0039 -0.0012 -0.0008
 + - cost(#15)=0.964266   [o=0 t=5]
 + -- Parameters = 6.7225 6.5863 -8.5296 -5.9633 6.1878 -11.9043 0.9918 0.9944 0.9877 0.0059 0.0015 -0.0011
 + - cost(#16)=0.966150   [o=27 t=15]
 + -- Parameters = 34.9338 -15.9365 4.2334 -13.2098 -13.5064 -42.2769 1.0010 1.0040 0.9992 0.0008 0.0118 0.0057
 + - cost(#17)=0.968185   [o=31 t=6]
 + -- Parameters = 11.2514 7.5622 3.5443 -28.2431 -4.7024 29.0629 1.0239 0.9746 1.0275 0.0060 -0.0033 0.0020
 + - cost(#18)=0.968037   [o=33 t=8]
 + -- Parameters = -8.3133 2.1483 -7.2612 11.7106 -1.9963 12.9582 1.0074 0.9957 1.0083 0.0170 0.0013 -0.0001
 + - cost(#19)=0.970971   [o=-2 t=-2]
 + -- Parameters = -0.5409 -1.2548 0.2017 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.897907 * [o=57 t=2]
 + -- Parameters = 1.5687 0.8797 4.6420 -2.0577 -1.3949 4.4880 0.9454 0.9389 0.9097 -0.0889 0.0279 -0.0413
 + - cost(#2)=0.898391   [o=-1 t=-1]
 + -- Parameters = 1.0750 0.5702 5.2717 -2.1690 -0.2113 3.6882 0.9449 0.9531 0.8900 -0.0725 0.0374 -0.0283
 + - cost(#3)=0.951159   [o=1 t=0]
 + -- Parameters = 9.0436 2.1582 -5.9072 -9.9190 -2.6233 -6.5488 0.9549 0.9558 0.9877 0.0127 0.0225 0.0018
 + - cost(#4)=0.955100   [o=7 t=16]
 + -- Parameters = 5.7325 3.3796 -4.8124 -20.4301 -1.7068 6.9133 1.0487 0.9795 0.9538 0.0051 -0.0044 -0.0055
 + - cost(#5)=0.954847   [o=63 t=14]
 + -- Parameters = -38.2591 -20.3658 1.7232 10.4224 -5.5762 43.6869 0.9990 0.9710 0.9561 -0.0018 -0.0099 0.0048
 + - cost(#6)=0.956872   [o=8 t=7]
 + -- Parameters = -39.3462 -18.7540 0.7539 10.7613 -7.0260 42.0570 1.0021 0.9957 0.9992 0.0004 0.0001 -0.0075
 + - cost(#7)=0.957989   [o=53 t=10]
 + -- Parameters = -37.9968 -28.8203 18.2547 -14.1635 16.9408 42.8532 0.9976 0.9905 0.9927 -0.0006 0.0029 -0.0009
 + - cost(#8)=0.959777   [o=52 t=12]
 + -- Parameters = 6.6265 -1.9860 5.0594 2.3918 -6.8731 31.8836 1.0116 0.9943 1.0634 -0.0421 0.0452 0.0405
 + - cost(#9)=0.961638   [o=11 t=9]
 + -- Parameters = 4.4230 2.6550 -10.5581 -2.8171 -7.9838 -19.3477 0.9069 0.9757 0.9453 0.0035 0.0241 0.0015
 + - cost(#10)=0.961648   [o=48 t=1]
 + -- Parameters = -4.0729 -3.2308 0.1936 -4.5707 8.1438 -27.5111 0.9712 0.9996 0.9879 0.0020 -0.0124 0.0005
 + - cost(#11)=0.962431   [o=22 t=4]
 + -- Parameters = -8.0097 -0.4958 -1.4093 -12.5856 12.1161 -22.8121 1.0077 1.0117 1.0391 0.0259 -0.0026 0.0002
 + - cost(#12)=0.963157   [o=12 t=11]
 + -- Parameters = 14.5289 2.8688 -10.4460 1.0192 -5.6793 -9.0280 1.0032 1.0371 1.0048 0.0149 0.0087 0.0022
 + - cost(#13)=0.963548   [o=64 t=13]
 + -- Parameters = 7.4094 -1.6637 4.7999 0.5853 -3.7757 32.8108 1.0322 1.0215 1.0262 0.0020 0.0086 0.0462
 + - cost(#14)=0.961921   [o=72 t=3]
 + -- Parameters = 10.3566 4.0433 3.5704 -32.6873 10.4525 25.3438 1.0439 0.9650 1.0364 0.0115 0.0042 -0.0041
 + - cost(#15)=0.964240   [o=0 t=5]
 + -- Parameters = 6.7235 6.6006 -8.5122 -5.9906 6.1505 -11.9232 0.9920 0.9946 0.9872 0.0048 0.0012 -0.0020
 + - cost(#16)=0.965823   [o=27 t=15]
 + -- Parameters = 34.8978 -15.9516 4.1610 -13.1725 -13.5138 -42.2345 1.0027 1.0049 1.0006 0.0009 0.0192 0.0058
 + - cost(#17)=0.968021   [o=31 t=6]
 + -- Parameters = 11.3072 7.7277 3.5580 -28.3394 -4.6841 29.0663 1.0247 0.9712 1.0278 0.0048 -0.0024 0.0038
 + - cost(#18)=0.967353   [o=33 t=8]
 + -- Parameters = -8.3317 2.4888 -7.5737 11.8759 -2.4044 13.2312 1.0069 0.9918 1.0099 0.0163 -0.0077 -0.0011
 + - cost(#19)=0.907252   [o=-2 t=-2]
 + -- Parameters = 2.2886 -0.5834 5.4370 -1.9655 1.1519 5.7469 0.9589 0.9256 0.8936 -0.0289 0.0019 0.0008
 + - case #1 [o=57 t=2] is now the best
 + - Initial  cost = 0.897907
 + - Initial fine Parameters = 1.5687 0.8797 4.6420 -2.0577 -1.3949 4.4880 0.9454 0.9389 0.9097 -0.0889 0.0279 -0.0413
 + - Finalish cost = 0.896185 ; 1157 funcs
 + - ini Finalish Parameters = 0.7538 1.7784 6.2717 -1.8827 -2.7921 3.2614 0.9427 0.9368 0.8624 -0.0850 0.0488 -0.0725
 + - Final    cost = 0.896162 ; 911 funcs
 + Final fine fit Parameters:
       x-shift=  0.7629   y-shift=  1.7913   z-shift=  6.3210  ...  enorm=  6.6141 mm
       z-angle= -1.8847   x-angle= -2.8035   y-angle=  3.2755  ...  total=  4.7370 deg
       x-scale=  0.9430   y-scale=  0.9367   z-scale=  0.8609  ...  vol3D=  0.7605 = base bigger than source
     y/x-shear= -0.0846 z/x-shear=  0.0497 z/y-shear= -0.0749
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.7629 1.7913 6.3210 -1.8847 -2.8035 3.2755 0.9430 0.9367 0.8609 -0.0846 0.0497 -0.0749
++ Unloading unneeded data
++ Output dataset ./MPRAGE.GB20_unif_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./MPRAGE.GB20_unif_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 29.4
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB20_unif_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB20_unif_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4558613 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 65323 voxels [11.4%] in weight mask
++ Number of points for matching = 65323
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.620 50.423 39.151 (index)
 + source center of mass = 159.939 192.973 129.830 (index)
 + source-target CM = -0.657 -1.269 -1.691 (xyz)
 + estimated center of mass shifts = -0.657 -1.269 -1.691
++ shift param auto-range: -71.3..70.0 -78.8..76.2 -66.3..62.9
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.657005 .. 9.342995  center = -0.657005
 + Range param#2 [y-shift] = -11.269295 .. 8.730705  center = -1.269295
 + Range param#3 [z-shift] = -11.690895 .. 8.309105  center = -1.690895
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.657005 .. 39.342995  center = -0.657005
 + Range param#2 [y-shift] = -41.269295 .. 38.730705  center = -1.269295
 + Range param#3 [z-shift] = -41.690895 .. 38.309105  center = -1.690895
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -40.657 ..   39.343
 +       y-shift =  -41.269 ..   38.731
 +       z-shift =  -41.691 ..   38.309
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 4558613 [out of 30187104] voxels
 + base mask has 83166 [out of 574028] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=302.891 usiz=378.767
 + - copying weight image
 + - using 65323 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 316.457 .. 1086.29; base clip 2709.13 .. 9711.67
 +  - versus source range 0 .. 1121.13; base range 0 .. 12499.7
 + 55607 total points stored in 113 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB20_unif_flip_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB20_unif_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5317315 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 65323 voxels [11.4%] in weight mask
++ Number of points for matching = 65323
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.620 50.423 39.151 (index)
 + source center of mass = 160.431 191.768 128.081 (index)
 + source-target CM = -0.313 -2.113 -2.915 (xyz)
 + estimated center of mass shifts = -0.313 -2.113 -2.915
++ shift param auto-range: -70.9..70.3 -79.6..75.4 -67.5..61.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.312523 .. 9.687477  center = -0.312523
 + Range param#2 [y-shift] = -12.112816 .. 7.887184  center = -2.112816
 + Range param#3 [z-shift] = -12.914909 .. 7.085091  center = -2.914909
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.312523 .. 39.687477  center = -0.312523
 + Range param#2 [y-shift] = -42.112816 .. 37.887184  center = -2.112816
 + Range param#3 [z-shift] = -42.914909 .. 37.085091  center = -2.914909
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -40.313 ..   39.687
 +       y-shift =  -42.113 ..   37.887
 +       z-shift =  -42.915 ..   37.085
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5317315 [out of 30187104] voxels
 + base mask has 83166 [out of 574028] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=318.528 usiz=371.014
 + - copying weight image
 + - using 65323 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 317.563 .. 1077.86; base clip 2709.13 .. 9711.67
 +  - versus source range 0 .. 1137.16; base range 0 .. 12499.7
 + 55607 total points stored in 113 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
No flip cost is 0.775961 for lpa cost function
Flip cost is 0.897891 for lpa cost function
Data does not need flipping
#++ Creating final output: skullstripped anat data
copying from dataset /mnt/ext5/GA/fmri_data/preproc_data/GB20/MPRAGE.GB20_unif_unflipped_ns+orig to /mnt/ext5/GA/fmri_data/preproc_data/GB20/MPRAGE.GB20_unif_ns+orig
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB20_unif_unflipped_ns+orig MPRAGE.GB20_unif_ns
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat MPRAGE.GB20_unif+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base \
 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off \
 -tshift off" \
 ./MPRAGE.GB20_unif_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB20_unif*

# Finished alignment successfully

auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input MPRAGE.GB20_unif_ns+orig -skull_strip_input no -unifize_input no
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ auto_warp.py version: 0.06
# Output directory /mnt/ext5/GA/fmri_data/preproc_data/GB20/awpy/
#Script is running:
  mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB20/awpy/
cd /mnt/ext5/GA/fmri_data/preproc_data/GB20/awpy/
#Script is running (command trimmed):
  3dcopy /mnt/ext5/GA/fmri_data/preproc_data/GB20/MPRAGE.GB20_unif_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#Script is running (command trimmed):
  3dcopy /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz ./base.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB20/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB20/awpy/anat.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ anat already stripped, re-using
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_15pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 1545.990100 ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (cubic final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m -base dataset __ats_tmp__ref_base.nii_15pad+tlrc has 5 sub-bricks; will only use #0
RMS[0] = 529.147 272.445   ITER = 12/50
529.147

Warping has converged.

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
Cleanup ...
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB20/awpy/anat.aff.nii
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB20/awpy/base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.aff.nii ./base.nii
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB20/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB20/awpy/anat.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.aff.nii 
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ base dataset has more than 1 sub-brick: ignoring all but the first
++ base dataset has more than 1 sub-brick: ignoring all but the first [0]
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=4 ytop=6  zbot=19 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=/mnt/ext5/GA/fmri_data/preproc_data/GB20/awpy/base.nii  source=/mnt/ext5/GA/fmri_data/preproc_data/GB20/awpy/anat.aff.nii
++ AFNI warpomatic: 199 x 239 x 215 volume ; autobbox = 22..176 24..214 20..183 [clock= 3s 176ms]
lev=0 3..195 1..237 1..203: [first cost=-0.69918] ..... done [cost:-0.69918==>-0.75300]
lev=1 patch=145x177x153 [clock= 42s 121ms]........:[cost=-0.77042]:........done [cost:-0.75300==>-0.77506 ; 16 patches optimized, 0 skipped, bbox=6:193,4:233,4:200]
lev=2 patch=109x133x115 [clock= 57s 199ms]........done [cost:-0.77506==>-0.79192 ; 8 patches optimized, 0 skipped, bbox=6:193,4:233,4:200]
lev=3 patch=81x99x85 [clock= 1m 2s 58ms]....done [cost:-0.79192==>-0.86548 ; 23 patches optimized, 4 skipped, bbox=6:193,4:233,4:200]
lev=4 patch=61x75x65 [clock= 1m 14s 946ms]..........done [cost:-0.86548==>-0.94601 ; 88 patches optimized, 37 skipped, bbox=6:193,4:233,4:200]
lev=5 patch=45x57x49 [clock= 1m 33s 774ms]......................done [cost:-0.94601==>-1.01755 ; 169 patches optimized, 83 skipped, bbox=6:193,4:233,4:200]
lev=6 patch=35x43x37 [clock= 1m 50s 613ms].................done [cost:-1.01755==>-1.07579 ; 438 patches optimized, 291 skipped, bbox=6:193,4:233,4:200]
lev=7 patch=25x25x25 [clock= 2m 10s 736ms].....................................done [cost:-1.07579==>-1.17591 ; 1432 patches optimized, 908 skipped, bbox=6:193,4:233,4:200]
++ ====== total number of parameters 'optimized' = 26238
 +      initial unpenalized cost = -0.699183
 +        final unpenalized cost = -1.18362
 +        final penalized   cost = -1.17591
++ Output dataset ./anat.aff.qw.nii
++ Output dataset ./anat.aff.qw_WARP.nii
++ ===== clock time = 2m 47s 35ms
#++ Applying warps to /mnt/ext5/GA/fmri_data/preproc_data/GB20/MPRAGE.GB20_unif_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.aff.qw_WARP.nii anat.aff.Xat.1D" -master ./base.nii -source /mnt/ext5/GA/fmri_data/preproc_data/GB20/MPRAGE.GB20_unif_ns+orig -prefix ./MPRAGE.GB20_unif_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/mnt/ext5/GA/fmri_data/preproc_data/GB20/MPRAGE.GB20_unif_ns+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./MPRAGE.GB20_unif_ns.aw.nii
++ total Elapsed time = 4.5 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input \
 MPRAGE.GB20_unif_ns+orig -skull_strip_input no -unifize_input no" \
 ./MPRAGE.GB20_unif_ns.aw.nii


3dbucket -DAFNI_NIFTI_VIEW=tlrc -prefix MPRAGE.GB20_unif_ns awpy/MPRAGE.GB20_unif_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
mv awpy/anat.aff.Xat.1D .
mv awpy/anat.aff.qw_WARP.nii .
if ( ! -f MPRAGE.GB20_unif_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb03.GB20.r01.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB20.r01.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 82978 voxels
 + 12550 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.155  pitch=-0.598  yaw=-1.439  dS=-0.893  dL=-0.491  dP=-0.606
++ Mean: roll=+0.062  pitch=+0.525  yaw=-0.740  dS=-0.563  dL=-0.261  dP=-0.361
++ Max : roll=+0.454  pitch=+1.008  yaw=+0.379  dS=+0.442  dL=+0.024  dP=+0.327
++ Max displacements (mm) for each sub-brick:
 1.60(0.00) 1.62(0.12) 1.53(0.11) 1.46(0.11) 1.44(0.03) 1.45(0.07) 1.43(0.05) 1.39(0.05) 1.32(0.07) 1.33(0.07) 1.33(0.05) 1.25(0.08) 1.24(0.03) 1.21(0.03) 1.21(0.04) 1.16(0.06) 1.18(0.06) 1.18(0.05) 1.22(0.08) 1.09(0.15) 1.01(0.10) 0.99(0.06) 1.04(0.07) 0.99(0.06) 0.98(0.07) 0.97(0.06) 1.03(0.08) 0.92(0.11) 0.88(0.07) 0.79(0.12) 0.80(0.04) 0.64(0.17) 0.46(0.21) 0.39(0.07) 0.39(0.11) 0.30(0.14) 0.25(0.06) 0.22(0.08) 0.20(0.04) 0.18(0.08) 0.16(0.03) 0.12(0.06) 0.11(0.08) 0.11(0.08) 0.08(0.07) 0.10(0.09) 0.07(0.05) 0.11(0.09) 0.10(0.03) 0.13(0.04) 0.07(0.07) 0.07(0.05) 0.00(0.07) 0.13(0.13) 0.11(0.08) 0.17(0.08) 0.15(0.08) 0.18(0.05) 0.16(0.06) 0.14(0.04) 0.13(0.06) 0.20(0.13) 0.23(0.05) 0.26(0.08) 0.24(0.04) 0.29(0.08) 0.24(0.10) 0.21(0.05) 0.16(0.08) 0.21(0.09) 0.21(0.07) 0.25(0.07) 0.24(0.02) 0.27(0.03) 0.27(0.02) 0.30(0.04) 0.25(0.09) 0.20(0.05) 0.15(0.09) 0.20(0.11) 0.22(0.07) 0.25(0.04) 0.22(0.06) 0.28(0.08) 0.26(0.05) 0.31(0.06) 0.28(0.07) 0.26(0.04) 0.29(0.08) 0.35(0.11) 0.34(0.05) 0.37(0.05) 0.35(0.05) 0.39(0.06) 0.38(0.04) 0.44(0.08) 0.39(0.09) 0.39(0.06) 0.35(0.07) 0.41(0.09) 0.42(0.06) 0.49(0.08) 0.47(0.05) 0.51(0.05) 0.50(0.04) 0.48(0.04) 0.37(0.14) 0.37(0.11) 0.41(0.06) 0.44(0.05) 0.49(0.05) 0.52(0.04) 0.51(0.03) 0.55(0.05) 0.52(0.06) 0.50(0.06) 0.47(0.03) 0.53(0.08) 0.55(0.05) 0.59(0.05) 0.60(0.03) 0.63(0.05) 0.62(0.04) 0.58(0.08) 0.53(0.05) 0.58(0.05) 0.66(0.10) 0.65(0.03) 0.70(0.07) 0.70(0.06) 0.72(0.04) 0.64(0.11) 0.57(0.07) 0.54(0.05) 0.60(0.08) 0.64(0.04) 0.68(0.06) 0.67(0.02) 0.70(0.02) 0.70(0.02) 0.66(0.06) 0.59(0.08) 0.63(0.05) 0.70(0.09) 0.71(0.04) 0.71(0.02) 0.74(0.03) 0.75(0.03) 0.78(0.04) 0.73(0.07) 0.69(0.06) 0.66(0.04) 0.76(0.11) 0.78(0.03) 0.79(0.03) 0.81(0.03) 0.83(0.02) 0.82(0.03) 0.79(0.06) 0.75(0.06) 0.79(0.07) 0.81(0.05) 0.81(0.05) 0.80(0.02) 0.83(0.04) 0.80(0.04) 0.76(0.06) 0.72(0.05) 0.78(0.07) 0.85(0.08) 0.88(0.05) 0.88(0.03) 0.88(0.02) 0.83(0.06) 0.81(0.04) 0.81(0.03) 0.88(0.08) 0.90(0.03) 0.90(0.03) 0.92(0.02) 0.92(0.05) 0.82(0.12) 0.77(0.06) 0.67(0.10) 0.68(0.11) 0.47(0.27) 0.39(0.17) 0.37(0.10) 0.42(0.07) 0.45(0.06) 0.45(0.11) 0.48(0.05) 0.53(0.06) 0.56(0.10) 0.56(0.05) 0.59(0.07) 0.59(0.01) 0.64(0.07) 0.56(0.12) 0.62(0.10) 0.63(0.05) 0.69(0.10) 0.68(0.06) 0.72(0.06) 0.69(0.06) 0.72(0.06) 0.63(0.13) 0.66(0.07) 0.65(0.05) 0.70(0.09) 0.71(0.04) 0.74(0.05) 0.74(0.02) 0.80(0.06) 0.80(0.06) 0.83(0.05) 0.81(0.09) 0.90(0.14) 1.03(0.16) 1.16(0.13) 1.17(0.02) 1.13(0.05) 1.10(0.08) 1.11(0.04) 1.16(0.07) 1.21(0.08) 1.28(0.09) 1.34(0.08) 1.36(0.05) 1.35(0.03) 1.34(0.07) 1.30(0.06) 1.36(0.07) 1.35(0.03) 1.40(0.09) 1.40(0.04) 1.45(0.09) 1.44(0.06) 1.45(0.04) 1.32(0.16) 1.36(0.09) 1.35(0.06) 1.40(0.08) 1.39(0.03) 1.43(0.05) 1.40(0.04) 1.45(0.06) 1.45(0.06) 1.44(0.04) 1.36(0.11) 1.44(0.14) 1.45(0.01) 1.49(0.05) 1.48(0.02) 1.52(0.05) 1.51(0.03) 1.56(0.06) 1.50(0.09) 1.53(0.06) 1.52(0.04) 1.58(0.10) 1.58(0.02) 1.63(0.06) 1.58(0.07) 1.61(0.04) 1.57(0.09) 1.53(0.06) 1.70(0.19) 1.71(0.09) 1.64(0.14) 1.32(0.38) 1.14(0.24) 1.10(0.07) 1.21(0.15) 1.18(0.06) 1.14(0.13) 1.10(0.07) 1.13(0.04) 1.06(0.11) 1.03(0.05) 1.03(0.05) 1.07(0.10) 1.07(0.03) 1.14(0.08) 1.10(0.05) 1.13(0.04) 1.05(0.11) 1.02(0.04) 1.08(0.13) 1.44(0.46) 1.41(0.07) 1.41(0.04) 1.38(0.05) 1.38(0.02) 1.36(0.04) 1.34(0.04) 1.29(0.08) 1.34(0.08) 1.33(0.02) 1.35(0.03) 1.36(0.04) 1.37(0.05) 1.40(0.04) 1.40(0.03) 1.35(0.08) 1.36(0.04) 1.35(0.05) 1.40(0.06) 1.40(0.03) 1.43(0.05) 1.43(0.03) 1.46(0.03) 1.40(0.08) 1.38(0.03) 1.32(0.08) 1.38(0.09) 1.40(0.03) 1.44(0.04) 1.39(0.05) 1.43(0.04) 1.38(0.08) 1.36(0.03) 1.33(0.07) 1.41(0.12) 1.42(0.05) 1.46(0.07) 1.45(0.03) 1.48(0.05) 1.43(0.09) 1.39(0.04) 1.39(0.04) 1.46(0.10) 1.49(0.04) 1.49(0.03) 1.53(0.04) 1.47(0.08) 1.44(0.04) 1.36(0.10) 1.41(0.08) 1.44(0.04) 1.45(0.04) 1.44(0.03) 1.46(0.03) 1.44(0.05) 1.40(0.04) 1.35(0.10) 1.39(0.12) 1.43(0.05) 1.45(0.07) 1.46(0.04) 1.50(0.05) 1.44(0.10) 1.41(0.05) 1.39(0.06) 1.43(0.07) 1.47(0.07) 1.53(0.08) 1.52(0.02) 1.54(0.04) 1.54(0.04) 1.47(0.09) 1.45(0.05) 1.43(0.03) 1.50(0.08) 1.53(0.04) 1.56(0.05) 1.57(0.02) 1.59(0.02) 1.53(0.06) 1.50(0.04) 1.40(0.13) 1.42(0.11) 1.43(0.05) 1.47(0.07) 1.48(0.05) 1.50(0.03) 1.48(0.03) 1.46(0.03) 1.41(0.09) 1.43(0.06) 1.48(0.06) 1.54(0.08) 1.53(0.04) 1.56(0.05) 1.51(0.08) 1.52(0.08) 1.48(0.08) 1.52(0.05) 1.55(0.04) 1.59(0.05) 1.62(0.05) 1.61(0.02) 1.62(0.04) 1.53(0.10) 1.53(0.02) 1.51(0.05) 1.59(0.10) 1.58(0.04) 1.64(0.08) 1.63(0.04) 1.67(0.07) 1.62(0.08) 1.59(0.04) 1.56(0.03) 1.60(0.06) 1.64(0.05) 1.68(0.04) 1.70(0.04) 1.68(0.03) 1.69(0.04) 1.62(0.10) 1.60(0.04) 1.58(0.05) 1.64(0.08) 1.66(0.02) 1.70(0.06) 1.67(0.06) 1.72(0.06) 1.68(0.08) 1.66(0.05) 1.61(0.10) 1.63(0.04) 1.70(0.08) 1.74(0.05) 1.73(0.03) 1.75(0.04) 1.78(0.04) 1.73(0.07) 1.69(0.05) 1.64(0.07) 1.70(0.10) 1.72(0.04) 1.78(0.10) 1.75(0.05) 1.78(0.07) 1.76(0.05) 1.75(0.04) 1.71(0.07) 1.69(0.04) 1.74(0.08) 1.77(0.04) 1.77(0.02) 1.76(0.03) 1.75(0.03) 1.66(0.13) 1.64(0.05) 1.61(0.04) 1.68(0.10) 1.67(0.04) 1.71(0.06) 1.71(0.06) 1.75(0.06) 1.69(0.09) 1.68(0.02) 1.67(0.04) 1.74(0.10) 1.77(0.05) 1.82(0.06) 1.82(0.02) 1.81(0.05) 1.75(0.07) 1.67(0.11) 1.67(0.04) 1.70(0.06) 1.75(0.06) 1.77(0.05) 1.81(0.06) 1.78(0.04) 1.71(0.09) 1.65(0.12) 1.66(0.04) 1.69(0.04) 1.72(0.06) 1.71(0.02) 1.77(0.07) 1.78(0.03) 1.74(0.06) 1.70(0.17) 1.67(0.08) 1.68(0.04) 1.74(0.11) 1.74(0.05) 1.79(0.07) 1.73(0.09) 1.70(0.05) 1.68(0.12) 1.70(0.06) 1.74(0.06) 1.77(0.09) 1.81(0.06) 1.83(0.05) 1.80(0.07) 1.83(0.09) 1.79(0.10) 1.77(0.04) 1.78(0.03) 1.87(0.12) 1.86(0.04) 1.91(0.08) 1.87(0.08) 1.93(0.08) 1.84(0.14) 1.79(0.06) 1.80(0.03) 1.85(0.10) 1.85(0.04) 1.90(0.08) 1.88(0.07) 1.93(0.08) 1.87(0.10) 1.81(0.07) 1.77(0.13) 1.83(0.14) 1.82(0.04) 1.86(0.05) 1.86(0.02) 1.88(0.04) 1.86(0.03) 1.83(0.06) 1.78(0.07) 1.80(0.05) 1.83(0.06) 1.89(0.07) 1.89(0.02) 1.93(0.05) 1.85(0.11) 1.82(0.04) 1.76(0.09) 1.83(0.13) 1.85(0.05) 1.91(0.09) 1.89(0.04) 1.95(0.08) 1.87(0.11) 1.86(0.05) 1.80(0.13) 1.83(0.10) 1.86(0.05) 1.90(0.07) 1.91(0.03) 1.95(0.03) 1.89(0.08) 1.87(0.05) 1.84(0.03) 1.87(0.06) 1.87(0.04) 1.88(0.03) 1.93(0.05) 1.90(0.04) 1.87(0.04) 1.84(0.09) 1.89(0.10) 1.96(0.08) 2.03(0.09) 2.05(0.02) 2.07(0.03) 2.02(0.08) 1.98(0.05) 1.92(0.08) 1.98(0.08) 2.01(0.05) 2.06(0.06) 2.08(0.02) 2.12(0.04) 2.07(0.08) 2.04(0.04) 2.01(0.06) 2.12(0.15) 2.31(0.23) 2.29(0.05) 2.26(0.05) 2.28(0.03) 2.21(0.09) 2.17(0.05) 2.15(0.04) 2.19(0.07) 2.21(0.03) 2.25(0.06) 2.25(0.02) 2.29(0.05) 2.18(0.14) 2.15(0.05) 2.13(0.04) 2.20(0.07) 2.24(0.07) 2.30(0.07) 2.32(0.03) 2.32(0.02) 2.21(0.12) 2.20(0.04) 2.20(0.04) 2.27(0.09) 2.31(0.05) 2.33(0.03) 2.36(0.06) 2.33(0.07) 2.25(0.09) 2.20(0.07) 2.04(0.19) 1.97(0.13) 2.02(0.09) 2.06(0.06) 2.10(0.07) 2.10(0.07) 2.13(0.06) 2.17(0.05) 2.25(0.10) 2.25(0.05) 2.24(0.04) 2.19(0.08) 2.23(0.08) 2.22(0.04) 2.27(0.08) 2.28(0.05) 2.33(0.06) 2.30(0.08) 2.32(0.05) 2.30(0.06) 2.32(0.06) 2.29(0.09) 2.28(0.08) 2.29(0.02) 2.38(0.13) 2.40(0.05) 2.46(0.08) 2.43(0.09) 2.42(0.03) 2.37(0.09) 2.38(0.03) 2.42(0.06) 2.43(0.02) 2.48(0.07) 2.48(0.03) 2.48(0.02) 2.41(0.09) 2.37(0.05) 2.35(0.04) 2.40(0.07) 2.39(0.02) 2.44(0.08) 2.45(0.03) 2.48(0.04) 2.46(0.05) 2.41(0.04) 2.36(0.07) 2.42(0.06) 2.42(0.03) 2.47(0.06) 2.46(0.02) 2.51(0.07) 2.53(0.04) 2.52(0.04) 2.47(0.06) 2.46(0.03) 2.50(0.05) 2.55(0.05) 2.55(0.04) 2.58(0.03) 2.58(0.03) 2.60(0.03) 2.49(0.14) 2.47(0.04) 2.47(0.02) 2.53(0.06) 2.53(0.03) 2.57(0.05) 2.58(0.03) 2.59(0.02) 2.52(0.10) 2.48(0.04) 2.45(0.04) 2.51(0.08) 2.55(0.06) 2.56(0.07) 2.56(0.04) 2.58(0.02) 2.51(0.09) 2.47(0.06) 2.45(0.03) 2.51(0.08) 2.57(0.08) 2.62(0.07) 2.64(0.03) 2.63(0.03) 2.57(0.07) 2.54(0.05) 2.59(0.10) 2.59(0.07) 2.61(0.05) 2.59(0.05) 2.64(0.08) 2.63(0.03) 2.61(0.05) 2.59(0.04) 2.60(0.03) 2.64(0.06) 2.66(0.05) 2.65(0.03) 2.68(0.06) 2.69(0.05) 2.63(0.08) 2.63(0.05) 2.61(0.04) 2.65(0.06) 2.65(0.04) 2.68(0.06) 2.68(0.03) 2.73(0.05) 2.72(0.07) 2.67(0.06) 2.63(0.10) 2.67(0.08) 2.69(0.04) 2.73(0.05) 2.75(0.03) 2.76(0.07) 2.77(0.07) 2.74(0.04) 2.72(0.08) 2.73(0.07) 2.76(0.06) 2.77(0.08) 2.79(0.06) 2.78(0.06) 2.79(0.03) 2.73(0.10) 2.74(0.07) 2.72(0.05) 2.76(0.07) 2.76(0.02) 2.79(0.05) 2.79(0.02) 2.78(0.06) 2.75(0.07) 2.76(0.03) 2.78(0.05) 2.79(0.07) 2.81(0.05) 2.85(0.07) 2.86(0.06) 2.85(0.09) 2.79(0.11) 2.74(0.05) 2.78(0.05) 2.81(0.08) 2.83(0.04) 2.84(0.06) 2.86(0.03) 2.86(0.07) 2.85(0.05) 2.79(0.08) 2.78(0.04) 2.83(0.09) 2.89(0.08) 2.90(0.03) 2.90(0.02) 2.91(0.04) 2.86(0.10) 2.83(0.05) 2.84(0.05) 2.85(0.07) 2.87(0.04) 2.89(0.07) 2.88(0.06) 2.87(0.03) 2.86(0.03) 2.82(0.07) 2.84(0.04) 2.82(0.07) 2.86(0.06) 2.88(0.05) 2.91(0.05) 2.90(0.03) 2.87(0.04) 2.84(0.08) 2.84(0.04) 2.87(0.05) 2.90(0.06) 2.88(0.03) 2.91(0.04) 2.93(0.02) 2.95(0.05) 2.88(0.10) 2.89(0.06) 2.92(0.04) 2.96(0.06) 2.94(0.02) 2.95(0.02) 2.96(0.04) 2.96(0.04) 2.92(0.11) 2.92(0.09) 2.95(0.07) 2.98(0.10) 2.98(0.04) 3.01(0.07) 2.97(0.11) 2.97(0.05) 2.90(0.12) 2.93(0.10) 2.94(0.05) 2.97(0.06) 2.99(0.03) 3.02(0.05) 2.98(0.07) 2.96(0.05) 2.94(0.04) 2.98(0.07) 3.00(0.05) 3.01(0.03) 3.00(0.02) 3.06(0.06) 2.99(0.15) 2.95(0.06) 2.90(0.06) 2.97(0.10) 2.97(0.04) 2.97(0.04) 2.99(0.04) 3.05(0.06) 3.04(0.06) 3.04(0.05) 3.03(0.05) 3.04(0.08) 3.04(0.06) 3.06(0.05) 3.07(0.04) 3.08(0.06) 3.05(0.05) 3.03(0.05) 3.04(0.05) 3.06(0.06) 3.09(0.05) 3.10(0.03) 3.11(0.03) 3.11(0.05) 3.06(0.10) 3.03(0.08) 3.04(0.03) 3.07(0.06) 3.06(0.05) 3.07(0.04) 3.09(0.04) 3.11(0.04) 3.13(0.08) 3.11(0.09) 3.08(0.06) 3.14(0.10) 3.13(0.07) 3.15(0.04) 3.18(0.06) 3.21(0.04) 3.21(0.05) 3.16(0.10) 3.14(0.04) 3.19(0.08) 3.19(0.04) 3.20(0.05) 3.21(0.03) 3.24(0.06) 3.18(0.08) 3.16(0.06) 3.13(0.04) 3.20(0.10) 3.22(0.04) 3.25(0.05) 3.24(0.03) 3.28(0.04) 3.24(0.09) 3.22(0.02) 3.18(0.08) 3.21(0.10) 3.22(0.02) 3.25(0.09) 3.28(0.05) 3.32(0.07) 3.27(0.10) 3.25(0.06) 3.21(0.06) 3.27(0.08) 3.26(0.05) 3.24(0.08) 3.25(0.02) 3.29(0.05) 3.30(0.05) 3.24(0.08) 3.21(0.08) 3.22(0.05) 3.27(0.09) 3.27(0.04) 3.30(0.05) 3.30(0.01) 3.31(0.04) 3.23(0.15) 3.24(0.07) 3.23(0.05) 3.27(0.09) 3.27(0.04) 3.34(0.11) 3.46(0.14) 3.44(0.04) 3.41(0.08) 3.35(0.07) 3.33(0.07) 3.34(0.05) 3.41(0.09) 3.42(0.04) 3.46(0.05) 3.46(0.05) 3.46(0.04) 3.42(0.10) 3.42(0.03) 3.41(0.05) 3.44(0.09) 3.44(0.05) 3.48(0.06) 3.47(0.03) 3.49(0.04) 3.43(0.12) 3.41(0.04) 3.41(0.04) 3.47(0.07) 3.47(0.06) 3.49(0.04) 3.48(0.01) 3.49(0.02) 3.43(0.12) 3.40(0.06) 3.39(0.06) 3.43(0.08) 3.45(0.04) 3.48(0.05) 3.49(0.02) 3.52(0.05) 3.50(0.06) 3.47(0.04) 3.44(0.07) 3.45(0.05) 3.47(0.05) 3.51(0.07) 3.49(0.03) 3.52(0.03) 3.50(0.09) 3.46(0.08) 3.43(0.05) 3.46(0.09) 3.45(0.04) 3.47(0.05) 3.44(0.03) 3.26(0.26) 3.09(0.22) 3.05(0.13) 3.07(0.10) 3.11(0.09) 3.11(0.11) 3.13(0.04) 3.15(0.04) 3.14(0.09) 3.13(0.06) 3.14(0.06) 3.15(0.07) 3.16(0.03) 3.19(0.07) 3.20(0.03) 3.20(0.04) 3.13(0.09) 3.14(0.03) 3.15(0.07) 3.19(0.04) 3.23(0.06) 3.22(0.05) 3.24(0.05) 3.22(0.03) 3.24(0.10) 3.16(0.16) 3.19(0.05) 3.27(0.12) 3.29(0.08) 3.31(0.04) 3.32(0.03) 3.29(0.11) 3.25(0.06) 3.25(0.04) 3.30(0.11) 3.29(0.05) 3.33(0.11) 3.31(0.05) 3.33(0.06) 3.32(0.09) 3.28(0.04) 3.27(0.05) 3.32(0.09) 3.35(0.06) 3.39(0.08) 3.42(0.03) 3.43(0.04) 3.42(0.07) 3.33(0.15) 3.29(0.07) 3.26(0.05) 3.32(0.10) 3.34(0.05) 3.34(0.04) 3.37(0.06) 3.40(0.04) 3.39(0.04) 3.35(0.10) 3.30(0.09) 3.33(0.07) 3.36(0.06) 3.39(0.06) 3.36(0.06) 3.35(0.03) 3.34(0.07) 3.30(0.06) 3.28(0.10) 3.32(0.12) 3.35(0.06) 3.36(0.06) 3.37(0.03) 3.40(0.06) 3.42(0.07) 3.37(0.06) 3.32(0.09) 3.32(0.01) 3.37(0.08) 3.42(0.08) 3.40(0.03) 3.39(0.04) 3.41(0.03) 3.37(0.07) 3.36(0.04) 3.34(0.04) 3.40(0.09) 3.39(0.03) 3.43(0.05) 3.40(0.03) 3.42(0.03) 3.38(0.12) 3.33(0.05) 3.31(0.09) 3.34(0.13) 3.37(0.06) 3.40(0.09) 3.39(0.04) 3.42(0.05) 3.40(0.10) 3.42(0.05) 3.41(0.08) 3.43(0.06) 3.44(0.04) 3.43(0.08) 3.44(0.02) 3.44(0.05) 3.42(0.08) 3.38(0.07) 3.41(0.03) 3.40(0.07) 3.45(0.07) 3.43(0.05) 3.47(0.04) 3.45(0.08) 3.43(0.05) 3.39(0.12) 3.31(0.09) 3.24(0.09) 3.29(0.11) 3.27(0.02) 3.22(0.07) 3.20(0.12) 3.15(0.07) 3.05(0.15) 3.01(0.09) 3.06(0.06) 3.10(0.09) 3.12(0.03) 3.15(0.09) 3.16(0.06) 3.15(0.03) 3.15(0.03) 3.15(0.03) 3.16(0.06) 3.16(0.06) 3.23(0.14) 3.18(0.07) 3.16(0.03) 3.12(0.08) 3.10(0.03) 3.05(0.05) 3.09(0.06) 3.12(0.05) 3.15(0.04) 3.19(0.06) 3.19(0.02) 3.20(0.05) 3.19(0.06)
++ Max displacement in automask = 3.52 (mm) at sub-brick 941
++ Max delta displ  in automask = 0.46 (mm) at sub-brick 289
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb03.GB20.r01.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB20_unif_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB20_unif_ns+tlrc -dxyz 2.5 -source pb02.GB20.r01.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB20_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB20.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 657.9 sec
3dNwarpApply -master MPRAGE.GB20_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB20_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb03.GB20.r02.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB20.r02.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 82632 voxels
 + 12515 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.147  pitch=+0.374  yaw=-1.996  dS=-1.567  dL=-0.700  dP=-0.104
++ Mean: roll=+0.537  pitch=+0.924  yaw=-1.787  dS=-1.161  dL=-0.474  dP=+0.210
++ Max : roll=+0.774  pitch=+1.203  yaw=-1.328  dS=-0.125  dL=-0.190  dP=+0.601
++ Max displacements (mm) for each sub-brick:
 3.73(0.00) 3.65(0.12) 3.62(0.05) 3.66(0.05) 3.65(0.04) 3.64(0.07) 3.60(0.06) 3.70(0.12) 3.69(0.03) 3.77(0.08) 3.78(0.05) 3.79(0.01) 3.75(0.04) 3.72(0.04) 3.68(0.05) 3.76(0.09) 3.83(0.10) 3.89(0.07) 3.90(0.03) 3.92(0.04) 3.90(0.06) 3.86(0.05) 3.81(0.07) 3.85(0.06) 3.90(0.06) 3.94(0.04) 3.96(0.04) 4.07(0.16) 4.13(0.08) 4.17(0.07) 4.13(0.08) 4.11(0.07) 4.11(0.06) 4.16(0.08) 4.18(0.05) 4.22(0.05) 4.22(0.03) 4.25(0.04) 4.16(0.10) 4.13(0.07) 4.08(0.07) 4.15(0.09) 4.19(0.05) 4.20(0.02) 4.19(0.04) 4.21(0.06) 4.18(0.08) 4.14(0.07) 4.04(0.12) 4.11(0.10) 4.14(0.07) 4.19(0.09) 4.19(0.08) 4.21(0.04) 4.21(0.07) 4.22(0.06) 4.16(0.14) 4.13(0.05) 4.17(0.07) 4.22(0.05) 4.24(0.05) 4.29(0.07) 4.31(0.04) 4.27(0.05) 4.22(0.10) 4.20(0.03) 4.27(0.09) 4.28(0.08) 4.27(0.08) 4.26(0.03) 4.29(0.03) 4.24(0.05) 4.23(0.08) 4.26(0.04) 4.34(0.10) 4.34(0.04) 4.35(0.04) 4.42(0.07) 4.45(0.04) 4.39(0.07) 4.37(0.06) 4.36(0.04) 4.39(0.05) 4.41(0.04) 4.44(0.04) 4.43(0.03) 4.47(0.05) 4.39(0.11) 4.32(0.16) 4.34(0.10) 4.42(0.09) 4.41(0.05) 4.43(0.04) 4.42(0.06) 4.44(0.05) 4.37(0.08) 4.38(0.10) 4.33(0.08) 4.36(0.09) 4.41(0.07) 4.46(0.06) 4.45(0.04) 4.46(0.04) 4.43(0.07) 4.37(0.11) 4.32(0.06) 4.40(0.10) 4.47(0.07) 4.49(0.06) 4.52(0.04) 4.54(0.04) 4.53(0.03) 4.46(0.08) 4.40(0.07) 4.37(0.08) 4.47(0.11) 4.50(0.03) 4.54(0.05) 4.53(0.05) 4.52(0.03) 4.47(0.05) 4.43(0.05) 4.40(0.07) 4.46(0.09) 4.49(0.04) 4.53(0.05) 4.52(0.04) 4.56(0.05) 4.53(0.05) 4.53(0.02) 4.45(0.07) 4.53(0.08) 4.55(0.07) 4.58(0.03) 4.59(0.03) 4.61(0.02) 4.59(0.03) 4.60(0.03) 4.55(0.06) 4.48(0.07) 4.43(0.05) 4.48(0.05) 4.54(0.07) 4.59(0.05) 4.61(0.04) 4.62(0.03) 4.62(0.04) 4.63(0.06) 4.56(0.07) 4.50(0.07) 4.50(0.04) 4.54(0.07) 4.58(0.07) 4.61(0.05) 4.62(0.03) 4.64(0.03) 4.60(0.05) 4.52(0.09) 4.49(0.06) 4.54(0.07) 4.62(0.09) 4.64(0.03) 4.63(0.03) 4.52(0.13) 4.49(0.06) 4.46(0.05) 4.51(0.06) 4.56(0.07) 4.59(0.06) 4.65(0.07) 4.62(0.06) 4.56(0.10) 4.50(0.07) 4.57(0.12) 4.60(0.05) 4.63(0.07) 4.64(0.06) 4.68(0.05) 4.66(0.07) 4.62(0.06) 4.56(0.10) 4.55(0.05) 4.58(0.06) 4.63(0.09) 4.65(0.07) 4.68(0.06) 4.66(0.07) 4.66(0.04) 4.62(0.08) 4.54(0.09) 4.54(0.03) 4.58(0.08) 4.64(0.05) 4.68(0.08) 4.70(0.03) 4.69(0.03) 4.71(0.06) 4.62(0.09) 4.60(0.09) 4.56(0.06) 4.62(0.08) 4.62(0.03) 4.66(0.05) 4.66(0.01) 4.69(0.03) 4.66(0.06) 4.61(0.05) 4.56(0.07) 4.61(0.10) 4.64(0.05) 4.69(0.06) 4.71(0.02) 4.71(0.02) 4.60(0.11) 4.54(0.10) 4.53(0.03) 4.62(0.11) 4.66(0.04) 4.69(0.04) 4.69(0.03) 4.75(0.07) 4.69(0.08) 4.61(0.08) 4.54(0.11) 4.63(0.13) 4.64(0.06) 4.70(0.11) 4.71(0.05) 4.73(0.06) 4.66(0.10) 4.60(0.10) 4.58(0.04) 4.62(0.08) 4.66(0.05) 4.71(0.07) 4.73(0.09) 4.75(0.06) 4.73(0.06) 4.65(0.08) 4.60(0.08) 4.56(0.06) 4.63(0.07) 4.67(0.05) 4.73(0.06) 4.74(0.08) 4.74(0.04) 4.68(0.06) 4.63(0.08) 4.59(0.09) 4.65(0.13) 4.67(0.05) 4.70(0.12) 4.72(0.04) 4.73(0.04) 4.76(0.05) 4.72(0.06) 4.65(0.07) 4.61(0.05) 4.67(0.09) 4.70(0.03) 4.77(0.10) 4.76(0.05) 4.77(0.05) 4.76(0.06) 4.70(0.07) 4.68(0.05) 4.71(0.06) 4.71(0.04) 4.73(0.03) 4.75(0.04) 4.76(0.01) 4.79(0.04) 4.71(0.10) 4.66(0.07) 4.61(0.08) 4.66(0.07) 4.70(0.05) 4.74(0.06) 4.72(0.07) 4.72(0.04) 4.71(0.05) 4.73(0.05) 4.65(0.10) 4.61(0.07) 4.60(0.05) 4.66(0.11) 4.66(0.06) 4.70(0.07) 4.72(0.06) 4.75(0.03) 4.72(0.06) 4.69(0.07) 4.61(0.12) 4.64(0.11) 4.70(0.08) 4.74(0.05) 4.73(0.02) 4.77(0.05) 4.72(0.07) 4.64(0.09) 4.60(0.07) 4.72(0.13) 4.72(0.02) 4.78(0.06) 4.80(0.03) 4.83(0.04) 4.76(0.09) 4.73(0.07) 4.71(0.05) 4.75(0.06) 4.77(0.03) 4.81(0.05) 4.80(0.02) 4.84(0.04) 4.79(0.08) 4.74(0.07) 4.69(0.06) 4.75(0.08) 4.79(0.04) 4.84(0.06) 4.87(0.05) 4.86(0.03) 4.78(0.09) 4.80(0.05) 4.82(0.03) 4.88(0.08) 4.89(0.04) 4.91(0.06) 4.91(0.04) 4.88(0.09) 4.62(0.28) 4.64(0.10) 4.71(0.13) 4.76(0.08) 4.80(0.05) 4.82(0.05) 4.82(0.03) 4.82(0.05) 4.79(0.06) 4.80(0.08) 4.82(0.06) 4.90(0.09) 4.90(0.06) 4.95(0.06) 4.95(0.05) 4.91(0.05) 4.82(0.11) 4.81(0.05) 4.85(0.05) 4.90(0.08) 4.92(0.04) 4.95(0.04) 4.92(0.09) 4.89(0.05) 4.83(0.12) 4.86(0.11) 4.90(0.06) 4.93(0.07) 4.96(0.05) 4.98(0.08) 4.95(0.10) 4.88(0.07) 4.86(0.04) 4.89(0.08) 4.92(0.05) 4.96(0.07) 4.98(0.06) 5.02(0.06) 5.02(0.10) 4.96(0.08) 4.93(0.06) 4.90(0.04) 4.95(0.05) 4.98(0.07) 5.01(0.04) 5.01(0.04) 5.03(0.04) 4.98(0.04) 4.96(0.06) 4.90(0.07) 4.96(0.06) 4.97(0.02) 5.01(0.05) 4.99(0.03) 5.03(0.04) 4.99(0.07) 4.91(0.08) 4.82(0.12) 4.86(0.11) 4.90(0.06) 4.95(0.10) 4.94(0.05) 4.98(0.04) 4.94(0.11) 4.91(0.10) 4.88(0.08) 4.95(0.13) 4.96(0.03) 4.99(0.04) 4.99(0.02) 5.00(0.04) 4.95(0.10) 4.94(0.06) 4.86(0.10) 4.94(0.15) 4.96(0.04) 4.99(0.06) 4.97(0.04) 4.98(0.04) 4.99(0.07) 4.96(0.05) 4.89(0.08) 4.86(0.03) 4.92(0.10) 4.95(0.08) 4.98(0.03) 5.02(0.05) 5.06(0.07) 4.99(0.08) 4.91(0.11) 4.89(0.15) 4.97(0.09) 4.94(0.12) 4.95(0.05) 4.92(0.06) 4.93(0.18) 4.95(0.13) 4.91(0.08) 5.00(0.11) 5.02(0.04) 5.07(0.08) 5.09(0.04) 5.06(0.05) 4.97(0.09) 4.95(0.05) 4.98(0.07) 5.02(0.08) 5.07(0.06) 5.17(0.15) 5.19(0.05) 5.15(0.15) 5.04(0.16) 5.01(0.08) 5.06(0.06) 5.08(0.04) 5.12(0.04) 5.14(0.04) 5.16(0.04) 5.09(0.08) 5.06(0.04) 5.04(0.04) 5.08(0.05) 5.11(0.03) 5.15(0.04) 5.14(0.04) 5.14(0.02) 5.07(0.11) 5.04(0.06) 5.03(0.04) 5.06(0.08) 5.08(0.04) 5.11(0.07) 5.16(0.07) 5.20(0.07) 5.12(0.11) 5.07(0.05) 5.14(0.08) 5.17(0.04) 5.23(0.07) 5.24(0.02) 5.32(0.09) 5.25(0.09) 5.17(0.29) 5.07(0.13) 5.11(0.12) 5.16(0.06) 5.21(0.09) 5.20(0.05) 5.23(0.06) 5.23(0.07) 5.19(0.06) 5.12(0.08) 5.07(0.07) 5.16(0.09) 5.17(0.02) 5.24(0.07) 5.22(0.04) 5.23(0.04) 5.19(0.07) 5.15(0.10) 5.16(0.05) 5.24(0.11) 5.25(0.04) 5.32(0.10) 5.34(0.07) 5.29(0.08) 5.19(0.11) 5.16(0.03) 5.26(0.11) 5.31(0.07) 5.33(0.04) 5.37(0.05) 5.37(0.05) 5.33(0.05) 5.31(0.06) 5.26(0.06) 5.32(0.08) 5.33(0.03) 5.39(0.07) 5.40(0.02) 5.42(0.03) 5.36(0.08) 5.29(0.07) 5.25(0.06) 5.30(0.09) 5.33(0.04) 5.38(0.08) 5.36(0.06) 5.36(0.03) 5.39(0.04) 5.33(0.07) 5.26(0.07) 5.28(0.09) 5.34(0.06) 5.39(0.05) 5.39(0.02) 5.39(0.02) 5.40(0.05) 5.43(0.05) 5.38(0.08) 5.33(0.08) 5.26(0.11) 5.29(0.10) 5.32(0.06) 5.38(0.08) 5.39(0.03) 5.41(0.03) 5.36(0.06) 5.32(0.04) 5.30(0.07) 5.28(0.03) 5.30(0.03) 5.36(0.08) 5.36(0.02) 5.40(0.04) 5.41(0.03) 5.46(0.05) 5.38(0.09) 5.33(0.07) 5.33(0.04) 5.37(0.07) 5.42(0.05) 5.46(0.05) 5.47(0.06) 5.43(0.06) 5.40(0.06) 5.35(0.08) 5.39(0.10) 5.46(0.07) 5.54(0.10) 5.56(0.04) 5.55(0.03) 5.49(0.06) 5.43(0.07) 5.47(0.07) 5.51(0.05) 5.54(0.05) 5.61(0.08) 5.60(0.03) 5.59(0.03) 5.50(0.12) 5.45(0.06) 5.45(0.05) 5.51(0.07) 5.52(0.03) 5.60(0.09) 5.59(0.04) 5.60(0.04) 5.63(0.06) 5.53(0.11) 5.44(0.11) 5.41(0.04) 5.44(0.03) 5.52(0.09) 5.56(0.04) 5.58(0.03) 5.55(0.05) 5.48(0.07) 5.44(0.10) 5.48(0.10) 5.50(0.07) 5.55(0.06) 5.58(0.03) 5.62(0.04) 5.54(0.13) 5.49(0.09) 5.47(0.07) 5.55(0.12) 5.56(0.05) 5.61(0.10) 5.64(0.05) 5.64(0.06) 5.56(0.10) 5.50(0.06) 5.50(0.09) 5.53(0.09) 5.61(0.09) 5.50(0.18) 4.93(0.58) 4.58(0.37) 4.67(0.12) 4.76(0.12) 4.87(0.11) 4.90(0.08) 4.93(0.05) 4.96(0.03) 4.98(0.05) 4.97(0.06) 4.98(0.09) 4.95(0.07) 4.98(0.10) 4.93(0.09) 4.89(0.16) 4.93(0.16) 4.94(0.16) 4.86(0.18) 4.78(0.11) 4.83(0.09) 4.92(0.12) 4.98(0.06) 5.05(0.09) 5.08(0.08) 5.11(0.05) 5.13(0.04) 5.16(0.08) 5.21(0.05) 5.22(0.03) 5.26(0.04) 5.24(0.08) 5.29(0.09) 5.26(0.03) 5.30(0.05) 5.24(0.08) 5.23(0.04) 5.16(0.07) 5.25(0.10) 5.24(0.04) 5.26(0.03) 5.27(0.03) 5.33(0.06) 5.32(0.02) 5.36(0.05) 5.35(0.03) 5.37(0.03) 5.33(0.05) 5.39(0.09) 5.43(0.04) 5.48(0.08) 5.47(0.05) 5.50(0.04) 5.50(0.04) 5.51(0.03) 5.52(0.03) 5.50(0.03) 5.45(0.10) 5.46(0.09) 5.51(0.08) 5.52(0.08) 5.54(0.05) 5.54(0.05) 5.52(0.07) 5.51(0.05) 5.56(0.05) 5.50(0.07) 5.52(0.07) 5.44(0.08) 5.50(0.06) 5.52(0.07) 5.56(0.03) 5.57(0.02) 5.61(0.05) 5.57(0.06) 5.62(0.05) 5.59(0.08) 5.55(0.05) 5.51(0.04) 5.53(0.13) 5.52(0.04) 5.53(0.04) 5.55(0.03) 5.63(0.09) 5.64(0.08) 5.56(0.09) 5.46(0.11) 5.47(0.13) 5.41(0.10) 5.49(0.09) 5.51(0.10) 5.54(0.06) 5.53(0.05) 5.61(0.11) 5.68(0.09) 5.71(0.05) 5.71(0.03) 5.79(0.09) 5.74(0.06) 5.70(0.06) 5.63(0.09) 5.65(0.07) 5.67(0.04) 5.73(0.06) 5.73(0.03) 5.74(0.05) 5.75(0.04) 5.78(0.05) 5.78(0.06) 5.77(0.06) 5.71(0.08) 5.70(0.05) 5.71(0.04) 5.70(0.05) 5.70(0.05) 5.76(0.06) 5.76(0.15) 5.73(0.07) 5.70(0.05) 5.70(0.06) 5.75(0.06) 5.76(0.03) 5.80(0.07) 5.82(0.05) 5.88(0.07) 5.87(0.04) 5.84(0.04) 5.81(0.06) 5.83(0.08) 5.86(0.06) 5.91(0.09) 5.88(0.06) 5.88(0.03) 5.90(0.04) 5.88(0.02) 5.89(0.04) 5.84(0.06) 5.79(0.07) 5.76(0.04) 5.79(0.07) 5.81(0.06) 5.83(0.03) 5.85(0.04) 5.85(0.04) 5.85(0.07) 5.78(0.08) 5.71(0.08) 5.74(0.08) 5.80(0.07) 5.81(0.03) 5.81(0.03) 5.85(0.04) 5.86(0.05) 5.84(0.05) 5.78(0.08) 5.73(0.06) 5.77(0.06) 5.78(0.05) 5.83(0.06) 5.84(0.04) 5.86(0.04) 5.83(0.05) 5.81(0.06) 5.78(0.04) 5.81(0.06) 5.83(0.04) 5.86(0.07) 5.89(0.04) 5.90(0.05) 5.94(0.07) 5.93(0.06) 5.91(0.08) 5.86(0.05) 5.83(0.06) 5.87(0.06) 5.90(0.05) 5.92(0.03) 5.95(0.03) 5.96(0.05) 5.98(0.04) 5.93(0.07) 5.90(0.06) 5.85(0.07) 5.91(0.07) 5.93(0.05) 5.96(0.05) 5.95(0.02) 5.96(0.02) 5.95(0.03) 5.93(0.04) 5.85(0.10) 5.87(0.04) 5.90(0.05) 5.87(0.05) 5.88(0.07) 5.93(0.06) 5.96(0.04) 5.93(0.04) 5.88(0.11) 5.82(0.06) 5.85(0.04) 5.89(0.05) 5.91(0.03) 6.00(0.11) 6.12(0.12) 6.05(0.08) 5.98(0.13) 5.89(0.14) 5.88(0.03) 5.95(0.16) 5.98(0.03) 6.03(0.07) 6.04(0.03) 6.06(0.05) 5.98(0.09) 5.92(0.07) 5.88(0.07) 5.94(0.08) 5.99(0.07) 6.04(0.06) 6.05(0.03) 6.03(0.06) 5.93(0.10) 5.90(0.05) 5.94(0.12) 5.98(0.04) 5.98(0.07) 6.01(0.07) 6.03(0.04) 6.02(0.06) 5.96(0.06) 5.90(0.09) 5.87(0.04) 5.93(0.08) 5.93(0.05) 5.94(0.05) 5.98(0.04) 6.02(0.08) 5.97(0.07) 5.92(0.08) 5.90(0.03) 5.97(0.12) 5.99(0.06) 6.02(0.05) 6.05(0.04) 6.07(0.10) 6.00(0.07) 5.95(0.07) 5.94(0.08) 6.01(0.07) 6.05(0.05) 6.11(0.06) 6.13(0.04) 6.14(0.09) 6.04(0.10) 6.01(0.05) 6.02(0.07) 6.04(0.04) 6.05(0.03) 6.07(0.03) 6.07(0.03) 6.08(0.01) 6.02(0.08) 5.96(0.07) 5.95(0.02) 6.02(0.08) 6.00(0.04) 6.02(0.03) 5.98(0.05) 5.99(0.03) 6.00(0.05) 5.99(0.04) 5.90(0.15) 5.85(0.05) 5.89(0.10) 5.96(0.08) 6.04(0.11) 6.09(0.06) 6.14(0.05) 6.13(0.06) 6.04(0.12) 5.98(0.06) 5.95(0.05) 6.03(0.13) 6.04(0.04) 6.12(0.11) 6.12(0.04) 6.13(0.03) 6.08(0.08) 5.97(0.12) 6.01(0.05) 6.01(0.09) 6.01(0.06) 6.02(0.03) 5.94(0.10) 6.00(0.11) 5.97(0.05) 5.93(0.09) 5.94(0.08) 5.99(0.08) 6.03(0.08) 6.06(0.05) 6.05(0.05) 6.06(0.07) 6.07(0.04) 6.08(0.09) 6.01(0.09) 5.97(0.05) 6.01(0.09) 6.05(0.06) 6.08(0.06) 6.10(0.02) 6.08(0.05) 6.08(0.01) 6.07(0.06) 6.01(0.07) 5.97(0.08) 5.96(0.04) 6.02(0.07) 6.01(0.04) 6.04(0.04) 6.02(0.04) 6.03(0.03) 6.03(0.05) 5.97(0.08) 5.94(0.10) 5.91(0.04) 5.95(0.07) 5.98(0.05) 6.01(0.03) 6.03(0.06) 6.07(0.06) 6.03(0.05) 5.99(0.11) 5.95(0.06) 6.01(0.09) 6.07(0.11) 6.09(0.03) 6.09(0.02) 6.10(0.03) 6.03(0.09) 6.04(0.04) 6.07(0.06) 6.12(0.08) 6.15(0.04) 6.14(0.06) 6.15(0.07) 6.06(0.09) 5.99(0.10) 5.95(0.05) 6.03(0.11) 6.06(0.03) 6.10(0.06) 6.05(0.05) 6.09(0.04) 6.07(0.10) 6.00(0.07) 5.98(0.03) 6.04(0.09) 6.05(0.05) 6.09(0.05) 6.08(0.01) 6.14(0.06) 6.09(0.07) 6.04(0.08) 6.00(0.04) 6.06(0.09) 6.07(0.05) 6.12(0.06) 6.14(0.03) 6.18(0.05) 6.17(0.06) 6.08(0.14) 5.88(0.21) 5.83(0.14) 5.77(0.14) 5.80(0.09) 5.79(0.11) 5.81(0.05) 5.86(0.06) 5.89(0.06) 5.91(0.04) 5.88(0.03) 5.90(0.06) 5.61(0.33) 5.32(0.40) 5.16(0.25) 5.09(0.11) 5.05(0.06) 5.10(0.18) 5.11(0.20) 5.19(0.15) 5.22(0.09) 5.20(0.17) 5.24(0.13) 5.31(0.09) 5.37(0.07) 5.45(0.14) 5.47(0.06) 5.53(0.08) 5.55(0.06) 5.66(0.11) 5.67(0.08) 5.80(0.13) 5.78(0.06) 5.81(0.05) 5.78(0.04) 5.82(0.04) 5.77(0.07) 5.70(0.10) 5.67(0.05) 5.70(0.06) 5.73(0.05) 5.76(0.04) 5.81(0.06) 5.79(0.07) 5.83(0.07) 5.84(0.03) 5.89(0.07) 5.83(0.12) 5.83(0.04) 5.82(0.04) 5.86(0.04) 5.86(0.03) 5.87(0.03) 5.77(0.10) 5.73(0.14) 5.73(0.08) 5.57(0.26) 5.39(0.27) 5.22(0.17) 5.22(0.06) 5.30(0.18) 5.37(0.11) 5.42(0.07) 5.49(0.07) 5.53(0.06) 5.61(0.10) 5.73(0.14) 5.74(0.12) 5.82(0.12) 5.83(0.05) 5.87(0.05) 5.91(0.06) 5.92(0.06) 5.92(0.05) 5.87(0.06) 5.87(0.04) 5.89(0.05) 5.92(0.04) 5.93(0.03) 5.96(0.05) 5.97(0.02) 5.96(0.04) 5.90(0.06) 5.75(0.17) 5.39(0.43) 5.20(0.20) 5.13(0.17) 4.77(0.49) 4.35(0.48) 4.13(0.24) 3.99(0.16) 3.89(0.14) 3.88(0.07) 3.92(0.09) 3.95(0.04) 3.98(0.08) 4.00(0.08) 4.00(0.04) 3.96(0.18) 4.00(0.12) 3.94(0.36) 3.61(0.36) 3.67(0.15) 3.73(0.16) 3.77(0.26) 3.57(0.25) 3.70(0.62) 3.76(0.14) 3.52(0.31) 3.48(0.15) 3.37(0.23) 3.40(0.20) 3.51(0.22) 3.54(0.08) 3.62(0.10) 3.67(0.08) 3.65(0.11)
++ Max displacement in automask = 6.18 (mm) at sub-brick 977
++ Max delta displ  in automask = 0.62 (mm) at sub-brick 1085
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb03.GB20.r02.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB20_unif_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB20_unif_ns+tlrc -dxyz 2.5 -source pb02.GB20.r02.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB20_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB20.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 708.6 sec
3dNwarpApply -master MPRAGE.GB20_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB20_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb03.GB20.r03.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB20.r03.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 83217 voxels
 + 12734 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.770  pitch=+0.498  yaw=-1.763  dS=-1.830  dL=-0.273  dP=-0.345
++ Mean: roll=+0.955  pitch=+0.679  yaw=-1.473  dS=-1.276  dL=-0.110  dP=-0.157
++ Max : roll=+1.071  pitch=+0.990  yaw=-0.971  dS=-0.607  dL=+0.017  dP=+0.194
++ Max displacements (mm) for each sub-brick:
 3.91(0.00) 3.86(0.06) 3.90(0.05) 3.93(0.08) 3.96(0.04) 3.90(0.06) 3.93(0.04) 3.90(0.05) 3.90(0.04) 3.88(0.08) 3.83(0.06) 3.81(0.04) 3.86(0.10) 3.88(0.03) 3.90(0.05) 3.93(0.04) 3.98(0.08) 3.99(0.05) 3.99(0.04) 3.97(0.09) 3.90(0.10) 3.91(0.05) 3.96(0.08) 4.01(0.05) 4.04(0.06) 4.02(0.04) 4.03(0.05) 4.06(0.07) 4.07(0.06) 4.05(0.08) 4.03(0.19) 4.04(0.08) 4.08(0.13) 4.07(0.05) 4.12(0.06) 4.14(0.05) 4.22(0.08) 4.21(0.02) 4.21(0.05) 4.13(0.08) 4.13(0.07) 4.13(0.05) 4.19(0.06) 4.19(0.04) 4.21(0.04) 4.19(0.08) 4.15(0.05) 4.12(0.09) 4.14(0.08) 4.17(0.05) 4.20(0.05) 4.21(0.04) 4.21(0.03) 4.22(0.04) 4.19(0.06) 4.10(0.14) 4.09(0.06) 4.10(0.03) 4.13(0.07) 4.15(0.03) 4.20(0.06) 4.24(0.05) 4.24(0.05) 4.25(0.05) 4.21(0.06) 4.20(0.04) 4.25(0.10) 4.27(0.04) 4.31(0.05) 4.32(0.05) 4.31(0.06) 4.28(0.10) 4.23(0.08) 4.21(0.06) 4.26(0.15) 4.28(0.06) 4.30(0.09) 4.31(0.06) 4.35(0.07) 4.38(0.05) 4.28(0.11) 4.19(0.11) 4.20(0.07) 4.24(0.05) 4.26(0.03) 4.29(0.03) 4.30(0.05) 4.31(0.03) 4.26(0.06) 4.22(0.07) 4.19(0.05) 4.23(0.09) 4.24(0.03) 4.27(0.04) 4.30(0.05) 4.33(0.05) 4.28(0.09) 4.23(0.08) 4.16(0.07) 4.21(0.08) 4.25(0.09) 4.29(0.06) 4.30(0.02) 4.31(0.03) 4.30(0.02) 4.31(0.02) 4.19(0.14) 4.13(0.07) 4.16(0.06) 4.21(0.06) 4.24(0.04) 4.27(0.03) 4.23(0.04) 4.24(0.03) 4.19(0.07) 4.14(0.06) 4.13(0.05) 4.17(0.10) 4.21(0.04) 4.22(0.04) 4.24(0.03) 4.25(0.04) 4.25(0.05) 4.22(0.06) 4.10(0.14) 4.12(0.12) 4.16(0.08) 4.21(0.11) 4.21(0.06) 4.21(0.06) 4.19(0.05) 4.19(0.05) 4.18(0.09) 4.15(0.06) 4.13(0.03) 4.13(0.07) 4.15(0.03) 4.17(0.03) 4.14(0.03) 4.12(0.03) 4.11(0.05) 4.12(0.02) 4.13(0.06) 4.08(0.06) 4.05(0.06) 4.01(0.05) 4.06(0.06) 4.12(0.06) 4.13(0.02) 4.17(0.04) 4.20(0.05) 4.19(0.04) 4.12(0.07) 4.07(0.06) 4.07(0.06) 4.13(0.07) 4.12(0.03) 4.18(0.06) 4.18(0.06) 4.20(0.04) 4.13(0.09) 4.09(0.05) 4.12(0.06) 4.17(0.06) 4.20(0.05) 4.22(0.03) 4.26(0.05) 4.22(0.05) 4.17(0.10) 4.13(0.08) 4.21(0.09) 4.29(0.09) 4.33(0.04) 4.37(0.08) 4.35(0.05) 4.27(0.09) 4.18(0.10) 4.17(0.07) 4.19(0.05) 4.24(0.08) 4.26(0.06) 4.27(0.03) 4.28(0.03) 4.23(0.06) 4.17(0.10) 4.14(0.06) 4.21(0.09) 4.22(0.02) 4.21(0.03) 4.22(0.04) 4.22(0.03) 4.23(0.05) 4.24(0.06) 4.21(0.07) 4.13(0.12) 4.09(0.16) 4.12(0.06) 4.19(0.10) 4.20(0.03) 4.23(0.08) 4.25(0.04) 4.29(0.04) 4.30(0.04) 4.25(0.05) 4.20(0.09) 4.21(0.08) 4.28(0.08) 4.30(0.07) 4.27(0.09) 4.29(0.03) 4.30(0.08) 4.21(0.10) 4.17(0.09) 4.19(0.12) 4.22(0.07) 4.23(0.07) 4.24(0.05) 4.26(0.07) 4.28(0.08) 4.26(0.05) 4.21(0.08) 4.18(0.08) 4.23(0.06) 4.23(0.03) 4.31(0.09) 4.31(0.03) 4.32(0.04) 4.27(0.08) 4.20(0.09) 4.15(0.06) 4.16(0.07) 4.20(0.05) 4.23(0.06) 4.25(0.05) 4.26(0.04) 4.26(0.05) 4.24(0.04) 4.20(0.08) 4.14(0.07) 4.14(0.08) 4.16(0.07) 4.18(0.04) 4.17(0.03) 4.19(0.02) 4.16(0.05) 4.15(0.03) 4.14(0.07) 4.11(0.05) 4.09(0.05) 4.11(0.10) 4.14(0.03) 4.15(0.06) 4.16(0.04) 4.16(0.06) 4.14(0.03) 4.09(0.07) 4.04(0.13) 4.00(0.09) 4.05(0.07) 4.06(0.05) 4.10(0.05) 4.10(0.02) 4.10(0.03) 4.11(0.06) 4.06(0.06) 4.05(0.08) 4.06(0.09) 4.09(0.07) 4.11(0.06) 4.13(0.03) 4.13(0.05) 4.13(0.02) 4.10(0.04) 4.07(0.05) 3.99(0.09) 4.01(0.05) 4.01(0.03) 4.02(0.02) 4.06(0.04) 4.08(0.04) 4.09(0.06) 4.03(0.07) 4.01(0.08) 4.12(0.21) 4.11(0.06) 4.09(0.05) 4.09(0.02) 4.10(0.07) 4.08(0.10) 4.03(0.06) 4.01(0.10) 4.01(0.04) 4.03(0.05) 4.08(0.09) 4.12(0.04) 4.15(0.05) 4.16(0.03) 4.16(0.06) 4.12(0.10) 4.07(0.07) 4.08(0.06) 4.12(0.07) 4.15(0.05) 4.17(0.03) 4.20(0.04) 4.24(0.06) 4.21(0.09) 4.11(0.14) 4.11(0.07) 4.13(0.07) 4.16(0.04) 4.18(0.04) 4.22(0.06) 4.17(0.07) 4.10(0.11) 4.04(0.07) 4.07(0.05) 4.12(0.07) 4.11(0.04) 4.15(0.06) 4.17(0.03) 4.15(0.08) 4.12(0.09) 4.14(0.05) 4.17(0.10) 4.22(0.06) 4.22(0.03) 4.26(0.04) 4.25(0.04) 4.24(0.07) 4.17(0.11) 4.17(0.06) 4.21(0.10) 4.25(0.07) 4.28(0.05) 4.30(0.03) 4.30(0.03) 4.25(0.06) 4.20(0.10) 4.24(0.11) 4.25(0.04) 4.27(0.05) 4.29(0.03) 4.29(0.05) 4.26(0.09) 4.16(0.11) 4.13(0.06) 4.18(0.14) 4.20(0.10) 4.25(0.07) 4.26(0.04) 4.28(0.03) 4.22(0.09) 4.18(0.08) 4.17(0.05) 4.24(0.12) 4.24(0.02) 4.29(0.06) 4.30(0.03) 4.33(0.04) 4.31(0.07) 4.26(0.04) 4.25(0.06) 4.31(0.11) 4.30(0.01) 4.33(0.03) 4.37(0.05) 4.35(0.04) 4.29(0.10) 4.24(0.07) 4.25(0.06) 4.28(0.09) 4.29(0.04) 4.29(0.04) 4.30(0.02) 4.28(0.06) 4.25(0.14) 4.18(0.08) 4.18(0.04) 4.20(0.09) 4.25(0.05) 4.24(0.08) 4.27(0.03) 4.27(0.05) 4.29(0.06) 4.22(0.08) 4.18(0.06) 4.14(0.09) 4.19(0.06) 4.18(0.04) 4.22(0.06) 4.23(0.02) 4.26(0.04) 4.23(0.09) 4.15(0.10) 4.15(0.04) 4.18(0.09) 4.19(0.05) 4.20(0.06) 4.21(0.02) 4.21(0.05) 4.19(0.04) 4.17(0.04) 4.15(0.08) 4.11(0.05) 4.10(0.06) 4.09(0.04) 4.11(0.05) 4.11(0.05) 4.08(0.10) 4.09(0.02) 4.11(0.04) 4.08(0.05) 4.02(0.08) 3.98(0.06) 3.98(0.09) 4.05(0.10) 4.07(0.04) 4.10(0.05) 4.07(0.07) 4.06(0.08) 4.06(0.03) 4.10(0.12) 4.12(0.09) 4.14(0.03) 4.19(0.06) 4.17(0.08) 4.13(0.05) 4.09(0.08) 4.13(0.14) 4.15(0.06) 4.19(0.09) 4.21(0.03) 4.18(0.06) 4.09(0.10) 4.03(0.09) 4.07(0.05) 4.10(0.10) 4.14(0.04) 4.15(0.05) 4.20(0.06) 4.14(0.08) 4.11(0.07) 4.09(0.05) 4.14(0.07) 4.14(0.05) 4.16(0.06) 4.15(0.04) 4.18(0.04) 4.14(0.09) 4.07(0.08) 4.04(0.10) 4.08(0.10) 4.11(0.09) 4.11(0.11) 4.17(0.06) 4.20(0.09) 4.19(0.09) 4.13(0.07) 4.12(0.05) 4.16(0.08) 4.22(0.06) 4.22(0.05) 4.28(0.07) 4.29(0.05) 4.22(0.07) 4.15(0.09) 4.19(0.09) 4.22(0.05) 4.26(0.05) 4.28(0.04) 4.30(0.03) 4.28(0.07) 4.19(0.10) 4.16(0.07) 4.20(0.10) 4.22(0.06) 4.25(0.07) 4.25(0.03) 4.26(0.06) 4.23(0.07) 4.17(0.05) 4.17(0.07) 4.20(0.08) 4.27(0.07) 4.27(0.04) 4.32(0.06) 4.29(0.03) 4.28(0.07) 4.22(0.06) 4.21(0.06) 4.22(0.08) 4.27(0.06) 4.27(0.02) 4.27(0.03) 4.28(0.05) 4.23(0.06) 4.16(0.11) 4.13(0.09) 4.18(0.10) 4.17(0.15) 4.20(0.05) 4.21(0.07) 4.22(0.06) 4.20(0.03) 4.16(0.09) 4.10(0.09) 4.09(0.07) 4.14(0.06) 4.18(0.07) 4.21(0.07) 4.23(0.04) 4.23(0.04) 4.20(0.09) 4.09(0.11) 3.98(0.17) 3.99(0.04) 4.04(0.06) 4.11(0.08) 4.18(0.08) 4.18(0.05) 4.14(0.10) 4.09(0.05) 4.07(0.05) 4.11(0.10) 4.14(0.04) 4.17(0.08) 4.17(0.08) 4.10(0.09) 4.06(0.13) 4.04(0.10) 4.10(0.08) 4.11(0.09) 4.11(0.06) 4.12(0.04) 4.09(0.11) 4.04(0.06) 4.03(0.05) 4.10(0.10) 4.14(0.05) 4.16(0.05) 4.20(0.06) 4.22(0.04) 4.16(0.07) 4.12(0.05) 4.10(0.06) 4.13(0.05) 4.12(0.04) 4.15(0.03) 4.15(0.03) 4.18(0.04) 4.14(0.05) 4.14(0.06) 4.16(0.07) 4.21(0.08) 4.26(0.13) 4.29(0.03) 4.32(0.05) 4.31(0.03) 4.27(0.07) 4.21(0.09) 4.15(0.08) 4.18(0.06) 4.21(0.07) 4.22(0.02) 4.22(0.03) 4.17(0.11) 4.13(0.05) 4.11(0.03) 4.16(0.10) 4.18(0.03) 4.20(0.05) 4.22(0.02) 4.21(0.03) 4.16(0.07) 4.15(0.04) 4.19(0.12) 4.25(0.11) 4.21(0.08) 4.19(0.04) 4.19(0.03) 4.22(0.03) 4.18(0.09) 4.19(0.03) 4.19(0.08) 4.23(0.16) 4.29(0.06) 4.30(0.06) 4.32(0.02) 4.32(0.03) 4.33(0.04) 4.30(0.05) 4.22(0.10) 4.20(0.05) 4.24(0.07) 4.29(0.09) 4.31(0.03) 4.34(0.06) 4.38(0.04) 4.36(0.05) 4.26(0.13) 4.21(0.07) 4.15(0.10) 4.10(0.08) 4.14(0.06) 4.16(0.08) 4.22(0.06) 4.15(0.08) 4.10(0.08) 4.07(0.08) 4.10(0.08) 4.13(0.07) 4.15(0.03) 4.17(0.06) 4.20(0.06) 4.20(0.06) 4.18(0.05) 4.19(0.05) 4.24(0.10) 4.27(0.06) 4.32(0.07) 4.33(0.02) 4.34(0.08) 4.28(0.11) 4.25(0.03) 4.28(0.05) 4.31(0.11) 4.32(0.05) 4.33(0.06) 4.37(0.05) 4.28(0.12) 4.26(0.07) 4.22(0.07) 4.27(0.08) 4.25(0.06) 4.27(0.02) 4.26(0.02) 4.30(0.04) 4.28(0.10) 4.22(0.07) 4.23(0.05) 4.25(0.09) 4.33(0.09) 4.37(0.07) 4.38(0.03) 4.36(0.07) 4.34(0.08) 4.29(0.06) 4.28(0.07) 4.30(0.09) 4.36(0.08) 4.37(0.05) 4.38(0.02) 4.35(0.03) 4.35(0.03) 4.28(0.12) 4.21(0.07) 4.19(0.04) 4.20(0.02) 4.25(0.06) 4.28(0.07) 4.33(0.06) 4.29(0.05) 4.27(0.13) 4.23(0.05) 4.26(0.07) 4.21(0.06) 4.24(0.04) 4.24(0.06) 4.26(0.06) 4.29(0.05) 4.26(0.07) 4.24(0.05) 4.25(0.04) 4.26(0.06) 4.28(0.04) 4.31(0.05) 4.32(0.03) 4.32(0.04) 4.34(0.04) 4.28(0.10) 4.28(0.04) 4.29(0.07) 4.35(0.12) 4.39(0.07) 4.41(0.04) 4.44(0.03) 4.47(0.03) 4.43(0.08) 4.39(0.05) 4.38(0.05) 4.52(0.18) 4.49(0.05) 4.49(0.02) 4.50(0.02) 4.54(0.06) 4.44(0.14) 4.40(0.04) 4.37(0.04) 4.39(0.05) 4.39(0.05) 4.42(0.05) 4.44(0.05) 4.46(0.07) 4.41(0.06) 4.34(0.09) 4.30(0.10) 4.35(0.07) 4.39(0.06) 4.41(0.03) 4.40(0.06) 4.38(0.07) 4.31(0.10) 4.32(0.08) 4.36(0.05) 4.39(0.09) 4.43(0.08) 4.46(0.04) 4.50(0.04) 4.52(0.07) 4.45(0.10) 4.43(0.05) 4.42(0.05) 4.45(0.06) 4.47(0.04) 4.54(0.07) 4.55(0.04) 4.59(0.04) 4.51(0.09) 4.45(0.06) 4.46(0.04) 4.47(0.08) 4.49(0.03) 4.48(0.07) 4.49(0.04) 4.49(0.01) 4.47(0.08) 4.40(0.09) 4.40(0.02) 4.41(0.07) 4.44(0.05) 4.46(0.06) 4.48(0.04) 4.52(0.04) 4.52(0.03) 4.44(0.13) 4.42(0.06) 4.46(0.07) 4.52(0.08) 4.55(0.08) 4.59(0.06) 4.59(0.02) 4.60(0.02) 4.54(0.11) 4.46(0.08) 4.46(0.05) 4.49(0.08) 4.52(0.05) 4.54(0.03) 4.58(0.05) 4.56(0.02) 4.51(0.10) 4.44(0.09) 4.44(0.08) 4.43(0.07) 4.49(0.12) 4.50(0.06) 4.51(0.05) 4.46(0.06) 4.49(0.04) 4.48(0.06) 4.45(0.07) 4.41(0.08) 4.43(0.08) 4.49(0.07) 4.50(0.06) 4.54(0.05) 4.55(0.03) 4.53(0.11) 4.49(0.05) 4.45(0.07) 4.48(0.07) 4.53(0.09) 4.53(0.04) 4.54(0.03) 4.51(0.05) 4.52(0.10) 4.41(0.13) 4.38(0.13) 4.39(0.07) 4.47(0.13) 4.46(0.04) 4.52(0.06) 4.54(0.05) 4.50(0.07) 4.41(0.10) 4.40(0.07) 4.38(0.05) 4.41(0.06) 4.43(0.03) 4.46(0.06) 4.51(0.06) 4.50(0.04) 4.47(0.08) 4.43(0.06) 4.45(0.03) 4.45(0.07) 4.44(0.02) 4.45(0.02) 4.45(0.01) 4.48(0.03) 4.44(0.09) 4.45(0.03) 4.46(0.05) 4.50(0.11) 4.54(0.06) 4.55(0.05) 4.55(0.03) 4.53(0.03) 4.48(0.12) 4.43(0.05) 4.42(0.10) 4.42(0.08) 4.46(0.06) 4.49(0.06) 4.49(0.03) 4.51(0.05) 4.48(0.08) 4.42(0.07) 4.40(0.08) 4.43(0.07) 4.44(0.02) 4.48(0.05) 4.49(0.02) 4.51(0.05) 4.49(0.08) 4.45(0.05) 4.43(0.07) 4.46(0.08) 4.47(0.05) 4.49(0.04) 4.47(0.05) 4.49(0.03) 4.48(0.05) 4.49(0.09) 4.47(0.07) 4.49(0.03) 4.53(0.09) 4.58(0.07) 4.60(0.04) 4.61(0.04) 4.62(0.03) 4.59(0.08) 4.51(0.11) 4.50(0.05) 4.54(0.07) 4.58(0.06) 4.58(0.07) 4.60(0.04) 4.61(0.06) 4.61(0.08) 4.52(0.09) 4.49(0.13) 4.44(0.11) 4.42(0.03) 4.45(0.06) 4.51(0.07) 4.52(0.06) 4.51(0.11) 4.48(0.05) 4.48(0.07) 4.51(0.11) 4.53(0.03) 4.56(0.08) 4.60(0.04) 4.54(0.07) 4.53(0.08) 4.52(0.04) 4.59(0.08) 4.63(0.10) 4.61(0.03) 4.63(0.04) 4.65(0.04) 4.63(0.06) 4.60(0.09) 4.56(0.06) 4.57(0.05) 4.59(0.08) 4.62(0.05) 4.66(0.06) 4.66(0.02) 4.64(0.03) 4.57(0.14) 4.52(0.06) 4.46(0.11) 4.48(0.09) 4.49(0.05) 4.52(0.06) 4.55(0.04) 4.50(0.08) 4.46(0.09) 4.45(0.04) 4.48(0.05) 4.50(0.08) 4.55(0.07) 4.56(0.02) 4.53(0.06) 4.49(0.06) 4.46(0.11) 4.51(0.08) 4.52(0.07) 4.55(0.07) 4.55(0.02) 4.56(0.02) 4.48(0.12) 4.43(0.06) 4.43(0.05) 4.49(0.10) 4.50(0.06) 4.55(0.08) 4.55(0.02) 4.57(0.03) 4.52(0.09) 4.49(0.05) 4.46(0.06) 4.50(0.07) 4.53(0.05) 4.56(0.08) 4.60(0.05) 4.62(0.04) 4.56(0.11) 4.50(0.07) 4.48(0.06) 4.53(0.10) 4.56(0.03) 4.58(0.03) 4.60(0.02) 4.62(0.03) 4.62(0.05) 4.56(0.07) 4.54(0.09) 4.52(0.07) 4.55(0.05) 4.58(0.07) 4.60(0.04) 4.62(0.08) 4.67(0.06) 4.64(0.06) 4.64(0.05) 4.59(0.09) 4.66(0.13) 4.72(0.11) 4.74(0.06) 4.76(0.06) 4.70(0.07) 4.67(0.05) 4.62(0.06) 4.56(0.10) 4.54(0.07) 4.60(0.07) 4.62(0.08) 4.66(0.05) 4.66(0.04) 4.63(0.14) 4.60(0.03) 4.60(0.07) 4.60(0.10) 4.64(0.07) 4.64(0.06) 4.70(0.06) 4.64(0.06) 4.63(0.08) 4.61(0.04) 4.64(0.08) 4.66(0.07) 4.70(0.08) 4.73(0.03) 4.77(0.05) 4.72(0.11) 4.71(0.02) 4.70(0.05) 4.75(0.08) 4.72(0.02) 4.74(0.06) 4.73(0.01) 4.74(0.06) 4.74(0.08) 4.70(0.07) 4.68(0.08) 4.69(0.05) 4.72(0.04) 4.73(0.07) 4.76(0.05) 4.77(0.07) 4.78(0.09) 4.71(0.08) 4.68(0.11) 4.69(0.08) 4.74(0.06) 4.76(0.08) 4.81(0.05) 4.82(0.05) 4.80(0.08) 4.75(0.08) 4.73(0.11) 4.73(0.09) 4.78(0.07) 4.80(0.09) 4.85(0.07) 4.88(0.05) 4.87(0.06) 4.80(0.08) 4.77(0.06) 4.77(0.05) 4.80(0.04) 4.84(0.10) 4.87(0.04) 4.89(0.04) 4.86(0.11) 4.79(0.08) 4.75(0.05) 4.77(0.04) 4.79(0.03) 4.78(0.05) 4.80(0.02) 4.75(0.07) 4.68(0.11) 4.66(0.10) 4.68(0.06) 4.72(0.06) 4.73(0.06) 4.75(0.03) 4.76(0.03) 4.72(0.08) 4.70(0.04) 4.72(0.06) 4.77(0.11) 4.75(0.05) 4.77(0.06) 4.77(0.02) 4.78(0.02) 4.78(0.08) 4.71(0.06) 4.70(0.06) 4.72(0.08) 4.72(0.03) 4.74(0.06) 4.73(0.02) 4.70(0.04) 4.73(0.04) 4.72(0.03) 4.70(0.10) 4.66(0.05) 4.70(0.05) 4.72(0.11) 4.75(0.05) 4.75(0.07) 4.76(0.02) 4.74(0.04) 4.71(0.09) 4.64(0.10) 4.65(0.04) 4.66(0.03) 4.62(0.08) 4.59(0.13) 4.51(0.10) 4.36(0.18) 4.08(0.30) 3.79(0.33) 3.66(0.20) 3.63(0.15) 3.61(0.05) 3.57(0.10) 3.58(0.14) 3.63(0.06) 3.66(0.13) 3.68(0.04) 3.68(0.02) 3.69(0.07) 3.67(0.06) 3.69(0.08) 3.68(0.02) 3.68(0.03) 3.65(0.05) 3.66(0.03) 3.65(0.10) 3.66(0.02) 3.63(0.06) 3.63(0.06) 3.64(0.10) 3.49(0.22) 3.44(0.09) 3.17(0.32) 3.14(0.10) 3.07(0.16) 3.03(0.12)
++ Max displacement in automask = 4.89 (mm) at sub-brick 1017
++ Max delta displ  in automask = 0.33 (mm) at sub-brick 1068
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb03.GB20.r03.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB20_unif_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB20_unif_ns+tlrc -dxyz 2.5 -source pb02.GB20.r03.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB20_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB20.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 699.8 sec
3dNwarpApply -master MPRAGE.GB20_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB20_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB20.r01.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB20.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB20.r02.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB20.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB20.r03.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB20.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB20_unif_al_junk_mat.aff12.1D -I
3dNwarpApply -master MPRAGE.GB20_unif_ns+tlrc -dxyz 2.5 -source vr_base_min_outlier+orig -nwarp anat.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base_min_outlier
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB20_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'vr_base_min_outlier+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./final_epi_vr_base_min_outlier+tlrc.BRIK
++ total Elapsed time = 10.4 sec
3dcopy MPRAGE.GB20_unif_ns+tlrc anat_final.GB20
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dAllineate -base final_epi_vr_base_min_outlier+tlrc -allcostX -input anat_final.GB20+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.GB20+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base_min_outlier+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'TOHD(12.9425)'
 +        -cmass x y z shifts =   -0.304    2.018    3.105
 +  shift search range is +/- =   72.225   87.473   73.028
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.114384
   sp   = 0.294675
   mi   = 2.83514
   crM  = 0.0334902
   nmi  = 0.843583
   je   = 2.83514
   hel  = -0.10892
   crA  = 0.183005
   crU  = 0.182197
   lss  = 0.885616
   lpc  = 0.30533
   lpa  = 0.69467
   lpc+ = 0.434321
   lpa+ = 0.82366
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.0
++ ###########################################################
3dNwarpApply -source MPRAGE.GB20_unif+orig -master anat_final.GB20+tlrc -ainterp wsinc5 -nwarp anat.aff.qw_WARP.nii anat.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'MPRAGE.GB20_unif+orig'
++ -master dataset is 'anat_final.GB20+tlrc'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 54.0 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb04.volreg pb04.GB20.r01.volreg+tlrc.HEAD pb04.GB20.r02.volreg+tlrc.HEAD pb04.GB20.r03.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 99.0 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 132.9 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 225.9 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB20.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB20.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)
........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB20.r03.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)
........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB20.r01.blur pb04.GB20.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GB20.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB20.r02.blur pb04.GB20.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GB20.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB20.r03.blur pb04.GB20.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GB20.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -prefix rm.mask_r01 pb05.GB20.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB20.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 3859.444824
 + Used gradual clip level = 3520.247803 .. 4100.515137
 + Number voxels above clip level = 108442
 + Clustering voxels ...
 + Largest cluster has 106025 voxels
 + Clustering voxels ...
 + Largest cluster has 104931 voxels
 + Filled   108 voxels in small holes; now have 105039 voxels
 + Filled     1 voxels in large holes; now have 105040 voxels
 + Clustering voxels ...
 + Largest cluster has 105038 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 440430 voxels
 + Mask now has 105038 voxels
++ 105038 voxels in the mask [out of 545468: 19.26%]
++ first  11 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   1 z-planes are zero [from I]
++ last   14 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb05.GB20.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB20.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 3864.361572
 + Used gradual clip level = 3546.641602 .. 4147.649902
 + Number voxels above clip level = 108133
 + Clustering voxels ...
 + Largest cluster has 105682 voxels
 + Clustering voxels ...
 + Largest cluster has 104858 voxels
 + Filled    98 voxels in small holes; now have 104956 voxels
 + Clustering voxels ...
 + Largest cluster has 104953 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 440515 voxels
 + Mask now has 104953 voxels
++ 104953 voxels in the mask [out of 545468: 19.24%]
++ first  11 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   1 z-planes are zero [from I]
++ last   13 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb05.GB20.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB20.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 3852.372559
 + Used gradual clip level = 3523.481201 .. 4121.964844
 + Number voxels above clip level = 108538
 + Clustering voxels ...
 + Largest cluster has 105922 voxels
 + Clustering voxels ...
 + Largest cluster has 105102 voxels
 + Filled   100 voxels in small holes; now have 105202 voxels
 + Clustering voxels ...
 + Largest cluster has 105199 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 440269 voxels
 + Mask now has 105199 voxels
++ 105199 voxels in the mask [out of 545468: 19.29%]
++ first  11 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   1 z-planes are zero [from I]
++ last   14 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.GB20
++ processing 3 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 105989 survived, 439479 were zero
++ writing result full_mask.GB20...
3dresample -master full_mask.GB20+tlrc -input MPRAGE.GB20_unif_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.GB20
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 151015 survived, 394453 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.GB20...
3dmask_tool -input full_mask.GB20+tlrc mask_anat.GB20+tlrc -inter -prefix mask_epi_anat.GB20
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 45266 clipped, 105869 survived, 394333 were zero
++ writing result mask_epi_anat.GB20...
3dABoverlap -no_automask full_mask.GB20+tlrc mask_anat.GB20+tlrc
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#A=./full_mask.GB20+tlrc.BRIK  B=./mask_anat.GB20+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
105989       151015       151135       105869       120          45146         0.1132     29.8950     1.2247     1.1339     1.3302
3ddot -dodice full_mask.GB20+tlrc mask_anat.GB20+tlrc
tee out.mask_ae_dice.txt
0.82387	
3dresample -master full_mask.GB20+tlrc -prefix ./rm.resam.group -input /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz[0]
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 122282 survived, 423186 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
3ddot -dodice mask_anat.GB20+tlrc mask_group+tlrc
tee out.mask_at_dice.txt
0.894624	
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb05.GB20.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb05.GB20.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GB20.r01.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GB20.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb05.GB20.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb05.GB20.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GB20.r02.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GB20.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb05.GB20.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb05.GB20.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GB20.r03.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GB20.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile motion_demean.1D -set_nruns 3 -split_into_pad_runs mot_demean
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile motion_deriv.1D -set_nruns 3 -split_into_pad_runs mot_deriv
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.4 motion_GB20
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
total number of censored TRs (simple form) = 2
1deval -a motion_GB20_censor.1D -b outcount_GB20_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_GB20_combined_2.1D -show_trs_uncensored encoded
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
3dDeconvolve -input pb06.GB20.r01.scale+tlrc.HEAD pb06.GB20.r02.scale+tlrc.HEAD pb06.GB20.r03.scale+tlrc.HEAD -censor censor_GB20_combined_2.1D -ortvec mot_demean.r01.1D mot_demean_r01 -ortvec mot_demean.r02.1D mot_demean_r02 -ortvec mot_demean.r03.1D mot_demean_r03 -ortvec mot_deriv.r01.1D mot_deriv_r01 -ortvec mot_deriv.r02.1D mot_deriv_r02 -ortvec mot_deriv.r03.1D mot_deriv_r03 -polort 4 -num_stimts 0 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.GB20 -errts errts.GB20 -x1D_stop -bucket stats.GB20
++ 3dDeconvolve extending num_stimts from 0 to 36 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 1096 2192
++ STAT automask has 528190 voxels (out of 545468 = 96.8%)
++ Skipping check for initial transients
++ Input polort=4; Longest run=504.2 s; Recommended minimum polort=4 ++ OK ++
++ Number of time points: 3288 (before censor) ; 3224 (after)
 + Number of parameters:  51 [51 baseline ; 0 signal]
++ Memory required for output bricks = 14,350,172,144 bytes (about 14 billion)
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb06.GB20.r01.scale+tlrc.HEAD pb06.GB20.r02.scale+tlrc.HEAD pb06.GB20.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.GB20_REML -Rvar stats.GB20_REMLvar \
 -Rfitts fitts.GB20_REML -Rerrts errts.GB20_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (3224x51):  6.67586  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (3224x51):  6.67586  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (3224x36):  5.53125  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (3224x15):  1.19713  ++ VERY GOOD ++
++ 3dDeconvolve exits: -x1D_stop option was invoked
3dTproject -polort 0 -input pb06.GB20.r01.scale+tlrc.HEAD pb06.GB20.r02.scale+tlrc.HEAD pb06.GB20.r03.scale+tlrc.HEAD -censor censor_GB20_combined_2.1D -cenmode ZERO -ort X.nocensor.xmat.1D -prefix errts.GB20.tproject
++ 3dTproject: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ have 3 input dataset names
++ Auto-catenated dataset has 3 runs
++ input time points = 3288 ; censored = 64 ; remaining = 3224
++ Setting up regressors
++ 3 Blocks * 1 polynomials -- 3 polort regressors
 + -- 51 other fixed ort regressors
++ 3224 retained time points MINUS 54 regressors ==> 3170 D.O.F. left
++ no -mask option ==> processing all 545468 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 29917 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./errts.GB20.tproject+tlrc.BRIK
++ ===== clock time = 16m 28s 623ms
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
-- no warnings for correlation matrix (cut = 0.400) --
1d_tool.py -show_df_info -infile X.xmat.1D
tee out.df_info.txt
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \

initial DF                   : 3288 : 100.0%

DF used for regs of interest :    0 :   0.0%
DF used for censoring        :   64 :   1.9%
DF used for polort           :   15 :   0.5%
DF used for motion           :   36 :   1.1%
total DF used                :  115 :   3.5%

final DF                     : 3173 :  96.5%

3dTcat -prefix all_runs.GB20 pb06.GB20.r01.scale+tlrc.HEAD pb06.GB20.r02.scale+tlrc.HEAD pb06.GB20.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 1816.3 s
3dTstat -mean -prefix rm.signal.all all_runs.GB20+tlrc[2..2088,2092..2161,2193..3259]
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.GB20.tproject+tlrc[2..2088,2092..2161,2193..3259]
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -expr a/b -prefix TSNR.GB20
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.GB20+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.GB20.tproject+tlrc
++ 3dTnorm: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.GB20+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 105989 voxels survive the mask
3dTstat -sos -prefix - mean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.0733936
3dmaskave -quiet -mask full_mask.GB20+tlrc errts.GB20.tproject+tlrc
++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 105989 voxels survive the mask
3dTcorr1D -prefix corr_brain errts.GB20.tproject+tlrc mean.errts.1D
++ 3dTcorr1D: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + reading dataset file errts.GB20.tproject+tlrc
 + reading 1D file mean.errts.1D
 + loading dataset ./errts.GB20.tproject+tlrc.BRIK into memory
++ Start correlations: 545468 voxels X 1 time series(3288); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 29917 voxels skipped because were constant in time
++ Wrote dataset: ./corr_brain+tlrc.BRIK
3dTstat -sum -prefix sum_baseline.1D X.nocensor.xmat.1D
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_baseline.1D
touch blur_est.GB20.1D
mkdir files_ACF
touch blur.epits.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 2..1095 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB20+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r01.1D all_runs.GB20+tlrc[2..1095]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 105869
++ detrending start: 75 baseline funcs, 1094 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 17.61 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r01.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 1096..2088,2092..2161 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB20+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r02.1D all_runs.GB20+tlrc[1096..2088,2092..2161]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 105869
++ detrending start: 73 baseline funcs, 1063 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 17.74 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r02.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 2193..3259 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB20+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r03.1D all_runs.GB20+tlrc[2193..3259]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 105869
++ detrending start: 73 baseline funcs, 1067 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 17.61 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r03.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits FWHM blurs: 0 0 0 0
average epits FWHM blurs: 0 0 0 0
echo 0 0 0 0   # epits FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits ACF blurs: 0.894651 3.46995 10.6826 8.41714
average epits ACF blurs: 0.894651 3.46995 10.6826 8.41714
echo 0.894651 3.46995 10.6826 8.41714   # epits ACF blur estimates
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 2..1095 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB20+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.GB20.tproject+tlrc[2..1095]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 105869
++ detrending start: 75 baseline funcs, 1094 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 17.53 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 1096..2088,2092..2161 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB20+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.GB20.tproject+tlrc[1096..2088,2092..2161]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 105869
++ detrending start: 73 baseline funcs, 1063 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 17.68 mm
