echo auto-generated by afni_proc.py, Fri Jan 20 08:00:10 2023
auto-generated by afni_proc.py, Fri Jan 20 08:00:10 2023
echo (version 7.17, July 16, 2021)
(version 7.17, July 16, 2021)
echo execution started: `date`
date
execution started: Fri Jan 20 08:00:11 AM KST 2023
afni -ver
Precompiled binary linux_ubuntu_16_64: Jul 28 2021 (Version AFNI_21.2.04 'Nerva')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   27 Jul 2021
if ( 0 ) then
if ( 0 > 0 ) then
set subj = GB21
endif
set output_dir = /mnt/ext5/GA/fmri_data/preproc_data/GB21
if ( -d /mnt/ext5/GA/fmri_data/preproc_data/GB21 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir -p /mnt/ext5/GA/fmri_data/preproc_data/GB21
mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB21/stimuli
3dcopy /mnt/ext5/GA/fmri_data/raw_data/GB21/MPRAGE.GB21.nii /mnt/ext5/GA/fmri_data/preproc_data/GB21/MPRAGE.GB21
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB21/blip_forward /mnt/ext5/GA/fmri_data/raw_data/GB21/dist_AP.GB21.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB21/blip_reverse /mnt/ext5/GA/fmri_data/raw_data/GB21/dist_PA.GB21.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.4 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB21/pb00.GB21.r01.tcat /mnt/ext5/GA/fmri_data/raw_data/GB21/func.GB21.r01.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 337.8 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB21/pb00.GB21.r02.tcat /mnt/ext5/GA/fmri_data/raw_data/GB21/func.GB21.r02.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 221.5 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB21/pb00.GB21.r03.tcat /mnt/ext5/GA/fmri_data/raw_data/GB21/func.GB21.r03.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 265.4 s
set tr_counts = ( 1096 1096 1096 )
cd /mnt/ext5/GA/fmri_data/preproc_data/GB21
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.GB21.r01.tcat+orig.HEAD pb00.GB21.r02.tcat+orig.HEAD pb00.GB21.r03.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 102.4 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 123.6 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 146.0 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB21.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2827.5 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB21.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2827.5 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB21.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2827.5 MB)

-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

3dUnifize -prefix MPRAGE.GB21_unif -GM MPRAGE.GB21+orig
++ 3dUnifize: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + Pre-processing: ADV............................UW[s113701]Gm
++ Output dataset ./MPRAGE.GB21_unif+orig.BRIK
++ ===== Elapsed = 46.9 sec
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB21.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 76512 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB21.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 77012 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB21.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 76584 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 1096 1096 1096 -index_to_run_tr 53
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
set minoutrun = 01
set minouttr = 53
echo min outlier: run 01, TR 53
tee out.min_outlier.txt
min outlier: run 01, TR 53
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.GB21.r01.despike pb00.GB21.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB21.r01.tcat+orig
++ processing all 676284 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #4
++ start OpenMP thread #3
++ start OpenMP thread #10
++ start OpenMP thread #12
++ start OpenMP thread #1
++ start OpenMP thread #13
++ start OpenMP thread #11
++ start OpenMP thread #2
++ start OpenMP thread #14
++ start OpenMP thread #8
++ start OpenMP thread #5
++ start OpenMP thread #6
++ start OpenMP thread #9
++ start OpenMP thread #7
................................................................................................................................................................................................................................................................................................
++ Elapsed despike time =  10s 164ms

++ FINAL: 412531112 data points, 15856465 edits [3.844%], 1010156 big edits [0.245%]
++ Output dataset ./pb01.GB21.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB21.r02.despike pb00.GB21.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB21.r02.tcat+orig
++ processing all 676284 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #6
++ start OpenMP thread #13
++ start OpenMP thread #1
++ start OpenMP thread #2
++ start OpenMP thread #8
++ start OpenMP thread #4
++ start OpenMP thread #12
++ start OpenMP thread #9
++ start OpenMP thread #14
++ start OpenMP thread #11
++ start OpenMP thread #7
++ start OpenMP thread #3
++ start OpenMP thread #10
................................................................................................................................................................................................................................................................................................
++ Elapsed despike time =  10s 256ms

++ FINAL: 412531112 data points, 15298308 edits [3.708%], 983670 big edits [0.238%]
++ Output dataset ./pb01.GB21.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB21.r03.despike pb00.GB21.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB21.r03.tcat+orig
++ processing all 676284 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #12
++ start OpenMP thread #7
++ start OpenMP thread #4
++ start OpenMP thread #5
++ start OpenMP thread #6
++ start OpenMP thread #13
++ start OpenMP thread #1
++ start OpenMP thread #8
++ start OpenMP thread #3
++ start OpenMP thread #11
++ start OpenMP thread #10
++ start OpenMP thread #9
++ start OpenMP thread #14
++ start OpenMP thread #2
................................................................................................................................................................................................................................................................................................
++ Elapsed despike time =  10s 459ms

++ FINAL: 412531112 data points, 19176854 edits [4.649%], 3402341 big edits [0.825%]
++ Output dataset ./pb01.GB21.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.GB21.r01.tshift pb01.GB21.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB21.r02.tshift pb01.GB21.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB21.r03.tshift pb01.GB21.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTstat -median -prefix rm.blip.med.fwd blip_forward+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.fwd+orig.BRIK
3dTstat -median -prefix rm.blip.med.rev blip_reverse+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.rev+orig.BRIK
3dAutomask -apply_prefix rm.blip.med.masked.fwd rm.blip.med.fwd+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.fwd+orig
++ Forming automask
 + Fixed clip level = 5303.666992
 + Used gradual clip level = 5158.696777 .. 5594.670898
 + Number voxels above clip level = 87036
 + Clustering voxels ...
 + Largest cluster has 84009 voxels
 + Clustering voxels ...
 + Largest cluster has 82658 voxels
 + Filled   471 voxels in small holes; now have 83129 voxels
 + Filled  1484 voxels in large holes; now have 84613 voxels
 + Clustering voxels ...
 + Largest cluster has 84611 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 591673 voxels
 + Mask now has 84611 voxels
++ 84611 voxels in the mask [out of 676284: 12.51%]
++ first  15 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first  14 y-planes are zero [from A]
++ last   19 y-planes are zero [from P]
++ first   8 z-planes are zero [from I]
++ last   18 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dAutomask -apply_prefix rm.blip.med.masked.rev rm.blip.med.rev+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.rev+orig
++ Forming automask
 + Fixed clip level = 5337.597656
 + Used gradual clip level = 4699.260742 .. 5641.042480
 + Number voxels above clip level = 84856
 + Clustering voxels ...
 + Largest cluster has 83492 voxels
 + Clustering voxels ...
 + Largest cluster has 81378 voxels
 + Filled   411 voxels in small holes; now have 81789 voxels
 + Filled  1078 voxels in large holes; now have 82867 voxels
 + Clustering voxels ...
 + Largest cluster has 82861 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 593423 voxels
 + Mask now has 82861 voxels
++ 82861 voxels in the mask [out of 676284: 12.25%]
++ first  15 x-planes are zero [from R]
++ last   16 x-planes are zero [from L]
++ first  17 y-planes are zero [from A]
++ last   18 y-planes are zero [from P]
++ first   8 z-planes are zero [from I]
++ last   17 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dQwarp -plusminus -pmNAMES Rev For -pblur 0.05 0.05 -blur -1 -1 -noweight -minpatch 9 -source rm.blip.med.masked.rev+orig -base rm.blip.med.masked.fwd+orig -prefix blip_warp
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=3 ytop=3  zbot=3 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=./rm.blip.med.masked.fwd+orig.HEAD  source=./rm.blip.med.masked.rev+orig.HEAD
++ AFNI warpomatic start: 90 x 103 x 89 volume ; autobbox = 7..82 10..90 1..78
lev=0 0..89 0..100 0..87: [first cost=-1.59757] ...... done [cost=-1.68599]
lev=1 patch=67x75x65: [first cost=-1.59389] ........ done [cost:-1.63904 ; 8 patches optimized, 0 skipped]
lev=2 patch=51x57x49: [first cost=-1.56747] ......................... done [cost:-1.62874 ; 25 patches optimized, 2 skipped]
lev=3 patch=37x43x37: [first cost=-1.55787] ................ done [cost:-1.62862 ; 41 patches optimized, 23 skipped]
lev=4 patch=29x31x27: [first cost=-1.61102] ............ done [cost:-1.69450 ; 96 patches optimized, 54 skipped]
lev=5 patch=21x23x21: [first cost=-1.66528] ............. done [cost:-1.77783 ; 234 patches optimized, 158 skipped]
lev=6 patch=17x17x15: [first cost=-1.70172] ....................... done [cost:-1.79932 ; 603 patches optimized, 497 skipped]
lev=7 patch=13x13x11: [first cost=-1.75639] ........ +      cubic12 patch 021..033 078..090 015..025 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x88bbf0  xbot=0x86f360  xtop=0x86c800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 +      cubic12 patch 039..051 082..094 015..025 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x88bbf0  xbot=0x86f360  xtop=0x86c800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
............................ +      cubic12 patch 033..045 054..066 070..081 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x88bbf0  xbot=0x86f360  xtop=0x86c800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
. done [cost:-1.90819 ; 1452 patches optimized, 1278 skipped]
lev=8 patch=9x9x9: [first cost=-1.90644]  +      cubic12 patch 077..085 061..069 029..037 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x88bbf0  xbot=0x86f360  xtop=0x86c800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
............ +      cubic12 patch 057..065 085..093 033..041 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x88bbf0  xbot=0x86f360  xtop=0x86c800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
............ +      cubic12 patch 053..061 077..085 061..069 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x88bbf0  xbot=0x86f360  xtop=0x86c800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
..................................................................... done [cost:-2.01479 ; 3911 patches optimized, 3309 skipped]
++ ====== total number of parameters 'optimized' = 76629
 +      initial unpenalized cost = -1.59757
 +        final unpenalized cost = -2.05817
 +        final penalized   cost = -2.01479
++ Output dataset ./blip_warp_Rev+orig.BRIK
++ Output dataset ./blip_warp_For+orig.BRIK
++ Output dataset ./blip_warp_Rev_WARP+orig.BRIK
++ Output dataset ./blip_warp_For_WARP+orig.BRIK
++ ===== clock time = 44s 212ms
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.fwd+orig -prefix blip_med_for
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for+orig.BRIK
++ total Elapsed time = 0.2 sec
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.masked.fwd+orig -prefix blip_med_for_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for_masked+orig.BRIK
++ total Elapsed time = 0.2 sec
3dNwarpApply -quintic -nwarp blip_warp_Rev_WARP+orig -source rm.blip.med.masked.rev+orig -prefix blip_med_rev_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.rev+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_rev_masked+orig.BRIK
++ total Elapsed time = 0.2 sec
foreach run ( 01 02 03 )
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB21.r01.tshift+orig -prefix pb03.GB21.r01.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB21.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB21.r01.blip+orig.BRIK
++ total Elapsed time = 307.7 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB21.r02.tshift+orig -prefix pb03.GB21.r02.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB21.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB21.r02.blip+orig.BRIK
++ total Elapsed time = 176.2 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB21.r03.tshift+orig -prefix pb03.GB21.r03.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB21.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB21.r03.blip+orig.BRIK
++ total Elapsed time = 201.6 sec
end
3dbucket -prefix vr_base_min_outlier pb03.GB21.r01.blip+orig[53]
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
align_epi_anat.py -anat2epi -anat MPRAGE.GB21_unif+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off -tshift off
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB21/MPRAGE.GB21_unif+orig
#++ Multi-cost is lpa
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB21_unif*
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB21_unif+orig ./MPRAGE.GB21_unif_unflipped+orig
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./MPRAGE.GB21_unif_unflipped+orig -prefix ./MPRAGE.GB21_unif_unflipped_ns
#Script is running (command trimmed):
  3dinfo ./MPRAGE.GB21_unif_unflipped_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB21/MPRAGE.GB21_unif_unflipped_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB21/vr_base_min_outlier+orig is not oblique
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_ts ./vr_base_min_outlier+orig'[0]'
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_min_outlier_ts_ns ./__tt_vr_base_min_outlier_ts+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 4060.914062
 + Used gradual clip level = 3904.033936 .. 4225.944336
 + Number voxels above clip level = 77460
 + Clustering voxels ...
 + Largest cluster has 75892 voxels
 + Clustering voxels ...
 + Largest cluster has 74780 voxels
 + Filled   319 voxels in small holes; now have 75099 voxels
 + Filled  1326 voxels in large holes; now have 76425 voxels
 + Clustering voxels ...
 + Largest cluster has 76396 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 599888 voxels
 + Mask now has 76396 voxels
++ 76396 voxels in the mask [out of 676284: 11.30%]
++ first  15 x-planes are zero [from R]
++ last   16 x-planes are zero [from L]
++ first  21 y-planes are zero [from A]
++ last   19 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last   19 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_min_outlier_ts_ns+orig
#++ Applying threshold of 9404.111328 on /mnt/ext5/GA/fmri_data/preproc_data/GB21/vr_base_min_outlier_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_min_outlier_ts_ns_wt -a ./vr_base_min_outlier_ts_ns+orig -expr 'min(1,(a/9404.111328))'
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpa -wtprefix ./MPRAGE.GB21_unif_unflipped_ns_al_junk_wtal -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB21_unif_unflipped_ns+orig -prefix ./MPRAGE.GB21_unif_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB21_unif_al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB21_unif_unflipped_ns+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4472943 voxels in -source_automask+2
++ Zero-pad: zbot=8 ztop=0
++ 76396 voxels [10.3%] in weight mask
++ Number of points for matching = 76396
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.604 52.766 45.889 (index)
 + source center of mass = 112.639 191.054 160.909 (index)
 + source-target CM = -0.015 -1.298 0.725 (xyz)
 + estimated center of mass shifts = -0.015 -1.298 0.725
++ shift param auto-range: -71.5..71.5 -84.0..81.4 -76.8..78.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.014587 .. 9.985413  center = -0.014587
 + Range param#2 [y-shift] = -11.298271 .. 8.701729  center = -1.298271
 + Range param#3 [z-shift] = -9.275291 .. 10.724709  center = 0.724709
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.014587 .. 39.985413  center = -0.014587
 + Range param#2 [y-shift] = -41.298271 .. 38.701729  center = -1.298271
 + Range param#3 [z-shift] = -39.275291 .. 40.724709  center = 0.724709
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -40.015 ..   39.985
 +       y-shift =  -41.298 ..   38.702
 +       z-shift =  -39.275 ..   40.725
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4472943 [out of 23184225] voxels
 + base mask has 95790 [out of 741468] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=265.981 usiz=398.453
 + - copying weight image
 + - using 76396 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 66447 total points stored in 128 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#oo-+-o--+o--+++o$.-. + - best 88 costs found:
   o= 0 v= 0.952407:  -0.01  -1.30   0.72   0.00   0.00   0.00  [grid]
   o= 1 v= 0.956838:   6.65  -7.96  -5.94  -7.50  -7.50  -7.50  [grid]
   o= 2 v= 0.959734:  -6.68  -7.96  -5.94   7.50  -7.50   7.50  [grid]
   o= 3 v= 0.963919: -23.92   5.63  14.65  13.51  15.92   9.43  [rand]
   o= 4 v= 0.964734: -10.47  25.97  22.22 -34.95   5.03  42.69  [rand]
   o= 5 v= 0.965273:   6.65  -7.96  -5.94   7.50  -7.50  -7.50  [grid]
   o= 6 v= 0.965291:  31.83  10.50   3.47  23.31  -3.26 -40.47  [rand]
   o= 7 v= 0.965413:  33.81  28.20 -12.23 -31.95   9.87  34.85  [rand]
   o= 8 v= 0.965495:  29.61  33.31 -36.09  24.31  11.89   2.84  [rand]
   o= 9 v= 0.965627:   6.65   5.37  -5.94   7.50  -7.50  -7.50  [grid]
   o=10 v= 0.965914:  27.84  26.32  10.54 -16.34  19.59  25.89  [rand]
   o=11 v= 0.966501:  33.81  28.20  13.68 -31.95   9.87  34.85  [rand]
   o=12 v= 0.966692: -33.84  28.20 -12.23  31.95   9.87  34.85  [rand]
   o=13 v= 0.966825:   6.65   5.37  -5.94  30.00  -7.50   7.50  [grid]
   o=14 v= 0.966974: -26.68   5.37   7.39  -7.50  -7.50  30.00  [grid]
   o=15 v= 0.967380:  -6.68  25.37  27.39 -30.00  -7.50  30.00  [grid]
   o=16 v= 0.967441:  -6.68  25.37  27.39 -30.00   7.50  30.00  [grid]
   o=17 v= 0.967672:  33.81  28.20  13.68  31.95   9.87 -34.85  [rand]
   o=18 v= 0.967909: -24.21 -11.64   5.25 -27.51 -29.30  27.65  [rand]
   o=19 v= 0.968184: -34.34  15.29   9.33 -16.34  -8.64  40.54  [rand]
   o=20 v= 0.968280: -26.68  -7.96   7.39  -7.50 -30.00  30.00  [grid]
   o=21 v= 0.968290:  31.83  10.50   3.47  23.31   3.26 -40.47  [rand]
   o=22 v= 0.968313:  29.61  33.31 -36.09  24.31  11.89  -2.84  [rand]
   o=23 v= 0.968456:  18.48   4.56 -13.87 -16.04  -3.33 -12.13  [rand]
   o=24 v= 0.968587:   6.65   5.37  -5.94  -7.50   7.50  -7.50  [grid]
   o=25 v= 0.968609: -26.94  26.84 -37.22 -15.05   4.71  12.78  [rand]
   o=26 v= 0.968682:  26.65  25.37 -25.94  30.00  30.00   7.50  [grid]
   o=27 v= 0.968685:  34.84  34.38  14.97 -40.22  24.26  41.52  [rand]
   o=28 v= 0.968728: -23.92  -8.23  14.65 -13.51 -15.92  -9.43  [rand]
   o=29 v= 0.968919: -26.68  -7.96   7.39 -30.00 -30.00  30.00  [grid]
   o=30 v= 0.968952: -26.68  25.37 -25.94  30.00  30.00  30.00  [grid]
   o=31 v= 0.968953:  35.40 -30.80  -2.38  13.33   5.58  13.04  [rand]
   o=32 v= 0.968961:   6.65   5.37  -5.94 -30.00  -7.50  30.00  [grid]
   o=33 v= 0.968971:  -6.68   5.37  -5.94   7.50   7.50   7.50  [grid]
   o=34 v= 0.969149:  -5.36  28.46  14.40  22.21  -7.92  40.02  [rand]
   o=35 v= 0.969336:  34.31  15.29   9.33  16.34  -8.64 -40.54  [rand]
   o=36 v= 0.969418:  35.40 -30.80  -2.38  13.33  -5.58  13.04  [rand]
   o=37 v= 0.969603:  26.92  26.84 -37.22 -15.05   4.71  12.78  [rand]
   o=38 v= 0.969664:   6.65   5.37  -5.94  30.00  -7.50  -7.50  [grid]
   o=39 v= 0.969712:  -6.68  -7.96  -5.94  -7.50  -7.50   7.50  [grid]
   o=40 v= 0.969794:  33.76 -33.22  -6.99  12.26  17.56  17.80  [rand]
   o=41 v= 0.969799:  -6.68  25.37  -5.94 -30.00   7.50   7.50  [grid]
   o=42 v= 0.969956:  34.31  15.29  -7.88 -16.34  -8.64  40.54  [rand]
   o=43 v= 0.969974:  -6.68   5.37  -5.94  -7.50  -7.50   7.50  [grid]
   o=44 v= 0.969999:  -4.09  -7.52  -7.07  -4.32 -22.85  18.95  [rand]
   o=45 v= 0.970150:  21.03  -5.33  -3.58  37.69 -26.76   3.08  [rand]
   o=46 v= 0.970157: -16.87 -19.88  15.18 -19.57 -37.09 -16.59  [rand]
   o=47 v= 0.970176: -26.68   5.37   7.39   7.50  -7.50  30.00  [grid]
   o=48 v= 0.970209:  26.65   5.37   7.39   7.50  -7.50 -30.00  [grid]
   o=49 v= 0.970222: -26.94  26.84 -37.22 -15.05   4.71 -12.78  [rand]
   o=50 v= 0.970415:   6.65  -7.96  -5.94  -7.50  -7.50 -30.00  [grid]
   o=51 v= 0.970447:  35.40  28.21   3.83 -13.33   5.58  13.04  [rand]
   o=52 v= 0.970499: -36.68  26.47   5.61  15.70 -36.90  27.47  [rand]
   o=53 v= 0.970525:  14.92  22.79 -29.20  19.13  33.53  22.48  [rand]
   o=54 v= 0.970531:  -6.68  -7.96  -5.94  -7.50 -30.00  30.00  [grid]
   o=55 v= 0.970551:  31.83  10.50  -2.02  23.31  -3.26 -40.47  [rand]
   o=56 v= 0.970552: -37.78  14.34  -7.03  31.25 -41.23  36.84  [rand]
   o=57 v= 0.970685: -31.85  10.50   3.47 -23.31  -3.26  40.47  [rand]
   o=58 v= 0.970736: -18.35  24.85  -5.32  -6.51  20.18   7.56  [rand]
   o=59 v= 0.970790:  26.65  25.37  -5.94  -7.50 -30.00 -30.00  [grid]
   o=60 v= 0.970797:  31.83  10.50  -2.02 -23.31  -3.26  40.47  [rand]
   o=61 v= 0.970824:   6.65   5.37  -5.94  -7.50  -7.50  30.00  [grid]
   o=62 v= 0.970829:  35.40 -30.80   3.83  13.33   5.58  13.04  [rand]
   o=63 v= 0.970831:  26.65   5.37   7.39  30.00 -30.00 -30.00  [grid]
   o=64 v= 0.970857:  26.65   5.37   7.39  -7.50   7.50  -7.50  [grid]
   o=65 v= 0.970922:  26.65  -7.96   7.39  30.00 -30.00 -30.00  [grid]
   o=66 v= 0.970956: -26.68   5.37   7.39 -30.00 -30.00  -7.50  [grid]
   o=67 v= 0.970966:  26.65  -7.96  27.39  30.00 -30.00 -30.00  [grid]
   o=68 v= 0.971010:  18.32  24.85   6.77  -6.51  20.18  -7.56  [rand]
   o=69 v= 0.971112:  -5.36  28.46  14.40  22.21   7.92 -40.02  [rand]
   o=70 v= 0.971113:  21.03   2.73  -3.58 -37.69 -26.76   3.08  [rand]
   o=71 v= 0.971147:  26.65   5.37   7.39   7.50   7.50 -30.00  [grid]
   o=72 v= 0.971150:  27.84  26.32  10.54  16.34  19.59 -25.89  [rand]
   o=73 v= 0.971156: -37.78  14.34   8.48  31.25  41.23  36.84  [rand]
   o=74 v= 0.971295:  -4.97   9.89 -22.51 -35.24  13.60 -30.23  [rand]
   o=75 v= 0.971304: -26.02  28.98  16.44  -5.50   4.28 -12.07  [rand]
   o=76 v= 0.971305: -27.87 -28.92  10.54  16.34 -19.59  25.89  [rand]
   o=77 v= 0.971345: -10.34  27.51 -14.28  30.67  17.79  20.52  [rand]
   o=78 v= 0.971352: -26.68   5.37  -5.94  -7.50   7.50  -7.50  [grid]
   o=79 v= 0.971357:  22.34 -17.68 -15.11  41.11  22.86   3.97  [rand]
   o=80 v= 0.971372: -26.68  -7.96   7.39   7.50 -30.00  30.00  [grid]
   o=81 v= 0.971398:  21.03  -5.33  -3.58  37.69 -26.76  -3.08  [rand]
   o=82 v= 0.971414:  34.85 -31.85 -15.05  11.68 -29.04  39.38  [rand]
   o=83 v= 0.971487:  26.92  26.84 -37.22  15.05   4.71  12.78  [rand]
   o=84 v= 0.971491:  35.40  28.21   3.83 -13.33  -5.58  13.04  [rand]
   o=85 v= 0.971559:  31.37  28.66   5.13  42.54   9.20  25.31  [rand]
   o=86 v= 0.971675:  26.65  25.37 -25.94 -30.00  30.00  -7.50  [grid]
   o=87 v= 0.971726: -26.68  -7.96   7.39   7.50  -7.50  30.00  [grid]
 + - A little optimization:*[#11718=0.948321] *[#11724=0.944003] *[#11727=0.932045] *[#11728=0.922425] *[#11729=0.92205] *[#11730=0.919831] *[#11732=0.914094] *[#11733=0.910536] *[#11735=0.908172] *[#11736=0.90665] *[#11741=0.905193] *[#11744=0.904651] *[#11746=0.904554] *[#11748=0.904437] *[#11749=0.903915] *[#11750=0.90316] *[#11751=0.902819] *[#11752=0.902764] *[#11755=0.902571] *[#11756=0.902445] *[#11757=0.902328] *[#11758=0.902202] *[#11759=0.902178] *[#11761=0.901985] *[#11762=0.901804] *[#11763=0.901151] *[#11764=0.900691] *[#11767=0.900451] *[#11769=0.900205] *[#11770=0.900102] *[#11773=0.899879] *[#11774=0.899694] *[#11775=0.899547] *[#11776=0.899197] *[#11781=0.898838] *[#11786=0.898577] *[#11787=0.898527] *[#11794=0.898491] ........................................................................................
 + - costs of the above after a little optimization:
  *o= 0 v= 0.898491:  -0.06  -0.85   2.91  -0.24   1.79  -1.59  [grid]  [f=83]
   o= 1 v= 0.941899:   8.80  -4.10  -7.25  -7.07  -8.26  -6.90  [grid]  [f=57]
   o= 2 v= 0.930280:  -1.91  -8.29  -6.07   1.65  -9.46  -0.23  [grid]  [f=83]
   o= 3 v= 0.959619: -19.89   5.97  13.94  13.95  16.74   9.11  [rand]  [f=36]
   o= 4 v= 0.958739: -10.29  26.16  23.01 -37.22   7.27  39.32  [rand]  [f=62]
   o= 5 v= 0.947387:   8.48  -6.52  -9.87  -0.38  -8.94 -10.34  [grid]  [f=71]
   o= 6 v= 0.960234:  31.59  14.84   3.93  23.19  -2.05 -44.77  [rand]  [f=43]
   o= 7 v= 0.961138:  32.72  27.45 -11.45 -30.77  11.20  38.24  [rand]  [f=57]
   o= 8 v= 0.956340:  35.39  33.08 -36.34  25.65  11.92   3.39  [rand]  [f=34]
   o= 9 v= 0.960360:   6.97   5.11  -7.29   7.62  -3.75  -6.94  [grid]  [f=53]
   o=10 v= 0.960317:  28.77  24.92  10.84 -16.92  18.91  25.72  [rand]  [f=34]
   o=11 v= 0.957618:  35.85  24.46  12.10 -30.92   9.76  32.61  [rand]  [f=51]
   o=12 v= 0.960094: -34.95  28.52 -16.92  30.75   3.36  32.09  [rand]  [f=40]
   o=13 v= 0.961301:   7.26   3.79  -6.34  28.70 -10.29   3.99  [grid]  [f=51]
   o=14 v= 0.954991: -26.37   0.20   8.20  -5.83  -5.66  32.47  [grid]  [f=47]
   o=15 v= 0.958993:  -7.96  25.20  23.68 -33.34  -3.27  31.88  [grid]  [f=38]
   o=16 v= 0.959628:  -7.76  26.77  23.98 -28.48   2.74  35.86  [grid]  [f=41]
   o=17 v= 0.954078:  36.77  28.83  19.01  27.75   4.76 -41.40  [rand]  [f=52]
   o=18 v= 0.955734: -23.09  -9.12   4.47 -17.12 -30.20  28.63  [rand]  [f=47]
   o=19 v= 0.960146: -36.44  11.21   9.50 -21.19 -12.12  44.35  [rand]  [f=43]
   o=20 v= 0.963904: -26.03  -8.87   4.15  -6.89 -26.23  27.75  [grid]  [f=45]
   o=21 v= 0.960118:  31.31  14.84   4.59  23.24   1.98 -40.75  [rand]  [f=32]
   o=22 v= 0.951343:  35.31  27.42 -35.61  28.67  12.03  -2.47  [rand]  [f=46]
   o=23 v= 0.957043:  16.86   2.23  -7.85 -13.65  -2.47 -10.22  [rand]  [f=47]
   o=24 v= 0.954398:   6.51   9.32  -7.99  -6.68   4.32  -7.07  [grid]  [f=47]
   o=25 v= 0.964478: -26.79  27.44 -38.30 -10.46   2.85   9.22  [rand]  [f=48]
   o=26 v= 0.960465:  30.68  24.98 -28.45  34.31  33.56  -0.28  [grid]  [f=42]
   o=27 v= 0.966762:  33.73  35.21  14.91 -40.16  23.48  41.81  [rand]  [f=46]
   o=28 v= 0.963468: -21.82  -6.62  17.34  -7.53 -10.99  -9.05  [rand]  [f=49]
   o=29 v= 0.958699: -25.79 -10.02   6.45 -24.68 -35.83  36.91  [grid]  [f=54]
   o=30 v= 0.962630: -30.58  25.40 -26.24  29.04  28.26  29.73  [grid]  [f=34]
   o=31 v= 0.963842:  35.99 -31.64  -1.64  17.80   5.08  12.64  [rand]  [f=36]
   o=32 v= 0.956462:   4.86   4.06  -3.93 -17.75  -5.06  28.40  [grid]  [f=69]
   o=33 v= 0.959676:  -9.54   5.87  -7.73   8.08   5.41   5.88  [grid]  [f=47]
   o=34 v= 0.963834:  -4.52  28.23  10.30  17.92  -7.91  37.24  [rand]  [f=40]
   o=35 v= 0.956370:  29.62   8.43   6.66  20.20  -8.63 -44.62  [rand]  [f=80]
   o=36 v= 0.967974:  34.85 -30.82  -2.30  17.70  -6.34  13.30  [rand]  [f=33]
   o=37 v= 0.965536:  32.09  27.25 -38.14 -15.72   2.59  11.79  [rand]  [f=37]
   o=38 v= 0.965150:   5.43   3.30  -5.41  32.55  -6.36   6.23  [grid]  [f=44]
   o=39 v= 0.932784:  -2.63  -8.45  -6.25   1.10 -10.37   1.79  [grid]  [f=78]
   o=40 v= 0.966478:  36.20 -28.13  -7.84   9.16  14.93  17.97  [rand]  [f=40]
   o=41 v= 0.965498:  -9.61  25.08  -7.60 -31.45   7.77   4.04  [grid]  [f=38]
   o=42 v= 0.966629:  33.02  11.58  -7.13 -15.57  -7.75  41.68  [rand]  [f=33]
   o=43 v= 0.957252: -11.75   2.11  -1.98  -4.98  -7.38   7.74  [grid]  [f=64]
   o=44 v= 0.959033:  -5.81 -11.81  -7.35  -4.95 -23.13  17.98  [rand]  [f=59]
   o=45 v= 0.963723:  19.28  -7.43  -0.24  38.20 -26.15   2.52  [rand]  [f=45]
   o=46 v= 0.967505: -17.22 -19.23  16.04 -18.69 -30.77 -15.96  [rand]  [f=37]
   o=47 v= 0.966558: -27.38   1.22   7.13   5.86  -7.46  31.59  [grid]  [f=46]
   o=48 v= 0.966810:  26.57   8.21   7.61   8.50  -7.94 -30.42  [grid]  [f=35]
   o=49 v= 0.967309: -24.31  26.63 -37.85 -14.34   4.01 -11.57  [rand]  [f=39]
   o=50 v= 0.959068:   6.79  -5.36  -0.75  -6.58  -4.37 -31.82  [grid]  [f=48]
   o=51 v= 0.965394:  35.85  27.47   3.22 -14.68   0.76  11.78  [rand]  [f=37]
   o=52 v= 0.969240: -36.83  26.65   6.41  16.13 -32.41  27.43  [rand]  [f=31]
   o=53 v= 0.958169:  14.65  24.52 -30.38  31.44  30.78  20.43  [rand]  [f=54]
   o=54 v= 0.965934:  -7.57  -8.72  -5.86  -8.53 -31.56  34.89  [grid]  [f=62]
   o=55 v= 0.947497:  28.56   7.99   8.03  18.56  -3.55 -44.97  [rand]  [f=71]
   o=56 v= 0.962298: -37.96  17.93  -6.18  30.39 -40.86  36.70  [rand]  [f=34]
   o=57 v= 0.960985: -34.53   9.48   5.07 -19.84  -8.33  44.47  [rand]  [f=42]
   o=58 v= 0.965248: -18.13  25.22  -5.06  -8.38  21.01   0.76  [rand]  [f=47]
   o=59 v= 0.967845:  27.14  25.34  -7.90 -10.30 -31.69 -33.78  [grid]  [f=54]
   o=60 v= 0.963875:  34.47  16.19  -1.05 -24.47  -7.74  44.93  [rand]  [f=45]
   o=61 v= 0.961126:   6.69   4.16  -4.39  -7.60  -2.95  28.63  [grid]  [f=42]
   o=62 v= 0.966086:  36.14 -31.08   3.31  13.90   9.81  13.49  [rand]  [f=50]
   o=63 v= 0.954962:  23.99  -4.40   5.01  30.35 -25.74 -31.43  [grid]  [f=53]
   o=64 v= 0.958686:  24.18   5.00   4.34 -10.03   7.20 -12.73  [grid]  [f=54]
   o=65 v= 0.955515:  23.36  -6.00   3.52  28.80 -27.27 -33.33  [grid]  [f=63]
   o=66 v= 0.966532: -24.10   5.51   4.98 -29.82 -33.05  -7.18  [grid]  [f=49]
   o=67 v= 0.970061:  26.78  -7.86  28.04  29.80 -30.54 -30.00  [grid]  [f=39]
   o=68 v= 0.969021:  18.50  24.36   6.48  -6.92  18.56  -9.49  [rand]  [f=32]
   o=69 v= 0.963694:  -3.39  28.18  15.98  23.47   5.83 -33.56  [rand]  [f=42]
   o=70 v= 0.960439:  21.42   1.05  -6.67 -33.30 -26.92   8.34  [rand]  [f=43]
   o=71 v= 0.961287:  24.57   7.08   8.50   7.39   4.39 -31.78  [grid]  [f=55]
   o=72 v= 0.965031:  27.06  25.66   9.50  16.73  18.05 -27.88  [rand]  [f=37]
   o=73 v= 0.967287: -37.17  10.64   8.02  31.44  40.81  37.15  [rand]  [f=39]
   o=74 v= 0.967698:  -4.91  10.56 -25.02 -34.48  13.17 -31.65  [rand]  [f=61]
   o=75 v= 0.967638: -26.83  28.33  15.80  -7.70   2.21 -14.46  [rand]  [f=40]
   o=76 v= 0.966960: -26.80 -29.57   9.20  10.37 -19.37  26.74  [rand]  [f=44]
   o=77 v= 0.963906: -15.15  28.70 -15.47  29.36  16.91  18.94  [rand]  [f=38]
   o=78 v= 0.957550: -19.04   6.54  -4.60  -4.96   2.90  -2.18  [grid]  [f=69]
   o=79 v= 0.969042:  22.90 -18.48 -13.44  40.28  23.57   4.97  [rand]  [f=68]
   o=80 v= 0.969765: -22.28  -7.55   7.86   7.35 -29.86  29.19  [grid]  [f=29]
   o=81 v= 0.963067:  20.11  -5.91  -2.43  40.09 -22.80   0.02  [rand]  [f=46]
   o=82 v= 0.968281:  34.81 -30.87 -15.54  16.17 -29.22  39.08  [rand]  [f=35]
   o=83 v= 0.964718:  27.80  27.21 -38.17  15.69  10.09  11.25  [rand]  [f=42]
   o=84 v= 0.962891:  35.88  26.13   8.29 -14.78  -4.09  14.61  [rand]  [f=43]
   o=85 v= 0.968767:  31.94  28.69   3.23  41.43   9.09  21.99  [rand]  [f=36]
   o=86 v= 0.969549:  25.62  25.37 -26.65 -31.93  27.19 -10.28  [grid]  [f=32]
   o=87 v= 0.953925: -25.97  -5.44   4.23   7.29  -2.93  31.32  [grid]  [f=77]
 + - saving # 0 for use with twobest
 + - saving # 2 for use with twobest
 + - skip #39 for twobest: too close to set # 2
 + - saving # 1 for use with twobest
 + - saving # 5 for use with twobest
 + - saving #55 for use with twobest
 + - saving #22 for use with twobest
 + - saving #87 for use with twobest
 + - saving #17 for use with twobest
 + - saving #24 for use with twobest
 + - saving #63 for use with twobest
 + - saving #14 for use with twobest
 + - skip #65 for twobest: too close to set #63
 + - saving #18 for use with twobest
 + - saving # 8 for use with twobest
 + - saving #35 for use with twobest
 + - saving #32 for use with twobest
 + - saving #23 for use with twobest
 + - saving #43 for use with twobest
 + - saving #78 for use with twobest
 + - saving #11 for use with twobest
 + - saving #53 for use with twobest
 + - saving #64 for use with twobest
 + - saving #29 for use with twobest
 + - saving # 4 for use with twobest
 + - saving #15 for use with twobest
 + - saving #44 for use with twobest
 + - saving #50 for use with twobest
 + - saving # 3 for use with twobest
 + - saving #16 for use with twobest
 + - saving #33 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=265.981 usiz=398.453
 + - retaining old weight image
 + - using 76396 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 65968 total points stored in 128 'TOHD(14.0453)' bloks (0 duplicates)
*[#15997=0.882953] *[#16009=0.879504] *[#16018=0.877531] *[#16020=0.876639] *[#16023=0.873277] *[#16028=0.872614] *[#16029=0.87229] *[#16030=0.869904] *[#16034=0.869594] *[#16035=0.866998] *[#16036=0.865644] *[#16039=0.864881] *[#16041=0.864751] *[#16042=0.863247] *[#16045=0.862585] *[#16048=0.862322] *[#16051=0.859845] *[#16054=0.859094] *[#16056=0.857768] *[#16059=0.856849] *[#16060=0.856771] *[#16062=0.85608] *[#16064=0.856006] *[#16065=0.855758] *[#16068=0.855109] *[#16070=0.853775] *[#16071=0.852127] *[#16072=0.851376] *[#16075=0.850531] *[#16078=0.850014] *[#16081=0.849787] *[#16085=0.848931] *[#16087=0.848219] *[#16088=0.847429] *[#16090=0.846789] *[#16091=0.845301] *[#16092=0.843203] *[#16093=0.842319] *[#16094=0.841457] 
 + - param set #1 has cost=0.841457 [o=0 t=0]
 + -- Parameters = -0.0464 -0.4321 2.9533 0.0101 2.3536 -1.1963 0.9703 0.9785 0.9505 0.0041 -0.0087 0.0163
 + - param set #2 has cost=0.938815 [o=2 t=1]
 + -- Parameters = -1.0544 -7.6635 -7.2117 0.6385 -8.1270 -1.2893 0.9953 1.0012 0.9798 0.0021 0.0022 0.0026
 + - param set #3 has cost=0.949183 [o=1 t=2]
 + -- Parameters = 7.7753 -4.1317 -6.8471 -5.5063 -7.2388 -7.5902 1.0000 0.9870 1.0150 -0.0022 0.0115 0.0034
 + - param set #4 has cost=0.949023 [o=5 t=3]
 + -- Parameters = 6.4075 -5.9191 -8.7019 -4.2470 -9.7256 -9.6261 1.0077 0.9895 1.0162 0.0064 0.0165 0.0009
 + - param set #5 has cost=0.955979 [o=55 t=4]
 + -- Parameters = 28.5610 8.1042 7.9112 18.6419 -3.6760 -44.9771 1.0125 1.0054 0.9967 -0.0026 0.0019 0.0007
 + - param set #6 has cost=0.958034 [o=22 t=5]
 + -- Parameters = 35.3321 27.0067 -35.9104 28.6805 11.7018 -2.4929 0.9996 1.0000 0.9998 0.0125 0.0012 -0.0001
 + - param set #7 has cost=0.962703 [o=87 t=6]
 + -- Parameters = -25.6256 -4.9303 4.6210 6.5394 -2.9754 31.3943 1.0518 1.0004 1.0009 0.0022 0.0034 -0.0000
 + - param set #8 has cost=0.958723 [o=17 t=7]
 + -- Parameters = 36.6539 28.4490 18.7780 28.2808 4.6550 -41.5022 0.9975 1.0000 1.0022 -0.0004 -0.0006 0.0119
 + - param set #9 has cost=0.965026 [o=24 t=8]
 + -- Parameters = 6.6576 8.6366 -8.3846 -7.0822 4.3515 -6.7948 1.0007 0.9962 0.9993 0.0015 0.0004 0.0002
 + - param set #10 has cost=0.960350 [o=63 t=9]
 + -- Parameters = 24.3624 -3.3012 5.0928 32.1219 -24.6692 -32.0790 1.0372 0.9719 0.9727 -0.0019 -0.0107 0.0051
 + - param set #11 has cost=0.960414 [o=14 t=10]
 + -- Parameters = -26.9101 1.0805 7.4119 -5.3160 -5.9089 33.1762 0.9965 0.9900 0.9931 0.0001 -0.0002 0.0116
 + - param set #12 has cost=0.961441 [o=18 t=11]
 + -- Parameters = -23.1950 -9.2817 4.9494 -16.3640 -29.1589 28.6310 1.0519 1.0062 1.0003 0.0006 0.0032 0.0025
 + - param set #13 has cost=0.960432 [o=8 t=12]
 + -- Parameters = 35.0955 28.1896 -36.8049 25.8623 11.8636 2.9983 1.0048 1.0027 0.9993 0.0002 0.0014 0.0002
 + - param set #14 has cost=0.957534 [o=35 t=13]
 + -- Parameters = 29.8373 8.6104 7.2892 20.1391 -4.0468 -44.9904 1.0037 1.0013 0.9906 0.0007 0.0002 0.0000
 + - param set #15 has cost=0.965264 [o=32 t=14]
 + -- Parameters = 5.0700 4.0245 -3.8564 -13.9039 -3.7773 28.1080 1.0023 1.0015 0.9964 0.0053 -0.0022 0.0038
 + - param set #16 has cost=0.962939 [o=23 t=15]
 + -- Parameters = 18.0307 1.6167 -7.6149 -13.6763 -2.5337 -9.3610 1.0480 1.0007 0.9944 -0.0034 -0.0003 0.0003
 + - param set #17 has cost=0.963636 [o=43 t=16]
 + -- Parameters = -11.5749 3.0963 -2.3585 -4.9123 -7.5716 7.0852 0.9852 0.9902 0.9910 0.0099 -0.0078 0.0032
 + - param set #18 has cost=0.884507 [o=-1 t=-1]
 + -- Parameters = -0.0611 -0.1643 1.2706 -0.0779 1.6124 -1.3111 0.9867 0.9939 1.0427 0.0027 0.0035 0.0018
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.133 
 + --- dist(#3,#1) = 0.127 
 + --- dist(#4,#1) = 0.146 
 + --- dist(#5,#1) = 0.123 
 + --- dist(#6,#1) = 0.486 
 + --- dist(#7,#1) = 0.487 
 + --- dist(#8,#1) = 0.486 
 + --- dist(#9,#1) = 0.459 
 + --- dist(#10,#1) = 0.357 
 + --- dist(#11,#1) = 0.382 
 + --- dist(#12,#1) = 0.497 
 + --- dist(#13,#1) = 0.35 
 + --- dist(#14,#1) = 0.362 
 + --- dist(#15,#1) = 0.226 
 + --- dist(#16,#1) = 0.144 
 + --- dist(#17,#1) = 0.142 
 + --- dist(#18,#1) = 0.326 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=265.981 usiz=398.453
 + - retaining old weight image
 + - using 76396 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 65190 total points stored in 127 'TOHD(13.984)' bloks (0 duplicates)
*[#17641=0.837873] *[#17653=0.837289] *[#17661=0.835179] *[#17663=0.834948] *[#17664=0.83461] *[#17667=0.834602] *[#17676=0.83446] *[#17678=0.83435] *[#17679=0.834194] *[#17682=0.834112] *[#17685=0.833884] *[#17686=0.83386] *[#17687=0.833856] *[#17689=0.833833] *[#17703=0.833689] *[#17706=0.833669] *[#17714=0.833564] *[#17715=0.833534] *[#17722=0.833411] *[#17731=0.83339] *[#17737=0.833354] *[#17738=0.833346] *[#17741=0.833342] *[#17742=0.833314] *[#17743=0.833293] *[#17744=0.833284] *[#17747=0.833273] *[#17748=0.833268] *[#17749=0.833265] 
 + - param set #1 has cost=0.833265 [o=0 t=0]
 + -- Parameters = 0.0361 -0.1708 3.3621 0.0604 2.0090 -1.1814 0.9775 0.9859 0.9491 0.0064 -0.0080 0.0193
 + - param set #2 has cost=0.850805 [o=-1 t=-1]
 + -- Parameters = -0.1372 -0.6295 2.5323 0.5075 2.8245 -0.9824 0.9702 0.9857 0.9989 0.0139 -0.0043 0.0316
 + - param set #3 has cost=0.944474 [o=2 t=1]
 + -- Parameters = -0.7129 -6.6492 -7.2290 0.8607 -7.0013 -1.8299 1.0061 0.9973 0.9682 0.0029 0.0036 0.0104
 + - param set #4 has cost=0.957690 [o=5 t=3]
 + -- Parameters = 5.7068 -6.0514 -8.4804 -4.0087 -9.9967 -9.3955 1.0043 0.9858 1.0173 0.0068 0.0247 -0.0004
 + - param set #5 has cost=0.957945 [o=1 t=2]
 + -- Parameters = 7.6855 -4.0875 -6.9214 -5.3100 -7.3597 -7.7688 0.9990 0.9868 1.0170 -0.0015 0.0119 0.0030
 + - param set #6 has cost=0.962756 [o=55 t=4]
 + -- Parameters = 28.6988 8.5255 7.6740 19.0774 -4.0055 -44.9684 1.0156 1.0133 0.9931 -0.0012 0.0030 0.0019
 + - param set #7 has cost=0.961091 [o=35 t=13]
 + -- Parameters = 29.5949 8.8877 7.0890 19.6906 -4.1576 -44.9971 1.0312 1.0013 0.9858 0.0024 -0.0018 -0.0006
 + - param set #8 has cost=0.958232 [o=22 t=5]
 + -- Parameters = 38.5560 26.0631 -36.0675 28.4237 12.3545 -2.7859 1.0078 1.0006 1.0054 0.0136 0.0039 0.0026
 + - param set #9 has cost=0.964419 [o=17 t=7]
 + -- Parameters = 36.7323 28.2824 18.7817 28.3066 4.7097 -41.4083 1.0245 1.0024 1.0004 -0.0002 -0.0002 0.0122
 + - param set #10 has cost=0.966168 [o=63 t=9]
 + -- Parameters = 24.3111 -3.3635 5.0962 32.0774 -24.7637 -32.0027 1.0368 0.9718 0.9725 -0.0019 -0.0108 0.0051
 + - param set #11 has cost=0.964931 [o=14 t=10]
 + -- Parameters = -26.7010 1.5302 7.4111 -5.3001 -5.8989 33.1656 1.0011 0.9798 0.9953 0.0070 -0.0005 0.0120
 + - param set #12 has cost=0.965111 [o=8 t=12]
 + -- Parameters = 35.0481 28.1585 -36.8291 25.8475 11.8071 3.0208 1.0076 1.0014 0.9991 0.0010 0.0019 -0.0006
 + - param set #13 has cost=0.966415 [o=18 t=11]
 + -- Parameters = -22.7506 -9.2278 5.2484 -16.1608 -29.4302 28.7283 1.0545 1.0092 0.9950 0.0012 0.0025 0.0018
 + - param set #14 has cost=0.966856 [o=87 t=6]
 + -- Parameters = -23.8548 -4.6537 4.6970 4.8269 -3.7057 30.8907 1.0691 0.9944 0.9963 0.0075 0.0153 -0.0056
 + - param set #15 has cost=0.966928 [o=23 t=15]
 + -- Parameters = 17.8682 1.5790 -8.2022 -13.3910 -2.8602 -8.6540 1.0602 1.0060 0.9582 -0.0061 -0.0016 -0.0022
 + - param set #16 has cost=0.959789 [o=43 t=16]
 + -- Parameters = -11.8857 1.8864 -2.3718 -4.4833 -6.8867 10.4057 0.9469 0.9774 0.8857 0.0812 -0.0186 0.0018
 + - param set #17 has cost=0.965425 [o=24 t=8]
 + -- Parameters = 7.3946 7.1332 -8.6713 -5.7726 2.4378 -7.7796 1.0549 0.9708 0.9495 0.0066 0.0100 0.0101
 + - param set #18 has cost=0.971840 [o=32 t=14]
 + -- Parameters = 4.9261 4.4061 -3.9567 -14.0940 -3.3384 27.9245 1.0020 1.0037 1.0083 0.0166 -0.0010 0.0032
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0716 
 + --- dist(#3,#1) = 0.132 
 + --- dist(#4,#1) = 0.148 
 + --- dist(#5,#1) = 0.129 
 + --- dist(#6,#1) = 0.493 
 + --- dist(#7,#1) = 0.336 
 + --- dist(#8,#1) = 0.487 
 + --- dist(#9,#1) = 0.487 
 + --- dist(#10,#1) = 0.459 
 + --- dist(#11,#1) = 0.382 
 + --- dist(#12,#1) = 0.502 
 + --- dist(#13,#1) = 0.15 
 + --- dist(#14,#1) = 0.356 
 + --- dist(#15,#1) = 0.349 
 + --- dist(#16,#1) = 0.356 
 + --- dist(#17,#1) = 0.223 
 + --- dist(#18,#1) = 0.323 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=265.981 usiz=398.453
 + - retaining old weight image
 + - using 76396 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 65772 total points stored in 129 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.837222 [o=0 t=0]
 + -- Parameters = -0.0128 0.0242 3.8791 -0.0103 1.6740 -1.1934 0.9750 0.9869 0.9256 0.0052 -0.0127 0.0154
 + - param set #2 has cost=0.837789 [o=-1 t=-1]
 + -- Parameters = -0.0003 -0.0631 3.8677 0.0649 1.8016 -1.1854 0.9765 0.9849 0.9243 0.0045 -0.0153 0.0186
 + - param set #3 has cost=0.949941 [o=2 t=1]
 + -- Parameters = -0.7813 -6.8503 -7.9472 0.9306 -6.9638 -1.8878 1.0059 1.0012 0.9537 0.0072 0.0050 0.0121
 + - param set #4 has cost=0.964603 [o=5 t=3]
 + -- Parameters = 5.8605 -6.0508 -8.2756 -4.1989 -9.9535 -9.3579 1.0001 0.9858 1.0186 0.0076 0.0315 -0.0013
 + - param set #5 has cost=0.963888 [o=1 t=2]
 + -- Parameters = 7.8334 -3.9658 -7.0219 -4.8651 -7.1789 -8.2289 0.9944 0.9844 1.0196 0.0047 0.0132 0.0048
 + - param set #6 has cost=0.960490 [o=22 t=5]
 + -- Parameters = 38.5287 26.0202 -36.0923 28.3580 12.2772 -2.9138 1.0079 1.0014 1.0058 0.0137 0.0094 0.0026
 + - param set #7 has cost=0.964549 [o=43 t=16]
 + -- Parameters = -11.1072 2.0367 -2.7729 -4.3142 -7.5080 10.4543 0.9506 0.9750 0.8882 0.0822 -0.0175 0.0096
 + - param set #8 has cost=0.964157 [o=35 t=13]
 + -- Parameters = 29.6633 8.8861 6.9343 19.6680 -4.1185 -44.9949 1.0354 1.0034 0.9827 0.0029 0.0033 -0.0003
 + - param set #9 has cost=0.966517 [o=55 t=4]
 + -- Parameters = 28.9004 8.5183 7.6353 19.0722 -4.0464 -44.9423 1.0155 1.0149 0.9933 -0.0011 0.0033 0.0018
 + - param set #10 has cost=0.966386 [o=17 t=7]
 + -- Parameters = 36.8215 28.2605 18.7704 28.5746 4.8374 -41.4552 1.0411 1.0024 0.9982 -0.0006 -0.0003 0.0116
 + - param set #11 has cost=0.969179 [o=14 t=10]
 + -- Parameters = -26.8335 1.6435 7.4081 -4.9590 -6.0178 33.1176 1.0008 0.9605 0.9959 0.0082 -0.0007 0.0118
 + - param set #12 has cost=0.966484 [o=8 t=12]
 + -- Parameters = 35.0502 26.1535 -36.8204 25.8576 11.8314 3.0362 1.0076 1.0011 0.9990 0.0015 0.0015 -0.0005
 + - param set #13 has cost=0.954041 [o=24 t=8]
 + -- Parameters = 8.5379 6.1751 -5.5881 -4.4451 7.0663 -6.2550 1.0794 0.9532 0.8795 -0.0152 0.0140 0.0547
 + - param set #14 has cost=0.968697 [o=63 t=9]
 + -- Parameters = 24.9981 -2.7745 5.6062 31.9611 -25.2841 -31.1052 1.0376 0.9764 0.9671 -0.0021 -0.0110 0.0050
 + - param set #15 has cost=0.969606 [o=18 t=11]
 + -- Parameters = -22.7428 -9.2314 5.2517 -16.1419 -29.4327 28.7314 1.0545 1.0110 0.9950 0.0012 0.0025 0.0018
 + - param set #16 has cost=0.968404 [o=87 t=6]
 + -- Parameters = -22.9177 -4.1244 4.6845 4.8527 -4.0235 30.9777 1.1068 0.9904 0.9998 0.0077 0.0168 -0.0037
 + - param set #17 has cost=0.970938 [o=23 t=15]
 + -- Parameters = 17.9080 1.8879 -8.1767 -12.9610 -2.4658 -8.3129 1.0639 1.0223 0.9628 -0.0056 -0.0008 -0.0021
 + - param set #18 has cost=0.974264 [o=32 t=14]
 + -- Parameters = 4.6771 4.1210 -3.7630 -13.4376 -3.1181 27.8101 1.0052 0.9761 1.0051 0.0181 -0.0028 0.0020
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0146 XXX
 + --- dist(#3,#1) = 0.177 
 + --- dist(#4,#1) = 0.5 
 + --- dist(#5,#1) = 0.136 
 + --- dist(#6,#1) = 0.487 
 + --- dist(#7,#1) = 0.347 
 + --- dist(#8,#1) = 0.199 
 + --- dist(#9,#1) = 0.46 
 + --- dist(#10,#1) = 0.509 
 + --- dist(#11,#1) = 0.486 
 + --- dist(#12,#1) = 0.357 
 + --- dist(#13,#1) = 0.355 
 + --- dist(#14,#1) = 0.381 
 + --- dist(#15,#1) = 0.346 
 + --- dist(#16,#1) = 0.224 
 + --- dist(#17,#1) = 0.322 
 + - cast out 1 parameter set for being too close to best set
 + - Total coarse refinement net CPU time = 0.0 s; 5331 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=265.981 usiz=398.453
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 18 cases
 + 65720 total points stored in 129 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.841148 * [o=0 t=0]
 + -- Parameters = -0.0128 0.0242 3.8791 -0.0103 1.6740 -1.1934 0.9750 0.9869 0.9256 0.0052 -0.0127 0.0154
 + - cost(#2)=0.952140   [o=2 t=1]
 + -- Parameters = -0.7813 -6.8503 -7.9472 0.9306 -6.9638 -1.8878 1.0059 1.0012 0.9537 0.0072 0.0050 0.0121
 + - cost(#3)=0.955983   [o=24 t=8]
 + -- Parameters = 8.5379 6.1751 -5.5881 -4.4451 7.0663 -6.2550 1.0794 0.9532 0.8795 -0.0152 0.0140 0.0547
 + - cost(#4)=0.961039   [o=22 t=5]
 + -- Parameters = 38.5287 26.0202 -36.0923 28.3580 12.2772 -2.9138 1.0079 1.0014 1.0058 0.0137 0.0094 0.0026
 + - cost(#5)=0.965530   [o=1 t=2]
 + -- Parameters = 7.8334 -3.9658 -7.0219 -4.8651 -7.1789 -8.2289 0.9944 0.9844 1.0196 0.0047 0.0132 0.0048
 + - cost(#6)=0.964640   [o=35 t=13]
 + -- Parameters = 29.6633 8.8861 6.9343 19.6680 -4.1185 -44.9949 1.0354 1.0034 0.9827 0.0029 0.0033 -0.0003
 + - cost(#7)=0.966120   [o=43 t=16]
 + -- Parameters = -11.1072 2.0367 -2.7729 -4.3142 -7.5080 10.4543 0.9506 0.9750 0.8882 0.0822 -0.0175 0.0096
 + - cost(#8)=0.966670   [o=5 t=3]
 + -- Parameters = 5.8605 -6.0508 -8.2756 -4.1989 -9.9535 -9.3579 1.0001 0.9858 1.0186 0.0076 0.0315 -0.0013
 + - cost(#9)=0.966941   [o=17 t=7]
 + -- Parameters = 36.8215 28.2605 18.7704 28.5746 4.8374 -41.4552 1.0411 1.0024 0.9982 -0.0006 -0.0003 0.0116
 + - cost(#10)=0.966846   [o=8 t=12]
 + -- Parameters = 35.0502 26.1535 -36.8204 25.8576 11.8314 3.0362 1.0076 1.0011 0.9990 0.0015 0.0015 -0.0005
 + - cost(#11)=0.967140   [o=55 t=4]
 + -- Parameters = 28.9004 8.5183 7.6353 19.0722 -4.0464 -44.9423 1.0155 1.0149 0.9933 -0.0011 0.0033 0.0018
 + - cost(#12)=0.969824   [o=87 t=6]
 + -- Parameters = -22.9177 -4.1244 4.6845 4.8527 -4.0235 30.9777 1.1068 0.9904 0.9998 0.0077 0.0168 -0.0037
 + - cost(#13)=0.969784   [o=63 t=9]
 + -- Parameters = 24.9981 -2.7745 5.6062 31.9611 -25.2841 -31.1052 1.0376 0.9764 0.9671 -0.0021 -0.0110 0.0050
 + - cost(#14)=0.970981   [o=14 t=10]
 + -- Parameters = -26.8335 1.6435 7.4081 -4.9590 -6.0178 33.1176 1.0008 0.9605 0.9959 0.0082 -0.0007 0.0118
 + - cost(#15)=0.970270   [o=18 t=11]
 + -- Parameters = -22.7428 -9.2314 5.2517 -16.1419 -29.4327 28.7314 1.0545 1.0110 0.9950 0.0012 0.0025 0.0018
 + - cost(#16)=0.972409   [o=23 t=15]
 + -- Parameters = 17.9080 1.8879 -8.1767 -12.9610 -2.4658 -8.3129 1.0639 1.0223 0.9628 -0.0056 -0.0008 -0.0021
 + - cost(#17)=0.975342   [o=32 t=14]
 + -- Parameters = 4.6771 4.1210 -3.7630 -13.4376 -3.1181 27.8101 1.0052 0.9761 1.0051 0.0181 -0.0028 0.0020
 + - cost(#18)=0.944064   [o=-2 t=-2]
 + -- Parameters = -0.0146 -1.2983 0.7247 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 18 cases
 + - cost(#1)=0.841070 * [o=0 t=0]
 + -- Parameters = 0.0106 0.0417 3.9179 -0.0060 1.6592 -1.1859 0.9762 0.9867 0.9258 0.0052 -0.0129 0.0149
 + - cost(#2)=0.951950   [o=2 t=1]
 + -- Parameters = -0.7585 -6.8212 -8.0316 0.9533 -6.9606 -1.9176 1.0071 1.0002 0.9520 0.0069 0.0048 0.0114
 + - cost(#3)=0.950103   [o=24 t=8]
 + -- Parameters = 7.4375 5.5546 -6.7862 -4.1578 6.1038 -5.6700 1.0752 0.9630 0.8769 -0.0135 0.0229 0.0770
 + - cost(#4)=0.960926   [o=22 t=5]
 + -- Parameters = 38.5417 26.0231 -36.0927 28.3540 12.2742 -2.9186 1.0078 1.0013 1.0057 0.0137 0.0167 0.0026
 + - cost(#5)=0.965440   [o=1 t=2]
 + -- Parameters = 7.8335 -3.9409 -7.0611 -4.8620 -7.1524 -8.1961 0.9935 0.9834 1.0195 0.0048 0.0139 0.0057
 + - cost(#6)=0.964468   [o=35 t=13]
 + -- Parameters = 29.7216 8.9324 6.9041 19.7701 -4.1094 -44.9957 1.0361 1.0041 0.9808 0.0032 0.0106 -0.0007
 + - cost(#7)=0.965514   [o=43 t=16]
 + -- Parameters = -11.0176 2.0318 -3.0971 -4.0275 -7.7300 10.2620 0.9507 0.9734 0.8926 0.0827 -0.0180 0.0164
 + - cost(#8)=0.966232   [o=5 t=3]
 + -- Parameters = 5.9368 -5.6419 -8.3701 -4.3603 -10.0415 -9.4798 0.9960 0.9831 1.0198 0.0188 0.0342 -0.0002
 + - cost(#9)=0.966896   [o=17 t=7]
 + -- Parameters = 36.8140 28.2543 18.7714 28.5993 4.8478 -41.4737 1.0411 1.0024 0.9983 -0.0006 0.0071 0.0116
 + - cost(#10)=0.966498   [o=8 t=12]
 + -- Parameters = 35.0258 26.1557 -36.8184 25.9040 11.8229 3.3170 1.0076 1.0019 0.9987 0.0015 0.0093 0.0002
 + - cost(#11)=0.966936   [o=55 t=4]
 + -- Parameters = 28.9673 8.6220 7.5968 19.2532 -4.1288 -44.9741 1.0162 1.0147 0.9929 -0.0011 0.0030 0.0017
 + - cost(#12)=0.969413   [o=87 t=6]
 + -- Parameters = -22.8929 -4.1724 4.7465 4.8759 -3.9333 30.9364 1.1067 0.9909 1.0048 0.0087 0.0254 -0.0027
 + - cost(#13)=0.969752   [o=63 t=9]
 + -- Parameters = 25.0045 -2.7604 5.6714 31.9555 -25.2802 -31.1012 1.0377 0.9764 0.9672 -0.0021 -0.0109 0.0046
 + - cost(#14)=0.970595   [o=14 t=10]
 + -- Parameters = -26.8116 1.6530 7.5085 -4.8456 -6.1415 33.1720 1.0038 0.9551 0.9989 0.0152 -0.0005 0.0130
 + - cost(#15)=0.970219   [o=18 t=11]
 + -- Parameters = -22.7682 -9.2137 5.2376 -16.1332 -29.3976 28.6900 1.0545 1.0111 0.9960 0.0012 0.0023 0.0018
 + - cost(#16)=0.972398   [o=23 t=15]
 + -- Parameters = 17.9067 1.8836 -8.1796 -12.9636 -2.4617 -8.3152 1.0640 1.0224 0.9629 -0.0063 -0.0005 -0.0021
 + - cost(#17)=0.974986   [o=32 t=14]
 + -- Parameters = 4.6336 4.1051 -3.7887 -13.4555 -3.1668 27.7161 1.0044 0.9723 1.0044 0.0183 -0.0049 -0.0086
 + - cost(#18)=0.841525   [o=-2 t=-2]
 + -- Parameters = -0.1260 0.0286 3.8902 0.0174 1.7022 -1.5485 0.9726 0.9867 0.9253 0.0053 -0.0046 0.0137
 + - case #1 [o=0 t=0] is now the best
 + - Initial  cost = 0.841070
 + - Initial fine Parameters = 0.0106 0.0417 3.9179 -0.0060 1.6592 -1.1859 0.9762 0.9867 0.9258 0.0052 -0.0129 0.0149
 + - Finalish cost = 0.840087 ; 653 funcs
 + - ini Finalish Parameters = 0.0717 0.4043 4.0319 0.0402 0.9076 -1.0517 0.9758 0.9852 0.9203 0.0073 -0.0153 0.0008
 + - Final    cost = 0.840087 ; 269 funcs
 + Final fine fit Parameters:
       x-shift=  0.0717   y-shift=  0.4046   z-shift=  4.0318  ...  enorm=  4.0527 mm
       z-angle=  0.0393   x-angle=  0.9067   y-angle= -1.0502  ...  total=  1.3878 deg
       x-scale=  0.9758   y-scale=  0.9852   z-scale=  0.9203  ...  vol3D=  0.8848 = base bigger than source
     y/x-shear=  0.0072 z/x-shear= -0.0153 z/y-shear=  0.0008
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.0717 0.4046 4.0318 0.0393 0.9067 -1.0502 0.9758 0.9852 0.9203 0.0072 -0.0153 0.0008
++ Unloading unneeded data
++ Wrote -1Dmatrix_save ./MPRAGE.GB21_unif_al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 34.3
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_MPRAGE.GB21_unif_lr_al_junk -overwrite ./MPRAGE.GB21_unif_unflipped_ns+orig
++ processing ./MPRAGE.GB21_unif_unflipped_ns+orig ...
#Script is running (command trimmed):
  3dAllineate -lpa -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./__tt_MPRAGE.GB21_unif_lr_al_junk+orig -prefix ./MPRAGE.GB21_unif_flip_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB21_unif_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_MPRAGE.GB21_unif_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4472943 voxels in -source_automask+2
++ Zero-pad: zbot=8 ztop=0
++ 76396 voxels [10.3%] in weight mask
++ Number of points for matching = 76396
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.604 52.766 45.889 (index)
 + source center of mass = 111.361 191.054 160.909 (index)
 + source-target CM = -0.909 -1.298 0.725 (xyz)
 + estimated center of mass shifts = -0.909 -1.298 0.725
++ shift param auto-range: -72.4..70.6 -84.0..81.4 -76.8..78.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.908882 .. 9.091118  center = -0.908882
 + Range param#2 [y-shift] = -11.298271 .. 8.701729  center = -1.298271
 + Range param#3 [z-shift] = -9.275291 .. 10.724709  center = 0.724709
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.908882 .. 39.091118  center = -0.908882
 + Range param#2 [y-shift] = -41.298271 .. 38.701729  center = -1.298271
 + Range param#3 [z-shift] = -39.275291 .. 40.724709  center = 0.724709
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -40.909 ..   39.091
 +       y-shift =  -41.298 ..   38.702
 +       z-shift =  -39.275 ..   40.725
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4472943 [out of 23184225] voxels
 + base mask has 95790 [out of 741468] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=265.981 usiz=398.453
 + - copying weight image
 + - using 76396 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 66447 total points stored in 128 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#*[#1=0.989643] **[#2=0.977522] *+o*[#5=0.977252] **[#6=0.97285] *.-.*[#13=0.972496] *+*[#21=0.970589] *o*[#24=0.963404] *o+-------$*[#5361=0.963196] *--.*[#9869=0.962183] *o
 + - best 88 costs found:
   o= 0 v= 0.962183:  26.02  26.84 -37.22 -15.05   4.71  12.78  [rand]
   o= 1 v= 0.962543:  32.92  28.20  13.68  31.95   9.87 -34.85  [rand]
   o= 2 v= 0.963196:  30.93  10.50   3.47  23.31  -3.26 -40.47  [rand]
   o= 3 v= 0.963404:  -7.58  -7.96  -5.94   7.50  -7.50   7.50  [grid]
   o= 4 v= 0.964756:   5.76  -7.96  -5.94  -7.50  -7.50   7.50  [grid]
   o= 5 v= 0.965190: -32.30  28.66   5.13  42.54   9.20  25.31  [rand]
   o= 6 v= 0.966032:  23.29 -11.64   5.25  27.51 -29.30 -27.65  [rand]
   o= 7 v= 0.966063: -27.84  26.84 -37.22 -15.05   4.71  12.78  [rand]
   o= 8 v= 0.966154:  28.71  33.31 -36.09  24.31  11.89   2.84  [rand]
   o= 9 v= 0.966269:  17.59   4.56 -13.87 -16.04  -3.33 -12.13  [rand]
   o=10 v= 0.966337: -11.37  25.97  22.22 -34.95   5.03  42.69  [rand]
   o=11 v= 0.966569:   5.76  -7.96   7.39  -7.50   7.50  -7.50  [grid]
   o=12 v= 0.966973: -34.74  28.20 -12.23  31.95   9.87  34.85  [rand]
   o=13 v= 0.967037:  -7.58   5.37  -5.94   7.50  -7.50  30.00  [grid]
   o=14 v= 0.967144:   5.98   7.78  -2.76 -42.18 -25.76  19.54  [rand]
   o=15 v= 0.967345: -27.58  25.37 -25.94  30.00  30.00   7.50  [grid]
   o=16 v= 0.967488:  33.42  15.29   9.33  16.34  -8.64 -40.54  [rand]
   o=17 v= 0.967550: -33.34  13.05   6.32  -8.22   9.03  36.72  [rand]
   o=18 v= 0.967580:  25.76  25.37 -25.94  30.00  30.00   7.50  [grid]
   o=19 v= 0.967635:  17.59   4.56 -13.87  16.04  -3.33 -12.13  [rand]
   o=20 v= 0.967894:  -7.58  -7.96  -5.94   7.50  -7.50  30.00  [grid]
   o=21 v= 0.967959:   5.76  -7.96   7.39  30.00 -30.00  30.00  [grid]
   o=22 v= 0.968373:  33.73 -23.55 -13.58  17.65 -21.98   4.20  [rand]
   o=23 v= 0.968493:  -7.58  25.37  27.39 -30.00  -7.50  30.00  [grid]
   o=24 v= 0.968583: -27.58   5.37   7.39  -7.50   7.50  30.00  [grid]
   o=25 v= 0.968613:  23.00   5.63  14.65 -13.51 -15.92  -9.43  [rand]
   o=26 v= 0.968709:  25.76  -7.96  -5.94  30.00  -7.50   7.50  [grid]
   o=27 v= 0.968847: -32.30  28.66  -3.68  42.54   9.20  25.31  [rand]
   o=28 v= 0.969053:  28.71  33.31 -36.09  24.31  11.89  -2.84  [rand]
   o=29 v= 0.969066:  25.76   5.37   7.39  30.00   7.50   7.50  [grid]
   o=30 v= 0.969078:   9.35 -10.14  16.36  -7.51  21.00 -38.82  [rand]
   o=31 v= 0.969358:  30.93  10.50   3.47  23.31   3.26 -40.47  [rand]
   o=32 v= 0.969384:  -7.58   5.37  -5.94   7.50   7.50  30.00  [grid]
   o=33 v= 0.969441: -27.58   5.37  -5.94  -7.50  -7.50  -7.50  [grid]
   o=34 v= 0.969569: -25.29  28.83 -32.72  27.62  21.02  -5.11  [rand]
   o=35 v= 0.969681: -33.12  27.75 -35.42  40.41  19.09  40.75  [rand]
   o=36 v= 0.969685:   5.76  25.37   7.39   7.50  30.00  -7.50  [grid]
   o=37 v= 0.969689: -24.82  -8.23  14.65 -13.51 -15.92  -9.43  [rand]
   o=38 v= 0.969739:  25.76  -7.96   7.39  30.00 -30.00   7.50  [grid]
   o=39 v= 0.969801:  34.51 -30.80   3.83  13.33   5.58  13.04  [rand]
   o=40 v= 0.969846:  33.73  20.95  15.03  17.65  21.98   4.20  [rand]
   o=41 v= 0.969855: -30.69   9.44  14.69   4.50   6.71  -7.94  [rand]
   o=42 v= 0.969884:  25.76  -7.96   7.39  30.00 -30.00  -7.50  [grid]
   o=43 v= 0.969891:  35.74  15.93  22.98   5.26 -41.39 -40.03  [rand]
   o=44 v= 0.969895:  31.58  13.39  12.53  11.16  -9.40 -34.39  [rand]
   o=45 v= 0.969962:  20.13  -5.33   5.03  37.69 -26.76   3.08  [rand]
   o=46 v= 0.970219:  17.59   4.56 -13.87 -16.04   3.33 -12.13  [rand]
   o=47 v= 0.970314: -32.30  28.66  -3.68  42.54  -9.20 -25.31  [rand]
   o=48 v= 0.970506:  23.00  -8.23  14.65  13.51 -15.92   9.43  [rand]
   o=49 v= 0.970524:  25.76   5.37  -5.94   7.50   7.50   7.50  [grid]
   o=50 v= 0.970579:  32.87  30.62  -6.99 -12.26 -17.56  17.80  [rand]
   o=51 v= 0.970589:   5.76   5.37  -5.94   7.50  -7.50   7.50  [grid]
   o=52 v= 0.970699: -27.58   5.37   7.39 -30.00 -30.00  30.00  [grid]
   o=53 v= 0.970885:   5.76  -7.96  -5.94   7.50  -7.50   7.50  [grid]
   o=54 v= 0.970926:   5.76   5.37  -5.94  -7.50   7.50  -7.50  [grid]
   o=55 v= 0.970943:  33.95  34.38 -13.53 -40.22  24.26  41.52  [rand]
   o=56 v= 0.970958:  25.76  -7.96   7.39  30.00 -30.00 -30.00  [grid]
   o=57 v= 0.971024:  33.95  34.38  14.97 -40.22  24.26  41.52  [rand]
   o=58 v= 0.971049:  14.94  25.98  -5.20 -21.02  -8.83 -40.31  [rand]
   o=59 v= 0.971106:   3.17  -7.52  -7.07   4.32 -22.85  18.95  [rand]
   o=60 v= 0.971111:  25.76   5.37   7.39   7.50  -7.50 -30.00  [grid]
   o=61 v= 0.971118: -36.33  28.21   3.83  13.33   5.58 -13.04  [rand]
   o=62 v= 0.971134:  35.74 -18.52  22.98  -5.26  41.39  40.03  [rand]
   o=63 v= 0.971160:   5.76  -7.96   7.39  -7.50   7.50 -30.00  [grid]
   o=64 v= 0.971202:   5.76  25.37   7.39 -30.00 -30.00  -7.50  [grid]
   o=65 v= 0.971206:  32.92  28.20  13.68 -31.95   9.87  34.85  [rand]
   o=66 v= 0.971216:   5.76  25.37   7.39  30.00  30.00  30.00  [grid]
   o=67 v= 0.971223: -32.30  28.66  -3.68  42.54  -9.20  25.31  [rand]
   o=68 v= 0.971231: -27.58   5.37  -5.94  -7.50   7.50  -7.50  [grid]
   o=69 v= 0.971239: -27.58   5.37   7.39   7.50   7.50  30.00  [grid]
   o=70 v= 0.971274:  33.96 -31.85  16.50 -11.68  29.04  39.38  [rand]
   o=71 v= 0.971288:  28.87   9.44  14.69   4.50   6.71   7.94  [rand]
   o=72 v= 0.971414: -30.69   9.44 -13.24   4.50  -6.71  -7.94  [rand]
   o=73 v= 0.971432:  23.29   9.04   5.25  27.51 -29.30  27.65  [rand]
   o=74 v= 0.971445: -33.40  25.69 -31.17  -9.69  21.75  40.77  [rand]
   o=75 v= 0.971471:  25.40  24.66  18.52 -15.82  17.65  37.25  [rand]
   o=76 v= 0.971472:  28.87   9.44  14.69  -4.50   6.71   7.94  [rand]
   o=77 v= 0.971531:  -7.58   5.37  -5.94  -7.50  -7.50  30.00  [grid]
   o=78 v= 0.971612:   5.76  25.37  27.39  30.00   7.50  -7.50  [grid]
   o=79 v= 0.971632:  21.41  28.33  -6.27   8.73 -38.75  33.73  [rand]
   o=80 v= 0.971728: -32.30  28.66   5.13  42.54  -9.20  25.31  [rand]
   o=81 v= 0.971844:   5.76  25.37  27.39  30.00   7.50 -30.00  [grid]
   o=82 v= 0.971878:  26.02  26.84 -37.22  15.05   4.71  12.78  [rand]
   o=83 v= 0.971905:  13.23  26.83  24.18  27.82  -2.77 -20.28  [rand]
   o=84 v= 0.971937:  26.02  26.84 -37.22 -15.05   4.71 -12.78  [rand]
   o=85 v= 0.971946:   5.76   5.37   7.39  -7.50   7.50 -30.00  [grid]
   o=86 v= 0.972044:  25.76  25.37  -5.94 -30.00   7.50  -7.50  [grid]
   o=87 v= 0.972108:   5.76  25.37   7.39  30.00  30.00   7.50  [grid]
 + - A little optimization:*[#11722=0.961231] *[#11724=0.959396] *[#11732=0.959342] *[#11734=0.958874] *[#11737=0.958712] *[#11739=0.9585] *[#11740=0.958445] *[#11743=0.95843] .*[#11757=0.957784] *[#11759=0.956222] *[#11760=0.955797] *[#11762=0.954551] *[#11767=0.953346] *[#11769=0.952129] *[#11774=0.950913] *[#11776=0.94992] *[#11787=0.949844] *[#11792=0.949827] ..*[#11865=0.945742] *[#11869=0.944837] *[#11879=0.944474] *[#11882=0.944417] *[#11883=0.944332] *[#11884=0.944217] *[#11885=0.944096] *[#11886=0.943955] *[#11889=0.943767] *[#11892=0.943456] *[#11893=0.943393] *[#11894=0.943256] *[#11895=0.943114] *[#11896=0.943054] *[#11899=0.942871] *[#11900=0.942601] *[#11901=0.942475] *[#11902=0.942458] *[#11903=0.942211] *[#11904=0.942038] *[#11905=0.941832] *[#11906=0.94165] *[#11909=0.941631] *[#11910=0.941456] *[#11911=0.941211] *[#11912=0.941021] *[#11913=0.940526] *[#11914=0.940187] *[#11915=0.93916] *[#11916=0.937711] *[#11919=0.936613] *[#11921=0.93657] *[#11922=0.935853] *[#11924=0.935705] *[#11925=0.935504] *[#11926=0.935143] .....................................................................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.958430:  26.15  26.52 -37.99 -16.87   3.70  10.21  [rand]  [f=34]
   o= 1 v= 0.949827:  35.66  26.24  10.31  28.95  11.45 -42.23  [rand]  [f=47]
   o= 2 v= 0.955426:  33.33   9.09   5.65  21.58  -6.65 -42.03  [rand]  [f=47]
  *o= 3 v= 0.935143:  -9.97  -7.93  -6.64   1.92  -8.88  16.16  [grid]  [f=83]
   o= 4 v= 0.939446:   2.79  -4.13  -8.75  -5.12  -8.39   5.66  [grid]  [f=52]
   o= 5 v= 0.958900: -31.87  26.55   7.74  36.55  10.27  26.62  [rand]  [f=40]
   o= 6 v= 0.957433:  21.61  -7.19   3.56  33.87 -31.02 -28.83  [rand]  [f=40]
   o= 7 v= 0.959464: -27.18  26.15 -39.26 -16.59   3.05   9.74  [rand]  [f=44]
   o= 8 v= 0.957745:  32.98  33.39 -36.16  24.19  11.68   3.01  [rand]  [f=36]
   o= 9 v= 0.962394:  17.90   6.23 -13.24 -15.81  -2.70  -7.84  [rand]  [f=37]
   o=10 v= 0.960097: -12.09  27.66  21.77 -35.29  10.40  44.75  [rand]  [f=48]
   o=11 v= 0.964144:   6.36  -8.46   6.98  -6.68   8.23  -7.42  [grid]  [f=67]
   o=12 v= 0.956909: -37.22  26.99 -12.71  41.80   5.81  35.27  [rand]  [f=54]
   o=13 v= 0.956956:  -6.07   2.86  -5.33   2.62  -6.78  28.09  [grid]  [f=65]
   o=14 v= 0.960416:   5.43   8.46  -1.35 -36.34 -23.52  20.74  [rand]  [f=60]
   o=15 v= 0.964233: -27.66  25.50 -26.48  35.04  29.91   8.24  [grid]  [f=32]
   o=16 v= 0.959492:  32.81   9.67   9.32  15.98  -9.69 -40.30  [rand]  [f=49]
   o=17 v= 0.956742: -29.23  11.99   7.19  -6.48   9.69  36.54  [rand]  [f=49]
   o=18 v= 0.960360:  26.62  24.35 -28.16  34.46  29.19   6.84  [grid]  [f=44]
   o=19 v= 0.960452:  16.95   3.56 -10.65  12.59  -2.36  -8.47  [rand]  [f=56]
   o=20 v= 0.954016:  -9.05  -9.39  -0.46   5.27  -6.37  28.68  [grid]  [f=49]
   o=21 v= 0.963916:   5.93  -7.87   8.85  32.23 -29.02  37.93  [grid]  [f=55]
   o=22 v= 0.959194:  37.62 -24.12 -13.96  17.53 -18.65   3.10  [rand]  [f=33]
   o=23 v= 0.967997:  -7.56  25.37  27.90 -30.28  -7.45  29.98  [grid]  [f=28]
   o=24 v= 0.955332: -26.09  11.37   7.89  -7.16   9.39  32.20  [grid]  [f=51]
   o=25 v= 0.965549:  19.57   5.71  15.48 -13.87 -16.43  -8.87  [rand]  [f=33]
   o=26 v= 0.965371:  27.19  -7.12  -6.65  30.44  -6.85   6.52  [grid]  [f=53]
   o=27 v= 0.962809: -33.20  27.33   5.50  44.70   7.55  24.57  [rand]  [f=40]
   o=28 v= 0.951685:  37.25  33.18 -34.71  19.10  15.16  -0.22  [rand]  [f=42]
   o=29 v= 0.965883:  25.77   5.23   5.94  29.84   6.78   6.64  [grid]  [f=47]
   o=30 v= 0.962764:   9.60 -10.05  16.16 -11.10  22.70 -34.08  [rand]  [f=61]
   o=31 v= 0.961063:  32.47   8.03   3.82  23.99  -2.80 -42.29  [rand]  [f=53]
   o=32 v= 0.961358: -10.78   4.14  -5.82   7.45   6.99  29.42  [grid]  [f=39]
   o=33 v= 0.963498: -26.76   6.15  -6.20  -4.23  -6.54  -6.68  [grid]  [f=63]
   o=34 v= 0.964941: -27.86  27.91 -32.81  27.58  21.35  -7.26  [rand]  [f=47]
   o=35 v= 0.964261: -37.13  26.55 -34.98  39.84  19.27  38.41  [rand]  [f=51]
   o=36 v= 0.965705:   4.45  23.78   6.70   7.09  30.97  -7.38  [grid]  [f=49]
   o=37 v= 0.968979: -24.53  -7.87  14.90 -13.56 -15.72  -9.54  [rand]  [f=39]
   o=38 v= 0.965583:  29.49  -7.71   7.77  30.12 -30.40   6.77  [grid]  [f=33]
   o=39 v= 0.963362:  37.87 -33.76  -1.03  14.43   9.27   8.23  [rand]  [f=58]
   o=40 v= 0.966940:  34.63  20.44  15.17  21.82  22.51   4.16  [rand]  [f=39]
   o=41 v= 0.968721: -30.97   9.92  14.24   4.64   6.90  -7.77  [rand]  [f=33]
   o=42 v= 0.960757:  29.64  -9.38   4.95  30.58 -31.74  -4.10  [grid]  [f=48]
   o=43 v= 0.963747:  36.40  23.38  22.08  -2.05 -40.06 -44.61  [rand]  [f=47]
   o=44 v= 0.957798:  35.30   8.41   9.39  16.53 -14.34 -43.89  [rand]  [f=66]
   o=45 v= 0.959164:  26.38  -6.40   7.11  37.09 -27.14  -1.08  [rand]  [f=40]
   o=46 v= 0.963544:  19.52   5.51 -16.49 -15.98   0.37 -14.24  [rand]  [f=40]
   o=47 v= 0.968471: -32.77  29.39  -3.96  42.59  -8.60 -25.52  [rand]  [f=34]
   o=48 v= 0.961483:  22.87  -7.25  11.82  17.03 -16.51  11.79  [rand]  [f=51]
   o=49 v= 0.960336:  18.09   8.59  -4.83   6.23   2.26   0.72  [grid]  [f=48]
   o=50 v= 0.965510:  35.70  32.66  -4.26  -8.27 -26.67  20.61  [rand]  [f=42]
   o=51 v= 0.944214:   3.07  -5.29  -7.99   3.94  -9.27   7.31  [grid]  [f=63]
   o=52 v= 0.960016: -27.25   0.08   7.49 -29.93 -29.67  31.87  [grid]  [f=76]
   o=53 v= 0.939096:  -0.75  -7.07  -8.60  -0.36  -9.63   9.20  [grid]  [f=83]
   o=54 v= 0.955132:   9.92   6.46  -5.44  -5.72   5.07  -3.90  [grid]  [f=52]
   o=55 v= 0.961814:  33.99  31.45  -7.78 -43.16  25.50  42.03  [rand]  [f=47]
   o=56 v= 0.957638:  21.19  -7.84   4.70  29.34 -29.77 -29.57  [grid]  [f=51]
   o=57 v= 0.963406:  32.26  28.60  20.60 -39.93  25.72  42.46  [rand]  [f=42]
   o=58 v= 0.960787:  17.24  27.21  -5.63 -24.39 -11.06 -43.39  [rand]  [f=39]
   o=59 v= 0.950801:   1.57  -8.55  -4.05   5.08 -12.52  18.27  [rand]  [f=83]
   o=60 v= 0.966864:  27.01   1.43   6.28   8.57 -11.42 -32.18  [grid]  [f=49]
   o=61 v= 0.961682: -36.33  27.84   4.63  18.73   4.65 -12.60  [rand]  [f=38]
   o=62 v= 0.962252:  37.69 -17.02  23.07 -14.10  41.29  40.95  [rand]  [f=52]
   o=63 v= 0.967845:   6.11  -7.95   6.65  -7.64   7.25 -25.44  [grid]  [f=40]
   o=64 v= 0.967034:   5.30  27.76   4.72 -28.97 -32.06 -10.52  [grid]  [f=58]
   o=65 v= 0.955104:  33.95  27.43  20.36 -31.79  10.23  37.70  [rand]  [f=46]
   o=66 v= 0.960048:   1.02  25.14   7.79  31.34  29.43  31.84  [grid]  [f=36]
   o=67 v= 0.967139: -33.10  30.15  -6.04  43.44  -9.77  32.25  [rand]  [f=43]
   o=68 v= 0.966920: -26.41   1.20  -7.01 -10.34   6.64  -8.67  [grid]  [f=41]
   o=69 v= 0.962746: -26.55   6.16   4.36   5.73   8.18  28.24  [grid]  [f=54]
   o=70 v= 0.965887:  38.42 -26.50  16.49 -11.59  29.48  40.73  [rand]  [f=36]
   o=71 v= 0.965937:  28.47  10.10  16.13  11.55   7.14   7.80  [rand]  [f=43]
   o=72 v= 0.969911: -30.55   8.47 -13.75   3.99  -5.69  -8.06  [rand]  [f=34]
   o=73 v= 0.969738:  24.63  10.79   5.15  28.09 -29.52  28.51  [rand]  [f=45]
   o=74 v= 0.963884: -39.31  25.94 -29.11  -8.89  19.98  36.81  [rand]  [f=59]
   o=75 v= 0.961163:  29.38  24.08  19.30 -21.97  16.38  36.40  [rand]  [f=42]
   o=76 v= 0.967472:  28.10   8.02  13.66  -3.75   8.14   8.01  [rand]  [f=60]
   o=77 v= 0.959222:  -1.50   5.35  -4.31  -7.01  -7.73  30.16  [grid]  [f=52]
   o=78 v= 0.960355:   4.92  27.32  23.83  42.55   4.76 -12.63  [grid]  [f=41]
   o=79 v= 0.959895:  29.36  27.33  -3.83   5.51 -34.45  32.16  [rand]  [f=45]
   o=80 v= 0.969375: -32.17  30.18   5.28  42.62  -8.94  25.54  [rand]  [f=32]
   o=81 v= 0.962021:   7.53  27.27  23.47  31.34  12.23 -28.47  [grid]  [f=48]
   o=82 v= 0.953921:  33.59  27.27 -36.81  19.60  10.40   7.41  [rand]  [f=51]
   o=83 v= 0.957977:   9.34  30.38  20.69  36.73  10.24 -25.94  [rand]  [f=63]
   o=84 v= 0.970106:  25.53  26.80 -36.46 -14.51   5.03  -8.02  [rand]  [f=41]
   o=85 v= 0.964486:   5.13   4.44   5.45  -7.96   3.61 -30.97  [grid]  [f=40]
   o=86 v= 0.963266:  21.64  23.29  -5.43 -30.88   5.36  -1.53  [grid]  [f=49]
   o=87 v= 0.967775:   4.14  28.37   7.83  28.43  27.96   8.62  [grid]  [f=33]
 + - saving # 3 for use with twobest
 + - saving #53 for use with twobest
 + - saving # 4 for use with twobest
 + - skip #51 for twobest: too close to set #53
 + - saving # 1 for use with twobest
 + - saving #59 for use with twobest
 + - saving #28 for use with twobest
 + - saving #82 for use with twobest
 + - saving #20 for use with twobest
 + - saving #65 for use with twobest
 + - saving #54 for use with twobest
 + - saving #24 for use with twobest
 + - saving # 2 for use with twobest
 + - skip #17 for twobest: too close to set #24
 + - saving #12 for use with twobest
 + - saving #13 for use with twobest
 + - saving # 6 for use with twobest
 + - saving #56 for use with twobest
 + - saving # 8 for use with twobest
 + - saving #44 for use with twobest
 + - saving #83 for use with twobest
 + - saving # 0 for use with twobest
 + - saving # 5 for use with twobest
 + - saving #45 for use with twobest
 + - saving #22 for use with twobest
 + - saving #77 for use with twobest
 + - saving # 7 for use with twobest
 + - saving #16 for use with twobest
 + - saving #79 for use with twobest
 + - saving #52 for use with twobest
 + - saving #66 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=265.981 usiz=398.453
 + - retaining old weight image
 + - using 76396 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 65968 total points stored in 128 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.946012 [o=3 t=0]
 + -- Parameters = -10.2435 -6.9028 -6.3614 1.0201 -8.4561 17.2102 0.9961 0.9980 0.9941 0.0001 -0.0022 0.0014
 + - param set #2 has cost=0.943658 [o=53 t=1]
 + -- Parameters = -0.8415 -6.8836 -8.9977 -0.9236 -8.8805 9.7769 1.0516 0.9944 0.9828 -0.0020 0.0014 0.0013
 + - param set #3 has cost=0.945649 [o=4 t=2]
 + -- Parameters = 2.7810 -4.0867 -8.5583 -5.4714 -8.6767 7.2668 1.0388 0.9985 0.9919 0.0015 0.0017 0.0002
 + - param set #4 has cost=0.954965 [o=1 t=3]
 + -- Parameters = 35.8602 26.2993 10.3282 28.9893 11.4562 -42.1802 1.0401 1.0025 0.9974 -0.0005 0.0009 0.0009
 + - param set #5 has cost=0.959947 [o=59 t=4]
 + -- Parameters = 1.7359 -8.4594 -3.9443 5.9303 -12.5412 17.9405 1.0085 1.0001 0.9918 0.0135 -0.0012 0.0001
 + - param set #6 has cost=0.958982 [o=28 t=5]
 + -- Parameters = 37.2432 33.1916 -34.7404 19.0802 15.1493 -0.2294 1.0001 1.0001 1.0001 -0.0000 0.0000 -0.0000
 + - param set #7 has cost=0.959687 [o=82 t=6]
 + -- Parameters = 34.2267 27.2048 -36.6343 19.7638 10.1407 7.1269 1.0363 0.9994 0.9964 -0.0025 -0.0019 -0.0020
 + - param set #8 has cost=0.961372 [o=20 t=7]
 + -- Parameters = -8.9957 -9.4629 -0.6086 5.2318 -6.4152 28.6465 0.9976 0.9965 1.0031 0.0002 0.0119 -0.0008
 + - param set #9 has cost=0.963642 [o=65 t=8]
 + -- Parameters = 33.7550 27.3205 20.6040 -32.1692 10.2045 37.8723 0.9995 0.9979 0.9986 0.0007 -0.0010 -0.0001
 + - param set #10 has cost=0.961581 [o=54 t=9]
 + -- Parameters = 10.2081 6.3644 -6.1301 -5.1444 5.3059 -4.4645 1.0012 0.9973 0.9933 0.0029 -0.0021 0.0047
 + - param set #11 has cost=0.960941 [o=24 t=10]
 + -- Parameters = -26.0926 11.9955 8.0452 -7.2455 9.5059 32.4708 1.0418 1.0019 1.0019 -0.0006 0.0002 0.0005
 + - param set #12 has cost=0.956447 [o=2 t=11]
 + -- Parameters = 33.6940 8.7667 5.2595 21.4027 -6.3937 -42.0184 1.0555 1.0035 1.0024 0.0016 0.0029 0.0015
 + - param set #13 has cost=0.965194 [o=12 t=12]
 + -- Parameters = -37.1856 26.9607 -12.7149 41.7845 5.8150 35.2162 0.9998 0.9984 1.0005 -0.0001 -0.0004 0.0012
 + - param set #14 has cost=0.950712 [o=13 t=13]
 + -- Parameters = -9.1594 2.5026 -4.2367 2.1304 -8.7019 25.1849 0.8502 1.0326 0.9844 0.0051 -0.0296 0.0028
 + - param set #15 has cost=0.964225 [o=6 t=14]
 + -- Parameters = 21.4965 -11.4530 3.8286 34.3261 -31.0429 -28.4016 1.0002 0.9949 1.0018 -0.0013 -0.0011 0.0021
 + - param set #16 has cost=0.964745 [o=56 t=15]
 + -- Parameters = 21.5775 -8.6365 4.2685 34.0747 -29.9872 -29.2270 1.0071 1.0021 0.9945 -0.0010 0.0005 0.0017
 + - param set #17 has cost=0.963875 [o=8 t=16]
 + -- Parameters = 37.4201 33.1603 -36.3484 24.3655 11.3663 2.8280 0.9996 0.9996 0.9997 -0.0004 -0.0005 -0.0003
*[#17509=0.93502] *[#17510=0.934654] *[#17515=0.934638] *[#17517=0.934016] *[#17518=0.933486] *[#17519=0.9323] *[#17521=0.931701] *[#17524=0.931324] *[#17525=0.930997] *[#17528=0.93072] *[#17530=0.930663] *[#17532=0.929841] *[#17533=0.929589] *[#17534=0.929204] *[#17536=0.928999] 
 + - param set #18 has cost=0.928999 [o=-1 t=-1]
 + -- Parameters = 0.9733 0.1718 3.2780 -0.1292 0.4678 10.9245 0.9748 1.0158 0.9711 -0.0061 -0.0007 0.0170
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.153 
 + --- dist(#3,#1) = 0.148 
 + --- dist(#4,#1) = 0.14 
 + --- dist(#5,#1) = 0.179 
 + --- dist(#6,#1) = 0.59 
 + --- dist(#7,#1) = 0.588 
 + --- dist(#8,#1) = 0.475 
 + --- dist(#9,#1) = 0.499 
 + --- dist(#10,#1) = 0.145 
 + --- dist(#11,#1) = 0.338 
 + --- dist(#12,#1) = 0.197 
 + --- dist(#13,#1) = 0.171 
 + --- dist(#14,#1) = 0.41 
 + --- dist(#15,#1) = 0.495 
 + --- dist(#16,#1) = 0.437 
 + --- dist(#17,#1) = 0.446 
 + --- dist(#18,#1) = 0.477 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=265.981 usiz=398.453
 + - retaining old weight image
 + - using 76396 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 65190 total points stored in 127 'TOHD(13.984)' bloks (0 duplicates)
*[#17538=0.927351] *[#17549=0.926947] *[#17557=0.921307] *[#17559=0.916892] *[#17566=0.915401] *[#17578=0.914426] *[#17579=0.914068] *[#17580=0.91374] *[#17581=0.913388] *[#17582=0.913083] *[#17583=0.912957] *[#17584=0.912812] *[#17585=0.912799] *[#17587=0.91275] *[#17588=0.912697] *[#17590=0.91266] *[#17593=0.912579] *[#17596=0.912361] *[#17600=0.912315] *[#17601=0.912269] *[#17602=0.912127] *[#17603=0.912043] *[#17604=0.911932] *[#17605=0.911914] *[#17606=0.911884] *[#17607=0.911854] *[#17608=0.911763] *[#17609=0.911749] *[#17610=0.911747] *[#17612=0.911707] *[#17613=0.911573] *[#17620=0.911454] *[#17621=0.911391] *[#17622=0.911289] *[#17623=0.911236] *[#17624=0.911215] *[#17625=0.911192] *[#17626=0.911176] *[#17627=0.911139] *[#17628=0.911078] *[#17629=0.911039] *[#17632=0.910982] *[#17638=0.910963] *[#17640=0.910927] *[#17641=0.91086] *[#17643=0.91078] *[#17644=0.910687] *[#17645=0.910652] *[#17647=0.910625] 
 + - param set #1 has cost=0.910625 [o=-1 t=-1]
 + -- Parameters = 1.0089 0.5171 4.2550 -0.7855 -0.2979 9.8072 0.9685 1.0069 0.8876 -0.0364 0.0164 -0.0042
 + - param set #2 has cost=0.950428 [o=53 t=1]
 + -- Parameters = -0.8510 -5.7613 -8.9033 -0.7050 -8.4689 9.4179 1.0852 0.9790 0.9839 -0.0075 0.0008 -0.0029
 + - param set #3 has cost=0.952413 [o=4 t=2]
 + -- Parameters = 2.8701 -3.2122 -9.2363 -5.6098 -8.5362 7.6605 1.0491 0.9863 0.9700 0.0013 0.0156 0.0028
 + - param set #4 has cost=0.957120 [o=3 t=0]
 + -- Parameters = -10.1143 -6.4762 -6.0610 0.4232 -7.9737 17.3465 0.9916 1.0019 0.9911 -0.0015 -0.0005 0.0003
 + - param set #5 has cost=0.958658 [o=13 t=13]
 + -- Parameters = -9.5151 2.7243 -4.3921 1.9936 -8.8461 24.0956 0.8408 1.0267 0.9876 0.0001 -0.0301 0.0048
 + - param set #6 has cost=0.958322 [o=1 t=3]
 + -- Parameters = 36.2391 26.5338 8.1890 28.5718 10.6968 -41.4868 1.0411 1.0050 0.9958 -0.0014 0.0001 -0.0002
 + - param set #7 has cost=0.960012 [o=2 t=11]
 + -- Parameters = 33.7037 8.6644 5.2226 21.2130 -6.4151 -41.9672 1.0557 1.0050 1.0039 0.0015 0.0038 0.0020
 + - param set #8 has cost=0.964140 [o=28 t=5]
 + -- Parameters = 37.3032 33.2246 -34.7504 19.0132 15.1402 -0.2684 1.0022 1.0259 1.0001 -0.0008 -0.0000 0.0003
 + - param set #9 has cost=0.964832 [o=82 t=6]
 + -- Parameters = 34.2259 27.1876 -36.6371 19.7628 10.1356 7.1288 1.0363 0.9995 0.9964 -0.0025 -0.0019 -0.0019
 + - param set #10 has cost=0.965630 [o=59 t=4]
 + -- Parameters = 1.5393 -7.8192 -3.7297 6.1176 -11.9035 17.5730 1.0142 0.9970 0.9903 0.0109 -0.0005 -0.0017
 + - param set #11 has cost=0.967754 [o=24 t=10]
 + -- Parameters = -25.9391 12.0782 8.1821 -7.2941 9.5844 32.4925 1.0446 1.0035 1.0026 -0.0003 0.0005 0.0006
 + - param set #12 has cost=0.967704 [o=20 t=7]
 + -- Parameters = -8.8354 -9.6294 -0.4174 5.2788 -6.5386 28.5645 0.9968 0.9895 1.0056 -0.0002 0.0112 -0.0015
 + - param set #13 has cost=0.969335 [o=54 t=9]
 + -- Parameters = 10.0709 6.4267 -6.3884 -5.0141 5.3800 -4.2935 1.0028 0.9923 0.9870 0.0024 -0.0003 0.0056
 + - param set #14 has cost=0.965340 [o=65 t=8]
 + -- Parameters = 34.1818 26.6272 21.1398 -32.4677 11.1760 38.8449 0.9933 0.9758 0.9884 0.0018 -0.0011 -0.0002
 + - param set #15 has cost=0.967230 [o=8 t=16]
 + -- Parameters = 36.5649 32.9129 -36.2376 23.8013 11.7118 2.9625 1.0257 0.9994 1.0016 0.0010 -0.0009 0.0005
 + - param set #16 has cost=0.968973 [o=6 t=14]
 + -- Parameters = 21.6034 -11.3459 3.9234 34.5197 -30.6890 -28.2995 0.9987 0.9948 1.0025 -0.0007 -0.0018 0.0112
 + - param set #17 has cost=0.963736 [o=56 t=15]
 + -- Parameters = 23.1715 -10.8639 4.6918 35.4443 -31.5023 -29.1069 1.0830 0.9523 0.8767 -0.0184 -0.0114 0.0099
 + - param set #18 has cost=0.969443 [o=12 t=12]
 + -- Parameters = -37.4192 26.6652 -12.8766 41.8133 5.8464 35.8216 1.0285 0.9982 0.9996 0.0002 -0.0007 0.0009
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.168 
 + --- dist(#3,#1) = 0.17 
 + --- dist(#4,#1) = 0.157 
 + --- dist(#5,#1) = 0.57 
 + --- dist(#6,#1) = 0.209 
 + --- dist(#7,#1) = 0.575 
 + --- dist(#8,#1) = 0.432 
 + --- dist(#9,#1) = 0.488 
 + --- dist(#10,#1) = 0.511 
 + --- dist(#11,#1) = 0.415 
 + --- dist(#12,#1) = 0.213 
 + --- dist(#13,#1) = 0.506 
 + --- dist(#14,#1) = 0.208 
 + --- dist(#15,#1) = 0.337 
 + --- dist(#16,#1) = 0.423 
 + --- dist(#17,#1) = 0.175 
 + --- dist(#18,#1) = 0.48 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=265.981 usiz=398.453
 + - retaining old weight image
 + - using 76396 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 65772 total points stored in 129 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.913786 [o=-1 t=-1]
 + -- Parameters = 0.6659 0.6678 4.6165 -0.8914 -0.3811 8.8659 0.9688 1.0107 0.8677 -0.0396 0.0404 -0.0127
 + - param set #2 has cost=0.955674 [o=53 t=1]
 + -- Parameters = -1.0905 -5.1881 -8.4811 -0.5409 -8.6483 10.5927 1.0974 0.9695 0.9831 -0.0032 0.0014 -0.0028
 + - param set #3 has cost=0.957035 [o=4 t=2]
 + -- Parameters = 2.9816 -3.4784 -9.3133 -5.9437 -8.4667 8.6407 1.0571 0.9839 0.9680 -0.0003 0.0234 0.0049
 + - param set #4 has cost=0.958045 [o=3 t=0]
 + -- Parameters = -10.2212 -6.0034 -4.5185 0.9505 -5.3467 17.7838 0.9847 1.0163 0.9993 -0.0044 -0.0058 0.0020
 + - param set #5 has cost=0.961437 [o=1 t=3]
 + -- Parameters = 36.1770 26.4019 8.0690 28.6247 10.5211 -41.5490 1.0586 1.0056 0.9952 -0.0012 0.0007 -0.0002
 + - param set #6 has cost=0.964831 [o=13 t=13]
 + -- Parameters = -9.4829 2.6803 -4.7038 2.2006 -9.3952 23.6938 0.8484 1.0273 0.9837 -0.0016 -0.0299 0.0093
 + - param set #7 has cost=0.962819 [o=2 t=11]
 + -- Parameters = 33.9366 8.5264 5.0601 20.7349 -6.5643 -41.9579 1.0531 1.0082 0.9955 0.0021 0.0033 0.0007
 + - param set #8 has cost=0.967948 [o=56 t=15]
 + -- Parameters = 22.9177 -11.2456 4.5140 35.4939 -31.4972 -28.4781 1.0846 0.9471 0.8703 -0.0189 -0.0116 0.0093
 + - param set #9 has cost=0.966761 [o=28 t=5]
 + -- Parameters = 37.9539 33.3749 -34.8361 18.9430 15.3755 0.0718 1.0030 1.0247 1.0051 0.0049 0.0007 0.0010
 + - param set #10 has cost=0.963656 [o=82 t=6]
 + -- Parameters = 36.2012 26.5685 -36.4982 18.9294 9.8633 7.5529 1.0297 0.9948 1.0029 -0.0033 -0.0012 -0.0019
 + - param set #11 has cost=0.966996 [o=65 t=8]
 + -- Parameters = 34.1937 26.6664 21.1469 -32.4277 11.1902 38.7545 0.9935 0.9736 0.9902 0.0011 -0.0011 -0.0006
 + - param set #12 has cost=0.970044 [o=59 t=4]
 + -- Parameters = 1.5135 -7.7505 -3.5729 6.0369 -11.8341 17.4410 1.0148 0.9980 0.9948 0.0101 0.0003 -0.0029
 + - param set #13 has cost=0.964262 [o=8 t=16]
 + -- Parameters = 37.4157 29.9569 -35.7782 21.5850 12.4645 1.2997 1.0288 0.9970 1.0118 0.0024 0.0005 0.0002
 + - param set #14 has cost=0.967343 [o=20 t=7]
 + -- Parameters = -8.3914 -8.7133 0.3310 5.6701 -7.2787 28.9285 0.9924 0.9455 1.0193 0.0056 -0.0000 -0.0012
 + - param set #15 has cost=0.972478 [o=24 t=10]
 + -- Parameters = -25.9178 12.0277 8.2446 -7.3389 9.5594 32.4784 1.0450 1.0019 1.0041 0.0001 0.0006 0.0002
 + - param set #16 has cost=0.972694 [o=6 t=14]
 + -- Parameters = 21.5342 -10.7150 3.9910 37.1777 -30.8560 -28.1420 0.9998 0.9956 1.0013 -0.0015 -0.0031 0.0113
 + - param set #17 has cost=0.970739 [o=54 t=9]
 + -- Parameters = 9.8540 6.4057 -6.7099 -4.7355 5.6258 -5.2110 1.0201 0.9794 0.9854 0.0027 0.0014 0.0036
 + - param set #18 has cost=0.972503 [o=12 t=12]
 + -- Parameters = -37.4251 26.6668 -12.8754 41.8167 5.8421 35.8231 1.0285 0.9982 0.9996 0.0002 0.0049 0.0009
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.185 
 + --- dist(#3,#1) = 0.177 
 + --- dist(#4,#1) = 0.208 
 + --- dist(#5,#1) = 0.56 
 + --- dist(#6,#1) = 0.565 
 + --- dist(#7,#1) = 0.514 
 + --- dist(#8,#1) = 0.505 
 + --- dist(#9,#1) = 0.317 
 + --- dist(#10,#1) = 0.493 
 + --- dist(#11,#1) = 0.419 
 + --- dist(#12,#1) = 0.223 
 + --- dist(#13,#1) = 0.415 
 + --- dist(#14,#1) = 0.224 
 + --- dist(#15,#1) = 0.19 
 + --- dist(#16,#1) = 0.332 
 + --- dist(#17,#1) = 0.476 
 + --- dist(#18,#1) = 0.423 
 + - Total coarse refinement net CPU time = 0.0 s; 5196 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=265.981 usiz=398.453
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 65720 total points stored in 129 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.916210 * [o=-1 t=-1]
 + -- Parameters = 0.6659 0.6678 4.6165 -0.8914 -0.3811 8.8659 0.9688 1.0107 0.8677 -0.0396 0.0404 -0.0127
 + - cost(#2)=0.957438   [o=53 t=1]
 + -- Parameters = -1.0905 -5.1881 -8.4811 -0.5409 -8.6483 10.5927 1.0974 0.9695 0.9831 -0.0032 0.0014 -0.0028
 + - cost(#3)=0.958585   [o=4 t=2]
 + -- Parameters = 2.9816 -3.4784 -9.3133 -5.9437 -8.4667 8.6407 1.0571 0.9839 0.9680 -0.0003 0.0234 0.0049
 + - cost(#4)=0.960446   [o=3 t=0]
 + -- Parameters = -10.2212 -6.0034 -4.5185 0.9505 -5.3467 17.7838 0.9847 1.0163 0.9993 -0.0044 -0.0058 0.0020
 + - cost(#5)=0.961920   [o=1 t=3]
 + -- Parameters = 36.1770 26.4019 8.0690 28.6247 10.5211 -41.5490 1.0586 1.0056 0.9952 -0.0012 0.0007 -0.0002
 + - cost(#6)=0.963720   [o=2 t=11]
 + -- Parameters = 33.9366 8.5264 5.0601 20.7349 -6.5643 -41.9579 1.0531 1.0082 0.9955 0.0021 0.0033 0.0007
 + - cost(#7)=0.963804   [o=82 t=6]
 + -- Parameters = 36.2012 26.5685 -36.4982 18.9294 9.8633 7.5529 1.0297 0.9948 1.0029 -0.0033 -0.0012 -0.0019
 + - cost(#8)=0.964440   [o=8 t=16]
 + -- Parameters = 37.4157 29.9569 -35.7782 21.5850 12.4645 1.2997 1.0288 0.9970 1.0118 0.0024 0.0005 0.0002
 + - cost(#9)=0.966119   [o=13 t=13]
 + -- Parameters = -9.4829 2.6803 -4.7038 2.2006 -9.3952 23.6938 0.8484 1.0273 0.9837 -0.0016 -0.0299 0.0093
 + - cost(#10)=0.967164   [o=28 t=5]
 + -- Parameters = 37.9539 33.3749 -34.8361 18.9430 15.3755 0.0718 1.0030 1.0247 1.0051 0.0049 0.0007 0.0010
 + - cost(#11)=0.967117   [o=65 t=8]
 + -- Parameters = 34.1937 26.6664 21.1469 -32.4277 11.1902 38.7545 0.9935 0.9736 0.9902 0.0011 -0.0011 -0.0006
 + - cost(#12)=0.968460   [o=20 t=7]
 + -- Parameters = -8.3914 -8.7133 0.3310 5.6701 -7.2787 28.9285 0.9924 0.9455 1.0193 0.0056 -0.0000 -0.0012
 + - cost(#13)=0.969052   [o=56 t=15]
 + -- Parameters = 22.9177 -11.2456 4.5140 35.4939 -31.4972 -28.4781 1.0846 0.9471 0.8703 -0.0189 -0.0116 0.0093
 + - cost(#14)=0.970766   [o=59 t=4]
 + -- Parameters = 1.5135 -7.7505 -3.5729 6.0369 -11.8341 17.4410 1.0148 0.9980 0.9948 0.0101 0.0003 -0.0029
 + - cost(#15)=0.972153   [o=54 t=9]
 + -- Parameters = 9.8540 6.4057 -6.7099 -4.7355 5.6258 -5.2110 1.0201 0.9794 0.9854 0.0027 0.0014 0.0036
 + - cost(#16)=0.973865   [o=24 t=10]
 + -- Parameters = -25.9178 12.0277 8.2446 -7.3389 9.5594 32.4784 1.0450 1.0019 1.0041 0.0001 0.0006 0.0002
 + - cost(#17)=0.973011   [o=12 t=12]
 + -- Parameters = -37.4251 26.6668 -12.8754 41.8167 5.8421 35.8231 1.0285 0.9982 0.9996 0.0002 0.0049 0.0009
 + - cost(#18)=0.973724   [o=6 t=14]
 + -- Parameters = 21.5342 -10.7150 3.9910 37.1777 -30.8560 -28.1420 0.9998 0.9956 1.0013 -0.0015 -0.0031 0.0113
 + - cost(#19)=0.988656   [o=-2 t=-2]
 + -- Parameters = -0.9089 -1.2983 0.7247 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.915808 * [o=-1 t=-1]
 + -- Parameters = 0.6554 0.7051 4.6029 -0.8339 -0.3334 8.6270 0.9702 1.0108 0.8637 -0.0365 0.0483 -0.0140
 + - cost(#2)=0.956808   [o=53 t=1]
 + -- Parameters = -1.0448 -5.2925 -8.4680 -0.7971 -8.7042 10.7976 1.0995 0.9688 0.9833 -0.0109 0.0013 -0.0027
 + - cost(#3)=0.958528   [o=4 t=2]
 + -- Parameters = 3.0153 -3.5131 -9.3311 -5.9485 -8.4979 8.6245 1.0565 0.9846 0.9675 -0.0008 0.0242 0.0041
 + - cost(#4)=0.957027   [o=3 t=0]
 + -- Parameters = -10.0110 -4.7394 -4.3142 0.5750 -4.4056 17.7303 0.9885 1.0106 0.9933 -0.0166 -0.0042 0.0061
 + - cost(#5)=0.961585   [o=1 t=3]
 + -- Parameters = 36.2231 26.3443 8.1109 28.5664 10.4938 -41.5021 1.0588 1.0059 0.9948 -0.0012 0.0010 -0.0084
 + - cost(#6)=0.963671   [o=2 t=11]
 + -- Parameters = 33.9696 8.4395 5.0630 20.7046 -6.5703 -41.9709 1.0522 1.0081 0.9956 0.0027 0.0036 0.0011
 + - cost(#7)=0.963180   [o=82 t=6]
 + -- Parameters = 36.2048 26.6196 -36.3927 18.9233 9.8830 7.6945 1.0285 0.9944 1.0025 0.0040 -0.0007 -0.0009
 + - cost(#8)=0.964162   [o=8 t=16]
 + -- Parameters = 37.4265 29.9739 -35.7508 21.5986 12.4933 1.3736 1.0324 0.9966 1.0118 0.0021 -0.0012 0.0085
 + - cost(#9)=0.965475   [o=13 t=13]
 + -- Parameters = -9.4653 2.8787 -4.6794 2.0779 -9.8251 23.2751 0.8459 1.0211 0.9860 -0.0114 -0.0306 0.0100
 + - cost(#10)=0.965511   [o=28 t=5]
 + -- Parameters = 38.9460 35.0920 -34.5811 18.8330 16.0405 0.4233 1.0156 1.0219 0.9990 0.0040 0.0021 -0.0006
 + - cost(#11)=0.966995   [o=65 t=8]
 + -- Parameters = 34.1729 26.7263 21.2330 -32.3923 11.1997 38.7177 0.9936 0.9733 0.9927 0.0013 -0.0011 -0.0005
 + - cost(#12)=0.968434   [o=20 t=7]
 + -- Parameters = -8.3956 -8.6928 0.3529 5.6523 -7.2532 28.9605 0.9925 0.9454 1.0183 0.0062 0.0003 -0.0011
 + - cost(#13)=0.968423   [o=56 t=15]
 + -- Parameters = 22.9874 -11.3563 4.4287 35.6710 -31.4783 -28.3439 1.0853 0.9517 0.8722 -0.0076 -0.0129 0.0080
 + - cost(#14)=0.970751   [o=59 t=4]
 + -- Parameters = 1.4974 -7.7248 -3.5646 6.0200 -11.7995 17.4578 1.0147 0.9986 0.9945 0.0099 0.0004 -0.0028
 + - cost(#15)=0.972063   [o=54 t=9]
 + -- Parameters = 9.7568 6.3509 -6.7179 -4.6619 5.6663 -5.2053 1.0191 0.9797 0.9843 0.0020 0.0016 0.0036
 + - cost(#16)=0.973863   [o=24 t=10]
 + -- Parameters = -25.9175 12.0255 8.2457 -7.3391 9.5593 32.4790 1.0450 1.0019 1.0041 0.0002 0.0006 0.0002
 + - cost(#17)=0.971607   [o=12 t=12]
 + -- Parameters = -36.8137 27.0046 -13.2250 41.6493 4.7027 36.8873 1.0296 0.9967 0.9975 0.0033 -0.0017 -0.0001
 + - cost(#18)=0.971916   [o=6 t=14]
 + -- Parameters = 21.9158 -10.9726 4.3984 37.4554 -29.6298 -28.0418 1.0307 1.0108 1.0099 -0.0015 -0.0041 0.0118
 + - cost(#19)=0.918663   [o=-2 t=-2]
 + -- Parameters = 0.8300 0.4652 4.8462 -0.5358 0.6367 9.5145 0.9560 1.0137 0.8596 -0.0199 0.0250 0.0063
 + - case #1 [o=-1 t=-1] is now the best
 + - Initial  cost = 0.915808
 + - Initial fine Parameters = 0.6554 0.7051 4.6029 -0.8339 -0.3334 8.6270 0.9702 1.0108 0.8637 -0.0365 0.0483 -0.0140
 + - Finalish cost = 0.915615 ; 481 funcs
 + - ini Finalish Parameters = 0.6426 0.6671 4.5843 -0.6657 -0.6205 8.5994 0.9694 1.0074 0.8652 -0.0293 0.0503 -0.0190
 + - Final    cost = 0.915595 ; 900 funcs
 + Final fine fit Parameters:
       x-shift=  0.6572   y-shift=  0.7000   z-shift=  4.6021  ...  enorm=  4.7012 mm
       z-angle= -0.6455   x-angle= -0.6912   y-angle=  8.6108  ...  total=  8.6664 deg
       x-scale=  0.9685   y-scale=  1.0083   z-scale=  0.8652  ...  vol3D=  0.8449 = base bigger than source
     y/x-shear= -0.0285 z/x-shear=  0.0515 z/y-shear= -0.0184
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.6572 0.7000 4.6021 -0.6455 -0.6912 8.6108 0.9685 1.0083 0.8652 -0.0285 0.0515 -0.0184
++ Unloading unneeded data
++ Wrote -1Dmatrix_save ./MPRAGE.GB21_unif_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 34.3
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB21_unif_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB21_unif_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5035431 voxels in -source_automask+2
++ Zero-pad: zbot=8 ztop=0
++ 76396 voxels [10.3%] in weight mask
++ Number of points for matching = 76396
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.604 52.766 45.889 (index)
 + source center of mass = 160.729 201.577 141.976 (index)
 + source-target CM = -0.118 -1.533 -3.220 (xyz)
 + estimated center of mass shifts = -0.118 -1.533 -3.220
++ shift param auto-range: -71.6..71.4 -84.2..81.1 -80.7..74.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.117584 .. 9.882416  center = -0.117584
 + Range param#2 [y-shift] = -11.532898 .. 8.467102  center = -1.532898
 + Range param#3 [z-shift] = -13.220253 .. 6.779747  center = -3.220253
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.117584 .. 39.882416  center = -0.117584
 + Range param#2 [y-shift] = -41.532898 .. 38.467102  center = -1.532898
 + Range param#3 [z-shift] = -43.220253 .. 36.779747  center = -3.220253
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -40.118 ..   39.882
 +       y-shift =  -41.533 ..   38.467
 +       z-shift =  -43.220 ..   36.780
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5035431 [out of 38091312] voxels
 + base mask has 95790 [out of 741468] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=296.179 usiz=382.802
 + - copying weight image
 + - using 76396 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 316.338 .. 1084.56; base clip 2811.46 .. 9940.47
 +  - versus source range 0 .. 1112.44; base range 0 .. 12989
 + 65720 total points stored in 129 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB21_unif_flip_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB21_unif_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5269179 voxels in -source_automask+2
++ Zero-pad: zbot=8 ztop=0
++ 76396 voxels [10.3%] in weight mask
++ Number of points for matching = 76396
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.604 52.766 45.889 (index)
 + source center of mass = 158.608 200.722 141.819 (index)
 + source-target CM = -1.603 -2.132 -3.330 (xyz)
 + estimated center of mass shifts = -1.603 -2.132 -3.330
++ shift param auto-range: -73.1..69.9 -84.8..80.5 -80.8..74.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.602676 .. 8.397324  center = -1.602676
 + Range param#2 [y-shift] = -12.131516 .. 7.868484  center = -2.131516
 + Range param#3 [z-shift] = -13.330383 .. 6.669617  center = -3.330383
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.602676 .. 38.397324  center = -1.602676
 + Range param#2 [y-shift] = -42.131516 .. 37.868484  center = -2.131516
 + Range param#3 [z-shift] = -43.330383 .. 36.669617  center = -3.330383
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -41.603 ..   38.397
 +       y-shift =  -42.132 ..   37.868
 +       z-shift =  -43.330 ..   36.670
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5269179 [out of 38091312] voxels
 + base mask has 95790 [out of 741468] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=299.523 usiz=381.144
 + - copying weight image
 + - using 76396 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 315.775 .. 1081.97; base clip 2811.46 .. 9940.47
 +  - versus source range 0 .. 1116.45; base range 0 .. 12989
 + 65720 total points stored in 129 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
No flip cost is 0.840105 for lpa cost function
Flip cost is 0.916215 for lpa cost function
Data does not need flipping
#++ Creating final output: skullstripped anat data
copying from dataset /mnt/ext5/GA/fmri_data/preproc_data/GB21/MPRAGE.GB21_unif_unflipped_ns+orig to /mnt/ext5/GA/fmri_data/preproc_data/GB21/MPRAGE.GB21_unif_ns+orig
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB21_unif_unflipped_ns+orig MPRAGE.GB21_unif_ns
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat MPRAGE.GB21_unif+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base \
 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off \
 -tshift off" \
 ./MPRAGE.GB21_unif_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB21_unif*

# Finished alignment successfully

auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input MPRAGE.GB21_unif_ns+orig -skull_strip_input no -unifize_input no
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ auto_warp.py version: 0.06
# Output directory /mnt/ext5/GA/fmri_data/preproc_data/GB21/awpy/
#Script is running:
  mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB21/awpy/
cd /mnt/ext5/GA/fmri_data/preproc_data/GB21/awpy/
#Script is running (command trimmed):
  3dcopy /mnt/ext5/GA/fmri_data/preproc_data/GB21/MPRAGE.GB21_unif_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#Script is running (command trimmed):
  3dcopy /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz ./base.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB21/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB21/awpy/anat.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ anat already stripped, re-using
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_15pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 1587.960100 ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (cubic final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m -base dataset __ats_tmp__ref_base.nii_15pad+tlrc has 5 sub-bricks; will only use #0
RMS[0] = 483.629 291.992   ITER = 8/50
483.629

Warping has converged.

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
Cleanup ...
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB21/awpy/anat.aff.nii
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB21/awpy/base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.aff.nii ./base.nii
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB21/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB21/awpy/anat.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.aff.nii 
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ base dataset has more than 1 sub-brick: ignoring all but the first
++ base dataset has more than 1 sub-brick: ignoring all but the first [0]
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=4 ytop=6  zbot=19 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=/mnt/ext5/GA/fmri_data/preproc_data/GB21/awpy/base.nii  source=/mnt/ext5/GA/fmri_data/preproc_data/GB21/awpy/anat.aff.nii
++ AFNI warpomatic: 199 x 239 x 215 volume ; autobbox = 22..176 24..214 20..183 [clock= 3s 851ms]
lev=0 3..195 1..237 1..203: [first cost=-0.61581] ..... done [cost:-0.61581==>-0.70949]
lev=1 patch=145x177x153 [clock= 47s 676ms]........:[cost=-0.73352]:........done [cost:-0.70949==>-0.73939 ; 16 patches optimized, 0 skipped, bbox=5:193,3:235,3:201]
lev=2 patch=109x133x115 [clock= 1m 6s 7ms]........done [cost:-0.73939==>-0.75572 ; 8 patches optimized, 0 skipped, bbox=5:193,3:235,3:201]
lev=3 patch=81x99x85 [clock= 1m 12s 171ms]......done [cost:-0.75572==>-0.83779 ; 23 patches optimized, 4 skipped, bbox=5:193,3:235,3:201]
lev=4 patch=61x75x65 [clock= 1m 28s 207ms].................done [cost:-0.83779==>-0.93114 ; 88 patches optimized, 37 skipped, bbox=5:193,3:235,3:201]
lev=5 patch=45x57x49 [clock= 1m 51s 302ms]..............done [cost:-0.93114==>-0.99953 ; 169 patches optimized, 83 skipped, bbox=5:193,3:235,3:201]
lev=6 patch=35x43x37 [clock= 2m 9s 765ms]..............done [cost:-0.99953==>-1.04742 ; 438 patches optimized, 291 skipped, bbox=5:193,3:235,3:201]
lev=7 patch=25x25x25 [clock= 2m 31s 792ms].......................................done [cost:-1.04742==>-1.15009 ; 1432 patches optimized, 908 skipped, bbox=5:193,3:235,3:201]
++ ====== total number of parameters 'optimized' = 26238
 +      initial unpenalized cost = -0.615808
 +        final unpenalized cost = -1.16769
 +        final penalized   cost = -1.15009
++ Output dataset ./anat.aff.qw.nii
++ Output dataset ./anat.aff.qw_WARP.nii
++ ===== clock time = 3m 17s 923ms
#++ Applying warps to /mnt/ext5/GA/fmri_data/preproc_data/GB21/MPRAGE.GB21_unif_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.aff.qw_WARP.nii anat.aff.Xat.1D" -master ./base.nii -source /mnt/ext5/GA/fmri_data/preproc_data/GB21/MPRAGE.GB21_unif_ns+orig -prefix ./MPRAGE.GB21_unif_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/mnt/ext5/GA/fmri_data/preproc_data/GB21/MPRAGE.GB21_unif_ns+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./MPRAGE.GB21_unif_ns.aw.nii
++ total Elapsed time = 5.2 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input \
 MPRAGE.GB21_unif_ns+orig -skull_strip_input no -unifize_input no" \
 ./MPRAGE.GB21_unif_ns.aw.nii


3dbucket -DAFNI_NIFTI_VIEW=tlrc -prefix MPRAGE.GB21_unif_ns awpy/MPRAGE.GB21_unif_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
mv awpy/anat.aff.Xat.1D .
mv awpy/anat.aff.qw_WARP.nii .
if ( ! -f MPRAGE.GB21_unif_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb03.GB21.r01.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB21.r01.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 85486 voxels
 + 9560 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.404  pitch=-0.739  yaw=-1.252  dS=-2.556  dL=-0.581  dP=-0.281
++ Mean: roll=-0.127  pitch=-0.227  yaw=-0.582  dS=-1.285  dL=-0.102  dP=+0.274
++ Max : roll=+0.481  pitch=+0.822  yaw=+0.086  dS=+0.229  dL=+0.231  dP=+0.652
++ Max displacements (mm) for each sub-brick:
 1.76(0.00) 1.83(0.17) 1.87(0.07) 1.71(0.19) 1.72(0.10) 1.60(0.29) 1.69(0.26) 1.62(0.08) 1.52(0.11) 1.48(0.12) 1.37(0.13) 1.33(0.07) 1.24(0.10) 1.20(0.07) 1.12(0.09) 1.04(0.08) 0.98(0.07) 0.94(0.16) 0.96(0.11) 0.92(0.07) 0.93(0.07) 0.88(0.07) 0.83(0.09) 0.80(0.08) 0.84(0.06) 0.86(0.05) 0.77(0.09) 0.80(0.09) 0.69(0.11) 0.63(0.10) 0.64(0.06) 0.66(0.06) 0.67(0.05) 0.64(0.05) 0.71(0.08) 0.63(0.14) 0.70(0.07) 0.64(0.09) 0.67(0.08) 0.56(0.11) 0.53(0.10) 0.42(0.10) 0.34(0.13) 0.30(0.11) 0.28(0.07) 0.30(0.11) 0.20(0.11) 0.18(0.17) 0.23(0.09) 0.15(0.11) 0.16(0.12) 0.08(0.08) 0.08(0.08) 0.00(0.08) 0.09(0.09) 0.11(0.06) 0.14(0.05) 0.18(0.06) 0.14(0.09) 0.12(0.06) 0.13(0.10) 0.18(0.09) 0.20(0.07) 0.20(0.09) 0.17(0.07) 0.14(0.11) 0.12(0.07) 0.17(0.07) 0.17(0.10) 0.19(0.04) 0.20(0.09) 0.14(0.12) 0.17(0.08) 0.15(0.04) 0.21(0.06) 0.25(0.10) 0.23(0.09) 0.18(0.08) 0.20(0.08) 0.25(0.08) 0.29(0.05) 0.30(0.03) 0.29(0.07) 0.36(0.17) 0.39(0.08) 0.43(0.06) 0.45(0.11) 0.48(0.03) 0.49(0.04) 0.49(0.04) 0.56(0.13) 0.61(0.06) 0.63(0.08) 0.47(0.19) 0.42(0.12) 0.33(0.12) 0.35(0.08) 0.35(0.07) 0.38(0.05) 0.33(0.06) 0.27(0.14) 0.24(0.06) 0.22(0.07) 0.29(0.11) 0.30(0.07) 0.28(0.05) 0.27(0.04) 0.23(0.11) 0.19(0.08) 0.18(0.08) 0.30(0.13) 0.27(0.04) 0.28(0.06) 0.29(0.06) 0.29(0.10) 0.34(0.13) 0.43(0.14) 0.52(0.11) 0.50(0.09) 0.51(0.04) 0.50(0.05) 0.48(0.03) 0.49(0.08) 0.50(0.06) 0.48(0.09) 0.30(0.18) 0.31(0.08) 0.35(0.06) 0.30(0.08) 0.34(0.13) 0.28(0.07) 0.35(0.08) 0.35(0.10) 0.38(0.04) 0.40(0.06) 0.38(0.05) 0.39(0.08) 0.37(0.11) 0.43(0.07) 0.37(0.09) 0.41(0.15) 0.38(0.08) 0.40(0.05) 0.41(0.05) 0.44(0.07) 0.40(0.07) 0.38(0.07) 0.39(0.08) 0.46(0.09) 0.53(0.09) 0.51(0.08) 0.49(0.09) 0.48(0.04) 0.48(0.06) 0.54(0.11) 0.55(0.05) 0.55(0.05) 0.49(0.10) 0.51(0.09) 0.57(0.07) 0.53(0.05) 0.58(0.14) 0.52(0.08) 0.53(0.09) 0.48(0.09) 0.49(0.04) 0.51(0.05) 0.50(0.06) 0.57(0.08) 0.53(0.08) 0.61(0.09) 0.56(0.08) 0.58(0.05) 0.58(0.07) 0.56(0.06) 0.62(0.06) 0.52(0.12) 0.62(0.10) 0.57(0.10) 0.57(0.05) 0.62(0.12) 0.69(0.12) 0.70(0.08) 0.65(0.11) 0.71(0.10) 0.65(0.08) 0.68(0.06) 0.60(0.17) 0.63(0.06) 0.65(0.04) 0.62(0.07) 0.67(0.13) 0.66(0.13) 0.70(0.06) 0.62(0.12) 0.65(0.05) 0.67(0.03) 0.62(0.06) 0.63(0.05) 0.60(0.07) 0.69(0.10) 0.72(0.06) 0.76(0.09) 0.79(0.05) 0.73(0.11) 0.76(0.05) 0.74(0.07) 0.79(0.07) 0.87(0.10) 0.82(0.06) 0.87(0.05) 0.83(0.12) 0.86(0.07) 0.90(0.11) 0.90(0.05) 0.89(0.15) 0.85(0.16) 0.89(0.07) 0.77(0.13) 0.83(0.08) 0.86(0.05) 0.85(0.03) 0.87(0.07) 0.87(0.20) 0.93(0.14) 0.96(0.07) 0.94(0.08) 0.93(0.09) 0.88(0.09) 0.88(0.05) 0.87(0.11) 0.92(0.06) 1.04(0.15) 0.92(0.16) 1.04(0.12) 1.04(0.13) 1.07(0.17) 1.06(0.10) 1.04(0.08) 1.06(0.07) 0.97(0.11) 0.98(0.04) 0.95(0.07) 1.05(0.15) 1.09(0.06) 1.10(0.08) 1.19(0.10) 1.11(0.14) 1.11(0.04) 1.12(0.10) 1.13(0.08) 1.16(0.06) 1.09(0.08) 1.17(0.08) 1.14(0.06) 1.16(0.05) 1.27(0.20) 1.26(0.10) 1.28(0.03) 1.19(0.11) 1.28(0.11) 1.29(0.05) 1.32(0.09) 1.38(0.07) 1.32(0.12) 1.40(0.08) 1.33(0.16) 1.38(0.06) 1.41(0.13) 1.43(0.07) 1.45(0.04) 1.36(0.13) 1.39(0.06) 1.34(0.07) 1.36(0.03) 1.40(0.09) 1.45(0.12) 1.49(0.09) 1.41(0.10) 1.43(0.09) 1.45(0.04) 1.44(0.06) 1.47(0.04) 1.40(0.09) 1.46(0.07) 1.40(0.08) 1.49(0.10) 1.50(0.10) 1.52(0.07) 1.52(0.10) 1.44(0.15) 1.49(0.14) 1.44(0.08) 1.48(0.07) 1.42(0.09) 1.46(0.04) 1.47(0.08) 1.44(0.04) 1.50(0.06) 1.47(0.15) 1.59(0.14) 1.62(0.13) 1.56(0.11) 1.59(0.07) 1.57(0.12) 1.58(0.04) 1.47(0.13) 1.52(0.06) 1.53(0.08) 1.60(0.07) 1.68(0.11) 1.65(0.07) 1.64(0.07) 1.58(0.07) 1.59(0.16) 1.57(0.10) 1.63(0.05) 1.63(0.11) 1.63(0.08) 1.68(0.05) 1.66(0.09) 1.64(0.16) 1.64(0.10) 1.66(0.04) 1.52(0.18) 1.56(0.07) 1.61(0.09) 1.61(0.07) 1.66(0.10) 1.62(0.10) 1.67(0.11) 1.56(0.20) 1.64(0.11) 1.65(0.08) 1.67(0.04) 1.65(0.03) 1.63(0.08) 1.66(0.07) 1.56(0.10) 1.64(0.09) 1.57(0.10) 1.61(0.07) 1.63(0.10) 1.62(0.06) 1.69(0.22) 1.63(0.08) 1.68(0.10) 1.68(0.05) 1.73(0.06) 1.74(0.04) 1.71(0.07) 1.78(0.19) 1.71(0.09) 1.79(0.13) 1.75(0.18) 1.75(0.05) 1.78(0.04) 1.74(0.08) 1.79(0.07) 1.68(0.16) 1.75(0.08) 1.73(0.10) 1.76(0.06) 1.78(0.14) 1.82(0.07) 1.91(0.10) 1.80(0.17) 1.84(0.07) 1.79(0.14) 1.77(0.06) 1.78(0.12) 1.77(0.07) 1.82(0.08) 1.74(0.12) 1.82(0.08) 1.80(0.13) 1.87(0.08) 1.88(0.10) 1.84(0.13) 1.87(0.08) 1.79(0.13) 1.85(0.07) 1.87(0.12) 1.85(0.06) 1.83(0.05) 1.85(0.06) 1.88(0.07) 1.87(0.08) 1.86(0.07) 1.89(0.06) 1.88(0.05) 1.90(0.07) 1.87(0.09) 1.93(0.10) 1.89(0.07) 1.93(0.09) 1.98(0.17) 1.98(0.11) 1.94(0.12) 1.80(0.17) 1.77(0.08) 1.57(0.45) 1.43(0.79) 1.57(0.43) 1.56(0.11) 1.45(0.14) 1.47(0.07) 1.44(0.11) 1.43(0.13) 1.41(0.09) 1.41(0.04) 1.42(0.05) 1.47(0.07) 1.44(0.11) 1.43(0.05) 1.45(0.05) 1.50(0.14) 1.53(0.08) 1.63(0.15) 1.61(0.12) 1.55(0.10) 1.52(0.11) 1.52(0.15) 1.55(0.09) 1.54(0.09) 1.59(0.09) 1.59(0.06) 1.47(0.16) 1.43(0.07) 1.47(0.08) 1.50(0.11) 1.53(0.10) 1.55(0.12) 1.55(0.07) 1.49(0.11) 1.53(0.07) 1.56(0.06) 1.55(0.13) 1.62(0.11) 1.62(0.10) 1.65(0.06) 1.64(0.13) 1.63(0.07) 1.64(0.06) 1.61(0.14) 1.65(0.07) 1.69(0.10) 1.65(0.08) 1.64(0.10) 1.65(0.01) 1.70(0.07) 1.72(0.12) 1.78(0.09) 1.77(0.13) 1.69(0.19) 1.71(0.04) 1.74(0.04) 1.78(0.12) 1.76(0.12) 1.81(0.08) 1.82(0.09) 1.77(0.20) 1.80(0.04) 1.89(0.10) 1.91(0.06) 1.91(0.12) 1.94(0.08) 1.89(0.08) 1.91(0.06) 1.94(0.08) 1.99(0.09) 2.02(0.06) 2.07(0.09) 2.04(0.21) 2.00(0.08) 2.01(0.10) 2.03(0.17) 2.09(0.08) 2.15(0.08) 2.12(0.08) 2.15(0.09) 2.13(0.08) 2.18(0.07) 2.20(0.12) 2.31(0.11) 2.30(0.08) 2.26(0.11) 2.28(0.06) 2.30(0.15) 2.37(0.08) 2.38(0.11) 2.31(0.11) 2.23(0.09) 2.26(0.08) 2.29(0.05) 2.33(0.16) 2.36(0.09) 2.32(0.10) 2.29(0.09) 2.31(0.04) 2.23(0.12) 2.26(0.14) 2.24(0.07) 2.32(0.10) 2.30(0.12) 2.39(0.10) 2.44(0.10) 2.39(0.19) 2.35(0.09) 2.36(0.06) 2.43(0.08) 2.45(0.11) 2.53(0.11) 2.52(0.10) 2.48(0.15) 2.48(0.04) 2.53(0.06) 2.63(0.11) 2.66(0.07) 2.66(0.04) 2.60(0.07) 2.61(0.09) 2.59(0.07) 2.64(0.07) 2.62(0.05) 2.64(0.05) 2.62(0.11) 2.60(0.08) 2.62(0.04) 2.64(0.09) 2.69(0.06) 2.68(0.09) 2.70(0.05) 2.69(0.06) 2.68(0.12) 2.66(0.06) 2.67(0.11) 2.71(0.07) 2.74(0.06) 2.74(0.06) 2.71(0.06) 2.69(0.10) 2.65(0.07) 2.72(0.07) 2.72(0.10) 2.75(0.06) 2.77(0.05) 2.78(0.04) 2.80(0.04) 2.74(0.09) 2.73(0.14) 2.71(0.09) 2.79(0.11) 2.83(0.06) 2.85(0.03) 2.87(0.04) 2.88(0.04) 2.85(0.14) 2.83(0.05) 2.86(0.08) 2.89(0.08) 2.92(0.05) 2.94(0.07) 2.90(0.07) 2.90(0.11) 2.86(0.08) 2.95(0.10) 2.97(0.12) 3.01(0.07) 3.04(0.06) 3.02(0.14) 3.03(0.11) 2.99(0.09) 2.97(0.06) 2.97(0.11) 3.02(0.06) 3.05(0.04) 2.98(0.11) 2.98(0.10) 3.01(0.07) 3.08(0.10) 3.07(0.10) 3.16(0.10) 3.17(0.08) 3.10(0.10) 3.11(0.04) 3.14(0.06) 3.18(0.05) 3.16(0.10) 3.20(0.04) 3.16(0.05) 3.14(0.09) 3.08(0.09) 3.09(0.08) 3.13(0.11) 3.16(0.06) 3.23(0.06) 3.16(0.08) 3.18(0.09) 3.19(0.11) 3.23(0.08) 3.21(0.11) 3.20(0.03) 3.12(0.25) 2.89(0.40) 2.95(0.10) 3.03(0.23) 3.11(0.17) 3.11(0.08) 3.07(0.12) 3.04(0.08) 3.07(0.09) 3.12(0.08) 3.13(0.05) 3.21(0.13) 3.22(0.06) 3.14(0.16) 3.11(0.09) 3.14(0.06) 3.13(0.12) 3.20(0.08) 3.16(0.08) 3.14(0.07) 3.21(0.08) 3.29(0.09) 3.35(0.08) 3.35(0.07) 3.29(0.13) 3.24(0.10) 3.28(0.05) 3.28(0.06) 3.31(0.06) 3.34(0.04) 3.36(0.06) 3.29(0.14) 3.25(0.06) 3.27(0.12) 3.30(0.12) 3.33(0.07) 3.38(0.06) 3.35(0.09) 3.37(0.03) 3.31(0.07) 3.32(0.12) 3.29(0.07) 3.35(0.08) 3.37(0.09) 3.45(0.12) 3.43(0.10) 3.40(0.07) 3.40(0.02) 3.41(0.08) 3.42(0.08) 3.41(0.04) 3.40(0.10) 3.36(0.09) 3.36(0.04) 3.41(0.12) 3.44(0.07) 3.52(0.09) 3.48(0.08) 3.44(0.10) 3.41(0.04) 3.46(0.07) 3.46(0.11) 3.53(0.10) 3.57(0.12) 3.58(0.05) 3.53(0.13) 3.49(0.12) 3.50(0.06) 3.46(0.16) 3.54(0.11) 3.52(0.07) 3.57(0.06) 3.52(0.13) 3.51(0.05) 3.50(0.07) 3.49(0.10) 3.56(0.08) 3.55(0.15) 3.53(0.07) 3.45(0.13) 3.42(0.07) 3.43(0.04) 3.44(0.13) 3.49(0.08) 3.50(0.09) 3.46(0.08) 3.42(0.12) 3.43(0.04) 3.45(0.10) 3.42(0.14) 3.48(0.07) 3.46(0.13) 3.42(0.11) 3.42(0.04) 3.43(0.05) 3.47(0.05) 3.49(0.08) 3.55(0.08) 3.51(0.10) 3.50(0.12) 3.42(0.11) 3.41(0.10) 3.39(0.08) 3.40(0.06) 3.41(0.03) 3.43(0.07) 3.43(0.05) 3.33(0.13) 3.33(0.10) 3.30(0.06) 3.40(0.14) 3.48(0.12) 3.49(0.07) 3.52(0.04) 3.44(0.12) 3.43(0.11) 3.42(0.06) 3.50(0.10) 3.55(0.10) 3.57(0.05) 3.57(0.08) 3.54(0.09) 3.54(0.07) 3.51(0.14) 3.55(0.06) 3.55(0.09) 3.57(0.04) 3.54(0.11) 3.49(0.10) 3.52(0.07) 3.57(0.15) 3.64(0.09) 3.64(0.10) 3.57(0.15) 3.53(0.08) 3.53(0.05) 3.57(0.10) 3.61(0.07) 3.64(0.04) 3.65(0.06) 3.63(0.07) 3.58(0.11) 3.58(0.14) 3.60(0.16) 3.68(0.10) 3.72(0.09) 3.73(0.05) 3.75(0.07) 3.67(0.12) 3.63(0.11) 3.60(0.05) 3.66(0.08) 3.68(0.05) 3.71(0.07) 3.72(0.03) 3.61(0.15) 3.60(0.11) 3.56(0.12) 3.62(0.09) 3.67(0.07) 3.70(0.04) 3.69(0.05) 3.60(0.15) 3.62(0.13) 3.63(0.13) 3.66(0.08) 3.67(0.13) 3.66(0.09) 3.64(0.09) 3.64(0.08) 3.67(0.07) 3.69(0.14) 3.72(0.06) 3.71(0.08) 3.71(0.10) 3.67(0.07) 3.68(0.04) 3.75(0.09) 3.81(0.09) 3.81(0.07) 3.78(0.08) 3.73(0.13) 3.70(0.04) 3.72(0.08) 3.72(0.10) 3.77(0.06) 3.83(0.06) 3.75(0.14) 3.74(0.08) 3.76(0.07) 3.82(0.08) 3.85(0.13) 3.88(0.05) 3.90(0.10) 3.83(0.11) 3.82(0.06) 3.79(0.10) 3.83(0.10) 3.83(0.12) 3.84(0.04) 3.83(0.09) 3.74(0.14) 3.74(0.05) 3.77(0.05) 3.84(0.09) 3.90(0.08) 3.91(0.03) 3.88(0.07) 3.79(0.17) 3.77(0.05) 3.77(0.05) 3.83(0.08) 3.85(0.10) 3.85(0.04) 3.80(0.06) 3.74(0.17) 3.69(0.07) 3.74(0.08) 3.84(0.11) 3.88(0.12) 3.87(0.08) 3.82(0.09) 3.79(0.08) 3.80(0.08) 3.83(0.06) 3.88(0.06) 3.94(0.07) 3.89(0.13) 3.83(0.12) 3.82(0.05) 3.87(0.14) 3.89(0.07) 3.72(0.26) 3.60(0.30) 3.52(0.16) 3.42(0.15) 3.41(0.14) 3.39(0.20) 3.40(0.16) 3.45(0.06) 3.44(0.03) 3.36(0.17) 3.31(0.07) 3.29(0.03) 3.32(0.17) 3.34(0.05) 3.38(0.05) 3.32(0.08) 3.23(0.17) 3.21(0.10) 3.25(0.08) 3.29(0.10) 3.31(0.06) 3.26(0.11) 3.23(0.06) 3.22(0.06) 3.27(0.12) 3.28(0.07) 3.31(0.05) 3.27(0.13) 3.21(0.06) 3.20(0.03) 3.31(0.16) 3.32(0.12) 3.32(0.03) 3.26(0.09) 3.23(0.07) 3.26(0.09) 3.27(0.05) 3.30(0.06) 3.34(0.07) 3.32(0.06) 3.23(0.10) 3.23(0.12) 3.28(0.15) 3.34(0.08) 3.38(0.06) 3.38(0.05) 3.35(0.11) 3.31(0.10) 3.32(0.05) 3.41(0.13) 3.43(0.08) 3.49(0.10) 3.42(0.15) 3.36(0.07) 3.36(0.06) 3.44(0.12) 3.48(0.06) 3.49(0.05) 3.48(0.09) 3.39(0.15) 3.38(0.08) 3.43(0.14) 3.69(0.41) 3.85(0.28) 3.79(0.11) 3.68(0.20) 3.64(0.14) 3.66(0.08) 3.73(0.11) 3.80(0.10) 3.74(0.10) 3.84(0.19) 4.13(0.35) 3.87(0.41) 3.91(0.19) 3.93(0.09) 3.86(0.13) 3.80(0.09) 3.79(0.04) 3.88(0.12) 3.90(0.10) 3.93(0.08) 3.93(0.04) 3.84(0.12) 3.78(0.10) 3.79(0.11) 3.83(0.07) 3.88(0.06) 3.88(0.05) 3.80(0.14) 3.79(0.07) 3.81(0.06) 3.86(0.06) 3.89(0.05) 3.86(0.08) 3.79(0.10) 3.81(0.07) 3.87(0.16) 3.89(0.06) 3.92(0.08) 3.86(0.09) 3.81(0.08) 3.82(0.04) 3.84(0.06) 3.86(0.10) 3.89(0.08) 3.88(0.08) 3.82(0.17) 3.78(0.08) 3.82(0.08) 3.87(0.05) 3.90(0.05) 3.91(0.05) 3.86(0.05) 3.80(0.14) 3.78(0.05) 3.81(0.07) 3.84(0.07) 3.86(0.06) 3.82(0.08) 3.76(0.09) 3.75(0.04) 3.81(0.10) 3.84(0.06) 3.85(0.10) 3.86(0.05) 3.83(0.09) 3.78(0.10) 3.77(0.03) 3.81(0.06) 3.87(0.08) 3.91(0.06) 3.82(0.11) 3.79(0.04) 3.80(0.07) 3.84(0.12) 3.86(0.04) 3.87(0.05) 3.81(0.11) 3.80(0.04) 3.85(0.07) 3.89(0.06) 3.94(0.10) 3.94(0.07) 3.90(0.08) 3.85(0.14) 3.86(0.04) 3.89(0.05) 3.92(0.06) 3.93(0.04) 3.90(0.09) 3.84(0.07) 3.87(0.04) 3.93(0.08) 3.92(0.05) 3.96(0.08) 3.90(0.15) 3.88(0.03) 3.90(0.05) 3.94(0.10) 3.98(0.07) 3.98(0.06) 3.90(0.12) 3.90(0.05) 3.91(0.03) 3.98(0.09) 4.02(0.10) 4.03(0.05) 4.00(0.09) 3.94(0.14) 3.94(0.07) 3.99(0.10) 3.99(0.10) 4.01(0.03) 4.01(0.08) 3.96(0.12) 3.93(0.05) 3.94(0.06) 3.99(0.09) 4.00(0.05) 4.03(0.05) 4.02(0.04) 3.96(0.12) 3.97(0.04) 4.00(0.07) 4.03(0.09) 4.04(0.05) 4.07(0.10) 4.03(0.09) 3.99(0.06) 3.99(0.03) 4.03(0.05) 4.04(0.05) 4.09(0.06) 4.02(0.11) 3.99(0.13) 4.04(0.10) 4.09(0.11) 4.13(0.08) 4.14(0.04) 4.10(0.09) 4.05(0.09) 4.09(0.05) 4.13(0.10) 4.17(0.08) 4.20(0.08) 4.14(0.16) 4.11(0.07) 4.14(0.07) 4.18(0.10) 4.22(0.04) 4.18(0.10) 4.14(0.06) 4.19(0.09) 4.26(0.14) 4.29(0.06) 4.27(0.10) 4.21(0.13) 4.21(0.05) 4.28(0.11) 4.31(0.06) 4.32(0.09) 4.29(0.12) 4.22(0.08) 4.23(0.04) 4.28(0.09) 4.21(0.32) 4.06(0.23) 3.95(0.16) 3.78(0.19) 3.71(0.08) 3.71(0.05) 3.69(0.05) 3.70(0.08) 3.68(0.08) 3.62(0.10) 3.59(0.05) 3.63(0.09) 3.69(0.07) 3.71(0.04) 3.69(0.06) 3.61(0.14) 3.59(0.09) 3.63(0.05) 3.67(0.11) 3.67(0.04) 3.68(0.02) 3.61(0.10) 3.55(0.09) 3.54(0.10) 3.57(0.08) 3.62(0.13) 3.65(0.06) 3.66(0.07) 3.59(0.12) 3.54(0.07) 3.57(0.07) 3.60(0.03) 3.63(0.11) 3.64(0.04) 3.60(0.09)
++ Max displacement in automask = 4.32 (mm) at sub-brick 1056
++ Max delta displ  in automask = 0.79 (mm) at sub-brick 402
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb03.GB21.r01.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB21_unif_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB21_unif_ns+tlrc -dxyz 2.5 -source pb02.GB21.r01.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB21_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB21.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 607.8 sec
3dNwarpApply -master MPRAGE.GB21_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB21_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb03.GB21.r02.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB21.r02.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 86183 voxels
 + 9922 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.484  pitch=-0.586  yaw=-1.876  dS=-2.633  dL=-0.839  dP=-0.171
++ Mean: roll=-0.215  pitch=-0.006  yaw=-1.359  dS=-2.149  dL=-0.596  dP=+0.248
++ Max : roll=+0.245  pitch=+1.022  yaw=-0.535  dS=-1.808  dL=-0.123  dP=+0.437
++ Max displacements (mm) for each sub-brick:
 3.63(0.00) 3.64(0.03) 3.52(0.15) 3.49(0.15) 3.51(0.06) 3.51(0.03) 3.50(0.02) 3.45(0.09) 3.42(0.04) 3.31(0.17) 3.32(0.05) 3.28(0.09) 3.30(0.05) 3.30(0.04) 3.31(0.02) 3.29(0.07) 3.30(0.07) 3.38(0.10) 3.43(0.21) 3.45(0.05) 3.38(0.13) 3.36(0.06) 3.31(0.06) 3.26(0.07) 3.23(0.06) 3.21(0.05) 3.19(0.06) 3.24(0.08) 3.26(0.04) 3.26(0.07) 3.29(0.04) 3.21(0.11) 3.24(0.08) 3.25(0.03) 3.28(0.08) 3.28(0.06) 3.27(0.03) 3.26(0.08) 3.32(0.08) 3.28(0.05) 3.32(0.05) 3.28(0.07) 3.24(0.08) 3.28(0.09) 3.26(0.06) 3.29(0.08) 3.28(0.06) 3.24(0.06) 3.19(0.10) 3.26(0.10) 3.25(0.03) 3.27(0.03) 3.23(0.07) 3.18(0.07) 3.24(0.07) 3.25(0.03) 3.30(0.09) 3.29(0.06) 3.25(0.06) 3.19(0.10) 3.25(0.09) 3.28(0.05) 3.29(0.04) 3.32(0.04) 3.25(0.12) 3.24(0.04) 3.26(0.06) 3.32(0.09) 3.33(0.02) 3.35(0.05) 3.31(0.07) 3.30(0.08) 3.38(0.11) 3.38(0.05) 3.42(0.13) 3.39(0.08) 3.33(0.06) 3.28(0.08) 3.35(0.11) 3.38(0.03) 3.39(0.04) 3.42(0.04) 3.33(0.15) 3.30(0.06) 3.32(0.08) 3.39(0.13) 3.41(0.04) 3.43(0.02) 3.38(0.08) 3.29(0.13) 3.31(0.11) 3.36(0.07) 3.42(0.08) 3.44(0.06) 3.40(0.08) 3.34(0.06) 3.30(0.06) 3.41(0.20) 3.41(0.05) 3.44(0.10) 3.41(0.08) 3.32(0.11) 3.24(0.09) 3.31(0.09) 3.39(0.10) 3.37(0.05) 3.35(0.09) 3.24(0.13) 3.21(0.05) 3.27(0.08) 3.30(0.08) 3.38(0.09) 3.30(0.13) 3.26(0.05) 3.27(0.09) 3.34(0.11) 3.36(0.06) 3.32(0.06) 3.23(0.10) 3.14(0.11) 3.23(0.14) 3.23(0.08) 3.30(0.08) 3.23(0.14) 3.20(0.04) 3.20(0.09) 3.26(0.08) 3.32(0.08) 3.30(0.05) 3.25(0.07) 3.19(0.09) 3.23(0.12) 3.26(0.06) 3.29(0.06) 3.21(0.11) 3.17(0.09) 3.21(0.05) 3.24(0.03) 3.28(0.09) 3.23(0.10) 3.21(0.04) 3.25(0.09) 3.33(0.13) 3.35(0.04) 3.35(0.04) 3.29(0.11) 3.29(0.06) 3.37(0.18) 3.37(0.08) 3.41(0.13) 3.39(0.04) 3.34(0.11) 3.29(0.10) 3.35(0.11) 3.38(0.05) 3.41(0.06) 3.38(0.06) 3.36(0.07) 3.37(0.04) 3.42(0.06) 3.47(0.07) 3.46(0.06) 3.39(0.08) 3.38(0.11) 3.43(0.11) 3.49(0.06) 3.51(0.06) 3.47(0.09) 3.43(0.09) 3.46(0.05) 3.51(0.06) 3.56(0.09) 3.53(0.08) 3.48(0.06) 3.47(0.08) 3.54(0.13) 3.57(0.04) 3.53(0.06) 3.50(0.04) 3.49(0.05) 3.53(0.10) 3.56(0.05) 3.56(0.05) 3.51(0.07) 3.52(0.06) 3.57(0.14) 3.59(0.03) 3.56(0.07) 3.49(0.13) 3.47(0.04) 3.54(0.09) 3.58(0.05) 3.61(0.11) 3.54(0.16) 3.49(0.06) 3.54(0.08) 3.56(0.12) 3.58(0.06) 3.61(0.05) 3.55(0.11) 3.51(0.09) 3.55(0.12) 3.61(0.08) 3.63(0.11) 3.64(0.04) 3.58(0.11) 3.55(0.04) 3.58(0.05) 3.63(0.11) 3.66(0.04) 3.65(0.03) 3.59(0.10) 3.60(0.06) 3.67(0.14) 3.68(0.05) 3.70(0.12) 3.64(0.14) 3.61(0.05) 3.65(0.05) 3.68(0.04) 3.70(0.08) 3.70(0.06) 3.60(0.12) 3.59(0.10) 3.64(0.13) 3.68(0.05) 3.71(0.04) 3.67(0.06) 3.62(0.09) 3.64(0.04) 3.68(0.05) 3.71(0.05) 3.72(0.07) 3.63(0.16) 3.64(0.05) 3.69(0.07) 3.72(0.13) 3.74(0.04) 3.76(0.03) 3.70(0.11) 3.65(0.12) 3.62(0.06) 3.67(0.07) 3.72(0.06) 3.76(0.06) 3.73(0.08) 3.69(0.04) 3.66(0.09) 3.71(0.16) 3.73(0.05) 3.75(0.05) 3.77(0.03) 3.69(0.13) 3.64(0.06) 3.67(0.06) 3.75(0.11) 3.78(0.05) 3.79(0.04) 3.70(0.12) 3.66(0.08) 3.68(0.10) 3.76(0.08) 3.79(0.05) 3.80(0.05) 3.70(0.14) 3.67(0.06) 3.72(0.09) 3.77(0.07) 3.79(0.02) 3.77(0.06) 3.73(0.04) 3.73(0.07) 3.77(0.13) 3.81(0.06) 3.83(0.04) 3.79(0.06) 3.72(0.12) 3.70(0.07) 3.77(0.10) 3.81(0.06) 3.85(0.08) 3.82(0.06) 3.76(0.07) 3.74(0.08) 3.81(0.10) 3.85(0.05) 3.84(0.04) 3.79(0.11) 3.73(0.08) 3.75(0.09) 3.83(0.09) 3.87(0.06) 3.89(0.07) 3.79(0.15) 3.78(0.05) 3.78(0.09) 3.83(0.12) 3.85(0.04) 3.86(0.04) 3.79(0.10) 3.77(0.05) 3.83(0.14) 3.85(0.04) 3.88(0.09) 3.82(0.10) 3.79(0.05) 3.80(0.05) 3.86(0.07) 3.91(0.08) 3.85(0.11) 3.81(0.05) 3.81(0.06) 3.86(0.07) 3.89(0.03) 3.92(0.03) 3.92(0.06) 3.83(0.14) 3.81(0.05) 3.85(0.07) 3.90(0.09) 3.91(0.04) 3.89(0.07) 3.81(0.13) 3.82(0.04) 3.88(0.09) 3.88(0.09) 3.91(0.08) 3.90(0.06) 3.84(0.08) 3.80(0.09) 3.81(0.05) 3.86(0.05) 3.88(0.10) 3.88(0.04) 3.86(0.04) 3.81(0.08) 3.83(0.06) 3.85(0.05) 3.89(0.04) 3.92(0.07) 3.92(0.05) 3.84(0.09) 3.84(0.09) 3.82(0.05) 3.88(0.07) 3.91(0.06) 3.91(0.03) 3.95(0.04) 3.93(0.05) 3.87(0.12) 3.86(0.05) 3.88(0.07) 3.91(0.13) 3.96(0.06) 3.98(0.09) 3.93(0.09) 3.90(0.08) 3.88(0.04) 3.92(0.07) 3.95(0.11) 3.99(0.06) 3.99(0.08) 3.95(0.11) 3.92(0.05) 3.92(0.02) 4.00(0.10) 4.05(0.07) 4.03(0.05) 3.96(0.10) 3.94(0.08) 3.91(0.06) 3.97(0.09) 4.00(0.08) 3.99(0.05) 3.94(0.08) 3.93(0.05) 4.01(0.09) 4.04(0.08) 4.04(0.04) 3.96(0.10) 3.96(0.11) 3.95(0.07) 4.01(0.07) 4.03(0.09) 4.03(0.02) 3.96(0.09) 3.94(0.06) 3.95(0.03) 3.99(0.09) 4.03(0.06) 4.03(0.07) 4.00(0.13) 3.96(0.05) 3.97(0.08) 3.97(0.11) 4.02(0.06) 4.02(0.04) 3.97(0.10) 3.93(0.06) 3.94(0.03) 4.00(0.08) 4.02(0.02) 4.06(0.05) 3.97(0.11) 3.96(0.08) 3.98(0.04) 4.04(0.09) 4.05(0.08) 4.07(0.07) 4.06(0.07) 3.98(0.12) 3.96(0.04) 3.99(0.04) 4.03(0.09) 4.05(0.04) 4.10(0.05) 4.07(0.04) 4.02(0.13) 4.02(0.03) 4.07(0.06) 4.06(0.13) 4.09(0.07) 4.05(0.07) 4.00(0.12) 3.98(0.06) 4.03(0.08) 4.08(0.07) 4.09(0.02) 4.09(0.02) 4.03(0.09) 4.02(0.09) 4.06(0.09) 4.10(0.06) 4.09(0.08) 4.11(0.05) 4.05(0.07) 4.02(0.08) 4.02(0.05) 4.08(0.06) 4.12(0.05) 4.11(0.04) 4.10(0.12) 4.07(0.03) 4.07(0.08) 4.08(0.14) 4.14(0.08) 4.13(0.07) 4.13(0.06) 4.12(0.05) 4.08(0.09) 4.07(0.03) 4.13(0.08) 4.19(0.06) 4.17(0.05) 4.12(0.10) 4.11(0.06) 4.16(0.07) 4.18(0.08) 4.18(0.02) 4.12(0.09) 4.10(0.11) 4.11(0.06) 4.14(0.11) 4.17(0.05) 4.19(0.09) 4.16(0.07) 4.08(0.10) 4.09(0.08) 4.13(0.09) 4.17(0.05) 4.19(0.03) 4.18(0.04) 4.14(0.11) 4.11(0.05) 4.17(0.07) 4.21(0.11) 4.21(0.04) 4.20(0.06) 4.14(0.12) 4.11(0.04) 4.13(0.04) 4.14(0.07) 4.17(0.05) 4.18(0.02) 4.18(0.03) 4.14(0.05) 4.11(0.07) 4.13(0.07) 4.19(0.12) 4.21(0.05) 4.25(0.06) 4.21(0.09) 4.17(0.04) 4.19(0.07) 4.21(0.13) 4.26(0.05) 4.31(0.06) 4.21(0.12) 4.17(0.07) 4.16(0.04) 4.21(0.08) 4.21(0.09) 4.24(0.07) 4.24(0.05) 4.20(0.07) 4.15(0.07) 4.13(0.06) 4.20(0.10) 4.22(0.04) 4.24(0.05) 4.24(0.10) 4.19(0.10) 4.15(0.08) 4.17(0.10) 4.19(0.09) 4.23(0.07) 4.25(0.07) 4.24(0.07) 4.17(0.09) 4.16(0.08) 4.19(0.07) 4.22(0.09) 4.24(0.03) 4.23(0.06) 4.17(0.10) 4.13(0.05) 4.15(0.05) 4.22(0.11) 4.24(0.03) 4.25(0.03) 4.18(0.09) 4.18(0.10) 4.18(0.11) 4.22(0.09) 4.22(0.07) 4.25(0.06) 4.21(0.07) 4.20(0.14) 4.18(0.11) 4.22(0.05) 4.26(0.04) 4.26(0.04) 4.24(0.12) 4.22(0.05) 4.23(0.06) 4.26(0.08) 4.26(0.05) 4.24(0.06) 4.22(0.07) 4.15(0.12) 4.15(0.07) 4.19(0.07) 4.16(0.07) 4.22(0.07) 4.22(0.02) 4.20(0.13) 4.19(0.05) 4.22(0.08) 4.27(0.10) 4.31(0.08) 4.30(0.09) 4.25(0.16) 4.21(0.05) 4.23(0.08) 4.26(0.11) 4.29(0.06) 4.32(0.03) 4.33(0.03) 4.33(0.05) 4.30(0.08) 4.30(0.04) 4.31(0.06) 4.37(0.07) 4.37(0.11) 4.36(0.11) 4.32(0.06) 4.31(0.09) 4.30(0.10) 4.33(0.05) 4.38(0.07) 4.40(0.05) 4.37(0.08) 4.31(0.11) 4.34(0.06) 4.34(0.09) 4.38(0.06) 4.40(0.08) 4.39(0.07) 4.32(0.10) 4.31(0.08) 4.34(0.07) 4.38(0.08) 4.43(0.06) 4.42(0.11) 4.35(0.15) 4.28(0.07) 4.31(0.08) 4.32(0.11) 4.36(0.06) 4.39(0.05) 4.32(0.14) 4.31(0.08) 4.33(0.11) 4.41(0.08) 4.40(0.07) 4.35(0.17) 4.30(0.07) 4.29(0.05) 4.33(0.09) 4.37(0.05) 4.39(0.02) 4.32(0.08) 4.31(0.11) 4.29(0.12) 4.34(0.08) 4.35(0.10) 4.35(0.05) 4.26(0.12) 4.26(0.07) 4.32(0.09) 4.36(0.07) 4.39(0.07) 4.33(0.08) 4.31(0.11) 4.29(0.05) 4.35(0.07) 4.38(0.08) 4.38(0.06) 4.30(0.10) 4.30(0.07) 4.34(0.09) 4.38(0.11) 4.39(0.07) 4.36(0.07) 4.31(0.17) 4.27(0.05) 4.31(0.08) 4.33(0.08) 4.34(0.07) 4.37(0.03) 4.29(0.10) 4.31(0.13) 4.32(0.11) 4.39(0.07) 4.37(0.09) 4.39(0.03) 4.33(0.09) 4.31(0.09) 4.32(0.03) 4.34(0.07) 4.40(0.08) 4.41(0.06) 4.36(0.13) 4.35(0.09) 4.36(0.06) 4.38(0.10) 4.42(0.06) 4.42(0.07) 4.35(0.12) 4.34(0.04) 4.37(0.05) 4.43(0.08) 4.41(0.09) 4.41(0.05) 4.34(0.09) 4.33(0.09) 4.32(0.10) 4.38(0.08) 4.36(0.11) 4.37(0.08) 4.32(0.08) 4.32(0.09) 4.36(0.08) 4.37(0.06) 4.40(0.03) 4.33(0.11) 4.35(0.03) 4.37(0.14) 4.38(0.07) 4.41(0.30) 4.66(1.28) 4.78(0.32) 4.75(0.06) 4.76(0.02) 4.75(0.04) 4.67(0.13) 4.52(0.25) 4.46(0.07) 4.49(0.10) 4.54(0.08) 4.60(0.09) 4.62(0.08) 4.50(0.13) 4.46(0.07) 4.48(0.12) 4.50(0.06) 4.53(0.05) 4.53(0.03) 4.47(0.11) 4.42(0.07) 4.46(0.08) 4.52(0.10) 4.55(0.10) 4.50(0.06) 4.45(0.14) 4.44(0.04) 4.49(0.06) 4.53(0.04) 4.51(0.05) 4.50(0.09) 4.44(0.08) 4.45(0.08) 4.54(0.16) 4.57(0.08) 4.53(0.08) 4.46(0.14) 4.45(0.09) 4.52(0.09) 4.52(0.03) 4.55(0.05) 4.51(0.08) 4.47(0.11) 4.50(0.05) 4.53(0.06) 4.56(0.07) 4.56(0.05) 4.54(0.07) 4.49(0.06) 4.51(0.10) 4.53(0.10) 4.58(0.12) 4.57(0.10) 4.57(0.12) 4.55(0.09) 4.58(0.05) 4.63(0.07) 4.62(0.02) 4.59(0.14) 4.54(0.05) 4.57(0.07) 4.59(0.11) 4.66(0.08) 4.67(0.10) 4.65(0.06) 4.58(0.08) 4.57(0.07) 4.61(0.10) 4.62(0.04) 4.65(0.06) 4.63(0.02) 4.61(0.12) 4.59(0.03) 4.62(0.06) 4.62(0.10) 4.67(0.10) 4.66(0.08) 4.63(0.12) 4.60(0.06) 4.64(0.06) 4.71(0.07) 4.71(0.07) 4.73(0.03) 4.65(0.09) 4.65(0.11) 4.65(0.03) 4.71(0.08) 4.75(0.09) 4.76(0.07) 4.71(0.15) 4.71(0.07) 4.75(0.06) 4.77(0.10) 4.81(0.09) 4.74(0.09) 4.75(0.11) 4.82(0.12) 4.85(0.05) 4.91(0.06) 4.83(0.10) 4.82(0.08) 4.83(0.05) 4.87(0.06) 4.88(0.10) 4.88(0.05) 4.82(0.08) 4.81(0.11) 4.85(0.12) 4.87(0.03) 4.91(0.06) 4.85(0.09) 4.83(0.11) 4.84(0.06) 4.89(0.07) 4.91(0.13) 4.89(0.09) 4.85(0.06) 4.86(0.09) 4.91(0.16) 4.93(0.08) 4.92(0.07) 4.83(0.16) 4.81(0.10) 4.83(0.11) 4.88(0.08) 4.90(0.10) 4.90(0.04) 4.84(0.08) 4.86(0.07) 4.92(0.08) 4.95(0.06) 4.98(0.05) 4.91(0.08) 4.89(0.11) 4.90(0.13) 4.95(0.06) 4.94(0.09) 4.89(0.14) 4.87(0.04) 4.93(0.07) 4.96(0.05) 4.98(0.04) 4.92(0.15) 4.88(0.05) 4.91(0.06) 4.92(0.07) 4.91(0.04) 4.94(0.03) 4.88(0.10) 4.87(0.11) 4.84(0.08) 4.91(0.07) 4.91(0.12) 4.92(0.05) 4.85(0.09) 4.82(0.10) 4.85(0.09) 4.85(0.03) 4.87(0.07) 4.87(0.06) 4.88(0.06) 4.81(0.08) 4.81(0.10) 4.83(0.13) 4.88(0.07) 4.87(0.09) 4.86(0.06) 4.82(0.08) 4.82(0.05) 4.86(0.07) 4.90(0.07) 4.92(0.06) 4.87(0.08) 4.84(0.10) 4.85(0.08) 4.90(0.08) 4.91(0.07) 4.90(0.03) 4.87(0.10) 4.84(0.06) 4.88(0.07) 4.94(0.10) 4.95(0.04) 4.94(0.09) 4.91(0.13) 4.87(0.05) 4.91(0.08) 4.92(0.06) 4.91(0.03) 4.87(0.09) 4.84(0.06) 4.88(0.05) 4.92(0.08) 4.97(0.07) 4.96(0.07) 4.96(0.05) 4.88(0.12) 4.85(0.11) 4.90(0.11) 4.94(0.05) 4.96(0.05) 4.90(0.07) 4.89(0.09) 4.88(0.05) 4.94(0.06) 4.96(0.08) 4.95(0.05) 4.88(0.11) 4.90(0.13) 4.92(0.09) 4.93(0.06) 4.93(0.04) 4.93(0.04) 4.88(0.10) 4.85(0.08) 4.89(0.06) 4.91(0.08) 4.93(0.04) 4.95(0.07) 4.93(0.05) 4.88(0.08) 4.89(0.10) 4.89(0.05) 4.95(0.08) 4.97(0.06) 4.98(0.01) 4.95(0.08) 4.89(0.11) 4.90(0.04) 4.94(0.08) 5.00(0.08) 4.97(0.12) 4.92(0.11) 4.92(0.04) 4.93(0.05) 4.92(0.11) 4.96(0.05) 4.94(0.07) 4.93(0.04) 4.89(0.07) 4.86(0.11) 4.85(0.05) 4.88(0.07) 4.92(0.06) 4.96(0.03) 4.97(0.03) 4.89(0.11) 4.91(0.06) 4.95(0.07) 5.02(0.07) 5.05(0.09) 4.95(0.15) 4.93(0.06) 4.94(0.05) 4.97(0.10) 5.00(0.04) 4.97(0.06) 4.95(0.13) 4.93(0.04) 5.00(0.08) 5.04(0.06) 5.01(0.04) 4.95(0.09) 4.93(0.06) 4.98(0.08) 4.99(0.06) 5.04(0.05) 4.95(0.11) 4.94(0.07) 4.93(0.07) 4.98(0.05) 5.00(0.07) 4.99(0.11) 4.94(0.08) 4.95(0.07) 4.97(0.11) 4.99(0.03) 4.99(0.10) 4.96(0.10) 4.92(0.07) 4.93(0.04) 4.99(0.09) 4.99(0.06) 5.03(0.05) 4.97(0.13) 4.99(0.13) 5.04(0.10) 5.06(0.04) 5.10(0.09) 5.06(0.14) 5.08(0.06) 5.10(0.07) 5.14(0.10) 5.15(0.03) 5.12(0.08) 5.05(0.12) 5.06(0.04) 5.15(0.11) 5.18(0.04) 5.16(0.08) 5.12(0.13) 5.10(0.04) 5.11(0.04) 5.10(0.06) 5.13(0.03) 5.11(0.07) 5.08(0.12) 5.06(0.06) 5.06(0.04) 5.16(0.10) 5.15(0.08) 5.12(0.09) 5.11(0.03) 5.10(0.07) 5.15(0.12) 5.18(0.06) 5.16(0.07) 5.10(0.13) 5.09(0.05) 5.16(0.10) 5.19(0.04) 5.20(0.02) 5.17(0.09) 5.14(0.07) 5.16(0.04) 5.20(0.09) 5.24(0.05) 5.22(0.11) 5.19(0.10) 5.14(0.05) 5.13(0.03) 5.16(0.09) 5.09(0.20) 5.10(0.25) 5.17(0.38) 5.27(0.32) 5.11(0.23) 4.57(0.58) 4.61(0.39) 4.72(0.53) 4.64(0.29) 4.80(0.54) 4.95(0.24) 4.97(0.12) 4.96(0.22) 4.92(0.10) 4.81(0.16) 4.81(0.04) 4.90(0.11) 4.92(0.10) 4.91(0.09) 4.86(0.12) 4.82(0.10) 4.79(0.10) 4.85(0.09) 4.89(0.04) 4.92(0.10) 4.95(0.05) 4.90(0.15) 4.88(0.07) 4.92(0.06) 4.95(0.07) 4.93(0.04) 4.95(0.03) 4.92(0.07) 4.86(0.13) 4.87(0.04) 4.91(0.07) 4.94(0.12) 4.96(0.02) 4.94(0.07) 4.92(0.08) 4.95(0.03) 4.97(0.03) 4.98(0.05) 4.98(0.04) 4.91(0.15) 4.87(0.06) 4.90(0.07) 4.91(0.11) 4.92(0.04) 4.90(0.05) 4.85(0.16) 4.72(0.25) 4.80(0.24) 4.80(0.12) 4.84(0.08) 4.77(0.11) 4.72(0.06) 4.77(0.08) 4.84(0.13) 4.98(0.34) 5.03(0.10) 4.78(0.40) 4.73(0.09) 4.83(0.19) 4.83(0.07) 4.83(0.08) 4.74(0.13) 4.71(0.07) 4.70(0.03) 4.74(0.05) 4.78(0.13) 4.78(0.06) 4.73(0.08) 4.66(0.11) 4.65(0.07) 4.69(0.05) 4.72(0.05) 4.73(0.05) 4.70(0.07) 4.66(0.05) 4.61(0.09) 4.67(0.19) 4.68(0.07) 4.70(0.13) 4.66(0.12)
++ Max displacement in automask = 5.27 (mm) at sub-brick 1014
++ Max delta displ  in automask = 1.28 (mm) at sub-brick 680
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb03.GB21.r02.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB21_unif_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB21_unif_ns+tlrc -dxyz 2.5 -source pb02.GB21.r02.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB21_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB21.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 621.6 sec
3dNwarpApply -master MPRAGE.GB21_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB21_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb03.GB21.r03.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB21.r03.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 85737 voxels
 + 9672 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.794  pitch=-0.003  yaw=-2.064  dS=-2.527  dL=-0.444  dP=-0.728
++ Mean: roll=-0.150  pitch=+1.356  yaw=-1.061  dS=-1.928  dL=-0.296  dP=-0.207
++ Max : roll=+0.151  pitch=+3.986  yaw=-0.345  dS=+0.400  dL=+0.621  dP=+0.293
++ Max displacements (mm) for each sub-brick:
 5.20(0.00) 4.94(0.45) 5.04(0.52) 4.88(0.16) 4.97(0.33) 4.96(0.11) 4.87(0.14) 4.60(0.47) 4.52(0.12) 4.76(0.30) 4.80(0.08) 4.78(0.08) 4.65(0.13) 4.74(0.12) 4.76(0.03) 4.78(0.07) 4.74(0.07) 4.64(0.12) 4.59(0.07) 4.67(0.12) 4.66(0.04) 4.68(0.03) 4.65(0.05) 4.55(0.10) 4.49(0.07) 4.53(0.07) 4.62(0.11) 4.62(0.08) 4.67(0.07) 4.54(0.16) 4.51(0.04) 4.51(0.07) 4.58(0.11) 4.57(0.03) 4.55(0.05) 4.43(0.13) 4.41(0.04) 4.47(0.07) 4.50(0.04) 4.51(0.03) 4.46(0.06) 4.37(0.12) 4.32(0.06) 4.39(0.10) 4.39(0.05) 4.48(0.11) 4.42(0.08) 4.37(0.06) 4.27(0.11) 4.35(0.10) 4.41(0.06) 4.46(0.08) 4.41(0.09) 4.33(0.09) 4.32(0.07) 4.42(0.12) 4.41(0.06) 4.41(0.01) 4.30(0.14) 4.23(0.07) 4.29(0.08) 4.31(0.04) 4.37(0.09) 4.28(0.14) 4.25(0.04) 4.20(0.09) 4.32(0.13) 4.31(0.05) 4.37(0.09) 4.26(0.13) 4.21(0.05) 4.25(0.08) 4.36(0.14) 4.41(0.07) 4.30(0.12) 4.26(0.05) 4.24(0.05) 4.34(0.12) 4.34(0.04) 4.36(0.05) 4.23(0.17) 4.22(0.02) 4.28(0.10) 4.33(0.06) 4.38(0.08) 4.31(0.10) 4.29(0.04) 4.22(0.07) 4.37(0.16) 4.34(0.08) 4.36(0.07) 4.23(0.14) 4.27(0.05) 4.34(0.08) 4.35(0.04) 4.33(0.02) 4.27(0.09) 4.25(0.03) 4.29(0.06) 4.36(0.10) 4.36(0.04) 4.35(0.02) 4.26(0.13) 4.27(0.06) 4.34(0.08) 4.35(0.05) 4.36(0.02) 4.31(0.09) 4.24(0.07) 4.23(0.03) 4.32(0.11) 4.32(0.03) 4.32(0.07) 4.22(0.13) 4.24(0.04) 4.31(0.07) 4.34(0.06) 4.35(0.04) 4.30(0.06) 4.20(0.12) 4.28(0.11) 4.31(0.05) 4.33(0.04) 4.35(0.03) 4.22(0.15) 4.21(0.10) 4.28(0.10) 4.36(0.14) 4.35(0.04) 4.33(0.05) 4.23(0.13) 4.23(0.03) 4.31(0.11) 4.36(0.08) 4.35(0.05) 4.32(0.06) 4.26(0.08) 4.26(0.05) 4.35(0.11) 4.32(0.06) 4.36(0.08) 4.26(0.13) 4.25(0.05) 4.26(0.06) 4.31(0.10) 4.32(0.04) 4.30(0.07) 4.23(0.10) 4.23(0.03) 4.27(0.07) 4.29(0.04) 4.29(0.02) 4.25(0.04) 4.20(0.06) 4.26(0.07) 4.29(0.04) 4.26(0.04) 4.25(0.05) 4.18(0.12) 4.25(0.10) 4.26(0.06) 4.30(0.10) 4.27(0.04) 4.24(0.07) 4.18(0.09) 4.25(0.10) 4.26(0.03) 4.28(0.03) 4.24(0.06) 4.17(0.08) 4.10(0.07) 4.16(0.07) 4.21(0.08) 4.19(0.05) 4.19(0.06) 4.09(0.11) 4.10(0.05) 4.11(0.07) 4.16(0.10) 4.15(0.05) 4.17(0.06) 4.14(0.09) 4.10(0.04) 4.05(0.07) 4.07(0.05) 4.12(0.07) 4.15(0.04) 4.14(0.03) 4.12(0.04) 4.07(0.07) 4.03(0.07) 4.12(0.11) 4.12(0.05) 4.18(0.07) 4.11(0.09) 4.10(0.04) 4.05(0.06) 4.16(0.12) 4.19(0.08) 4.23(0.06) 4.17(0.10) 4.13(0.04) 4.08(0.06) 4.15(0.11) 4.17(0.03) 4.19(0.05) 4.11(0.09) 4.08(0.04) 4.10(0.05) 4.15(0.07) 4.17(0.03) 4.17(0.04) 4.13(0.08) 4.04(0.11) 4.05(0.06) 4.09(0.06) 4.16(0.10) 4.14(0.04) 4.11(0.09) 4.04(0.11) 4.06(0.07) 4.10(0.06) 4.16(0.07) 4.17(0.04) 4.10(0.09) 4.03(0.07) 4.04(0.06) 4.12(0.08) 4.14(0.02) 4.13(0.05) 4.04(0.11) 4.09(0.06) 4.11(0.04) 4.18(0.11) 4.14(0.08) 4.10(0.08) 4.02(0.10) 4.09(0.10) 4.15(0.07) 4.19(0.07) 4.15(0.06) 4.08(0.07) 4.05(0.06) 4.09(0.06) 4.15(0.06) 4.19(0.05) 4.17(0.07) 4.09(0.09) 4.08(0.02) 4.10(0.05) 4.20(0.13) 4.19(0.05) 4.22(0.07) 4.12(0.11) 4.11(0.03) 4.11(0.07) 4.21(0.15) 4.22(0.04) 4.20(0.07) 4.11(0.10) 4.09(0.04) 4.12(0.05) 4.15(0.05) 4.17(0.03) 4.18(0.02) 4.15(0.05) 4.08(0.12) 4.07(0.04) 4.08(0.05) 4.18(0.12) 4.17(0.04) 4.13(0.08) 4.07(0.08) 4.08(0.03) 4.11(0.04) 4.16(0.07) 4.16(0.02) 4.15(0.07) 4.07(0.11) 4.05(0.03) 4.06(0.07) 4.13(0.08) 4.14(0.03) 4.11(0.05) 4.07(0.05) 4.01(0.07) 4.10(0.11) 4.10(0.05) 4.10(0.03) 3.99(0.13) 3.93(0.07) 3.81(0.19) 2.81(1.47) 2.80(0.25) 2.84(0.11) 2.82(0.06) 2.81(0.06) 2.83(0.06) 2.87(0.07) 2.97(0.16) 2.96(0.06) 2.93(0.10) 2.90(0.09) 2.94(0.09) 2.95(0.05) 2.98(0.07) 2.97(0.06) 2.92(0.08) 2.90(0.05) 2.92(0.04) 3.00(0.18) 3.01(0.06) 2.99(0.08) 2.91(0.14) 2.89(0.04) 2.89(0.04) 2.96(0.15) 2.99(0.04) 2.99(0.03) 2.92(0.11) 2.91(0.04) 2.94(0.14) 2.96(0.06) 3.00(0.09) 2.93(0.10) 2.89(0.05) 2.89(0.06) 2.93(0.16) 2.99(0.19) 3.05(0.10) 3.05(0.09) 3.16(0.22) 3.37(0.27) 3.55(0.24) 3.63(0.11) 3.72(0.09) 3.78(0.07) 3.75(0.09) 3.73(0.08) 3.59(0.15) 3.62(0.26) 3.67(0.20) 3.69(0.44) 3.97(0.87) 4.04(0.25) 3.58(0.51) 3.24(0.48) 3.34(0.24) 3.39(0.44) 3.39(0.36) 3.39(0.07) 3.52(0.15) 3.58(0.10) 3.76(0.25) 3.76(0.10) 3.78(0.15) 3.80(0.06) 3.82(0.09) 3.78(0.06) 3.76(0.08) 3.71(0.10) 3.68(0.06) 3.59(0.12) 3.57(0.06) 3.62(0.06) 3.65(0.08) 3.64(0.04) 3.62(0.04) 3.62(0.05) 3.60(0.06) 3.62(0.07) 3.59(0.08) 3.61(0.06) 3.57(0.09) 3.56(0.04) 3.56(0.06) 3.57(0.04) 3.56(0.04) 3.56(0.04) 3.51(0.07) 3.50(0.02) 3.48(0.05) 3.46(0.02) 3.43(0.06) 3.43(0.02) 3.43(0.03) 3.44(0.05) 3.43(0.03) 3.46(0.05) 3.44(0.03) 3.44(0.03) 3.44(0.02) 3.43(0.04) 3.44(0.06) 3.40(0.07) 3.44(0.05) 3.43(0.03) 3.47(0.06) 3.44(0.06) 3.48(0.07) 3.49(0.04) 3.49(0.02) 3.49(0.04) 3.46(0.04) 3.50(0.05) 3.53(0.04) 3.52(0.04) 3.50(0.04) 3.50(0.03) 3.42(0.10) 3.42(0.04) 3.45(0.07) 3.50(0.08) 3.50(0.03) 3.48(0.07) 3.43(0.06) 3.41(0.03) 3.47(0.09) 3.51(0.07) 3.55(0.05) 3.51(0.09) 3.42(0.11) 3.45(0.06) 3.55(0.14) 3.64(0.14) 3.89(0.29) 3.94(0.10) 3.69(0.28) 3.61(0.10) 3.50(0.15) 3.44(0.08) 3.53(0.11) 3.57(0.06) 3.62(0.12) 3.62(0.04) 3.60(0.09) 3.50(0.12) 3.47(0.04) 3.54(0.07) 3.58(0.05) 3.64(0.06) 3.57(0.11) 3.50(0.08) 3.40(0.12) 3.49(0.15) 3.50(0.06) 3.56(0.08) 3.56(0.06) 3.54(0.08) 3.45(0.12) 3.45(0.04) 3.55(0.12) 3.58(0.03) 3.63(0.07) 3.55(0.10) 3.51(0.05) 3.45(0.11) 3.55(0.14) 3.56(0.06) 3.59(0.08) 3.49(0.15) 3.45(0.05) 3.54(0.11) 3.59(0.05) 3.59(0.05) 3.52(0.10) 3.47(0.05) 3.48(0.05) 3.54(0.10) 3.55(0.03) 3.52(0.08) 3.44(0.10) 3.45(0.06) 3.50(0.05) 3.51(0.03) 3.45(0.09) 3.41(0.05) 3.45(0.05) 3.53(0.07) 3.58(0.08) 3.53(0.07) 3.48(0.05) 3.40(0.09) 3.46(0.10) 3.51(0.10) 3.52(0.07) 3.49(0.05) 3.48(0.05) 3.40(0.10) 3.38(0.03) 3.41(0.06) 3.50(0.09) 3.56(0.08) 3.55(0.04) 3.52(0.06) 3.45(0.08) 3.44(0.06) 3.49(0.11) 3.55(0.09) 3.55(0.03) 3.54(0.08) 3.47(0.10) 3.45(0.04) 3.51(0.07) 3.55(0.06) 3.60(0.05) 3.53(0.10) 3.48(0.05) 3.41(0.09) 3.50(0.14) 3.49(0.08) 3.48(0.04) 3.45(0.08) 3.46(0.13) 3.38(0.10) 3.39(0.04) 3.47(0.09) 3.51(0.06) 3.47(0.06) 3.40(0.08) 3.37(0.04) 3.43(0.07) 3.48(0.08) 3.46(0.05) 3.43(0.06) 3.37(0.10) 3.45(0.11) 3.48(0.07) 3.55(0.10) 3.50(0.06) 3.46(0.07) 3.43(0.05) 3.48(0.09) 3.50(0.05) 3.53(0.05) 3.47(0.09) 3.44(0.04) 3.47(0.07) 3.55(0.09) 3.53(0.07) 3.45(0.09) 3.44(0.05) 3.47(0.04) 3.55(0.08) 3.52(0.04) 3.49(0.07) 3.42(0.08) 3.52(0.14) 3.58(0.06) 3.62(0.09) 3.58(0.09) 3.53(0.08) 3.46(0.09) 3.48(0.07) 3.54(0.06) 3.61(0.10) 3.62(0.03) 3.55(0.09) 3.51(0.05) 3.48(0.03) 3.51(0.06) 3.54(0.07) 3.57(0.05) 3.53(0.07) 3.48(0.04) 3.43(0.09) 3.52(0.12) 3.52(0.07) 3.58(0.08) 3.54(0.06) 3.50(0.08) 3.45(0.08) 3.47(0.07) 3.50(0.06) 3.55(0.08) 3.56(0.03) 3.59(0.06) 3.52(0.10) 3.48(0.04) 3.45(0.08) 3.53(0.11) 3.58(0.04) 3.58(0.05) 3.51(0.07) 3.44(0.09) 3.52(0.13) 3.52(0.04) 3.56(0.12) 3.58(0.09) 3.56(0.08) 3.48(0.10) 3.50(0.05) 3.56(0.11) 3.60(0.08) 3.61(0.11) 3.61(0.05) 3.49(0.15) 3.44(0.05) 3.43(0.05) 3.49(0.08) 3.54(0.05) 3.53(0.02) 3.50(0.06) 3.44(0.09) 3.49(0.07) 3.55(0.07) 3.60(0.11) 3.59(0.06) 3.59(0.05) 3.51(0.12) 3.46(0.05) 3.44(0.07) 3.53(0.12) 3.58(0.06) 3.64(0.08) 3.58(0.10) 3.52(0.07) 3.53(0.05) 3.57(0.12) 3.61(0.13) 3.61(0.04) 3.59(0.08) 3.51(0.10) 3.53(0.08) 3.54(0.06) 3.59(0.08) 3.58(0.06) 3.57(0.07) 3.57(0.10) 3.57(0.03) 3.60(0.06) 3.68(0.09) 3.82(0.19) 3.87(0.17) 3.89(0.20) 3.86(0.15) 3.88(0.35) 3.88(0.61) 4.09(0.72) 4.75(0.91) 5.25(0.54) 5.44(0.41) 5.59(0.40) 5.80(0.28) 5.91(0.14) 6.15(0.24) 6.27(0.14) 6.41(0.18) 6.40(0.13) 6.39(0.08) 6.42(0.06) 6.48(0.08) 6.60(0.15) 6.61(0.05) 6.68(0.10) 6.77(0.08) 6.84(0.10) 6.86(0.06) 6.87(0.07) 6.76(0.13) 6.80(0.07) 6.83(0.05) 6.86(0.06) 6.87(0.01) 6.90(0.03) 6.91(0.05) 6.93(0.10) 6.92(0.06) 6.80(0.16) 6.81(0.08) 6.84(0.04) 6.89(0.11) 6.86(0.05) 6.92(0.07) 7.04(0.15) 7.44(0.44) 8.00(0.74) 8.23(0.28) 8.32(0.10) 8.40(0.10) 8.43(0.06) 8.43(0.04) 8.43(0.07) 8.18(0.38) 7.76(0.55) 7.54(0.48) 7.48(0.15) 7.58(0.12) 7.75(0.18) 7.43(0.45) 7.25(0.21) 7.12(0.16) 7.01(0.13) 6.99(0.07) 6.96(0.06) 6.99(0.09) 6.83(0.27) 6.98(0.27) 6.76(0.31) 6.79(0.05) 6.75(0.06) 6.73(0.08) 6.76(0.06) 6.77(0.04) 6.74(0.03) 6.69(0.08) 6.69(0.02) 6.63(0.10) 6.60(0.05) 6.53(0.10) 6.55(0.06) 6.54(0.09) 6.51(0.08) 6.44(0.09) 6.42(0.03) 6.33(0.12) 6.36(0.07) 6.36(0.02) 6.40(0.05) 6.37(0.09) 6.28(0.11) 6.19(0.12) 6.17(0.03) 6.18(0.14) 6.22(0.05) 6.25(0.04) 6.27(0.05) 6.19(0.09) 6.11(0.11) 6.19(0.09) 6.25(0.07) 6.34(0.10) 6.31(0.08) 6.27(0.08) 6.08(0.24) 5.95(0.14) 5.96(0.07) 6.04(0.13) 6.06(0.05) 6.10(0.04) 6.01(0.16) 5.94(0.08) 5.93(0.09) 6.00(0.10) 5.94(0.07) 5.94(0.06) 5.87(0.10) 5.79(0.08) 5.88(0.10) 5.92(0.05) 6.01(0.10) 6.06(0.26) 6.15(0.25) 6.04(0.14) 5.99(0.08) 5.92(0.09) 5.99(0.16) 5.98(0.08) 6.01(0.07) 5.98(0.04) 5.94(0.05) 5.88(0.09) 5.95(0.10) 6.06(0.14) 6.14(0.09) 6.12(0.10) 6.09(0.03) 6.00(0.13) 6.04(0.13) 6.05(0.06) 6.08(0.06) 5.99(0.16) 5.93(0.06) 5.91(0.07) 5.98(0.09) 5.98(0.12) 6.10(0.26) 6.01(0.15) 5.99(0.09) 5.94(0.06) 5.92(0.11) 5.96(0.05) 5.98(0.05) 5.99(0.06) 5.99(0.04) 5.92(0.09) 5.86(0.06) 5.87(0.03) 5.96(0.10) 6.01(0.08) 6.00(0.03) 5.99(0.04) 5.91(0.12) 5.88(0.04) 5.90(0.03) 5.98(0.11) 5.99(0.07) 5.99(0.05) 5.89(0.15) 5.88(0.05) 5.87(0.09) 5.93(0.14) 5.92(0.05) 5.95(0.10) 5.86(0.14) 5.86(0.03) 5.88(0.06) 5.93(0.08) 5.95(0.03) 5.95(0.04) 5.86(0.11) 5.83(0.04) 5.89(0.09) 5.92(0.05) 5.97(0.08) 5.90(0.10) 5.86(0.05) 5.77(0.10) 5.84(0.15) 5.86(0.05) 5.88(0.08) 5.80(0.12) 5.78(0.04) 5.77(0.07) 5.88(0.13) 5.88(0.09) 5.92(0.08) 5.87(0.08) 5.83(0.04) 5.81(0.06) 5.86(0.07) 5.92(0.06) 5.93(0.03) 5.93(0.04) 5.82(0.13) 5.83(0.05) 5.79(0.06) 5.85(0.12) 5.86(0.04) 5.84(0.04) 5.75(0.13) 5.77(0.06) 5.79(0.05) 5.66(0.53) 5.15(0.68) 5.05(0.12) 5.04(0.12) 4.95(0.14) 5.07(0.25) 5.20(0.15) 5.25(0.21) 5.76(0.76) 5.74(0.27) 5.62(0.13) 5.48(0.28) 5.32(0.27) 5.17(0.21) 5.07(0.12) 5.02(0.08) 5.06(0.10) 5.08(0.07) 5.07(0.08) 5.06(0.06) 4.99(0.13) 4.97(0.05) 4.93(0.14) 4.91(0.05) 4.87(0.07) 4.85(0.07) 4.81(0.08) 4.81(0.06) 4.88(0.12) 4.81(0.10) 4.86(0.12) 4.80(0.11) 4.76(0.05) 4.70(0.10) 4.71(0.08) 4.72(0.06) 4.73(0.03) 4.68(0.08) 4.62(0.08) 4.61(0.07) 4.65(0.05) 4.67(0.04) 4.61(0.07) 4.60(0.03) 4.53(0.12) 4.56(0.08) 4.59(0.07) 4.64(0.09) 4.63(0.04) 4.58(0.06) 4.53(0.10) 4.52(0.04) 4.56(0.07) 4.63(0.09) 4.63(0.06) 4.57(0.08) 4.50(0.08) 4.50(0.04) 4.55(0.07) 4.59(0.09) 4.65(0.13) 4.66(0.09) 4.67(0.07) 4.54(0.18) 4.53(0.07) 4.54(0.06) 4.55(0.07) 4.53(0.05) 4.53(0.05) 4.48(0.09) 4.47(0.04) 4.49(0.05) 4.53(0.04) 4.53(0.02) 4.54(0.04) 4.48(0.06) 4.44(0.06) 4.46(0.10) 4.49(0.06) 4.57(0.12) 4.62(0.07) 4.59(0.06) 4.52(0.10) 4.52(0.03) 4.58(0.09) 4.70(0.12) 4.70(0.04) 4.71(0.07) 4.66(0.06) 4.60(0.06) 4.57(0.05) 4.61(0.06) 4.66(0.05) 4.68(0.07) 4.62(0.08) 4.59(0.04) 4.57(0.08) 4.67(0.13) 4.66(0.07) 4.68(0.04) 4.64(0.06) 4.59(0.06) 4.55(0.05) 4.59(0.11) 4.63(0.09) 4.58(0.08) 4.58(0.04) 4.45(0.17) 4.43(0.04) 4.44(0.06) 4.49(0.09) 4.51(0.05) 4.50(0.05) 4.45(0.11) 4.47(0.09) 4.54(0.09) 4.53(0.12) 4.52(0.07) 4.50(0.03) 4.46(0.12) 4.43(0.03) 4.42(0.05) 4.46(0.07) 4.47(0.03) 4.49(0.05) 4.41(0.11) 4.31(0.14) 4.26(0.09) 4.24(0.05) 4.33(0.12) 4.34(0.05) 4.37(0.07) 4.31(0.13) 4.25(0.07) 4.21(0.07) 4.26(0.14) 4.28(0.05) 4.30(0.07) 4.27(0.08) 4.19(0.08) 4.15(0.11) 4.16(0.11) 4.23(0.08) 4.28(0.07) 4.28(0.03) 4.23(0.11) 4.19(0.08) 4.21(0.06) 4.25(0.15) 4.20(0.11) 4.22(0.11) 4.18(0.16) 4.12(0.10) 4.13(0.09) 4.16(0.11) 4.25(0.11) 4.25(0.05) 4.21(0.11) 4.17(0.11) 4.15(0.08) 4.21(0.08) 4.23(0.04) 4.37(0.20) 4.32(0.13) 4.30(0.11) 4.29(0.06) 4.29(0.07) 4.28(0.11) 4.30(0.08) 4.25(0.08) 4.27(0.07) 4.22(0.08) 4.21(0.10) 4.19(0.03) 4.23(0.05) 4.25(0.11) 4.27(0.03) 4.25(0.06) 4.22(0.13) 4.20(0.03) 4.23(0.05) 4.27(0.09) 4.29(0.06) 4.32(0.05) 4.26(0.13) 4.27(0.06) 4.23(0.07) 4.30(0.11) 4.33(0.06) 4.35(0.05) 4.47(0.20) 4.55(0.20) 4.60(0.21) 4.59(0.05) 4.60(0.13) 4.60(0.08) 4.71(0.21) 4.77(0.16) 4.83(0.16) 6.21(1.89) 6.48(0.91) 6.35(0.54) 6.25(0.26) 6.18(0.11) 5.94(0.24) 5.76(0.27) 5.74(0.19) 5.68(0.15) 5.48(0.34) 5.28(0.30) 5.19(0.10) 5.21(0.08) 5.23(0.05) 5.22(0.03) 5.13(0.14) 5.06(0.08) 5.05(0.05) 5.07(0.05) 5.02(0.14) 5.12(0.22) 4.94(0.27) 4.91(0.10) 4.86(0.09) 5.03(0.21) 5.05(0.04) 5.09(0.05) 5.01(0.13) 4.94(0.08) 4.89(0.06) 4.92(0.06) 4.87(0.07) 4.76(0.11) 4.54(0.23) 4.26(0.31) 3.95(0.39) 3.73(0.80) 3.45(0.55) 3.11(0.43) 2.97(0.27) 3.04(0.22) 3.22(0.20) 3.41(0.43) 3.33(0.43) 2.99(0.44) 2.82(0.40) 2.75(0.14) 2.98(0.26) 2.96(0.36) 3.04(0.36) 3.21(0.31) 3.57(0.88) 4.12(0.59) 4.49(0.42)
++ Max displacement in automask = 8.43 (mm) at sub-brick 680
++ Max delta displ  in automask = 1.89 (mm) at sub-brick 1042
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb03.GB21.r03.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB21_unif_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB21_unif_ns+tlrc -dxyz 2.5 -source pb02.GB21.r03.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB21_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB21.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 598.9 sec
3dNwarpApply -master MPRAGE.GB21_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB21_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB21.r01.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB21.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB21.r02.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB21.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB21.r03.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB21.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB21_unif_al_junk_mat.aff12.1D -I
3dNwarpApply -master MPRAGE.GB21_unif_ns+tlrc -dxyz 2.5 -source vr_base_min_outlier+orig -nwarp anat.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base_min_outlier
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB21_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'vr_base_min_outlier+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./final_epi_vr_base_min_outlier+tlrc.BRIK
++ total Elapsed time = 13.3 sec
3dcopy MPRAGE.GB21_unif_ns+tlrc anat_final.GB21
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dAllineate -base final_epi_vr_base_min_outlier+tlrc -allcostX -input anat_final.GB21+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.GB21+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base_min_outlier+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'TOHD(12.9425)'
 +        -cmass x y z shifts =    0.182    0.201   -0.416
 +  shift search range is +/- =   71.423   89.077   68.213
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.106653
   sp   = 0.282345
   mi   = 2.9
   crM  = 0.0278047
   nmi  = 0.841392
   je   = 2.9
   hel  = -0.113542
   crA  = 0.166807
   crU  = 0.17127
   lss  = 0.893347
   lpc  = 0.295223
   lpa  = 0.704777
   lpc+ = 0.415195
   lpa+ = 0.824748
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.2
++ ###########################################################
3dNwarpApply -source MPRAGE.GB21_unif+orig -master anat_final.GB21+tlrc -ainterp wsinc5 -nwarp anat.aff.qw_WARP.nii anat.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'MPRAGE.GB21_unif+orig'
++ -master dataset is 'anat_final.GB21+tlrc'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 7.7 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb04.volreg pb04.GB21.r01.volreg+tlrc.HEAD pb04.GB21.r02.volreg+tlrc.HEAD pb04.GB21.r03.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 192.3 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 172.3 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 72.6 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB21.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB21.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)
........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB21.r03.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r03+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB21.r01.blur pb04.GB21.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)
........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb05.GB21.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB21.r02.blur pb04.GB21.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GB21.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB21.r03.blur pb04.GB21.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)
........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb05.GB21.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -prefix rm.mask_r01 pb05.GB21.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB21.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 3999.308838
 + Used gradual clip level = 3810.932861 .. 4173.876953
 + Number voxels above clip level = 111087
 + Clustering voxels ...
 + Largest cluster has 110145 voxels
 + Clustering voxels ...
 + Largest cluster has 109376 voxels
 + Filled   127 voxels in small holes; now have 109503 voxels
 + Clustering voxels ...
 + Largest cluster has 109503 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 435965 voxels
 + Mask now has 109503 voxels
++ 109503 voxels in the mask [out of 545468: 20.08%]
++ first  10 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb05.GB21.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB21.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 3970.306885
 + Used gradual clip level = 3771.340576 .. 4167.147949
 + Number voxels above clip level = 111479
 + Clustering voxels ...
 + Largest cluster has 110446 voxels
 + Clustering voxels ...
 + Largest cluster has 109797 voxels
 + Filled   161 voxels in small holes; now have 109958 voxels
 + Filled     3 voxels in large holes; now have 109961 voxels
 + Clustering voxels ...
 + Largest cluster has 109960 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 435508 voxels
 + Mask now has 109960 voxels
++ 109960 voxels in the mask [out of 545468: 20.16%]
++ first  10 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb05.GB21.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB21.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 3971.785156
 + Used gradual clip level = 3763.549072 .. 4178.206055
 + Number voxels above clip level = 111236
 + Clustering voxels ...
 + Largest cluster has 110077 voxels
 + Clustering voxels ...
 + Largest cluster has 109601 voxels
 + Filled   150 voxels in small holes; now have 109751 voxels
 + Filled     3 voxels in large holes; now have 109754 voxels
 + Clustering voxels ...
 + Largest cluster has 109750 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 435718 voxels
 + Mask now has 109750 voxels
++ 109750 voxels in the mask [out of 545468: 20.12%]
++ first  10 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.GB21
++ processing 3 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 110648 survived, 434820 were zero
++ writing result full_mask.GB21...
3dresample -master full_mask.GB21+tlrc -input MPRAGE.GB21_unif_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.GB21
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 148684 survived, 396784 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.GB21...
3dmask_tool -input full_mask.GB21+tlrc mask_anat.GB21+tlrc -inter -prefix mask_epi_anat.GB21
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 38826 clipped, 110253 survived, 396389 were zero
++ writing result mask_epi_anat.GB21...
3dABoverlap -no_automask full_mask.GB21+tlrc mask_anat.GB21+tlrc
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#A=./full_mask.GB21+tlrc.BRIK  B=./mask_anat.GB21+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
110648       148684       149079       110253       395          38431         0.3570     25.8474     1.1869     1.1285     1.2234
3ddot -dodice full_mask.GB21+tlrc mask_anat.GB21+tlrc
tee out.mask_ae_dice.txt
0.850285	
3dresample -master full_mask.GB21+tlrc -prefix ./rm.resam.group -input /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz[0]
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 122282 survived, 423186 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
3ddot -dodice mask_anat.GB21+tlrc mask_group+tlrc
tee out.mask_at_dice.txt
0.902357	
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb05.GB21.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb05.GB21.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GB21.r01.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GB21.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb05.GB21.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb05.GB21.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GB21.r02.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GB21.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb05.GB21.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb05.GB21.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GB21.r03.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb06.GB21.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile motion_demean.1D -set_nruns 3 -split_into_pad_runs mot_demean
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile motion_deriv.1D -set_nruns 3 -split_into_pad_runs mot_deriv
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.4 motion_GB21
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
total number of censored TRs (simple form) = 22
1deval -a motion_GB21_censor.1D -b outcount_GB21_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_GB21_combined_2.1D -show_trs_uncensored encoded
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
3dDeconvolve -input pb06.GB21.r01.scale+tlrc.HEAD pb06.GB21.r02.scale+tlrc.HEAD pb06.GB21.r03.scale+tlrc.HEAD -censor censor_GB21_combined_2.1D -ortvec mot_demean.r01.1D mot_demean_r01 -ortvec mot_demean.r02.1D mot_demean_r02 -ortvec mot_demean.r03.1D mot_demean_r03 -ortvec mot_deriv.r01.1D mot_deriv_r01 -ortvec mot_deriv.r02.1D mot_deriv_r02 -ortvec mot_deriv.r03.1D mot_deriv_r03 -polort 4 -float -num_stimts 0 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.GB21 -errts errts.GB21 -x1D_stop -bucket stats.GB21
++ 3dDeconvolve extending num_stimts from 0 to 36 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 1096 2192
++ STAT automask has 534783 voxels (out of 545468 = 98.0%)
++ Skipping check for initial transients
++ Input polort=4; Longest run=504.2 s; Recommended minimum polort=4 ++ OK ++
++ Number of time points: 3288 (before censor) ; 3095 (after)
 + Number of parameters:  51 [51 baseline ; 0 signal]
++ Memory required for output bricks = 14,350,172,144 bytes (about 14 billion)
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb06.GB21.r01.scale+tlrc.HEAD pb06.GB21.r02.scale+tlrc.HEAD pb06.GB21.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.GB21_REML -Rvar stats.GB21_REMLvar \
 -Rfitts fitts.GB21_REML -Rerrts errts.GB21_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (3095x51):  6.64102  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (3095x51):  6.64102  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (3095x36):  4.89288  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (3095x15):  1.38598  ++ VERY GOOD ++
++ 3dDeconvolve exits: -x1D_stop option was invoked
3dTproject -polort 0 -input pb06.GB21.r01.scale+tlrc.HEAD pb06.GB21.r02.scale+tlrc.HEAD pb06.GB21.r03.scale+tlrc.HEAD -censor censor_GB21_combined_2.1D -cenmode ZERO -ort X.nocensor.xmat.1D -prefix errts.GB21.tproject
++ 3dTproject: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ have 3 input dataset names
++ Auto-catenated dataset has 3 runs
++ input time points = 3288 ; censored = 193 ; remaining = 3095
++ Setting up regressors
++ 3 Blocks * 1 polynomials -- 3 polort regressors
 + -- 51 other fixed ort regressors
++ 3095 retained time points MINUS 54 regressors ==> 3041 D.O.F. left
++ no -mask option ==> processing all 545468 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 14726 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./errts.GB21.tproject+tlrc.BRIK
++ ===== clock time = 36m 24s 231ms
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
-- no warnings for correlation matrix (cut = 0.400) --
1d_tool.py -show_df_info -infile X.xmat.1D
tee out.df_info.txt
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \

initial DF                   : 3288 : 100.0%

DF used for regs of interest :    0 :   0.0%
DF used for censoring        :  193 :   5.9%
DF used for polort           :   15 :   0.5%
DF used for motion           :   36 :   1.1%
total DF used                :  244 :   7.4%

final DF                     : 3044 :  92.6%

3dTcat -prefix all_runs.GB21 pb06.GB21.r01.scale+tlrc.HEAD pb06.GB21.r02.scale+tlrc.HEAD pb06.GB21.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 974.3 s
3dTstat -mean -prefix rm.signal.all all_runs.GB21+tlrc[3..400,409..411,421..1095,1097..1774,1796..2116,2118..2191,2193..2482,2489,2493..2533,2540..2829,2905..3035,3038..3041,3044..3232]
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.GB21.tproject+tlrc[3..400,409..411,421..1095,1097..1774,1796..2116,2118..2191,2193..2482,2489,2493..2533,2540..2829,2905..3035,3038..3041,3044..3232]
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -expr a/b -prefix TSNR.GB21
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.GB21+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.GB21.tproject+tlrc
++ 3dTnorm: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.GB21+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 110648 voxels survive the mask
3dTstat -sos -prefix - mean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.0851763
3dmaskave -quiet -mask full_mask.GB21+tlrc errts.GB21.tproject+tlrc
++ 3dmaskave: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
+++ 110648 voxels survive the mask
3dTcorr1D -prefix corr_brain errts.GB21.tproject+tlrc mean.errts.1D
++ 3dTcorr1D: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + reading dataset file errts.GB21.tproject+tlrc
 + reading 1D file mean.errts.1D
 + loading dataset ./errts.GB21.tproject+tlrc.BRIK into memory
++ Start correlations: 545468 voxels X 1 time series(3288); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 14726 voxels skipped because were constant in time
++ Wrote dataset: ./corr_brain+tlrc.BRIK
3dTstat -sum -prefix sum_baseline.1D X.nocensor.xmat.1D
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_baseline.1D
touch blur_est.GB21.1D
mkdir files_ACF
touch blur.epits.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
if ( 3..400,409..411,421..1095 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.GB21+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r01.1D all_runs.GB21+tlrc[3..400,409..411,421..1095]
++ 3dFWHMx: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 110253
++ detrending start: 73 baseline funcs, 1076 time points
