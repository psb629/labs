echo auto-generated by afni_proc.py, Thu Jan 19 17:50:32 2023
auto-generated by afni_proc.py, Thu Jan 19 17:50:32 2023
echo (version 7.17, July 16, 2021)
(version 7.17, July 16, 2021)
echo execution started: `date`
date
execution started: Thu Jan 19 05:50:32 PM KST 2023
afni -ver
Precompiled binary linux_ubuntu_16_64: Jul 28 2021 (Version AFNI_21.2.04 'Nerva')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   27 Jul 2021
if ( 0 ) then
if ( 0 > 0 ) then
set subj = GA02
endif
set output_dir = /mnt/ext5/GA/fmri_data/preproc_data/GA02
if ( -d /mnt/ext5/GA/fmri_data/preproc_data/GA02 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir -p /mnt/ext5/GA/fmri_data/preproc_data/GA02
mkdir /mnt/ext5/GA/fmri_data/preproc_data/GA02/stimuli
3dcopy /mnt/ext5/GA/fmri_data/raw_data/GA02/MPRAGE.GA02.nii /mnt/ext5/GA/fmri_data/preproc_data/GA02/MPRAGE.GA02
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GA02/blip_forward /mnt/ext5/GA/fmri_data/raw_data/GA02/dist_AP.GA02.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.0 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GA02/blip_reverse /mnt/ext5/GA/fmri_data/raw_data/GA02/dist_PA.GA02.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.2 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GA02/pb00.GA02.r01.tcat /mnt/ext5/GA/fmri_data/raw_data/GA02/func.GA02.r01.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 20.4 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GA02/pb00.GA02.r02.tcat /mnt/ext5/GA/fmri_data/raw_data/GA02/func.GA02.r02.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 32.4 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GA02/pb00.GA02.r03.tcat /mnt/ext5/GA/fmri_data/raw_data/GA02/func.GA02.r03.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 31.3 s
set tr_counts = ( 1096 1096 1096 )
cd /mnt/ext5/GA/fmri_data/preproc_data/GA02
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.GA02.r01.tcat+orig.HEAD pb00.GA02.r02.tcat+orig.HEAD pb00.GA02.r03.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 2.2 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 2.4 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 2.1 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GA02.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1224.8 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GA02.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1224.8 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GA02.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1224.8 MB)

-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

3dUnifize -prefix MPRAGE.GA02_unif -GM MPRAGE.GA02+orig
++ 3dUnifize: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + Pre-processing: ADV..................................UW[s245309]Gm
++ Output dataset ./MPRAGE.GA02_unif+orig.BRIK
++ ===== Elapsed = 37.6 sec
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 4 -legendre pb00.GA02.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 91446 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GA02.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 91509 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GA02.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 91467 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 1096 1096 1096 -index_to_run_tr 104
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
set minoutrun = 01
set minouttr = 104
echo min outlier: run 01, TR 104
tee out.min_outlier.txt
min outlier: run 01, TR 104
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.GA02.r01.despike pb00.GA02.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GA02.r01.tcat+orig
++ processing all 585900 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #11
++ start OpenMP thread #9
++ start OpenMP thread #2
++ start OpenMP thread #12
++ start OpenMP thread #10
++ start OpenMP thread #1
++ start OpenMP thread #3
++ start OpenMP thread #13
++ start OpenMP thread #14
++ start OpenMP thread #5
++ start OpenMP thread #6
++ start OpenMP thread #7
++ start OpenMP thread #4
++ start OpenMP thread #8
..........................................................................................................................................................................................................................................................
++ Elapsed despike time =  9s 327ms

++ FINAL: 412785384 data points, 15282020 edits [3.702%], 822249 big edits [0.199%]
++ Output dataset ./pb01.GA02.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GA02.r02.despike pb00.GA02.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GA02.r02.tcat+orig
++ processing all 585900 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #12
++ start OpenMP thread #14
++ start OpenMP thread #1
++ start OpenMP thread #6
++ start OpenMP thread #2
++ start OpenMP thread #11
++ start OpenMP thread #9
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #7
++ start OpenMP thread #13
++ start OpenMP thread #8
++ start OpenMP thread #4
++ start OpenMP thread #10
..........................................................................................................................................................................................................................................................
++ Elapsed despike time =  9s 263ms

++ FINAL: 412785384 data points, 15517640 edits [3.759%], 991939 big edits [0.240%]
++ Output dataset ./pb01.GA02.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GA02.r03.despike pb00.GA02.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GA02.r03.tcat+orig
++ processing all 585900 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #14
++ start OpenMP thread #9
++ start OpenMP thread #13
++ start OpenMP thread #2
++ start OpenMP thread #4
++ start OpenMP thread #7
++ start OpenMP thread #12
++ start OpenMP thread #6
++ start OpenMP thread #3
++ start OpenMP thread #11
++ start OpenMP thread #8
++ start OpenMP thread #1
++ start OpenMP thread #5
++ start OpenMP thread #10
..........................................................................................................................................................................................................................................................
++ Elapsed despike time =  9s 785ms

++ FINAL: 412785384 data points, 15123262 edits [3.664%], 865230 big edits [0.210%]
++ Output dataset ./pb01.GA02.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.GA02.r01.tshift pb01.GA02.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GA02.r02.tshift pb01.GA02.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GA02.r03.tshift pb01.GA02.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTstat -median -prefix rm.blip.med.fwd blip_forward+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.fwd+orig.BRIK
3dTstat -median -prefix rm.blip.med.rev blip_reverse+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.rev+orig.BRIK
3dAutomask -apply_prefix rm.blip.med.masked.fwd rm.blip.med.fwd+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.fwd+orig
++ Forming automask
 + Fixed clip level = 5550.814453
 + Used gradual clip level = 5373.506348 .. 5806.400879
 + Number voxels above clip level = 103623
 + Clustering voxels ...
 + Largest cluster has 100336 voxels
 + Clustering voxels ...
 + Largest cluster has 99074 voxels
 + Filled   455 voxels in small holes; now have 99529 voxels
 + Filled     2 voxels in large holes; now have 99531 voxels
 + Clustering voxels ...
 + Largest cluster has 99525 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 486375 voxels
 + Mask now has 99525 voxels
++ 99525 voxels in the mask [out of 585900: 16.99%]
++ first  13 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first  14 y-planes are zero [from A]
++ last   17 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./rm.blip.med.masked.fwd+orig.BRIK
++ CPU time = 0.000000 sec
3dAutomask -apply_prefix rm.blip.med.masked.rev rm.blip.med.rev+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.rev+orig
++ Forming automask
 + Fixed clip level = 5535.312500
 + Used gradual clip level = 5139.965820 .. 5904.081055
 + Number voxels above clip level = 102419
 + Clustering voxels ...
 + Largest cluster has 99379 voxels
 + Clustering voxels ...
 + Largest cluster has 98052 voxels
 + Filled   411 voxels in small holes; now have 98463 voxels
 + Filled     1 voxels in large holes; now have 98464 voxels
 + Clustering voxels ...
 + Largest cluster has 98454 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 487434 voxels
 + Mask now has 98466 voxels
++ 98466 voxels in the mask [out of 585900: 16.81%]
++ first  13 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first  11 y-planes are zero [from A]
++ last   16 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last   11 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./rm.blip.med.masked.rev+orig.BRIK
++ CPU time = 0.000000 sec
3dQwarp -plusminus -pmNAMES Rev For -pblur 0.05 0.05 -blur -1 -1 -noweight -minpatch 9 -source rm.blip.med.masked.rev+orig -base rm.blip.med.masked.fwd+orig -prefix blip_warp
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=3 ytop=3  zbot=3 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=./rm.blip.med.masked.fwd+orig.HEAD  source=./rm.blip.med.masked.rev+orig.HEAD
++ AFNI warpomatic start: 90 x 99 x 81 volume ; autobbox = 5..83 9..89 0..76
lev=0 0..89 0..98 0..80: [first cost=-1.57926] ...... done [cost=-1.79099]
lev=1 patch=67x75x61: [first cost=-1.65349] ........ done [cost:-1.69061 ; 8 patches optimized, 0 skipped]
lev=2 patch=51x55x45: [first cost=-1.59972] ........................... done [cost:-1.68300 ; 27 patches optimized, 0 skipped]
lev=3 patch=37x41x35: [first cost=-1.60258] ................ done [cost:-1.70892 ; 54 patches optimized, 10 skipped]
lev=4 patch=29x31x25: [first cost=-1.65986] ............. done [cost:-1.73470 ; 103 patches optimized, 47 skipped]
lev=5 patch=21x23x19: [first cost=-1.73470] ...................... done [cost:-1.83239 ; 291 patches optimized, 157 skipped]
lev=6 patch=17x17x15: [first cost=-1.75847] .............................. done [cost:-1.83509 ; 614 patches optimized, 386 skipped]
lev=7 patch=13x13x11: [first cost=-1.83755] ....... +      cubic12 patch 013..025 071..083 015..025 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
......................... done [cost:-1.91551 ; 1563 patches optimized, 1167 skipped]
lev=8 patch=9x9x9: [first cost=-1.91506] . +      cubic12 patch 070..078 044..052 051..059 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
. +      cubic12 patch 070..078 024..032 019..027 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.... +      cubic12 patch 066..074 056..064 007..015 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
... +      cubic12 patch 058..066 080..088 035..043 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.... +      cubic12 patch 054..062 060..068 067..075 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
....... +      cubic12 patch 054..062 012..020 027..035 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 +      cubic12 patch 050..058 080..088 023..031 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.................... +      cubic12 patch 042..050 032..040 003..011 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
........ +      cubic12 patch 034..042 032..040 071..079 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
..... +      cubic12 patch 030..038 032..040 067..075 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.................. +      cubic12 patch 006..014 060..068 051..059 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x25e8920  xbot=0x25fdff0  xtop=0x2693640  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
... done [cost:-2.00191 ; 4267 patches optimized, 3333 skipped]
++ ====== total number of parameters 'optimized' = 83313
 +      initial unpenalized cost = -1.57926
 +        final unpenalized cost = -2.0341
 +        final penalized   cost = -2.00191
++ Output dataset ./blip_warp_Rev+orig.BRIK
++ Output dataset ./blip_warp_For+orig.BRIK
++ Output dataset ./blip_warp_Rev_WARP+orig.BRIK
++ Output dataset ./blip_warp_For_WARP+orig.BRIK
++ ===== clock time = 56s 747ms
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.fwd+orig -prefix blip_med_for
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for+orig.BRIK
++ total Elapsed time = 4.3 sec
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.masked.fwd+orig -prefix blip_med_for_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for_masked+orig.BRIK
++ total Elapsed time = 2.4 sec
3dNwarpApply -quintic -nwarp blip_warp_Rev_WARP+orig -source rm.blip.med.masked.rev+orig -prefix blip_med_rev_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.rev+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_rev_masked+orig.BRIK
++ total Elapsed time = 3.0 sec
foreach run ( 01 02 03 )
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GA02.r01.tshift+orig -prefix pb03.GA02.r01.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GA02.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GA02.r01.blip+orig.BRIK
++ total Elapsed time = 278.0 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GA02.r02.tshift+orig -prefix pb03.GA02.r02.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GA02.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GA02.r02.blip+orig.BRIK
++ total Elapsed time = 210.4 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GA02.r03.tshift+orig -prefix pb03.GA02.r03.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GA02.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GA02.r03.blip+orig.BRIK
++ total Elapsed time = 58.2 sec
end
3dbucket -prefix vr_base_min_outlier pb03.GA02.r01.blip+orig[104]
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
align_epi_anat.py -anat2epi -anat MPRAGE.GA02_unif+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off -tshift off
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GA02/MPRAGE.GA02_unif+orig
#++ Multi-cost is lpa
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GA02_unif*
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GA02_unif+orig ./MPRAGE.GA02_unif_unflipped+orig
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./MPRAGE.GA02_unif_unflipped+orig -prefix ./MPRAGE.GA02_unif_unflipped_ns
#Script is running (command trimmed):
  3dinfo ./MPRAGE.GA02_unif_unflipped_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GA02/MPRAGE.GA02_unif_unflipped_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GA02/vr_base_min_outlier+orig is not oblique
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_ts ./vr_base_min_outlier+orig'[0]'
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_min_outlier_ts_ns ./__tt_vr_base_min_outlier_ts+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 4063.806641
 + Used gradual clip level = 3738.681396 .. 4370.059570
 + Number voxels above clip level = 93624
 + Clustering voxels ...
 + Largest cluster has 92338 voxels
 + Clustering voxels ...
 + Largest cluster has 90741 voxels
 + Filled   305 voxels in small holes; now have 91046 voxels
 + Filled     3 voxels in large holes; now have 91049 voxels
 + Clustering voxels ...
 + Largest cluster has 91048 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 494852 voxels
 + Mask now has 91048 voxels
++ 91048 voxels in the mask [out of 585900: 15.54%]
++ first  13 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first  16 y-planes are zero [from A]
++ last   16 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last   13 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_min_outlier_ts_ns+orig
#++ Applying threshold of 9597.885742 on /mnt/ext5/GA/fmri_data/preproc_data/GA02/vr_base_min_outlier_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_min_outlier_ts_ns_wt -a ./vr_base_min_outlier_ts_ns+orig -expr 'min(1,(a/9597.885742))'
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpa -wtprefix ./MPRAGE.GA02_unif_unflipped_ns_al_junk_wtal -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GA02_unif_unflipped_ns+orig -prefix ./MPRAGE.GA02_unif_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GA02_unif_al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GA02_unif_unflipped_ns+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5432072 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 91048 voxels [14.8%] in weight mask
++ Number of points for matching = 91048
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.998 49.577 40.199 (index)
 + source center of mass = 113.767 172.606 186.190 (index)
 + source-target CM = -0.397 -2.609 -3.279 (xyz)
 + estimated center of mass shifts = -0.397 -2.609 -3.279
++ shift param auto-range: -71.9..71.1 -81.8..76.6 -70.5..63.9
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.397217 .. 9.602783  center = -0.397217
 + Range param#2 [y-shift] = -12.609390 .. 7.390610  center = -2.609390
 + Range param#3 [z-shift] = -13.278984 .. 6.721016  center = -3.278984
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.397217 .. 39.602783  center = -0.397217
 + Range param#2 [y-shift] = -42.609390 .. 37.390610  center = -2.609390
 + Range param#3 [z-shift] = -43.278984 .. 36.721016  center = -3.278984
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000084
++ Final parameter search ranges:
 +       x-shift =  -40.397 ..   39.603
 +       y-shift =  -42.609 ..   37.391
 +       z-shift =  -43.279 ..   36.721
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 5432072 [out of 23639724] voxels
 + base mask has 112957 [out of 617148] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=291.402 usiz=383.425
 + - copying weight image
 + - using 91048 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 81477 total points stored in 159 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#o+-o-o++.-..o---....+-$o-oo+ + - best 88 costs found:
   o= 0 v= 0.940165:  -0.40  -2.61  -3.28   0.00   0.00   0.00  [grid]
   o= 1 v= 0.956627: -32.24 -14.40  -0.54  23.31  -3.26  40.47  [rand]
   o= 2 v= 0.957701: -32.24 -14.40  -6.02  23.31  -3.26  40.47  [rand]
   o= 3 v= 0.959029: -32.24 -14.40  -6.02  23.31   3.26  40.47  [rand]
   o= 4 v= 0.959033: -32.24 -14.40  -0.54  23.31   3.26  40.47  [rand]
   o= 5 v= 0.961751: -35.25  33.07  10.97  40.22 -24.26  41.52  [rand]
   o= 6 v= 0.962960: -34.72 -19.19   5.32  16.34  -8.64  40.54  [rand]
   o= 7 v= 0.963732: -34.72 -19.19   5.32  16.34   8.64  40.54  [rand]
   o= 8 v= 0.963835: -27.92 -34.78   7.77  26.08  -6.57  36.57  [rand]
   o= 9 v= 0.963968:  -7.06  -9.28  -9.95   7.50  -7.50   7.50  [grid]
   o=10 v= 0.964076: -34.23 -32.11   9.68  31.95  -9.87  34.85  [rand]
   o=11 v= 0.964462: -32.83 -16.95   2.32   8.22   9.03  36.72  [rand]
   o=12 v= 0.964758: -34.72  13.98   5.32  16.34  -8.64  40.54  [rand]
   o=13 v= 0.965745: -34.72 -19.19 -11.88  16.34  -8.64  40.54  [rand]
   o=14 v= 0.966669: -32.89 -29.60  28.61   9.69  21.75  40.77  [rand]
   o=15 v= 0.966757: -35.25 -38.29  10.97  40.22 -24.26  41.52  [rand]
   o=16 v= 0.967400: -32.89  24.38 -35.17  -9.69  21.75  40.77  [rand]
   o=17 v= 0.967712: -35.25  33.07 -17.53  40.22 -24.26  41.52  [rand]
   o=18 v= 0.967820: -27.17  12.02 -34.63  16.09  31.75  34.71  [rand]
   o=19 v= 0.967988: -32.24   9.19  -6.02  23.31   3.26  40.47  [rand]
   o=20 v= 0.968044: -32.61  26.44  32.86  40.41 -19.09  40.75  [rand]
   o=21 v= 0.968306: -32.83  11.73   2.32  -8.22   9.03  36.72  [rand]
   o=22 v= 0.968410: -35.25  33.07  10.97 -40.22  24.26  41.52  [rand]
   o=23 v= 0.968721:  -7.06  -9.28   3.39   7.50  -7.50  30.00  [grid]
   o=24 v= 0.968905: -32.83 -16.95  -8.88   8.22   9.03  36.72  [rand]
   o=25 v= 0.968955: -32.24   9.19  -0.54  23.31  -3.26  40.47  [rand]
   o=26 v= 0.969023: -32.89  24.38  28.61  -9.69 -21.75  40.77  [rand]
   o=27 v= 0.969103: -32.88 -17.30   8.53  11.16   9.40  34.39  [rand]
   o=28 v= 0.969306: -34.23  26.89   9.68  31.95  -9.87  34.85  [rand]
   o=29 v= 0.969357:   6.27  -9.28   3.39  -7.50  -7.50 -30.00  [grid]
   o=30 v= 0.969408: -27.92  29.56   7.77  26.08   6.57  36.57  [rand]
   o=31 v= 0.969672:  -7.06   4.06  -9.95   7.50   7.50   7.50  [grid]
   o=32 v= 0.970053: -27.06   4.06  -9.95  30.00   7.50  30.00  [grid]
   o=33 v= 0.970093: -32.89  24.38 -35.17   9.69  21.75  40.77  [rand]
   o=34 v= 0.970223: -23.25  20.97 -13.69  -5.91  29.74  29.45  [rand]
   o=35 v= 0.970291: -22.86  26.54  26.75 -27.43  11.56 -19.13  [rand]
   o=36 v= 0.970324: -34.72  13.98   5.32 -16.34   8.64  40.54  [rand]
   o=37 v= 0.970379: -34.23  26.89   9.68  31.95   9.87  34.85  [rand]
   o=38 v= 0.970477: -27.06   4.06   3.39  30.00   7.50  30.00  [grid]
   o=39 v= 0.970569: -24.60 -12.95  -7.80  27.51  29.30  27.65  [rand]
   o=40 v= 0.970596: -28.58  11.61  10.21 -11.27 -31.24  23.90  [rand]
   o=41 v= 0.970626:  -7.06   4.06  23.39  30.00 -30.00  30.00  [grid]
   o=42 v= 0.970642:  32.09 -29.60  28.61  -9.69 -21.75  40.77  [rand]
   o=43 v= 0.970645: -32.83  11.73  -8.88   8.22   9.03  36.72  [rand]
   o=44 v= 0.970681: -27.06   4.06   3.39   7.50   7.50  30.00  [grid]
   o=45 v= 0.970834: -35.25  33.07 -17.53  40.22  24.26 -41.52  [rand]
   o=46 v= 0.970962: -32.88 -17.30 -15.09  11.16  -9.40  34.39  [rand]
   o=47 v= 0.971023: -35.25 -38.29 -17.53  40.22 -24.26  41.52  [rand]
   o=48 v= 0.971025: -15.40  34.34 -21.53  34.16  13.44  39.30  [rand]
   o=49 v= 0.971257: -34.72  13.98   5.32 -16.34  -8.64  40.54  [rand]
   o=50 v= 0.971336: -31.43  16.98 -24.88  24.25  27.21  33.81  [rand]
   o=51 v= 0.971348:   6.27  -9.28  -9.95  -7.50  -7.50  -7.50  [grid]
   o=52 v= 0.971378: -32.24   9.19  -0.54  23.31   3.26  40.47  [rand]
   o=53 v= 0.971405: -32.83 -16.95   2.32   8.22  -9.03  36.72  [rand]
   o=54 v= 0.971424: -37.04  14.62  18.98  -5.26  41.39  40.03  [rand]
   o=55 v= 0.971550: -34.72  13.98 -11.88 -16.34   8.64  40.54  [rand]
   o=56 v= 0.971647:  36.41  30.48  16.92  39.82  23.12  -9.72  [rand]
   o=57 v= 0.971660: -35.26  27.94  12.49 -11.68  29.04  39.38  [rand]
   o=58 v= 0.971685: -32.83 -16.95  -8.88   8.22  -9.03  36.72  [rand]
   o=59 v= 0.971774: -34.23  26.89 -16.24  31.95  -9.87  34.85  [rand]
   o=60 v= 0.971815: -34.23 -32.11 -16.24  31.95  -9.87  34.85  [rand]
   o=61 v= 0.971825: -27.92 -34.78   7.77  26.08   6.57  36.57  [rand]
   o=62 v= 0.971863:  27.42 -25.82  23.25  -3.35 -33.01  26.09  [rand]
   o=63 v= 0.971867:  32.09  24.38  28.61   9.69 -21.75 -40.77  [rand]
   o=64 v= 0.971875: -27.06   4.06   3.39  -7.50   7.50  -7.50  [grid]
   o=65 v= 0.971974:  33.93  13.98   5.32  16.34   8.64 -40.54  [rand]
   o=66 v= 0.972033: -35.25  33.07  10.97  40.22  24.26 -41.52  [rand]
   o=67 v= 0.972046:   6.27  24.06   3.39   7.50  30.00  -7.50  [grid]
   o=68 v= 0.972074:  34.46  33.07  10.97  40.22  24.26 -41.52  [rand]
   o=69 v= 0.972124: -35.03  19.64  11.02 -17.65 -21.98   4.20  [rand]
   o=70 v= 0.972293:  31.44   9.19  -0.54  23.31   3.26 -40.47  [rand]
   o=71 v= 0.972293: -32.89  24.38  28.61   9.69 -21.75 -40.77  [rand]
   o=72 v= 0.972294: -32.83  11.73   2.32   8.22   9.03  36.72  [rand]
   o=73 v= 0.972296:  27.79  11.61  10.21  11.27 -31.24 -23.90  [rand]
   o=74 v= 0.972321: -27.06  -9.28  -9.95  -7.50  -7.50   7.50  [grid]
   o=75 v= 0.972328: -14.60 -12.06   1.56 -15.99 -13.53  29.93  [rand]
   o=76 v= 0.972471: -37.07  25.16  -8.16 -15.70  36.90  27.47  [rand]
   o=77 v= 0.972505: -32.89  24.38  28.61   9.69  21.75  40.77  [rand]
   o=78 v= 0.972535: -27.06  -9.28  -9.95  30.00  30.00  30.00  [grid]
   o=79 v= 0.972606: -32.24   9.19  -6.02  23.31  -3.26  40.47  [rand]
   o=80 v= 0.972793: -34.72 -19.19 -11.88  16.34   8.64  40.54  [rand]
   o=81 v= 0.973029:   9.93 -31.42  11.73  30.67 -17.79  20.52  [rand]
   o=82 v= 0.973066:  34.46  33.07  10.97 -40.22  24.26  41.52  [rand]
   o=83 v= 0.973128: -27.06   4.06 -29.95  30.00   7.50  30.00  [grid]
   o=84 v= 0.973129: -24.60 -12.95   1.24  27.51  29.30  27.65  [rand]
   o=85 v= 0.973193: -31.43  16.98  18.32 -24.25 -27.21  33.81  [rand]
   o=86 v= 0.973239: -10.22  22.15   8.10   3.10  34.36   2.55  [rand]
   o=87 v= 0.973260: -31.43  16.98  18.32  24.25 -27.21  33.81  [rand]
 + - A little optimization:*[#11716=0.90958] *[#11726=0.898529] *[#11727=0.87887] *[#11728=0.852024] *[#11731=0.849281] *[#11734=0.843983] *[#11739=0.842922] *[#11740=0.842482] *[#11741=0.842082] *[#11742=0.841893] *[#11743=0.841252] *[#11746=0.840168] *[#11747=0.839938] *[#11748=0.83992] *[#11751=0.839626] *[#11752=0.839512] *[#11755=0.839505] *[#11756=0.83946] *[#11759=0.83943] *[#11761=0.839425] ........................................................................................
 + - costs of the above after a little optimization:
  *o= 0 v= 0.839425:   0.21  -1.04  -0.73  -0.17   0.38  -0.07  [grid]  [f=49]
   o= 1 v= 0.951468: -31.47 -14.53  -1.21  23.91  -3.28  44.61  [rand]  [f=35]
   o= 2 v= 0.951392: -32.17 -13.56  -5.79  23.52  -3.27  44.99  [rand]  [f=33]
   o= 3 v= 0.953133: -32.91 -15.14  -6.23  22.20   2.70  44.88  [rand]  [f=37]
   o= 4 v= 0.949343: -30.01 -13.69  -0.85  23.41  -4.20  44.42  [rand]  [f=53]
   o= 5 v= 0.949315: -34.67  35.20   6.08  35.25 -19.03  44.73  [rand]  [f=42]
   o= 6 v= 0.949030: -34.50 -26.36  -0.77  11.80  -9.57  44.40  [rand]  [f=53]
   o= 7 v= 0.948453: -31.89 -16.61  -4.53  12.05   0.70  44.86  [rand]  [f=64]
   o= 8 v= 0.951151: -31.60 -33.31   7.28  25.90  -7.04  37.81  [rand]  [f=39]
   o= 9 v= 0.951272:  -9.59  -6.18  -8.41  12.45  -5.60   3.65  [grid]  [f=69]
   o=10 v= 0.952294: -31.69 -32.34   8.16  27.11  -8.98  37.16  [rand]  [f=49]
   o=11 v= 0.956133: -32.41 -16.87   0.97   6.90   8.86  43.04  [rand]  [f=38]
   o=12 v= 0.952073: -36.62  13.99   8.85  19.50 -17.10  44.98  [rand]  [f=42]
   o=13 v= 0.949676: -33.49 -11.55  -9.45  14.31  -8.05  43.13  [rand]  [f=42]
   o=14 v= 0.957446: -31.66 -28.79  26.61   9.20  18.23  38.63  [rand]  [f=44]
   o=15 v= 0.960544: -31.22 -39.50   8.58  42.34 -23.13  39.91  [rand]  [f=40]
   o=16 v= 0.955317: -34.61  25.15 -37.74  -7.44  16.90  44.94  [rand]  [f=42]
   o=17 v= 0.962027: -34.29  33.07 -16.93  39.97 -24.53  44.74  [rand]  [f=36]
   o=18 v= 0.964808: -28.42  14.07 -34.68  15.12  31.44  36.28  [rand]  [f=50]
   o=19 v= 0.946727: -30.09  -4.17  -2.53  22.45   6.93  38.79  [rand]  [f=50]
   o=20 v= 0.961626: -32.07  21.96  33.07  39.49 -19.21  40.57  [rand]  [f=34]
   o=21 v= 0.945906: -36.75   9.82   3.73  -8.60   6.00  44.94  [rand]  [f=52]
   o=22 v= 0.954515: -39.95  33.86   9.10 -38.84  23.70  44.28  [rand]  [f=46]
   o=23 v= 0.960348:  -6.42 -10.66  -0.23   9.65  -5.70  27.67  [grid]  [f=43]
   o=24 v= 0.954005: -33.26 -14.98  -6.74   9.45   5.30  41.68  [rand]  [f=52]
   o=25 v= 0.966161: -31.50   8.81  -1.23  23.04  -2.40  43.32  [rand]  [f=36]
   o=26 v= 0.959329: -37.30  24.16  26.95 -11.29 -19.58  43.37  [rand]  [f=44]
   o=27 v= 0.958486: -33.77 -15.85   6.79  21.74   7.24  37.40  [rand]  [f=55]
   o=28 v= 0.945276: -34.34  33.54   6.87  29.13 -11.56  40.43  [rand]  [f=58]
   o=29 v= 0.958970:   7.21 -10.03   3.79  -5.66  -2.29 -21.41  [grid]  [f=77]
   o=30 v= 0.949391: -30.35  37.07   5.25  22.05   5.74  41.97  [rand]  [f=46]
   o=31 v= 0.961447:  -6.31   3.51  -6.33   5.48   7.29   8.58  [grid]  [f=56]
   o=32 v= 0.962887: -31.21   3.94 -10.07  30.12   7.50  30.19  [grid]  [f=34]
   o=33 v= 0.954759: -32.11   6.05 -30.73   8.56  19.82  40.91  [rand]  [f=51]
   o=34 v= 0.967068: -26.98  21.29 -15.33  -3.91  27.87  28.83  [rand]  [f=47]
   o=35 v= 0.960597: -20.96  28.37  25.66 -27.55  11.11 -13.51  [rand]  [f=42]
   o=36 v= 0.945393: -35.59  14.42   5.63 -11.02   9.55  44.93  [rand]  [f=78]
   o=37 v= 0.959153: -31.95  31.62  14.09  30.17   6.83  41.69  [rand]  [f=49]
   o=38 v= 0.953708: -29.27   1.53   1.63  26.85   2.20  39.67  [grid]  [f=55]
   o=39 v= 0.961219: -22.61 -12.90  -7.81  25.59  30.25  35.58  [rand]  [f=54]
   o=40 v= 0.965064: -29.97  10.69   9.60 -12.27 -28.24  22.02  [rand]  [f=46]
   o=41 v= 0.968026:  -5.57   3.18  22.92  30.11 -31.06  28.16  [grid]  [f=44]
   o=42 v= 0.961141:  36.32 -28.56  27.66 -10.72 -21.45  40.39  [rand]  [f=35]
   o=43 v= 0.954864: -34.41   4.65  -0.95   8.04   8.79  38.91  [rand]  [f=47]
   o=44 v= 0.962830: -23.10   3.39   3.94   6.88   5.03  30.38  [grid]  [f=47]
   o=45 v= 0.961407: -34.57  29.44 -14.88  41.36  25.44 -40.81  [rand]  [f=41]
   o=46 v= 0.947102: -36.55 -11.77 -24.18  19.25 -18.71  43.94  [rand]  [f=49]
   o=47 v= 0.963186: -34.55 -38.12 -16.63  36.62 -26.23  43.93  [rand]  [f=35]
   o=48 v= 0.965589: -16.75  31.89 -22.40  32.57  18.09  39.62  [rand]  [f=46]
   o=49 v= 0.957411: -40.24  18.83   4.76 -11.67 -12.27  44.42  [rand]  [f=49]
   o=50 v= 0.962835: -28.74  12.10 -22.47  14.47  27.34  38.97  [rand]  [f=46]
   o=51 v= 0.958709:   3.94  -6.90  -9.89  -4.06  -5.80  -1.42  [grid]  [f=83]
   o=52 v= 0.949501: -28.84  -7.03   1.63  25.03   3.26  42.70  [rand]  [f=61]
   o=53 v= 0.957198: -37.80 -15.97   4.25  10.09  -7.85  37.99  [rand]  [f=44]
   o=54 v= 0.963693: -34.01  17.88  17.99  -7.61  39.68  44.56  [rand]  [f=54]
   o=55 v= 0.957988: -37.40  14.29  -9.88 -17.07   9.42  44.89  [rand]  [f=52]
   o=56 v= 0.966576:  36.62  27.62  17.79  39.93  22.83 -10.70  [rand]  [f=36]
   o=57 v= 0.953922: -35.03  33.00  13.66 -11.59  22.96  44.76  [rand]  [f=64]
   o=58 v= 0.945114: -33.96 -11.02  -7.52  17.69 -10.71  44.10  [rand]  [f=51]
   o=59 v= 0.955521: -34.19  35.07 -15.97  32.46 -15.21  34.24  [rand]  [f=51]
   o=60 v= 0.962796: -33.73 -33.77 -15.34  32.23 -19.83  44.66  [rand]  [f=44]
   o=61 v= 0.952457: -29.30 -37.24   8.80  27.02  -3.33  41.99  [rand]  [f=53]
   o=62 v= 0.969435:  26.74 -25.41  23.68  -3.46 -33.22  26.47  [rand]  [f=48]
   o=63 v= 0.963546:  35.74  21.43  27.15   9.81 -19.72 -39.99  [rand]  [f=40]
   o=64 v= 0.966935: -27.92   8.12   3.22  -7.57   7.61  -7.81  [grid]  [f=36]
   o=65 v= 0.953735:  39.02  14.64   0.28  23.30   6.84 -44.76  [rand]  [f=47]
   o=66 v= 0.969213: -36.28  30.29  10.16  39.78  23.40 -40.63  [rand]  [f=40]
   o=67 v= 0.967084:   2.69  25.17   3.24   8.11  30.21  -8.11  [grid]  [f=38]
   o=68 v= 0.965343:  38.76  32.80  10.42  41.03  23.35 -41.63  [rand]  [f=34]
   o=69 v= 0.963732: -37.31  11.41  10.38 -21.02 -21.28   5.98  [rand]  [f=45]
   o=70 v= 0.955086:  38.81  14.07  -1.23  23.28   5.93 -44.98  [rand]  [f=55]
   o=71 v= 0.955633: -34.41  12.82  26.67   6.69 -17.80 -38.73  [rand]  [f=56]
   o=72 v= 0.951958: -33.22   3.09   2.89   8.77   9.62  40.62  [rand]  [f=48]
   o=73 v= 0.968952:  29.59  10.80   9.62   7.84 -28.49 -24.24  [rand]  [f=45]
   o=74 v= 0.955139: -26.54  -2.89 -10.32 -11.89  -6.01   9.53  [grid]  [f=50]
   o=75 v= 0.958720: -16.09 -10.40  -1.40  -3.89 -15.39  27.40  [rand]  [f=73]
   o=76 v= 0.969478: -37.38  24.00 -10.22 -19.16  34.68  28.10  [rand]  [f=40]
   o=77 v= 0.961439: -31.08  24.42  28.17  16.88  19.24  41.59  [rand]  [f=64]
   o=78 v= 0.967168: -26.01 -13.29 -10.20  30.55  28.94  29.92  [grid]  [f=34]
   o=79 v= 0.949175: -32.24  -6.46  -2.67  14.15   1.19  44.46  [rand]  [f=58]
   o=80 v= 0.964942: -30.70 -18.91 -12.46  15.74   8.15  41.07  [rand]  [f=34]
   o=81 v= 0.964553:   7.69 -29.14  12.46  29.19 -22.07  20.64  [rand]  [f=37]
   o=82 v= 0.970386:  38.66  32.81  11.42 -39.90  24.77  41.69  [rand]  [f=30]
   o=83 v= 0.952744: -29.91  -0.18 -24.50  25.76   0.15  42.18  [grid]  [f=49]
   o=84 v= 0.972076: -23.79 -13.12   1.06  27.03  29.88  27.54  [rand]  [f=44]
   o=85 v= 0.961830: -38.38  18.82  21.18 -21.76 -21.99  38.08  [rand]  [f=53]
   o=86 v= 0.970606: -10.17  22.55   8.81   2.78  33.66   0.72  [rand]  [f=48]
   o=87 v= 0.954124: -36.12  13.25  11.60  20.23 -21.39  43.05  [rand]  [f=53]
 + - saving # 0 for use with twobest
 + - saving #58 for use with twobest
 + - saving #28 for use with twobest
 + - saving #36 for use with twobest
 + - saving #21 for use with twobest
 + - saving #19 for use with twobest
 + - saving #46 for use with twobest
 + - saving # 7 for use with twobest
 + - saving # 6 for use with twobest
 + - saving #79 for use with twobest
 + - saving # 5 for use with twobest
 + - saving # 4 for use with twobest
 + - saving #30 for use with twobest
 + - saving #52 for use with twobest
 + - skip #13 for twobest: too close to set #58
 + - saving # 8 for use with twobest
 + - saving # 9 for use with twobest
 + - saving # 2 for use with twobest
 + - skip # 1 for twobest: too close to set # 4
 + - saving #72 for use with twobest
 + - saving #12 for use with twobest
 + - skip #10 for twobest: too close to set # 8
 + - skip #61 for twobest: too close to set # 8
 + - saving #83 for use with twobest
 + - saving # 3 for use with twobest
 + - saving #38 for use with twobest
 + - saving #65 for use with twobest
 + - saving #57 for use with twobest
 + - saving #24 for use with twobest
 + - skip #87 for twobest: too close to set #12
 + - saving #22 for use with twobest
 + - saving #33 for use with twobest
 + - skip #43 for twobest: too close to set #72
 + - skip #70 for twobest: too close to set #65
 + - saving #74 for use with twobest
 + - saving #16 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=291.402 usiz=383.425
 + - retaining old weight image
 + - using 91048 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 81512 total points stored in 162 'TOHD(14.0453)' bloks (0 duplicates)
*[#15994=0.822478] *[#16006=0.822453] *[#16015=0.821653] *[#16016=0.820928] *[#16019=0.820131] *[#16021=0.819634] *[#16023=0.818211] *[#16025=0.818047] *[#16026=0.817109] *[#16029=0.816279] *[#16036=0.815895] *[#16044=0.815638] *[#16047=0.815371] *[#16048=0.814907] *[#16049=0.814412] *[#16052=0.813836] *[#16053=0.813172] *[#16054=0.812919] *[#16056=0.812904] *[#16057=0.812684] *[#16060=0.812619] *[#16063=0.812553] *[#16064=0.812421] *[#16065=0.812333] *[#16066=0.812203] *[#16067=0.812135] *[#16068=0.812055] *[#16072=0.811945] *[#16073=0.811857] *[#16074=0.811697] *[#16075=0.811557] *[#16076=0.81128] *[#16079=0.810666] *[#16080=0.810509] *[#16081=0.810103] *[#16084=0.809776] *[#16085=0.809642] *[#16087=0.809594] *[#16088=0.809435] *[#16089=0.809354] *[#16091=0.809308] 
 + - param set #1 has cost=0.809308 [o=0 t=0]
 + -- Parameters = 0.1386 -0.7973 -0.5896 -0.1060 0.6022 -0.2553 0.9855 0.9986 0.9838 -0.0018 0.0005 0.0127
 + - param set #2 has cost=0.949436 [o=58 t=1]
 + -- Parameters = -33.9646 -10.9481 -7.0492 18.1890 -11.0333 44.1414 0.9941 1.0049 0.9937 -0.0008 0.0147 0.0027
 + - param set #3 has cost=0.949797 [o=28 t=2]
 + -- Parameters = -34.7655 33.9855 6.8134 27.3523 -10.6146 44.5157 0.9747 0.9912 1.0020 -0.0005 -0.0004 0.0014
 + - param set #4 has cost=0.951215 [o=36 t=3]
 + -- Parameters = -35.5976 14.3827 5.2447 -10.9644 9.8112 44.8377 1.0001 1.0033 0.9979 -0.0002 -0.0002 0.0131
 + - param set #5 has cost=0.952039 [o=21 t=4]
 + -- Parameters = -36.7790 9.8545 3.7502 -8.5718 5.9556 44.9138 0.9965 1.0003 1.0004 0.0000 0.0011 -0.0002
 + - param set #6 has cost=0.954313 [o=19 t=5]
 + -- Parameters = -30.0961 -4.2538 -2.6287 22.2207 6.4685 39.1668 0.9994 0.9929 0.9969 0.0008 -0.0009 -0.0001
 + - param set #7 has cost=0.950692 [o=46 t=6]
 + -- Parameters = -36.5252 -11.4775 -24.0996 18.7830 -18.5567 43.8942 0.9994 0.9976 1.0037 -0.0003 -0.0011 -0.0005
 + - param set #8 has cost=0.951512 [o=7 t=7]
 + -- Parameters = -32.5160 -12.3379 -4.3180 11.4179 0.7497 44.9538 1.0034 0.9947 0.9823 0.0025 0.0007 -0.0018
 + - param set #9 has cost=0.952863 [o=6 t=8]
 + -- Parameters = -34.4959 -25.8750 -0.6755 11.7630 -9.2296 44.4625 0.9968 0.9994 0.9984 0.0123 -0.0000 0.0010
 + - param set #10 has cost=0.953708 [o=79 t=9]
 + -- Parameters = -32.1810 -6.5045 -2.8807 14.0005 0.8738 44.3568 0.9997 0.9984 0.9991 -0.0002 0.0120 0.0000
 + - param set #11 has cost=0.954077 [o=5 t=10]
 + -- Parameters = -34.7674 35.5411 6.0087 30.7578 -18.9309 44.6493 0.9936 1.0004 1.0001 -0.0003 -0.0008 -0.0010
 + - param set #12 has cost=0.955048 [o=4 t=11]
 + -- Parameters = -29.8155 -12.7726 -0.5565 23.3703 -3.9725 44.4649 1.0035 1.0033 0.9991 0.0009 0.0008 0.0001
 + - param set #13 has cost=0.954853 [o=30 t=12]
 + -- Parameters = -30.9134 36.9248 5.3347 22.3307 1.8470 42.6931 0.9797 0.9796 1.0033 0.0062 0.0076 0.0046
 + - param set #14 has cost=0.954559 [o=52 t=13]
 + -- Parameters = -29.6419 -7.8296 1.2382 24.1644 1.1766 42.6581 0.9957 0.9847 1.0051 -0.0011 -0.0022 0.0001
 + - param set #15 has cost=0.956040 [o=8 t=14]
 + -- Parameters = -31.7273 -33.1986 7.1482 25.7258 -6.9456 38.1245 0.9987 1.0369 0.9989 0.0002 0.0013 -0.0010
 + - param set #16 has cost=0.963370 [o=9 t=15]
 + -- Parameters = -9.4798 -6.2292 -8.5294 12.0156 -5.6291 4.0179 0.9977 1.0052 1.0047 0.0048 0.0014 -0.0023
 + - param set #17 has cost=0.957168 [o=2 t=16]
 + -- Parameters = -32.1737 -13.5605 -5.7937 23.5223 -3.2711 44.9995 1.0001 1.0012 1.0021 -0.0000 0.0123 -0.0010
 + - param set #18 has cost=0.812991 [o=-1 t=-1]
 + -- Parameters = 0.0213 -0.5527 -1.0234 -0.0893 0.2512 -0.4782 0.9791 0.9954 0.9973 0.0006 0.0033 0.0072
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.025 
 + --- dist(#3,#1) = 0.493 
 + --- dist(#4,#1) = 0.497 
 + --- dist(#5,#1) = 0.491 
 + --- dist(#6,#1) = 0.501 
 + --- dist(#7,#1) = 0.502 
 + --- dist(#8,#1) = 0.502 
 + --- dist(#9,#1) = 0.497 
 + --- dist(#10,#1) = 0.496 
 + --- dist(#11,#1) = 0.499 
 + --- dist(#12,#1) = 0.438 
 + --- dist(#13,#1) = 0.477 
 + --- dist(#14,#1) = 0.477 
 + --- dist(#15,#1) = 0.497 
 + --- dist(#16,#1) = 0.426 
 + --- dist(#17,#1) = 0.503 
 + --- dist(#18,#1) = 0.135 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=291.402 usiz=383.425
 + - retaining old weight image
 + - using 91048 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 80994 total points stored in 162 'TOHD(13.984)' bloks (0 duplicates)
 + - param set #1 has cost=0.812376 [o=0 t=0]
 + -- Parameters = 0.0336 -0.8542 -0.6056 0.1139 0.4595 -0.4214 0.9863 1.0000 0.9852 -0.0006 0.0026 0.0110
 + - param set #2 has cost=0.811267 [o=-1 t=-1]
 + -- Parameters = 0.0856 -0.5050 -0.5049 0.1560 0.0472 -0.3819 0.9847 0.9976 0.9827 0.0011 0.0006 0.0026
 + - param set #3 has cost=0.953881 [o=58 t=1]
 + -- Parameters = -33.9669 -10.9531 -7.0465 18.1802 -11.0294 44.1452 0.9941 1.0048 0.9937 -0.0002 0.0145 0.0022
 + - param set #4 has cost=0.954260 [o=28 t=2]
 + -- Parameters = -35.0097 33.7725 6.9397 27.2114 -10.6737 44.6863 0.9748 0.9961 1.0037 0.0013 -0.0003 0.0011
 + - param set #5 has cost=0.954151 [o=46 t=6]
 + -- Parameters = -36.5252 -11.4920 -24.0730 18.7921 -18.5370 43.9034 0.9994 0.9976 1.0037 0.0002 -0.0016 -0.0006
 + - param set #6 has cost=0.954206 [o=36 t=3]
 + -- Parameters = -35.5931 14.3755 5.2264 -10.9735 9.8242 44.8582 1.0005 1.0055 0.9978 0.0082 -0.0003 0.0128
 + - param set #7 has cost=0.955988 [o=7 t=7]
 + -- Parameters = -32.5176 -12.3399 -4.2887 11.4167 0.7511 44.9533 1.0034 0.9948 0.9823 0.0025 0.0090 -0.0018
 + - param set #8 has cost=0.954713 [o=21 t=4]
 + -- Parameters = -36.8526 9.7771 3.6863 -8.7277 6.2767 44.9799 0.9929 1.0267 1.0006 -0.0002 0.0004 0.0003
 + - param set #9 has cost=0.955636 [o=6 t=8]
 + -- Parameters = -34.6825 -25.8683 -0.3227 12.0813 -9.5335 44.5280 0.9927 0.9995 0.9991 0.0222 0.0002 0.0010
 + - param set #10 has cost=0.956899 [o=79 t=9]
 + -- Parameters = -32.6859 -6.4171 -3.1163 14.3859 -2.9859 44.1762 0.9982 0.9996 0.9971 0.0009 0.0127 0.0001
 + - param set #11 has cost=0.959374 [o=5 t=10]
 + -- Parameters = -34.8112 35.4652 5.9647 30.6530 -18.9334 44.6500 0.9930 1.0008 0.9975 -0.0008 -0.0013 -0.0008
 + - param set #12 has cost=0.959012 [o=19 t=5]
 + -- Parameters = -29.6817 -4.2457 -2.8792 21.7860 6.6801 39.9850 1.0029 0.9943 0.9996 0.0032 -0.0001 0.0103
 + - param set #13 has cost=0.959820 [o=52 t=13]
 + -- Parameters = -29.5982 -7.8482 1.2566 24.2006 1.2050 42.7009 0.9964 0.9847 1.0083 -0.0014 -0.0024 -0.0004
 + - param set #14 has cost=0.957183 [o=30 t=12]
 + -- Parameters = -32.7599 37.0525 4.8505 22.1526 2.5836 42.5439 0.9511 0.9806 1.0227 0.0032 0.0066 0.0029
 + - param set #15 has cost=0.959246 [o=4 t=11]
 + -- Parameters = -29.9204 -12.7461 -0.5907 23.4443 -4.0869 44.3453 1.0031 1.0020 0.9984 0.0010 0.0011 0.0003
 + - param set #16 has cost=0.959238 [o=8 t=14]
 + -- Parameters = -32.3585 -33.6632 7.7671 25.3817 -6.6515 40.3496 0.9933 1.0371 0.9933 0.0012 0.0098 0.0004
 + - param set #17 has cost=0.959514 [o=2 t=16]
 + -- Parameters = -31.5774 -13.1702 -5.4293 23.0790 -4.8062 44.9964 1.0056 1.0048 1.0323 0.0016 0.0137 0.0006
 + - param set #18 has cost=0.970708 [o=9 t=15]
 + -- Parameters = -8.9985 -6.3018 -8.5804 11.2353 -5.8928 4.4570 1.0001 1.0001 1.0072 0.0173 0.0019 -0.0037
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0377 
 + --- dist(#3,#1) = 0.495 
 + --- dist(#4,#1) = 0.492 
 + --- dist(#5,#1) = 0.503 
 + --- dist(#6,#1) = 0.501 
 + --- dist(#7,#1) = 0.504 
 + --- dist(#8,#1) = 0.499 
 + --- dist(#9,#1) = 0.504 
 + --- dist(#10,#1) = 0.495 
 + --- dist(#11,#1) = 0.477 
 + --- dist(#12,#1) = 0.449 
 + --- dist(#13,#1) = 0.453 
 + --- dist(#14,#1) = 0.497 
 + --- dist(#15,#1) = 0.5 
 + --- dist(#16,#1) = 0.504 
 + --- dist(#17,#1) = 0.479 
 + --- dist(#18,#1) = 0.123 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=291.402 usiz=383.425
 + - retaining old weight image
 + - using 91048 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 81098 total points stored in 163 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.814335 [o=-1 t=-1]
 + -- Parameters = 0.0167 -0.4694 -0.5443 0.2017 0.0109 -0.4653 0.9865 0.9999 0.9853 0.0008 0.0028 0.0025
 + - param set #2 has cost=0.814568 [o=0 t=0]
 + -- Parameters = 0.0241 -0.5380 -0.5549 0.1912 0.1231 -0.4636 0.9858 1.0016 0.9853 -0.0003 0.0028 0.0067
 + - param set #3 has cost=0.956956 [o=58 t=1]
 + -- Parameters = -33.6642 -10.7544 -6.7677 17.8797 -10.7610 44.6726 0.9936 1.0067 0.9972 -0.0005 0.0201 0.0024
 + - param set #4 has cost=0.959008 [o=46 t=6]
 + -- Parameters = -36.5212 -11.4619 -24.0817 18.7880 -18.5384 43.8940 0.9994 0.9973 1.0035 0.0003 -0.0016 -0.0006
 + - param set #5 has cost=0.958907 [o=36 t=3]
 + -- Parameters = -35.5909 14.3756 5.2298 -10.9733 9.8253 44.8583 1.0005 1.0072 0.9978 0.0078 -0.0000 0.0131
 + - param set #6 has cost=0.956314 [o=28 t=2]
 + -- Parameters = -35.1061 33.6482 7.1499 27.3480 -11.0030 44.8624 0.9739 0.9998 1.0031 0.0015 0.0002 0.0086
 + - param set #7 has cost=0.959188 [o=21 t=4]
 + -- Parameters = -36.8475 9.7793 3.7068 -8.7239 6.2785 44.9970 0.9928 1.0268 1.0007 0.0055 0.0005 0.0003
 + - param set #8 has cost=0.959114 [o=6 t=8]
 + -- Parameters = -34.6859 -25.6898 -0.3110 12.0788 -9.5185 44.5230 0.9927 0.9995 0.9990 0.0279 0.0001 0.0010
 + - param set #9 has cost=0.959602 [o=7 t=7]
 + -- Parameters = -32.5166 -12.3332 -4.2617 11.4222 0.7365 44.9396 1.0034 0.9948 0.9822 0.0083 0.0090 -0.0018
 + - param set #10 has cost=0.959044 [o=79 t=9]
 + -- Parameters = -32.8893 -6.1348 -3.3302 13.9061 -5.3845 44.1769 0.9984 0.9983 0.9953 -0.0002 0.0130 -0.0004
 + - param set #11 has cost=0.960718 [o=30 t=12]
 + -- Parameters = -32.7733 36.9652 4.7728 22.0652 2.5931 42.5083 0.9511 0.9807 1.0240 0.0035 0.0071 0.0026
 + - param set #12 has cost=0.964360 [o=19 t=5]
 + -- Parameters = -29.5980 -3.8589 -2.9823 21.8718 6.4056 40.2894 1.0020 0.9931 0.9921 0.0035 -0.0007 0.0101
 + - param set #13 has cost=0.962980 [o=8 t=14]
 + -- Parameters = -32.3638 -33.6805 7.7650 25.3871 -6.6515 40.3538 0.9933 1.0387 0.9934 0.0012 0.0098 0.0004
 + - param set #14 has cost=0.961362 [o=4 t=11]
 + -- Parameters = -29.9391 -12.9149 -0.5354 23.3175 -4.3918 44.7018 1.0021 0.9862 0.9990 0.0011 0.0005 0.0001
 + - param set #15 has cost=0.962719 [o=5 t=10]
 + -- Parameters = -34.7924 35.4884 6.2043 30.4864 -19.0614 44.6275 0.9929 1.0008 0.9979 -0.0009 -0.0013 -0.0010
 + - param set #16 has cost=0.962269 [o=2 t=16]
 + -- Parameters = -31.6773 -13.0040 -3.4454 23.0991 -4.7749 44.9992 1.0054 1.0049 1.0315 0.0014 0.0135 0.0004
 + - param set #17 has cost=0.963749 [o=52 t=13]
 + -- Parameters = -29.6015 -7.8499 1.2601 24.1843 1.2052 42.7022 0.9963 0.9846 1.0082 -0.0014 -0.0023 -0.0004
 + - param set #18 has cost=0.973734 [o=9 t=15]
 + -- Parameters = -9.0489 -6.4369 -8.6668 11.3521 -6.0051 4.4763 1.0011 1.0022 1.0067 0.0176 0.0020 -0.0042
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0187 XXX
 + --- dist(#3,#1) = 0.502 
 + --- dist(#4,#1) = 0.504 
 + --- dist(#5,#1) = 0.493 
 + --- dist(#6,#1) = 0.496 
 + --- dist(#7,#1) = 0.5 
 + --- dist(#8,#1) = 0.505 
 + --- dist(#9,#1) = 0.504 
 + --- dist(#10,#1) = 0.477 
 + --- dist(#11,#1) = 0.502 
 + --- dist(#12,#1) = 0.505 
 + --- dist(#13,#1) = 0.501 
 + --- dist(#14,#1) = 0.454 
 + --- dist(#15,#1) = 0.48 
 + --- dist(#16,#1) = 0.453 
 + --- dist(#17,#1) = 0.124 
 + - cast out 1 parameter set for being too close to best set
 + - Total coarse refinement net CPU time = 0.0 s; 4391 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=291.402 usiz=383.425
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 18 cases
 + 81331 total points stored in 164 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.819437 * [o=-1 t=-1]
 + -- Parameters = 0.0167 -0.4694 -0.5443 0.2017 0.0109 -0.4653 0.9865 0.9999 0.9853 0.0008 0.0028 0.0025
 + - cost(#2)=0.956887   [o=28 t=2]
 + -- Parameters = -35.1061 33.6482 7.1499 27.3480 -11.0030 44.8624 0.9739 0.9998 1.0031 0.0015 0.0002 0.0086
 + - cost(#3)=0.958097   [o=58 t=1]
 + -- Parameters = -33.6642 -10.7544 -6.7677 17.8797 -10.7610 44.6726 0.9936 1.0067 0.9972 -0.0005 0.0201 0.0024
 + - cost(#4)=0.959450   [o=36 t=3]
 + -- Parameters = -35.5909 14.3756 5.2298 -10.9733 9.8253 44.8583 1.0005 1.0072 0.9978 0.0078 -0.0000 0.0131
 + - cost(#5)=0.959708   [o=46 t=6]
 + -- Parameters = -36.5212 -11.4619 -24.0817 18.7880 -18.5384 43.8940 0.9994 0.9973 1.0035 0.0003 -0.0016 -0.0006
 + - cost(#6)=0.960077   [o=79 t=9]
 + -- Parameters = -32.8893 -6.1348 -3.3302 13.9061 -5.3845 44.1769 0.9984 0.9983 0.9953 -0.0002 0.0130 -0.0004
 + - cost(#7)=0.960010   [o=6 t=8]
 + -- Parameters = -34.6859 -25.6898 -0.3110 12.0788 -9.5185 44.5230 0.9927 0.9995 0.9990 0.0279 0.0001 0.0010
 + - cost(#8)=0.959640   [o=21 t=4]
 + -- Parameters = -36.8475 9.7793 3.7068 -8.7239 6.2785 44.9970 0.9928 1.0268 1.0007 0.0055 0.0005 0.0003
 + - cost(#9)=0.960380   [o=7 t=7]
 + -- Parameters = -32.5166 -12.3332 -4.2617 11.4222 0.7365 44.9396 1.0034 0.9948 0.9822 0.0083 0.0090 -0.0018
 + - cost(#10)=0.961089   [o=30 t=12]
 + -- Parameters = -32.7733 36.9652 4.7728 22.0652 2.5931 42.5083 0.9511 0.9807 1.0240 0.0035 0.0071 0.0026
 + - cost(#11)=0.962214   [o=4 t=11]
 + -- Parameters = -29.9391 -12.9149 -0.5354 23.3175 -4.3918 44.7018 1.0021 0.9862 0.9990 0.0011 0.0005 0.0001
 + - cost(#12)=0.963277   [o=2 t=16]
 + -- Parameters = -31.6773 -13.0040 -3.4454 23.0991 -4.7749 44.9992 1.0054 1.0049 1.0315 0.0014 0.0135 0.0004
 + - cost(#13)=0.963180   [o=5 t=10]
 + -- Parameters = -34.7924 35.4884 6.2043 30.4864 -19.0614 44.6275 0.9929 1.0008 0.9979 -0.0009 -0.0013 -0.0010
 + - cost(#14)=0.963388   [o=8 t=14]
 + -- Parameters = -32.3638 -33.6805 7.7650 25.3871 -6.6515 40.3538 0.9933 1.0387 0.9934 0.0012 0.0098 0.0004
 + - cost(#15)=0.964703   [o=52 t=13]
 + -- Parameters = -29.6015 -7.8499 1.2601 24.1843 1.2052 42.7022 0.9963 0.9846 1.0082 -0.0014 -0.0023 -0.0004
 + - cost(#16)=0.965258   [o=19 t=5]
 + -- Parameters = -29.5980 -3.8589 -2.9823 21.8718 6.4056 40.2894 1.0020 0.9931 0.9921 0.0035 -0.0007 0.0101
 + - cost(#17)=0.975000   [o=9 t=15]
 + -- Parameters = -9.0489 -6.4369 -8.6668 11.3521 -6.0051 4.4763 1.0011 1.0022 1.0067 0.0176 0.0020 -0.0042
 + - cost(#18)=0.932502   [o=-2 t=-2]
 + -- Parameters = -0.3972 -2.6094 -3.2790 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 18 cases
 + - cost(#1)=0.819416 * [o=-1 t=-1]
 + -- Parameters = 0.0296 -0.4728 -0.5466 0.2116 0.0172 -0.4585 0.9866 1.0003 0.9854 0.0006 0.0027 0.0028
 + - cost(#2)=0.956656   [o=28 t=2]
 + -- Parameters = -35.1265 33.6318 7.1463 27.3285 -10.9854 44.8589 0.9735 0.9999 1.0029 0.0016 0.0003 0.0160
 + - cost(#3)=0.957830   [o=58 t=1]
 + -- Parameters = -33.6582 -10.8388 -6.7138 17.9110 -10.7650 44.6775 0.9935 1.0065 0.9973 0.0005 0.0201 -0.0059
 + - cost(#4)=0.958241   [o=36 t=3]
 + -- Parameters = -36.0387 14.1932 5.0285 -10.2037 10.1296 44.9858 1.0047 1.0075 1.0024 0.0078 -0.0004 0.0133
 + - cost(#5)=0.958390   [o=46 t=6]
 + -- Parameters = -36.4668 -11.2726 -24.6942 19.0355 -17.9870 43.8003 0.9947 1.0023 0.9695 -0.0011 -0.0010 -0.0032
 + - cost(#6)=0.959454   [o=79 t=9]
 + -- Parameters = -32.9061 -6.0633 -3.2789 13.6449 -5.5368 44.3502 0.9978 0.9971 0.9952 -0.0005 0.0135 -0.0073
 + - cost(#7)=0.960009   [o=6 t=8]
 + -- Parameters = -34.6861 -25.6898 -0.3110 12.0786 -9.5187 44.5231 0.9927 0.9995 0.9990 0.0279 0.0001 0.0009
 + - cost(#8)=0.959313   [o=21 t=4]
 + -- Parameters = -36.8090 9.7183 3.7370 -8.6906 6.3528 44.9957 0.9936 1.0294 1.0002 0.0058 0.0007 0.0084
 + - cost(#9)=0.960372   [o=7 t=7]
 + -- Parameters = -32.5166 -12.3332 -4.2617 11.4222 0.7365 44.9396 1.0034 0.9948 0.9822 0.0157 0.0090 -0.0018
 + - cost(#10)=0.961085   [o=30 t=12]
 + -- Parameters = -32.7728 36.9651 4.7734 22.0640 2.5954 42.5084 0.9511 0.9807 1.0242 0.0035 0.0071 0.0026
 + - cost(#11)=0.961983   [o=4 t=11]
 + -- Parameters = -29.9166 -12.8993 -0.4204 23.3280 -4.5348 44.6843 1.0024 0.9846 0.9959 0.0007 0.0009 -0.0086
 + - cost(#12)=0.961954   [o=2 t=16]
 + -- Parameters = -30.9397 -13.4293 -3.5102 22.7023 -5.5799 44.9601 1.0223 1.0032 1.0350 -0.0002 0.0195 0.0009
 + - cost(#13)=0.962690   [o=5 t=10]
 + -- Parameters = -34.7345 35.2565 6.3157 30.4657 -19.0151 44.7017 0.9939 0.9991 0.9966 -0.0077 -0.0008 -0.0010
 + - cost(#14)=0.963291   [o=8 t=14]
 + -- Parameters = -32.3920 -33.6631 7.7550 25.3648 -6.6750 40.3557 0.9932 1.0409 0.9955 0.0012 0.0092 0.0002
 + - cost(#15)=0.964421   [o=52 t=13]
 + -- Parameters = -29.6453 -7.8989 1.2611 24.2318 1.1126 42.7532 0.9956 0.9843 1.0084 -0.0010 -0.0090 -0.0003
 + - cost(#16)=0.965120   [o=19 t=5]
 + -- Parameters = -29.5855 -3.8530 -3.1721 21.8730 6.4386 40.2836 1.0018 0.9930 0.9899 0.0035 -0.0080 0.0100
 + - cost(#17)=0.974972   [o=9 t=15]
 + -- Parameters = -9.0625 -6.4457 -8.6081 11.3546 -6.0146 4.4870 1.0009 1.0026 1.0072 0.0171 0.0023 -0.0042
 + - cost(#18)=0.819471   [o=-2 t=-2]
 + -- Parameters = 0.0914 -0.4935 -0.5355 0.1518 0.0372 -0.3487 0.9862 1.0009 0.9857 -0.0013 -0.0015 0.0027
 + - case #1 [o=-1 t=-1] is now the best
 + - Initial  cost = 0.819416
 + - Initial fine Parameters = 0.0296 -0.4728 -0.5466 0.2116 0.0172 -0.4585 0.9866 1.0003 0.9854 0.0006 0.0027 0.0028
 + - Finalish cost = 0.819263 ; 411 funcs
 + - ini Finalish Parameters = 0.0567 -0.4620 -0.5396 0.1192 0.0224 -0.4408 0.9865 1.0006 0.9855 -0.0028 0.0022 0.0025
 + - Final    cost = 0.819263 ; 266 funcs
 + Final fine fit Parameters:
       x-shift=  0.0568   y-shift= -0.4619   z-shift= -0.5398  ...  enorm=  0.7127 mm
       z-angle=  0.1194   x-angle=  0.0223   y-angle= -0.4408  ...  total=  0.4567 deg
       x-scale=  0.9865   y-scale=  1.0006   z-scale=  0.9855  ...  vol3D=  0.9728 = base bigger than source
     y/x-shear= -0.0028 z/x-shear=  0.0022 z/y-shear=  0.0025
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.0568 -0.4619 -0.5398 0.1194 0.0223 -0.4408 0.9865 1.0006 0.9855 -0.0028 0.0022 0.0025
++ Unloading unneeded data
++ Output dataset ./MPRAGE.GA02_unif_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./MPRAGE.GA02_unif_al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 26.6
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_MPRAGE.GA02_unif_lr_al_junk -overwrite ./MPRAGE.GA02_unif_unflipped_ns+orig
++ processing ./MPRAGE.GA02_unif_unflipped_ns+orig ...
#Script is running (command trimmed):
  3dAllineate -lpa -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./__tt_MPRAGE.GA02_unif_lr_al_junk+orig -prefix ./MPRAGE.GA02_unif_flip_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GA02_unif_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_MPRAGE.GA02_unif_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5432072 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 91048 voxels [14.8%] in weight mask
++ Number of points for matching = 91048
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.998 49.577 40.199 (index)
 + source center of mass = 113.233 172.606 186.190 (index)
 + source-target CM = -0.770 -2.609 -3.279 (xyz)
 + estimated center of mass shifts = -0.770 -2.609 -3.279
++ shift param auto-range: -72.3..70.7 -81.8..76.6 -70.5..63.9
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.770416 .. 9.229584  center = -0.770416
 + Range param#2 [y-shift] = -12.609390 .. 7.390610  center = -2.609390
 + Range param#3 [z-shift] = -13.278984 .. 6.721016  center = -3.278984
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.770416 .. 39.229584  center = -0.770416
 + Range param#2 [y-shift] = -42.609390 .. 37.390610  center = -2.609390
 + Range param#3 [z-shift] = -43.278984 .. 36.721016  center = -3.278984
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000084
++ Final parameter search ranges:
 +       x-shift =  -40.770 ..   39.230
 +       y-shift =  -42.609 ..   37.391
 +       z-shift =  -43.279 ..   36.721
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 5432072 [out of 23639724] voxels
 + base mask has 112957 [out of 617148] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=291.402 usiz=383.425
 + - copying weight image
 + - using 91048 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 81477 total points stored in 159 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#o*[#2=0.985306] *+-o*[#6=0.971168] *oo+o.*[#24=0.960676] *-o-..--..o-++o$*[#5316=0.960321] **[#5320=0.95929] *o*[#5336=0.959281] *
 + - best 88 costs found:
   o= 0 v= 0.959281: -32.61 -14.40  -6.02  23.31  -3.26  40.47  [rand]
   o= 1 v= 0.959290: -32.61 -14.40  -6.02  23.31   3.26  40.47  [rand]
   o= 2 v= 0.960030: -32.61 -14.40  -0.54  23.31  -3.26  40.47  [rand]
   o= 3 v= 0.960321: -32.61 -14.40  -0.54  23.31   3.26  40.47  [rand]
   o= 4 v= 0.960676:  -7.44  -9.28  -9.95   7.50  -7.50   7.50  [grid]
   o= 5 v= 0.961127: -35.63  33.07  10.97  40.22 -24.26  41.52  [rand]
   o= 6 v= 0.962431: -35.10 -19.19   5.32  16.34  -8.64  40.54  [rand]
   o= 7 v= 0.962989: -28.29 -34.78   7.77  26.08  -6.57  36.57  [rand]
   o= 8 v= 0.964065: -35.10  13.98   5.32 -16.34   8.64  40.54  [rand]
   o= 9 v= 0.964266: -33.20 -16.95   2.32   8.22   9.03  36.72  [rand]
   o=10 v= 0.964919: -33.25 -17.30   8.53  11.16   9.40  34.39  [rand]
   o=11 v= 0.965214: -34.60  26.89   9.68 -31.95  -9.87  34.85  [rand]
   o=12 v= 0.966153: -33.26  24.38  28.61   9.69 -21.75 -40.77  [rand]
   o=13 v= 0.966239: -35.10  13.98   5.32  16.34  -8.64  40.54  [rand]
   o=14 v= 0.966758: -35.63 -38.29  10.97  40.22 -24.26  41.52  [rand]
   o=15 v= 0.966775: -27.44   4.06  -9.95  30.00   7.50  30.00  [grid]
   o=16 v= 0.966805: -32.98  26.44  32.86  40.41 -19.09  40.75  [rand]
   o=17 v= 0.966816: -34.60 -32.11   9.68  31.95  -9.87  34.85  [rand]
   o=18 v= 0.966888: -33.20 -16.95  -8.88   8.22   9.03  36.72  [rand]
   o=19 v= 0.967270: -28.95  11.61  10.21 -11.27 -31.24  23.90  [rand]
   o=20 v= 0.967284: -35.10 -19.19   5.32  16.34   8.64  40.54  [rand]
   o=21 v= 0.967989: -35.10 -19.19 -11.88  16.34  -8.64  40.54  [rand]
   o=22 v= 0.968007: -33.20  11.73   2.32   8.22   9.03  36.72  [rand]
   o=23 v= 0.968051: -33.26  24.38 -35.17  -9.69  21.75  40.77  [rand]
   o=24 v= 0.968107: -33.26  24.38 -35.17   9.69  21.75  40.77  [rand]
   o=25 v= 0.968137: -33.26  24.38  28.61  -9.69 -21.75  40.77  [rand]
   o=26 v= 0.968545:  -7.44  -9.28   3.39   7.50  -7.50  30.00  [grid]
   o=27 v= 0.968681: -35.64  27.94 -19.05 -11.68  29.04  39.38  [rand]
   o=28 v= 0.968977: -28.29  29.56   7.77  26.08   6.57  36.57  [rand]
   o=29 v= 0.969008: -33.20  11.73   2.32  -8.22   9.03  36.72  [rand]
   o=30 v= 0.969014: -27.44  -9.28   3.39  30.00   7.50  30.00  [grid]
   o=31 v= 0.969348: -35.10  13.98   5.32 -16.34  -8.64  40.54  [rand]
   o=32 v= 0.969360: -33.26 -29.60  28.61   9.69  21.75  40.77  [rand]
   o=33 v= 0.969388: -35.63  33.07 -17.53  40.22  24.26 -41.52  [rand]
   o=34 v= 0.969566: -35.10 -19.19   5.32 -16.34   8.64  40.54  [rand]
   o=35 v= 0.969648: -27.44   4.06   3.39  30.00   7.50  30.00  [grid]
   o=36 v= 0.969668:  26.75  29.56   7.77 -26.08   6.57 -36.57  [rand]
   o=37 v= 0.969845: -23.62  20.97 -13.69  -5.91  29.74  29.45  [rand]
   o=38 v= 0.969873: -27.55  12.02 -34.63  16.09  31.75  34.71  [rand]
   o=39 v= 0.970315: -35.10  13.98 -11.88 -16.34   8.64  40.54  [rand]
   o=40 v= 0.970368: -34.60  26.89   9.68  31.95  -9.87  34.85  [rand]
   o=41 v= 0.970526: -33.20  11.73  -8.88   8.22   9.03  36.72  [rand]
   o=42 v= 0.970531: -35.64  27.94  12.49 -11.68  29.04  39.38  [rand]
   o=43 v= 0.970548: -28.29 -34.78   7.77  26.08   6.57  36.57  [rand]
   o=44 v= 0.970567: -35.64 -33.16 -19.05 -11.68  29.04  39.38  [rand]
   o=45 v= 0.970647:  34.08  33.07  10.97 -40.22 -24.26 -41.52  [rand]
   o=46 v= 0.970668:  -7.44  -9.28  -9.95  -7.50  -7.50   7.50  [grid]
   o=47 v= 0.970859: -35.63  33.07  10.97 -40.22  24.26  41.52  [rand]
   o=48 v= 0.970921:  29.35  30.31  -0.09   3.65  37.49   5.77  [rand]
   o=49 v= 0.971106:   5.90   4.06  -9.95  30.00   7.50  30.00  [grid]
   o=50 v= 0.971168:  -7.44   4.06  -9.95   7.50   7.50   7.50  [grid]
   o=51 v= 0.971221: -35.63  33.07 -17.53  40.22 -24.26  41.52  [rand]
   o=52 v= 0.971249: -27.44   4.06   3.39   7.50  -7.50  -7.50  [grid]
   o=53 v= 0.971354:   5.90   4.06  -9.95  30.00  -7.50  30.00  [grid]
   o=54 v= 0.971398: -33.26 -29.60 -35.17  -9.69  21.75  40.77  [rand]
   o=55 v= 0.971398: -27.44   4.06   3.39   7.50  -7.50 -30.00  [grid]
   o=56 v= 0.971474: -28.29  29.56 -14.32 -26.08   6.57  36.57  [rand]
   o=57 v= 0.971530:  -7.44   4.06   3.39  30.00   7.50 -30.00  [grid]
   o=58 v= 0.971614: -27.55  12.02  28.07  16.09 -31.75 -34.71  [rand]
   o=59 v= 0.971687: -33.25 -17.30 -15.09  11.16   9.40  34.39  [rand]
   o=60 v= 0.971733:  -7.44  24.06   3.39  -7.50  30.00   7.50  [grid]
   o=61 v= 0.971802:  34.08  33.07  10.97 -40.22  24.26  41.52  [rand]
   o=62 v= 0.971860: -14.98 -12.06   1.56 -15.99 -13.53  29.93  [rand]
   o=63 v= 0.971879:  25.90  24.06   3.39   7.50  -7.50   7.50  [grid]
   o=64 v= 0.971996: -27.44  -9.28  -9.95  -7.50  -7.50   7.50  [grid]
   o=65 v= 0.972100: -27.44   4.06  -9.95   7.50   7.50   7.50  [grid]
   o=66 v= 0.972104:  35.90  25.16  -8.16  15.70 -36.90  27.47  [rand]
   o=67 v= 0.972181: -32.61   9.19  -0.54  23.31  -3.26  40.47  [rand]
   o=68 v= 0.972229: -35.40  19.64  11.02 -17.65 -21.98   4.20  [rand]
   o=69 v= 0.972245: -27.44   4.06  -9.95   7.50  -7.50   7.50  [grid]
   o=70 v= 0.972278: -37.42  14.62  18.98  -5.26 -41.39  40.03  [rand]
   o=71 v= 0.972342: -33.26 -29.60  28.61  -9.69  21.75  40.77  [rand]
   o=72 v= 0.972364: -35.10 -19.19 -11.88  16.34   8.64  40.54  [rand]
   o=73 v= 0.972375: -33.25 -17.30 -15.09  11.16  -9.40  34.39  [rand]
   o=74 v= 0.972433: -37.44  25.16   1.61 -15.70 -36.90  27.47  [rand]
   o=75 v= 0.972485: -32.61   9.19  -6.02  23.31   3.26  40.47  [rand]
   o=76 v= 0.972487: -23.24  26.54  26.75 -27.43  11.56 -19.13  [rand]
   o=77 v= 0.972518: -31.80  16.98  18.32 -24.25 -27.21  33.81  [rand]
   o=78 v= 0.972550: -34.60  26.89   9.68  31.95   9.87  34.85  [rand]
   o=79 v= 0.972651: -33.25  12.08 -15.09  11.16   9.40  34.39  [rand]
   o=80 v= 0.972743: -35.64 -33.16  12.49 -11.68  29.04  39.38  [rand]
   o=81 v= 0.972746:   5.90  24.06  23.39  30.00   7.50  30.00  [grid]
   o=82 v= 0.972752:  33.01  29.31 -10.99  12.26 -17.56  17.80  [rand]
   o=83 v= 0.972772: -33.20 -16.95   2.32   8.22  -9.03  36.72  [rand]
   o=84 v= 0.972846:  25.90   4.06   3.39  -7.50  -7.50   7.50  [grid]
   o=85 v= 0.972876:  35.90  25.16   1.61 -15.70  36.90  27.47  [rand]
   o=86 v= 0.972892: -27.44  -9.28  23.39  30.00   7.50  30.00  [grid]
   o=87 v= 0.972911:  36.04  30.48  16.92  39.82  23.12  -9.72  [rand]
 + - A little optimization:*[#11715=0.958212] *[#11719=0.955884] *[#11723=0.955313] *[#11724=0.954888] *[#11726=0.953468] *[#11727=0.95341] *[#11728=0.952106] *[#11731=0.95204] *[#11739=0.952002] *[#11740=0.951748] .*[#11775=0.95147] *[#11778=0.951462] *[#11779=0.951088] *[#11785=0.95095] *[#11786=0.950855] *[#11787=0.950429] *[#11789=0.950348] *[#11792=0.950174] *[#11795=0.950167] *[#11800=0.950099] *[#11802=0.950028] ..*[#11874=0.94969] *[#11879=0.948511] *[#11883=0.94836] *[#11886=0.948187] *[#11889=0.948133] *[#11891=0.948047] *[#11893=0.948015] *[#11896=0.947839] .....*[#12095=0.946939] *[#12096=0.944272] *[#12102=0.944146] *[#12107=0.943943] *[#12113=0.943889] *[#12115=0.943823] *[#12118=0.943764] *[#12119=0.943719] .....................*[#13067=0.943666] *[#13078=0.943503] *[#13083=0.943497] *[#13084=0.94337] ...........................................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.951748: -32.44 -14.05  -7.77  18.41  -3.92  44.07  [rand]  [f=37]
   o= 1 v= 0.950028: -32.13 -10.36  -7.94  18.61  -3.33  44.89  [rand]  [f=53]
   o= 2 v= 0.952362: -30.70 -20.53  -0.87  24.17  -2.26  41.89  [rand]  [f=46]
   o= 3 v= 0.947839: -28.52  -8.69  -1.38  22.78   2.38  42.10  [rand]  [f=48]
   o= 4 v= 0.958064:  -7.50  -9.27  -9.13   7.39  -9.29   6.14  [grid]  [f=40]
   o= 5 v= 0.952704: -34.16  35.64   7.78  35.57 -18.54  42.58  [rand]  [f=48]
   o= 6 v= 0.948992: -35.51 -26.19  -2.53  10.99  -8.61  41.79  [rand]  [f=44]
   o= 7 v= 0.954983: -32.12 -33.31   7.35  25.86  -6.74  36.75  [rand]  [f=39]
   o= 8 v= 0.943719: -36.29  14.71   5.58 -13.86   9.93  44.63  [rand]  [f=51]
   o= 9 v= 0.958736: -32.96 -17.14   1.99   7.93   8.56  41.20  [rand]  [f=31]
   o=10 v= 0.960427: -33.18 -23.76   7.65  11.71   9.37  37.30  [rand]  [f=41]
   o=11 v= 0.955095: -34.85  29.73   8.69 -33.59   2.74  38.62  [rand]  [f=39]
   o=12 v= 0.962522: -33.46  18.65  28.71   9.53 -21.53 -40.72  [rand]  [f=43]
   o=13 v= 0.952151: -34.11  21.16  14.49  13.65  -4.05  44.47  [rand]  [f=46]
   o=14 v= 0.958356: -31.30 -37.47   7.96  41.95 -21.55  39.48  [rand]  [f=48]
   o=15 v= 0.963336: -28.75   3.77 -13.81  24.80   6.54  30.00  [grid]  [f=46]
   o=16 v= 0.962475: -32.19  24.96  30.65  40.50 -19.29  40.43  [rand]  [f=43]
   o=17 v= 0.958058: -31.61 -33.95   8.10  29.59  -8.03  35.42  [rand]  [f=47]
   o=18 v= 0.957751: -32.94 -15.25 -10.51  10.25   8.86  41.08  [rand]  [f=40]
   o=19 v= 0.964460: -28.88  11.86   9.96  -6.70 -31.57  24.77  [rand]  [f=37]
   o=20 v= 0.952422: -31.57 -21.77   4.20  19.69   1.37  39.13  [rand]  [f=48]
   o=21 v= 0.950530: -33.74  -8.25 -11.63  18.32  -9.02  42.53  [rand]  [f=48]
   o=22 v= 0.960992: -33.58  11.15   2.18   7.56  13.90  37.62  [rand]  [f=37]
   o=23 v= 0.953548: -35.58  22.32 -38.27 -10.11  17.76  43.85  [rand]  [f=45]
   o=24 v= 0.956013: -29.66  18.10 -33.14   9.16  18.26  43.52  [rand]  [f=53]
   o=25 v= 0.960920: -36.81  21.81  25.44  -8.78 -22.98  41.47  [rand]  [f=44]
   o=26 v= 0.961758:  -8.04 -11.23   2.00   8.22  -4.19  27.10  [grid]  [f=62]
   o=27 v= 0.957697: -35.24  27.91 -15.60 -11.83  30.05  44.84  [rand]  [f=49]
   o=28 v= 0.947131: -33.44  36.21  -2.84  21.86   0.04  38.52  [rand]  [f=47]
  *o=29 v= 0.943370: -36.09  17.08   5.28  -8.90  12.00  44.96  [rand]  [f=46]
   o=30 v= 0.961880: -28.58  -4.41   4.49  30.73   7.62  31.23  [grid]  [f=50]
   o=31 v= 0.960787: -39.39  13.23   1.86 -17.54  -9.45  44.18  [rand]  [f=61]
   o=32 v= 0.956013: -30.82 -21.22  21.34  11.07  15.03  40.61  [rand]  [f=53]
   o=33 v= 0.963422: -35.15  28.99 -17.51  40.08  24.50 -40.92  [rand]  [f=29]
   o=34 v= 0.961542: -36.17 -20.21   6.29 -16.50   8.19  44.65  [rand]  [f=42]
   o=35 v= 0.954321: -29.72   1.64   7.38  28.09   1.35  34.88  [grid]  [f=70]
   o=36 v= 0.959903:  30.65  31.98  10.38 -34.48   3.49 -44.42  [rand]  [f=69]
   o=37 v= 0.965260: -24.09  21.50 -13.72  -4.99  33.99  29.15  [rand]  [f=34]
   o=38 v= 0.969281: -28.83  11.92 -34.95  16.23  31.60  34.75  [rand]  [f=31]
   o=39 v= 0.953763: -36.04  16.72  -9.21 -15.17  11.13  44.97  [rand]  [f=47]
   o=40 v= 0.953706: -33.70  33.78   9.51  30.97 -11.53  36.38  [rand]  [f=41]
   o=41 v= 0.954737: -29.35   4.50  -9.97  18.08  11.24  38.59  [rand]  [f=49]
   o=42 v= 0.965429: -36.57  28.95  10.63  -5.48  29.16  36.23  [rand]  [f=31]
   o=43 v= 0.953479: -30.04 -32.43   9.64  21.67  -1.00  41.19  [rand]  [f=55]
   o=44 v= 0.962249: -36.06 -35.21 -19.41  -6.33  31.81  39.72  [rand]  [f=48]
   o=45 v= 0.966714:  34.13  33.25   7.55 -40.50 -19.25 -41.90  [rand]  [f=34]
   o=46 v= 0.958629:  -4.92  -6.76  -8.34  -1.62  -6.22   6.53  [grid]  [f=53]
   o=47 v= 0.958119: -40.65  32.60  11.26 -40.52  25.47  41.31  [rand]  [f=29]
   o=48 v= 0.967769:  29.01  30.34  -0.16   8.37  37.53   4.38  [rand]  [f=42]
   o=49 v= 0.967353:   6.46   4.00 -11.18  29.47   6.67  29.55  [grid]  [f=51]
   o=50 v= 0.950003:  -5.06  -1.35  -8.15   7.55   6.04  14.09  [grid]  [f=52]
   o=51 v= 0.954350: -31.87  34.87 -10.15  37.64 -18.34  42.35  [rand]  [f=47]
   o=52 v= 0.963484: -31.53   4.50   5.10   7.15  -7.74  -7.33  [grid]  [f=45]
   o=53 v= 0.958178:   1.14   2.63 -10.50  30.06  -7.53  29.80  [grid]  [f=40]
   o=54 v= 0.963648: -34.87 -29.77 -34.27 -12.73  22.58  43.70  [rand]  [f=50]
   o=55 v= 0.961992: -31.02   4.22   5.92   5.64  -8.23 -27.91  [grid]  [f=58]
   o=56 v= 0.966689: -30.17  29.14 -16.39 -28.18   5.08  42.71  [rand]  [f=45]
   o=57 v= 0.960588:  -5.41   2.47   4.60  27.40   5.32 -30.06  [grid]  [f=59]
   o=58 v= 0.959750: -27.58  12.49  26.65  13.79 -22.03 -34.57  [rand]  [f=56]
   o=59 v= 0.955470: -32.53 -13.34 -10.22   8.80   6.15  44.66  [rand]  [f=45]
   o=60 v= 0.964987:  -8.25  27.22   3.78  -6.14  30.58   8.75  [grid]  [f=41]
   o=61 v= 0.968499:  35.70  32.68   9.09 -41.69  21.55  37.67  [rand]  [f=48]
   o=62 v= 0.956852: -13.49 -11.36   1.76  -0.76 -16.37  28.28  [rand]  [f=56]
   o=63 v= 0.965429:  29.17  22.72   0.90   7.76  -3.55   9.60  [grid]  [f=82]
   o=64 v= 0.966075: -26.03  -6.93 -12.45 -10.69  -6.90  12.64  [grid]  [f=52]
   o=65 v= 0.964388: -27.29   2.47 -10.02  12.67   3.98   6.36  [grid]  [f=61]
   o=66 v= 0.962726:  33.41  25.20  -9.35  19.42 -36.65  38.49  [rand]  [f=59]
   o=67 v= 0.947070: -28.81  -7.72  -2.86  23.21   3.06  43.85  [rand]  [f=53]
   o=68 v= 0.960105: -39.46  11.92   8.35 -17.81 -23.87   3.69  [rand]  [f=56]
   o=69 v= 0.966184: -31.30   4.20  -8.89   7.49  -6.54   6.84  [grid]  [f=40]
   o=70 v= 0.959630: -37.12  11.41  24.37  -8.28 -38.73  44.76  [rand]  [f=52]
   o=71 v= 0.956822: -35.61 -31.78  23.42  -8.31  14.23  43.64  [rand]  [f=43]
   o=72 v= 0.963182: -31.20 -18.50 -11.99  15.83   8.25  41.43  [rand]  [f=37]
   o=73 v= 0.957196: -36.55 -11.63 -16.91  15.68 -15.61  42.91  [rand]  [f=47]
   o=74 v= 0.957931: -39.73   8.93   2.15 -17.92 -33.62  24.68  [rand]  [f=67]
   o=75 v= 0.965218: -27.82  10.04  -5.73  24.40   5.16  42.54  [rand]  [f=44]
   o=76 v= 0.963342: -19.23  28.33  27.19 -28.01  13.82 -18.72  [rand]  [f=45]
   o=77 v= 0.966760: -36.10  16.51  17.50 -24.56 -27.45  34.83  [rand]  [f=33]
   o=78 v= 0.967818: -34.04  30.88  10.16  32.38   9.89  35.50  [rand]  [f=33]
   o=79 v= 0.956030: -30.23   7.07 -12.41  18.89  12.74  37.96  [rand]  [f=42]
   o=80 v= 0.966071: -35.21 -33.15  13.13 -12.26  29.18  44.66  [rand]  [f=31]
   o=81 v= 0.968833:   9.76  24.36  23.25  28.84   6.40  30.89  [grid]  [f=44]
   o=82 v= 0.969459:  33.41  27.66 -12.13  11.30 -20.32  17.72  [rand]  [f=34]
   o=83 v= 0.954727: -36.52 -16.02   3.34   9.49  -8.84  41.46  [rand]  [f=52]
   o=84 v= 0.967996:  25.68   6.84   1.78  -6.79  -8.77   9.77  [grid]  [f=42]
   o=85 v= 0.969657:  32.38  24.12   1.73 -14.98  36.75  26.77  [rand]  [f=40]
   o=86 v= 0.956552: -29.04 -11.98  23.57  19.63   7.09  42.53  [grid]  [f=68]
   o=87 v= 0.967277:  36.55  30.41  18.03  44.71  21.88 -14.87  [rand]  [f=41]
 + - saving #29 for use with twobest
 + - saving # 8 for use with twobest
 + - saving #67 for use with twobest
 + - saving #28 for use with twobest
 + - skip # 3 for twobest: too close to set #67
 + - saving # 6 for use with twobest
 + - saving #50 for use with twobest
 + - saving # 1 for use with twobest
 + - saving #21 for use with twobest
 + - skip # 0 for twobest: too close to set # 1
 + - saving #13 for use with twobest
 + - saving # 2 for use with twobest
 + - saving #20 for use with twobest
 + - saving # 5 for use with twobest
 + - saving #43 for use with twobest
 + - saving #23 for use with twobest
 + - saving #40 for use with twobest
 + - saving #39 for use with twobest
 + - saving #35 for use with twobest
 + - saving #51 for use with twobest
 + - saving #83 for use with twobest
 + - saving #41 for use with twobest
 + - saving # 7 for use with twobest
 + - saving #11 for use with twobest
 + - saving #59 for use with twobest
 + - saving #32 for use with twobest
 + - saving #24 for use with twobest
 + - skip #79 for twobest: too close to set #41
 + - saving #86 for use with twobest
 + - saving #71 for use with twobest
 + - saving #62 for use with twobest
 + - saving #73 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=291.402 usiz=383.425
 + - retaining old weight image
 + - using 91048 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 81512 total points stored in 162 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.949439 [o=29 t=0]
 + -- Parameters = -36.0755 17.0873 5.2540 -8.9441 12.0541 44.9522 1.0002 1.0002 0.9998 0.0001 0.0000 0.0001
 + - param set #2 has cost=0.949574 [o=8 t=1]
 + -- Parameters = -36.3743 15.1252 5.4911 -14.2159 9.9491 44.8380 0.9982 1.0376 0.9965 0.0005 -0.0017 0.0003
 + - param set #3 has cost=0.954998 [o=67 t=2]
 + -- Parameters = -28.7216 -7.6213 -2.4200 23.4343 3.0236 43.7455 1.0017 0.9985 0.9964 0.0008 0.0008 0.0014
 + - param set #4 has cost=0.950014 [o=28 t=3]
 + -- Parameters = -34.2961 36.5592 -1.9303 20.4704 -2.8694 43.7952 0.9772 0.9599 1.0105 0.0075 0.0045 0.0035
 + - param set #5 has cost=0.953748 [o=6 t=4]
 + -- Parameters = -35.4926 -26.2798 -2.0750 11.3615 -8.5423 42.1019 0.9996 0.9972 0.9991 0.0122 0.0005 -0.0007
 + - param set #6 has cost=0.960660 [o=50 t=5]
 + -- Parameters = -4.9484 -1.0711 -7.6768 7.2980 6.5010 13.4521 0.9992 1.0002 0.9942 0.0137 -0.0026 -0.0038
 + - param set #7 has cost=0.953698 [o=1 t=6]
 + -- Parameters = -32.0584 -10.4881 -8.1152 18.6830 -3.3467 44.5295 1.0038 0.9991 1.0431 -0.0003 0.0013 -0.0015
 + - param set #8 has cost=0.955843 [o=21 t=7]
 + -- Parameters = -33.7316 -8.2655 -11.6421 18.2821 -8.9707 42.4639 1.0000 0.9998 0.9999 -0.0003 0.0010 -0.0006
 + - param set #9 has cost=0.953605 [o=13 t=8]
 + -- Parameters = -34.1946 22.2798 18.7945 13.6245 -4.2203 44.4975 0.9996 1.0041 1.0005 0.0001 0.0002 0.0001
 + - param set #10 has cost=0.960506 [o=2 t=9]
 + -- Parameters = -30.7302 -20.5366 -0.4944 24.1794 -1.9235 41.9959 0.9992 1.0040 0.9976 0.0111 -0.0002 0.0008
 + - param set #11 has cost=0.956552 [o=20 t=10]
 + -- Parameters = -31.4728 -21.3095 4.2014 19.4088 0.6509 39.3850 0.9996 0.9921 0.9981 0.0006 -0.0009 0.0111
 + - param set #12 has cost=0.959546 [o=5 t=11]
 + -- Parameters = -34.1851 34.6802 7.7627 29.8309 -17.5940 43.4368 1.0000 1.0017 1.0049 0.0006 0.0008 0.0018
 + - param set #13 has cost=0.958707 [o=43 t=12]
 + -- Parameters = -29.9781 -32.5246 9.5740 21.6375 -1.0475 41.0657 1.0014 1.0001 0.9994 0.0010 -0.0007 -0.0007
 + - param set #14 has cost=0.956550 [o=23 t=13]
 + -- Parameters = -35.5802 22.2016 -37.0386 -10.2775 17.3225 44.8417 0.9993 1.0102 1.0104 0.0160 0.0022 0.0046
 + - param set #15 has cost=0.958941 [o=40 t=14]
 + -- Parameters = -33.2697 33.7248 9.3813 31.4735 -11.9844 36.5836 0.9954 1.0002 1.0005 0.0006 0.0014 0.0129
 + - param set #16 has cost=0.956481 [o=39 t=15]
 + -- Parameters = -35.9851 16.6589 -4.5148 -15.2586 10.9368 44.9951 0.9970 1.0004 1.0009 -0.0006 0.0012 0.0000
 + - param set #17 has cost=0.959538 [o=35 t=16]
 + -- Parameters = -29.7872 1.5891 7.4953 27.7826 1.1991 34.6173 0.9990 1.0048 0.9972 0.0000 -0.0005 0.0007
*[#17251=0.942836] *[#17255=0.94257] *[#17258=0.942193] *[#17259=0.942154] *[#17260=0.941997] *[#17261=0.941875] *[#17264=0.941839] *[#17266=0.941793] *[#17270=0.94142] *[#17272=0.941308] *[#17273=0.941263] *[#17276=0.941129] *[#17277=0.941101] *[#17279=0.940863] *[#17282=0.940544] *[#17285=0.940443] 
 + - param set #18 has cost=0.940443 [o=-1 t=-1]
 + -- Parameters = -0.1300 0.1922 0.9678 2.6187 -1.3323 -0.5822 0.9645 0.9651 0.9637 -0.0120 0.0036 -0.0031
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.506 
 + --- dist(#3,#1) = 0.505 
 + --- dist(#4,#1) = 0.493 
 + --- dist(#5,#1) = 0.501 
 + --- dist(#6,#1) = 0.501 
 + --- dist(#7,#1) = 0.474 
 + --- dist(#8,#1) = 0.493 
 + --- dist(#9,#1) = 0.478 
 + --- dist(#10,#1) = 0.506 
 + --- dist(#11,#1) = 0.505 
 + --- dist(#12,#1) = 0.444 
 + --- dist(#13,#1) = 0.463 
 + --- dist(#14,#1) = 0.419 
 + --- dist(#15,#1) = 0.391 
 + --- dist(#16,#1) = 0.489 
 + --- dist(#17,#1) = 0.473 
 + --- dist(#18,#1) = 0.156 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=291.402 usiz=383.425
 + - retaining old weight image
 + - using 91048 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 80994 total points stored in 162 'TOHD(13.984)' bloks (0 duplicates)
*[#17316=0.940429] *[#17317=0.940327] *[#17320=0.940299] *[#17322=0.94015] *[#17325=0.940147] *[#17326=0.940129] *[#17327=0.940068] *[#17330=0.940055] *[#17334=0.940052] *[#17336=0.94003] *[#17337=0.940012] *[#17340=0.939905] *[#17341=0.93981] *[#17342=0.939785] *[#17345=0.939657] *[#17350=0.939532] *[#17351=0.939214] *[#17352=0.938393] *[#17353=0.936849] *[#17354=0.934458] *[#17355=0.931416] *[#17356=0.929891] *[#17359=0.929317] *[#17363=0.929126] *[#17365=0.929005] *[#17366=0.928645] *[#17368=0.928531] *[#17369=0.928327] *[#17370=0.928146] *[#17371=0.927924] *[#17372=0.927537] *[#17373=0.926895] *[#17374=0.92635] *[#17375=0.92553] *[#17380=0.925107] *[#17381=0.925031] *[#17383=0.924741] *[#17384=0.924712] *[#17385=0.924644] *[#17386=0.924294] *[#17387=0.924029] *[#17392=0.923954] *[#17395=0.923901] *[#17396=0.923811] 
 + - param set #1 has cost=0.923811 [o=-1 t=-1]
 + -- Parameters = 0.4700 1.7193 3.0405 1.7730 -3.2866 0.2427 0.9573 0.9001 0.8479 -0.0258 0.0429 -0.0129
 + - param set #2 has cost=0.953618 [o=29 t=0]
 + -- Parameters = -36.1311 17.0328 5.1933 -8.9356 12.0769 44.7878 1.0006 1.0017 0.9998 -0.0001 -0.0003 0.0002
 + - param set #3 has cost=0.953639 [o=8 t=1]
 + -- Parameters = -36.4199 15.2794 5.3378 -14.4943 10.0568 44.8559 0.9987 1.0352 0.9946 -0.0002 -0.0002 -0.0009
 + - param set #4 has cost=0.955845 [o=28 t=3]
 + -- Parameters = -34.2926 36.5473 -1.9051 20.4700 -2.8676 43.7983 0.9773 0.9599 1.0105 0.0075 0.0045 0.0035
 + - param set #5 has cost=0.956159 [o=13 t=8]
 + -- Parameters = -34.2422 22.5682 18.7673 13.5173 -4.2267 44.4539 0.9995 1.0041 1.0005 -0.0001 0.0084 -0.0002
 + - param set #6 has cost=0.958433 [o=1 t=6]
 + -- Parameters = -32.0477 -10.4680 -8.1563 18.6454 -3.4289 44.5794 1.0046 0.9997 1.0428 -0.0001 0.0100 -0.0016
 + - param set #7 has cost=0.957199 [o=6 t=4]
 + -- Parameters = -35.4811 -26.2787 -2.0935 11.3636 -8.5543 42.0999 0.9998 0.9980 0.9993 0.0122 0.0002 -0.0013
 + - param set #8 has cost=0.959260 [o=67 t=2]
 + -- Parameters = -28.7178 -7.5501 -2.4896 23.4406 2.8545 43.6810 1.0035 0.9976 0.9985 0.0007 0.0003 0.0089
 + - param set #9 has cost=0.959304 [o=21 t=7]
 + -- Parameters = -33.7246 -8.2359 -8.8711 18.2785 -8.8791 42.4637 1.0001 0.9994 0.9990 -0.0005 0.0010 -0.0007
 + - param set #10 has cost=0.957205 [o=39 t=15]
 + -- Parameters = -36.5007 16.5075 -1.2470 -15.2280 10.9994 44.9976 0.9967 1.0031 1.0007 0.0007 0.0023 0.0004
 + - param set #11 has cost=0.959561 [o=23 t=13]
 + -- Parameters = -35.6606 21.9900 -37.0120 -10.4763 17.3289 44.9152 0.9981 1.0100 1.0080 0.0244 0.0024 0.0045
 + - param set #12 has cost=0.959939 [o=20 t=10]
 + -- Parameters = -31.4682 -21.2833 4.1986 19.4309 0.6442 39.4013 0.9996 0.9915 0.9994 0.0001 -0.0008 0.0122
 + - param set #13 has cost=0.962213 [o=43 t=12]
 + -- Parameters = -30.0194 -32.8169 9.5868 21.5027 -1.0305 40.9941 1.0071 0.9990 1.0023 0.0002 -0.0006 -0.0007
 + - param set #14 has cost=0.964039 [o=40 t=14]
 + -- Parameters = -33.2697 33.7248 9.3813 31.4735 -11.9844 36.5836 0.9954 1.0002 1.0005 0.0006 0.0014 0.0129
 + - param set #15 has cost=0.964404 [o=35 t=16]
 + -- Parameters = -29.7872 1.5891 7.4953 27.7826 1.1991 34.6173 0.9990 1.0048 0.9972 0.0000 -0.0005 0.0091
 + - param set #16 has cost=0.959578 [o=5 t=11]
 + -- Parameters = -34.6582 33.4714 7.6528 30.3181 -11.7610 44.5341 0.9669 1.0056 0.9687 0.0022 0.0021 -0.0005
 + - param set #17 has cost=0.964064 [o=2 t=9]
 + -- Parameters = -30.7413 -20.5605 -0.4626 24.1680 -1.9612 42.0193 0.9994 1.0043 0.9976 0.0195 -0.0002 0.0007
 + - param set #18 has cost=0.970695 [o=50 t=5]
 + -- Parameters = -5.2289 -0.9321 -8.1935 7.0219 6.3774 13.7298 0.9973 0.9983 0.9885 0.0217 -0.0027 -0.0019
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.495 
 + --- dist(#3,#1) = 0.496 
 + --- dist(#4,#1) = 0.484 
 + --- dist(#5,#1) = 0.491 
 + --- dist(#6,#1) = 0.465 
 + --- dist(#7,#1) = 0.497 
 + --- dist(#8,#1) = 0.493 
 + --- dist(#9,#1) = 0.483 
 + --- dist(#10,#1) = 0.469 
 + --- dist(#11,#1) = 0.501 
 + --- dist(#12,#1) = 0.492 
 + --- dist(#13,#1) = 0.435 
 + --- dist(#14,#1) = 0.453 
 + --- dist(#15,#1) = 0.422 
 + --- dist(#16,#1) = 0.464 
 + --- dist(#17,#1) = 0.382 
 + --- dist(#18,#1) = 0.214 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=291.402 usiz=383.425
 + - retaining old weight image
 + - using 91048 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 81098 total points stored in 163 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.925324 [o=-1 t=-1]
 + -- Parameters = 0.4037 0.8793 3.0577 1.7954 -5.5685 -0.2385 0.9404 0.9424 0.8519 -0.0166 0.0468 -0.0377
 + - param set #2 has cost=0.958958 [o=29 t=0]
 + -- Parameters = -36.1329 17.0307 5.1831 -8.9416 12.0751 44.7862 1.0006 1.0017 0.9998 -0.0001 -0.0004 0.0002
 + - param set #3 has cost=0.959084 [o=8 t=1]
 + -- Parameters = -36.4197 15.2748 5.3327 -14.4828 10.0681 44.8448 0.9988 1.0353 0.9946 -0.0002 0.0055 -0.0009
 + - param set #4 has cost=0.959088 [o=28 t=3]
 + -- Parameters = -34.2935 36.5494 0.1367 20.4743 -2.8487 43.7933 0.9773 0.9599 1.0106 0.0075 0.0045 0.0035
 + - param set #5 has cost=0.959151 [o=13 t=8]
 + -- Parameters = -34.2248 22.8346 18.8812 13.5559 -4.2579 44.4604 0.9999 1.0044 1.0021 -0.0003 0.0087 0.0055
 + - param set #6 has cost=0.960713 [o=6 t=4]
 + -- Parameters = -35.4989 -26.2676 -2.1036 11.3005 -8.5808 41.9267 0.9988 0.9980 0.9989 0.0122 0.0003 -0.0013
 + - param set #7 has cost=0.959914 [o=39 t=15]
 + -- Parameters = -36.6356 16.3169 0.9036 -15.4588 11.1478 44.9911 0.9969 1.0018 0.9999 0.0005 0.0018 0.0006
 + - param set #8 has cost=0.961086 [o=1 t=6]
 + -- Parameters = -32.0033 -8.4417 -7.9251 18.6894 -3.3279 44.5490 1.0042 0.9995 1.0415 -0.0002 0.0099 -0.0018
 + - param set #9 has cost=0.962855 [o=67 t=2]
 + -- Parameters = -28.6953 -7.5429 -2.5275 23.4482 2.8056 43.7121 1.0038 0.9974 0.9985 0.0006 0.0004 0.0145
 + - param set #10 has cost=0.960597 [o=21 t=7]
 + -- Parameters = -32.6997 -8.1850 -8.8492 17.9312 -8.5168 43.7191 1.0063 1.0492 1.0126 -0.0054 -0.0033 -0.0054
 + - param set #11 has cost=0.963966 [o=23 t=13]
 + -- Parameters = -35.6391 21.9876 -36.9925 -10.5141 17.3182 44.9428 0.9980 1.0099 1.0078 0.0241 0.0085 0.0045
 + - param set #12 has cost=0.962664 [o=5 t=11]
 + -- Parameters = -34.6561 33.4716 7.6504 30.3160 -11.7509 44.5301 0.9669 1.0055 0.9689 0.0022 0.0021 -0.0005
 + - param set #13 has cost=0.963169 [o=20 t=10]
 + -- Parameters = -31.4629 -21.2783 4.2176 19.4379 0.6385 39.4047 0.9996 0.9916 1.0008 -0.0003 -0.0009 0.0123
 + - param set #14 has cost=0.965607 [o=43 t=12]
 + -- Parameters = -30.2726 -32.6711 9.6074 21.9499 -0.6612 40.8878 1.0128 0.9992 1.0000 -0.0023 0.0002 -0.0012
 + - param set #15 has cost=0.968433 [o=40 t=14]
 + -- Parameters = -33.2716 33.7260 9.3817 31.4807 -11.9829 36.5937 0.9954 1.0001 1.0006 0.0006 0.0014 0.0185
 + - param set #16 has cost=0.966620 [o=2 t=9]
 + -- Parameters = -30.7452 -20.5532 -0.4594 24.1443 -1.9853 42.0370 0.9992 1.0057 0.9974 0.0197 0.0051 0.0006
 + - param set #17 has cost=0.967203 [o=35 t=16]
 + -- Parameters = -29.7745 1.5738 7.5100 27.8095 1.1599 34.6104 0.9994 1.0062 0.9974 0.0001 -0.0006 0.0090
 + - param set #18 has cost=0.976390 [o=50 t=5]
 + -- Parameters = -5.2255 -0.7763 -8.1648 7.2105 6.2904 13.8745 0.9944 0.9960 0.9891 0.0273 -0.0032 -0.0025
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.5 
 + --- dist(#3,#1) = 0.501 
 + --- dist(#4,#1) = 0.489 
 + --- dist(#5,#1) = 0.497 
 + --- dist(#6,#1) = 0.503 
 + --- dist(#7,#1) = 0.488 
 + --- dist(#8,#1) = 0.469 
 + --- dist(#9,#1) = 0.498 
 + --- dist(#10,#1) = 0.497 
 + --- dist(#11,#1) = 0.488 
 + --- dist(#12,#1) = 0.44 
 + --- dist(#13,#1) = 0.502 
 + --- dist(#14,#1) = 0.457 
 + --- dist(#15,#1) = 0.47 
 + --- dist(#16,#1) = 0.387 
 + --- dist(#17,#1) = 0.421 
 + --- dist(#18,#1) = 0.225 
 + - Total coarse refinement net CPU time = 0.0 s; 4183 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=291.402 usiz=383.425
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 81331 total points stored in 164 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.927702 * [o=-1 t=-1]
 + -- Parameters = 0.4037 0.8793 3.0577 1.7954 -5.5685 -0.2385 0.9404 0.9424 0.8519 -0.0166 0.0468 -0.0377
 + - cost(#2)=0.959539   [o=29 t=0]
 + -- Parameters = -36.1329 17.0307 5.1831 -8.9416 12.0751 44.7862 1.0006 1.0017 0.9998 -0.0001 -0.0004 0.0002
 + - cost(#3)=0.959526   [o=8 t=1]
 + -- Parameters = -36.4197 15.2748 5.3327 -14.4828 10.0681 44.8448 0.9988 1.0353 0.9946 -0.0002 0.0055 -0.0009
 + - cost(#4)=0.959711   [o=28 t=3]
 + -- Parameters = -34.2935 36.5494 0.1367 20.4743 -2.8487 43.7933 0.9773 0.9599 1.0106 0.0075 0.0045 0.0035
 + - cost(#5)=0.959870   [o=13 t=8]
 + -- Parameters = -34.2248 22.8346 18.8812 13.5559 -4.2579 44.4604 0.9999 1.0044 1.0021 -0.0003 0.0087 0.0055
 + - cost(#6)=0.960675   [o=39 t=15]
 + -- Parameters = -36.6356 16.3169 0.9036 -15.4588 11.1478 44.9911 0.9969 1.0018 0.9999 0.0005 0.0018 0.0006
 + - cost(#7)=0.961020   [o=21 t=7]
 + -- Parameters = -32.6997 -8.1850 -8.8492 17.9312 -8.5168 43.7191 1.0063 1.0492 1.0126 -0.0054 -0.0033 -0.0054
 + - cost(#8)=0.961614   [o=6 t=4]
 + -- Parameters = -35.4989 -26.2676 -2.1036 11.3005 -8.5808 41.9267 0.9988 0.9980 0.9989 0.0122 0.0003 -0.0013
 + - cost(#9)=0.961752   [o=1 t=6]
 + -- Parameters = -32.0033 -8.4417 -7.9251 18.6894 -3.3279 44.5490 1.0042 0.9995 1.0415 -0.0002 0.0099 -0.0018
 + - cost(#10)=0.963095   [o=5 t=11]
 + -- Parameters = -34.6561 33.4716 7.6504 30.3160 -11.7509 44.5301 0.9669 1.0055 0.9689 0.0022 0.0021 -0.0005
 + - cost(#11)=0.963519   [o=67 t=2]
 + -- Parameters = -28.6953 -7.5429 -2.5275 23.4482 2.8056 43.7121 1.0038 0.9974 0.9985 0.0006 0.0004 0.0145
 + - cost(#12)=0.963837   [o=20 t=10]
 + -- Parameters = -31.4629 -21.2783 4.2176 19.4379 0.6385 39.4047 0.9996 0.9916 1.0008 -0.0003 -0.0009 0.0123
 + - cost(#13)=0.964555   [o=23 t=13]
 + -- Parameters = -35.6391 21.9876 -36.9925 -10.5141 17.3182 44.9428 0.9980 1.0099 1.0078 0.0241 0.0085 0.0045
 + - cost(#14)=0.966122   [o=43 t=12]
 + -- Parameters = -30.2726 -32.6711 9.6074 21.9499 -0.6612 40.8878 1.0128 0.9992 1.0000 -0.0023 0.0002 -0.0012
 + - cost(#15)=0.967042   [o=2 t=9]
 + -- Parameters = -30.7452 -20.5532 -0.4594 24.1443 -1.9853 42.0370 0.9992 1.0057 0.9974 0.0197 0.0051 0.0006
 + - cost(#16)=0.968079   [o=35 t=16]
 + -- Parameters = -29.7745 1.5738 7.5100 27.8095 1.1599 34.6104 0.9994 1.0062 0.9974 0.0001 -0.0006 0.0090
 + - cost(#17)=0.968882   [o=40 t=14]
 + -- Parameters = -33.2716 33.7260 9.3817 31.4807 -11.9829 36.5937 0.9954 1.0001 1.0006 0.0006 0.0014 0.0185
 + - cost(#18)=0.977000   [o=50 t=5]
 + -- Parameters = -5.2255 -0.7763 -8.1648 7.2105 6.2904 13.8745 0.9944 0.9960 0.9891 0.0273 -0.0032 -0.0025
 + - cost(#19)=0.989616   [o=-2 t=-2]
 + -- Parameters = -0.7704 -2.6094 -3.2790 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.926130 * [o=-1 t=-1]
 + -- Parameters = 0.1970 0.7930 3.4533 1.8308 -5.6285 -0.3360 0.9510 0.9453 0.8357 -0.0128 0.0559 -0.0471
 + - cost(#2)=0.959219   [o=29 t=0]
 + -- Parameters = -36.0975 16.9697 5.1337 -8.8876 12.0488 44.8066 1.0011 1.0015 1.0000 -0.0006 -0.0075 0.0002
 + - cost(#3)=0.959188   [o=8 t=1]
 + -- Parameters = -36.4473 15.3336 5.0950 -14.4651 10.1207 44.9122 0.9993 1.0352 0.9929 -0.0001 0.0056 -0.0009
 + - cost(#4)=0.959353   [o=28 t=3]
 + -- Parameters = -34.3818 36.3813 0.1122 20.5123 -2.7955 43.7422 0.9771 0.9597 1.0084 0.0082 0.0117 0.0040
 + - cost(#5)=0.959863   [o=13 t=8]
 + -- Parameters = -34.2241 22.8466 18.8832 13.5564 -4.2590 44.4598 0.9999 1.0044 1.0022 -0.0078 0.0087 0.0055
 + - cost(#6)=0.960330   [o=39 t=15]
 + -- Parameters = -36.6268 16.2603 0.9306 -15.4175 11.2145 44.9612 0.9969 1.0025 0.9995 0.0008 -0.0062 0.0006
 + - cost(#7)=0.960963   [o=21 t=7]
 + -- Parameters = -32.6785 -8.2058 -8.7881 17.9252 -8.4995 43.7361 1.0067 1.0492 1.0128 -0.0055 -0.0033 -0.0054
 + - cost(#8)=0.961530   [o=6 t=4]
 + -- Parameters = -35.4976 -26.2660 -2.0912 11.2956 -8.5816 41.9265 0.9988 0.9980 0.9988 0.0196 0.0003 -0.0013
 + - cost(#9)=0.960563   [o=1 t=6]
 + -- Parameters = -31.8742 -8.7543 -8.2333 18.2402 -3.0991 44.6636 1.0067 0.9652 1.0411 0.0022 0.0035 -0.0037
 + - cost(#10)=0.962258   [o=5 t=11]
 + -- Parameters = -34.6926 34.0542 6.8176 29.2348 -11.8784 44.7363 0.9702 1.0065 0.9735 -0.0047 -0.0156 -0.0010
 + - cost(#11)=0.963024   [o=67 t=2]
 + -- Parameters = -28.6448 -7.6815 -2.5580 23.4934 2.6316 43.8329 1.0053 0.9959 0.9979 0.0009 0.0003 0.0218
 + - cost(#12)=0.963034   [o=20 t=10]
 + -- Parameters = -31.4382 -21.0698 4.7210 19.6673 0.1481 39.5506 1.0002 0.9897 0.9989 -0.0084 -0.0020 0.0137
 + - cost(#13)=0.964490   [o=23 t=13]
 + -- Parameters = -35.6442 21.9796 -36.9888 -10.5215 17.2915 44.9498 0.9981 1.0099 1.0077 0.0241 0.0011 0.0046
 + - cost(#14)=0.964489   [o=43 t=12]
 + -- Parameters = -30.5292 -32.9880 8.9973 22.4076 -0.5927 40.6987 1.0181 1.0202 0.9903 -0.0040 0.0021 -0.0010
 + - cost(#15)=0.966981   [o=2 t=9]
 + -- Parameters = -30.7444 -20.5528 -0.4370 24.1387 -1.9753 42.0316 0.9992 1.0057 0.9974 0.0197 0.0051 0.0080
 + - cost(#16)=0.966421   [o=35 t=16]
 + -- Parameters = -29.5859 0.7183 7.4560 27.9267 0.1294 34.4355 1.0040 1.0160 0.9985 -0.0087 -0.0024 0.0097
 + - cost(#17)=0.967822   [o=40 t=14]
 + -- Parameters = -33.3901 34.1025 9.4913 31.7822 -12.8881 37.0689 0.9940 0.9944 0.9749 0.0015 0.0014 0.0178
 + - cost(#18)=0.975049   [o=50 t=5]
 + -- Parameters = -5.7287 0.0043 -8.3462 8.8797 6.3696 13.0442 0.9926 0.9864 0.9890 0.0342 0.0035 0.0017
 + - cost(#19)=0.932835   [o=-2 t=-2]
 + -- Parameters = 0.7064 -0.0011 2.9823 2.0979 -3.1286 0.9224 0.9537 1.0373 0.8376 0.0409 0.0174 -0.0149
 + - case #1 [o=-1 t=-1] is now the best
 + - Initial  cost = 0.926130
 + - Initial fine Parameters = 0.1970 0.7930 3.4533 1.8308 -5.6285 -0.3360 0.9510 0.9453 0.8357 -0.0128 0.0559 -0.0471
*[#22386=0.923766] *[#22397=0.923757] *[#22401=0.923747] *[#22402=0.923737] *[#22409=0.923715] *[#22410=0.923693] *[#22413=0.923651] *[#22416=0.923643] *[#22419=0.923626] *[#22424=0.923577] *[#22429=0.923558] *[#22430=0.923514] *[#22431=0.923477] *[#22432=0.923431] *[#22433=0.923362] *[#22440=0.923362] *[#22442=0.923351] *[#22443=0.923342] *[#22448=0.923335] *[#22452=0.923325] *[#22455=0.923268] *[#22456=0.92326] *[#22458=0.923238] *[#22459=0.92322] *[#22462=0.923202] *[#22471=0.923197] *[#22474=0.923184] *[#22475=0.923175] *[#22484=0.923175] *[#22486=0.923152] *[#22492=0.923148] *[#22495=0.923141] *[#22496=0.923137] *[#22497=0.923134] *[#22498=0.923133] *[#22500=0.923131] *[#22505=0.923121] *[#22506=0.923113] *[#22508=0.923112] *[#22509=0.923112] *[#22511=0.923111] *[#22512=0.923109] *[#22515=0.923105] *[#22518=0.9231] *[#22519=0.923096] *[#22520=0.923093] *[#22521=0.92309] *[#22524=0.923088] *[#22529=0.923083] *[#22530=0.923081] *[#22531=0.92308] *[#22533=0.92308] *[#22534=0.923075] *[#22535=0.923068] *[#22536=0.923062] *[#22537=0.923052] *[#22540=0.923041] *[#22546=0.923038] *[#22549=0.923035] *[#22551=0.923035] *[#22552=0.923032] *[#22553=0.923027] *[#22554=0.923023] *[#22559=0.92302] *[#22562=0.923019] *[#22563=0.923017] *[#22564=0.923017] *[#22566=0.923013] *[#22569=0.923011] *[#22570=0.923009] *[#22571=0.923007] *[#22572=0.923005] *[#22573=0.922999] *[#22576=0.922994] *[#22579=0.922985] *[#22580=0.922984] *[#22582=0.922978] *[#22585=0.922976] *[#22587=0.922974] *[#22588=0.922973] *[#22589=0.922972] *[#22590=0.922966] *[#22591=0.922964] *[#22592=0.922963] *[#22595=0.922959] *[#22596=0.922958] *[#22597=0.922953] *[#22598=0.922947] *[#22599=0.922938] *[#22600=0.92293] *[#22601=0.922929] *[#22604=0.922926] *[#22607=0.922925] *[#22610=0.922923] *[#22611=0.922922] *[#22614=0.922921] *[#22615=0.92292] *[#22620=0.92292] *[#22624=0.922918] *[#22627=0.922917] *[#22630=0.922916] *[#22633=0.922915] *[#22636=0.922915] *[#22641=0.922915] *[#22643=0.922912] *[#22644=0.922912] *[#22645=0.922911] *[#22648=0.922911] *[#22651=0.922911] *[#22657=0.922911] *[#22658=0.92291] *[#22669=0.922908] *[#22670=0.922908] *[#22673=0.922908] *[#22675=0.922907] *[#22677=0.922905] *[#22678=0.922904] *[#22679=0.922903] *[#22680=0.922903] *[#22684=0.922902] *[#22685=0.9229] *[#22686=0.9229] *[#22687=0.922899] *[#22688=0.922899] *[#22689=0.922897] *[#22694=0.922896] *[#22695=0.922894] *[#22696=0.922893] *[#22697=0.922893] *[#22699=0.922892] *[#22700=0.92289] *[#22701=0.92289] *[#22702=0.922888] *[#22703=0.922887] *[#22704=0.922883] *[#22705=0.92287] *[#22713=0.922867] *[#22718=0.922865] *[#22724=0.922862] *[#22725=0.922859] *[#22726=0.922857] *[#22727=0.922857] *[#22728=0.922851] *[#22729=0.922847] *[#22730=0.922841] *[#22733=0.92284] *[#22735=0.922833] *[#22737=0.922832] *[#22738=0.92283] *[#22739=0.922828] *[#22740=0.922825] *[#22743=0.922821] *[#22746=0.92282] *[#22748=0.92282] *[#22749=0.922816] *[#22750=0.922814] *[#22752=0.922812] *[#22755=0.922811] *[#22760=0.92281] *[#22761=0.922807] *[#22762=0.922803] *[#22763=0.9228] *[#22764=0.922796] *[#22765=0.922796] *[#22766=0.922788] *[#22767=0.922786] *[#22769=0.922784] *[#22770=0.92278] *[#22773=0.922776] *[#22774=0.922775] *[#22775=0.922774] *[#22778=0.922771] *[#22779=0.922766] *[#22780=0.92276] *[#22781=0.922759] *[#22783=0.922755] *[#22786=0.922755] *[#22787=0.922753] *[#22788=0.922752] *[#22789=0.922749] *[#22790=0.922745] *[#22791=0.922742] *[#22792=0.92274] *[#22795=0.922735] *[#22796=0.922731] *[#22799=0.922728] *[#22800=0.922727] *[#22801=0.922726] *[#22802=0.922724] *[#22803=0.922723] *[#22804=0.922722] *[#22805=0.92272] *[#22814=0.922718] *[#22815=0.922718] *[#22817=0.922717] *[#22819=0.922717] *[#22820=0.922715] *[#22823=0.922713] *[#22824=0.92271] *[#22825=0.922709] *[#22826=0.922703] *[#22830=0.922699] *[#22831=0.922698] *[#22834=0.922696] *[#22835=0.922696] *[#22836=0.922695] *[#22838=0.922694] *[#22841=0.922693] *[#22842=0.922692] *[#22845=0.922691] *[#22850=0.922689] *[#22851=0.922689] *[#22853=0.922687] *[#22854=0.922685] *[#22857=0.922684] *[#22858=0.922684] *[#22859=0.922683] *[#22860=0.922681] *[#22861=0.922679] *[#22862=0.922677] *[#22867=0.922674] *[#22868=0.922674] *[#22869=0.922673] *[#22872=0.922672] *[#22874=0.922672] *[#22875=0.92267] *[#22876=0.922669] *[#22879=0.922666] *[#22880=0.922666] *[#22887=0.922665] *[#22888=0.922665] *[#22893=0.922664] *[#22894=0.922664] *[#22897=0.922663] *[#22898=0.922663] *[#22900=0.922662] *[#22905=0.92266] *[#22906=0.922658] *[#22909=0.922655] *[#22910=0.922653] *[#22911=0.922653] *[#22915=0.922649] *[#22918=0.922647] *[#22919=0.922646] *[#22920=0.922646] *[#22921=0.922644] *[#22922=0.922643] *[#22923=0.922641] *[#22924=0.922639] *[#22925=0.922637] *[#22928=0.922634] *[#22933=0.922629] *[#22936=0.922628] *[#22937=0.922628] *[#22940=0.922626] *[#22949=0.922625] *[#22954=0.922624] *[#22961=0.922623] *[#22962=0.922622] *[#22965=0.922621] *[#22967=0.922621] *[#22968=0.922619] *[#22969=0.922618] *[#22970=0.922617] *[#22973=0.922616] *[#22974=0.922615] *[#22975=0.922615] *[#22976=0.922615] *[#22980=0.922615] *[#22987=0.922614] *[#22990=0.922614] *[#22991=0.922614] *[#22992=0.922614] *[#22993=0.922614] *[#22994=0.922614] *[#22996=0.922613] *[#23003=0.922613] *[#23005=0.922613] *[#23006=0.922612] *[#23007=0.922612] *[#23008=0.922612] *[#23009=0.922612] *[#23014=0.922611] *[#23015=0.922611] *[#23016=0.92261] *[#23017=0.92261] *[#23019=0.92261] *[#23020=0.922609] *[#23021=0.922609] *[#23022=0.922609] *[#23023=0.922609] *[#23024=0.922609] *[#23025=0.922609] *[#23029=0.922608] *[#23033=0.922608] *[#23035=0.922608] *[#23036=0.922608] *[#23043=0.922608] *[#23044=0.922608] *[#23046=0.922608] *[#23049=0.922608] *[#23058=0.922608] 
 + - Finalish cost = 0.922608 ; 1022 funcs
 + - ini Finalish Parameters = 0.0348 2.3998 3.1531 1.5067 -7.8429 -0.8375 0.9618 0.9159 0.8372 -0.0154 0.0704 -0.1111
*[#23172=0.922606] *[#23220=0.922604] *[#23227=0.922603] *[#23235=0.922602] *[#23240=0.9226] *[#23241=0.922598] *[#23242=0.922597] *[#23246=0.922597] *[#23247=0.922596] *[#23252=0.922594] *[#23261=0.922593] *[#23270=0.922591] *[#23279=0.92259] *[#23288=0.92259] *[#23303=0.92259] *[#23309=0.922587] *[#23322=0.922587] *[#23326=0.922587] *[#23338=0.922586] *[#23339=0.922586] *[#23346=0.922586] *[#23353=0.922585] *[#23381=0.922585] *[#23384=0.922585] *[#23391=0.922585] *[#23394=0.922585] *[#23397=0.922585] *[#23403=0.922584] *[#23420=0.922584] *[#23421=0.922584] *[#23422=0.922584] *[#23433=0.922584] *[#23445=0.922584] *[#23457=0.922584] *[#23478=0.922584] *[#23497=0.922584] *[#23503=0.922584] 
 + - Final    cost = 0.922584 ; 435 funcs
 + Final fine fit Parameters:
       x-shift=  0.0336   y-shift=  2.4019   z-shift=  3.1214  ...  enorm=  3.9387 mm
       z-angle=  1.4186   x-angle= -7.8325   y-angle= -0.7784  ...  total=  8.0071 deg
       x-scale=  0.9621   y-scale=  0.9170   z-scale=  0.8378  ...  vol3D=  0.7391 = base bigger than source
     y/x-shear= -0.0173 z/x-shear=  0.0686 z/y-shear= -0.1111
[7m*+ WARNING:[0m Parameter z/y-shear =  -0.11110 is close to edge of its search range  -0.11110 ..   0.11110
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.0336 2.4019 3.1214 1.4186 -7.8325 -0.7784 0.9621 0.9170 0.8378 -0.0173 0.0686 -0.1111
++ Unloading unneeded data
++ Output dataset ./MPRAGE.GA02_unif_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./MPRAGE.GA02_unif_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 26.1
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GA02_unif_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GA02_unif_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5571754 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 91048 voxels [14.8%] in weight mask
++ Number of points for matching = 91048
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.998 49.577 40.199 (index)
 + source center of mass = 157.845 188.143 136.177 (index)
 + source-target CM = -0.512 -2.148 -2.627 (xyz)
 + estimated center of mass shifts = -0.512 -2.148 -2.627
++ shift param auto-range: -72.0..71.0 -81.4..77.1 -69.8..64.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.512436 .. 9.487564  center = -0.512436
 + Range param#2 [y-shift] = -12.147858 .. 7.852142  center = -2.147858
 + Range param#3 [z-shift] = -12.626793 .. 7.373207  center = -2.626793
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.512436 .. 39.487564  center = -0.512436
 + Range param#2 [y-shift] = -42.147858 .. 37.852142  center = -2.147858
 + Range param#3 [z-shift] = -42.626793 .. 37.373207  center = -2.626793
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000084
++ Final parameter search ranges:
 +       x-shift =  -40.512 ..   39.488
 +       y-shift =  -42.148 ..   37.852
 +       z-shift =  -42.627 ..   37.373
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5571754 [out of 32899384] voxels
 + base mask has 112957 [out of 617148] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=308.356 usiz=373.905
 + - copying weight image
 + - using 91048 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 316.097 .. 1070.74; base clip 2816.46 .. 10248.2
 +  - versus source range 0 .. 1128.36; base range 0 .. 12989.5
 + 81331 total points stored in 164 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GA02_unif_flip_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GA02_unif_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 7295438 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 91048 voxels [14.8%] in weight mask
++ Number of points for matching = 91048
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 40.998 49.577 40.199 (index)
 + source center of mass = 157.257 185.329 131.893 (index)
 + source-target CM = -0.924 -4.117 -5.625 (xyz)
 + estimated center of mass shifts = -0.924 -4.117 -5.625
++ shift param auto-range: -72.4..70.6 -83.3..75.1 -72.8..61.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.923843 .. 9.076157  center = -0.923843
 + Range param#2 [y-shift] = -14.117188 .. 5.882812  center = -4.117188
 + Range param#3 [z-shift] = -15.625496 .. 4.374504  center = -5.625496
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.923843 .. 39.076157  center = -0.923843
 + Range param#2 [y-shift] = -44.117188 .. 35.882812  center = -4.117188
 + Range param#3 [z-shift] = -45.625496 .. 34.374504  center = -5.625496
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000084
++ Final parameter search ranges:
 +       x-shift =  -40.924 ..   39.076
 +       y-shift =  -44.117 ..   35.883
 +       z-shift =  -45.625 ..   34.375
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 7295438 [out of 32899384] voxels
 + base mask has 112957 [out of 617148] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=331.812 usiz=362.386
 + - copying weight image
 + - using 91048 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 320.819 .. 1067.72; base clip 2816.46 .. 10248.2
 +  - versus source range 0 .. 1158.31; base range 0 .. 12989.5
 + 81331 total points stored in 164 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
No flip cost is 0.818745 for lpa cost function
Flip cost is 0.924256 for lpa cost function
Data does not need flipping
#++ Creating final output: skullstripped anat data
copying from dataset /mnt/ext5/GA/fmri_data/preproc_data/GA02/MPRAGE.GA02_unif_unflipped_ns+orig to /mnt/ext5/GA/fmri_data/preproc_data/GA02/MPRAGE.GA02_unif_ns+orig
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GA02_unif_unflipped_ns+orig MPRAGE.GA02_unif_ns
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat MPRAGE.GA02_unif+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base \
 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off \
 -tshift off" \
 ./MPRAGE.GA02_unif_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GA02_unif*

# Finished alignment successfully

auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input MPRAGE.GA02_unif_ns+orig -skull_strip_input no -unifize_input no
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ auto_warp.py version: 0.06
# Output directory /mnt/ext5/GA/fmri_data/preproc_data/GA02/awpy/
#Script is running:
  mkdir /mnt/ext5/GA/fmri_data/preproc_data/GA02/awpy/
cd /mnt/ext5/GA/fmri_data/preproc_data/GA02/awpy/
#Script is running (command trimmed):
  3dcopy /mnt/ext5/GA/fmri_data/preproc_data/GA02/MPRAGE.GA02_unif_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#Script is running (command trimmed):
  3dcopy /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz ./base.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GA02/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GA02/awpy/anat.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ anat already stripped, re-using
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_15pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 1567.130100 ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (cubic final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m -base dataset __ats_tmp__ref_base.nii_15pad+tlrc has 5 sub-bricks; will only use #0
RMS[0] = 526.477 275.044   ITER = 7/50
526.477

Warping has converged.

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
Cleanup ...
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GA02/awpy/anat.aff.nii
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GA02/awpy/base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.aff.nii ./base.nii
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GA02/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GA02/awpy/anat.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.aff.nii 
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ base dataset has more than 1 sub-brick: ignoring all but the first
++ base dataset has more than 1 sub-brick: ignoring all but the first [0]
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=4 ytop=6  zbot=19 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=/mnt/ext5/GA/fmri_data/preproc_data/GA02/awpy/base.nii  source=/mnt/ext5/GA/fmri_data/preproc_data/GA02/awpy/anat.aff.nii
++ AFNI warpomatic: 199 x 239 x 215 volume ; autobbox = 22..176 24..214 20..183 [clock= 3s 175ms]
lev=0 3..195 1..237 1..203: [first cost=-0.65435] ..... done [cost:-0.65435==>-0.70774]
lev=1 patch=145x177x153 [clock= 43s 12ms]........:[cost=-0.72946]:........done [cost:-0.70774==>-0.73475 ; 16 patches optimized, 0 skipped, bbox=5:192,4:235,3:200]
lev=2 patch=109x133x115 [clock= 58s 357ms]........done [cost:-0.73475==>-0.75808 ; 8 patches optimized, 0 skipped, bbox=5:192,4:235,3:200]
lev=3 patch=81x99x85 [clock= 1m 3s 383ms].......done [cost:-0.75808==>-0.82074 ; 23 patches optimized, 4 skipped, bbox=5:192,4:235,3:200]
lev=4 patch=61x75x65 [clock= 1m 15s 334ms].........done [cost:-0.82074==>-0.90695 ; 88 patches optimized, 37 skipped, bbox=5:192,4:235,3:200]
lev=5 patch=45x57x49 [clock= 1m 33s 719ms].................done [cost:-0.90695==>-0.96650 ; 169 patches optimized, 83 skipped, bbox=5:192,4:235,3:200]
lev=6 patch=35x43x37 [clock= 1m 49s 905ms]......................done [cost:-0.96650==>-1.01961 ; 438 patches optimized, 291 skipped, bbox=5:192,4:235,3:200]
lev=7 patch=25x25x25 [clock= 2m 10s 89ms].................................done [cost:-1.01961==>-1.11028 ; 1432 patches optimized, 908 skipped, bbox=5:192,4:235,3:200]
++ ====== total number of parameters 'optimized' = 26238
 +      initial unpenalized cost = -0.654348
 +        final unpenalized cost = -1.12273
 +        final penalized   cost = -1.11028
++ Output dataset ./anat.aff.qw.nii
++ Output dataset ./anat.aff.qw_WARP.nii
++ ===== clock time = 3m 12s 960ms
#++ Applying warps to /mnt/ext5/GA/fmri_data/preproc_data/GA02/MPRAGE.GA02_unif_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.aff.qw_WARP.nii anat.aff.Xat.1D" -master ./base.nii -source /mnt/ext5/GA/fmri_data/preproc_data/GA02/MPRAGE.GA02_unif_ns+orig -prefix ./MPRAGE.GA02_unif_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/mnt/ext5/GA/fmri_data/preproc_data/GA02/MPRAGE.GA02_unif_ns+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./MPRAGE.GA02_unif_ns.aw.nii
++ total Elapsed time = 8.1 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input \
 MPRAGE.GA02_unif_ns+orig -skull_strip_input no -unifize_input no" \
 ./MPRAGE.GA02_unif_ns.aw.nii


3dbucket -DAFNI_NIFTI_VIEW=tlrc -prefix MPRAGE.GA02_unif_ns awpy/MPRAGE.GA02_unif_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
mv awpy/anat.aff.Xat.1D .
mv awpy/anat.aff.qw_WARP.nii .
if ( ! -f MPRAGE.GA02_unif_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb03.GA02.r01.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GA02.r01.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 98287 voxels
 + 10887 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.077  pitch=-0.263  yaw=-0.079  dS=-0.468  dL=-0.046  dP=-0.110
++ Mean: roll=+0.287  pitch=+0.048  yaw=+0.041  dS=-0.202  dL=+0.220  dP=+0.024
++ Max : roll=+0.582  pitch=+0.304  yaw=+0.131  dS=+0.062  dL=+0.509  dP=+0.153
++ Max displacements (mm) for each sub-brick:
 0.56(0.00) 0.57(0.03) 0.57(0.10) 0.52(0.08) 0.45(0.08) 0.46(0.03) 0.45(0.06) 0.49(0.05) 0.50(0.03) 0.55(0.06) 0.49(0.14) 0.51(0.05) 0.49(0.03) 0.46(0.07) 0.46(0.03) 0.47(0.06) 0.43(0.07) 0.41(0.06) 0.42(0.05) 0.36(0.07) 0.34(0.07) 0.34(0.05) 0.29(0.06) 0.32(0.11) 0.31(0.05) 0.30(0.12) 0.25(0.19) 0.18(0.08) 0.19(0.11) 0.18(0.07) 0.16(0.02) 0.15(0.04) 0.14(0.06) 0.14(0.03) 0.13(0.02) 0.14(0.04) 0.15(0.10) 0.13(0.04) 0.11(0.08) 0.10(0.07) 0.11(0.09) 0.14(0.06) 0.12(0.03) 0.12(0.02) 0.11(0.04) 0.09(0.10) 0.11(0.04) 0.10(0.08) 0.12(0.09) 0.10(0.04) 0.05(0.08) 0.10(0.08) 0.10(0.08) 0.09(0.05) 0.10(0.04) 0.10(0.03) 0.11(0.08) 0.13(0.03) 0.10(0.06) 0.13(0.06) 0.10(0.04) 0.14(0.13) 0.11(0.08) 0.15(0.04) 0.14(0.05) 0.12(0.06) 0.10(0.03) 0.11(0.07) 0.19(0.09) 0.14(0.08) 0.15(0.06) 0.08(0.10) 0.12(0.12) 0.12(0.03) 0.11(0.08) 0.13(0.08) 0.09(0.08) 0.13(0.09) 0.12(0.03) 0.07(0.11) 0.06(0.04) 0.04(0.03) 0.07(0.04) 0.04(0.05) 0.12(0.12) 0.06(0.09) 0.08(0.03) 0.07(0.08) 0.06(0.06) 0.12(0.08) 0.08(0.05) 0.08(0.04) 0.05(0.07) 0.13(0.09) 0.12(0.04) 0.08(0.06) 0.06(0.05) 0.06(0.03) 0.05(0.03) 0.07(0.09) 0.11(0.04) 0.10(0.03) 0.10(0.01) 0.03(0.09) 0.00(0.03) 0.04(0.04) 0.10(0.10) 0.07(0.04) 0.06(0.04) 0.06(0.06) 0.04(0.03) 0.08(0.06) 0.04(0.04) 0.11(0.08) 0.13(0.02) 0.10(0.09) 0.05(0.07) 0.04(0.02) 0.06(0.02) 0.06(0.05) 0.15(0.10) 0.05(0.11) 0.07(0.02) 0.06(0.04) 0.08(0.04) 0.08(0.02) 0.13(0.06) 0.14(0.02) 0.05(0.15) 0.03(0.03) 0.04(0.03) 0.05(0.03) 0.11(0.06) 0.16(0.08) 0.08(0.09) 0.05(0.05) 0.08(0.05) 0.06(0.05) 0.06(0.03) 0.12(0.08) 0.14(0.06) 0.10(0.08) 0.07(0.03) 0.07(0.05) 0.09(0.09) 0.12(0.07) 0.10(0.04) 0.11(0.02) 0.07(0.08) 0.12(0.08) 0.10(0.07) 0.10(0.04) 0.10(0.04) 0.09(0.06) 0.08(0.03) 0.08(0.02) 0.05(0.04) 0.03(0.05) 0.05(0.03) 0.06(0.07) 0.06(0.03) 0.09(0.05) 0.09(0.06) 0.07(0.05) 0.08(0.03) 0.08(0.03) 0.10(0.05) 0.08(0.05) 0.07(0.05) 0.05(0.04) 0.06(0.05) 0.07(0.03) 0.05(0.03) 0.07(0.05) 0.08(0.03) 0.06(0.06) 0.06(0.04) 0.06(0.01) 0.05(0.03) 0.06(0.03) 0.07(0.06) 0.10(0.10) 0.09(0.03) 0.09(0.03) 0.08(0.04) 0.10(0.06) 0.10(0.02) 0.08(0.03) 0.05(0.05) 0.11(0.06) 0.07(0.09) 0.07(0.04) 0.08(0.01) 0.08(0.07) 0.08(0.05) 0.10(0.04) 0.09(0.04) 0.08(0.01) 0.13(0.07) 0.14(0.07) 0.10(0.05) 0.08(0.05) 0.09(0.05) 0.11(0.02) 0.10(0.02) 0.14(0.08) 0.20(0.10) 0.14(0.09) 0.11(0.04) 0.10(0.05) 0.10(0.03) 0.11(0.08) 0.10(0.04) 0.20(0.14) 0.20(0.04) 0.18(0.06) 0.13(0.06) 0.16(0.05) 0.15(0.05) 0.12(0.04) 0.11(0.03) 0.08(0.04) 0.11(0.03) 0.10(0.05) 0.14(0.05) 0.12(0.05) 0.15(0.04) 0.15(0.03) 0.18(0.08) 0.23(0.07) 0.19(0.06) 0.24(0.06) 0.21(0.04) 0.20(0.03) 0.23(0.05) 0.26(0.05) 0.28(0.05) 0.25(0.11) 0.22(0.06) 0.21(0.05) 0.24(0.09) 0.23(0.02) 0.24(0.03) 0.25(0.07) 0.26(0.11) 0.26(0.09) 0.27(0.03) 0.29(0.07) 0.28(0.05) 0.27(0.02) 0.28(0.09) 0.22(0.07) 0.21(0.07) 0.21(0.01) 0.23(0.05) 0.24(0.04) 0.23(0.03) 0.27(0.05) 0.27(0.02) 0.31(0.13) 0.29(0.08) 0.29(0.18) 0.30(0.04) 0.30(0.04) 0.30(0.04) 0.28(0.04) 0.32(0.06) 0.31(0.17) 0.29(0.04) 0.28(0.06) 0.28(0.08) 0.28(0.02) 0.27(0.01) 0.29(0.04) 0.30(0.04) 0.31(0.06) 0.34(0.05) 0.34(0.04) 0.37(0.10) 0.35(0.10) 0.31(0.08) 0.31(0.07) 0.37(0.15) 0.40(0.04) 0.39(0.05) 0.46(0.12) 0.50(0.06) 0.54(0.10) 0.55(0.03) 0.53(0.04) 0.52(0.08) 0.53(0.04) 0.54(0.05) 0.57(0.08) 0.54(0.05) 0.55(0.04) 0.52(0.06) 0.59(0.08) 0.60(0.04) 0.58(0.03) 0.61(0.04) 0.60(0.02) 0.58(0.08) 0.56(0.07) 0.56(0.06) 0.57(0.03) 0.57(0.04) 0.58(0.04) 0.57(0.03) 0.55(0.04) 0.52(0.14) 0.51(0.02) 0.52(0.07) 0.51(0.04) 0.52(0.03) 0.51(0.04) 0.50(0.02) 0.52(0.02) 0.54(0.03) 0.57(0.04) 0.54(0.06) 0.58(0.05) 0.55(0.03) 0.55(0.04) 0.53(0.03) 0.53(0.03) 0.56(0.09) 0.56(0.03) 0.54(0.13) 0.50(0.09) 0.49(0.06) 0.51(0.03) 0.51(0.04) 0.51(0.03) 0.51(0.03) 0.53(0.05) 0.55(0.05) 0.52(0.06) 0.56(0.07) 0.55(0.06) 0.55(0.05) 0.55(0.03) 0.55(0.04) 0.55(0.05) 0.56(0.05) 0.60(0.07) 0.59(0.05) 0.60(0.05) 0.57(0.06) 0.57(0.13) 0.58(0.03) 0.59(0.06) 0.59(0.05) 0.58(0.03) 0.60(0.05) 0.58(0.04) 0.60(0.03) 0.57(0.07) 0.58(0.08) 0.59(0.04) 0.61(0.06) 0.60(0.07) 0.58(0.03) 0.58(0.07) 0.58(0.05) 0.57(0.02) 0.57(0.04) 0.56(0.06) 0.51(0.08) 0.50(0.07) 0.53(0.07) 0.52(0.03) 0.50(0.04) 0.48(0.07) 0.44(0.06) 0.46(0.08) 0.49(0.05) 0.53(0.06) 0.57(0.05) 0.57(0.01) 0.60(0.03) 0.62(0.04) 0.61(0.05) 0.59(0.04) 0.59(0.04) 0.59(0.04) 0.58(0.06) 0.62(0.05) 0.63(0.03) 0.64(0.05) 0.65(0.03) 0.68(0.05) 0.68(0.12) 0.65(0.06) 0.63(0.10) 0.63(0.06) 0.65(0.05) 0.62(0.05) 0.63(0.05) 0.66(0.07) 0.64(0.07) 0.63(0.04) 0.64(0.02) 0.66(0.06) 0.66(0.02) 0.66(0.03) 0.66(0.02) 0.65(0.03) 0.70(0.11) 0.63(0.10) 0.61(0.04) 0.64(0.06) 0.61(0.09) 0.62(0.05) 0.63(0.04) 0.65(0.03) 0.63(0.03) 0.64(0.04) 0.60(0.05) 0.63(0.07) 0.63(0.03) 0.65(0.05) 0.67(0.07) 0.68(0.06) 0.67(0.06) 0.66(0.05) 0.66(0.02) 0.66(0.03) 0.69(0.05) 0.70(0.06) 0.71(0.06) 0.68(0.06) 0.67(0.07) 0.70(0.05) 0.67(0.06) 0.68(0.02) 0.67(0.05) 0.68(0.03) 0.68(0.07) 0.69(0.11) 0.69(0.03) 0.70(0.04) 0.70(0.02) 0.69(0.04) 0.67(0.05) 0.67(0.04) 0.69(0.03) 0.68(0.05) 0.71(0.07) 0.71(0.07) 0.69(0.03) 0.70(0.04) 0.76(0.13) 0.78(0.07) 0.76(0.07) 0.77(0.04) 0.77(0.09) 0.78(0.03) 0.76(0.06) 0.76(0.02) 0.73(0.06) 0.73(0.04) 0.73(0.03) 0.73(0.06) 0.77(0.05) 0.77(0.02) 0.80(0.04) 0.80(0.05) 0.83(0.12) 0.78(0.08) 0.80(0.03) 0.82(0.07) 0.82(0.05) 0.80(0.05) 0.81(0.08) 0.81(0.05) 0.82(0.03) 0.81(0.03) 0.83(0.06) 0.81(0.04) 0.81(0.05) 0.84(0.04) 0.84(0.02) 0.87(0.09) 0.84(0.08) 0.82(0.10) 0.83(0.04) 0.86(0.09) 0.88(0.03) 0.86(0.03) 0.85(0.07) 0.84(0.10) 0.83(0.04) 0.83(0.05) 0.83(0.04) 0.86(0.04) 0.85(0.04) 0.85(0.04) 0.83(0.11) 0.79(0.06) 0.78(0.05) 0.78(0.07) 0.79(0.03) 0.80(0.07) 0.80(0.06) 0.79(0.04) 0.83(0.05) 0.83(0.10) 0.84(0.06) 0.85(0.06) 0.87(0.08) 0.89(0.03) 0.88(0.02) 0.91(0.06) 0.89(0.10) 0.88(0.09) 0.87(0.02) 0.87(0.08) 0.89(0.04) 0.90(0.06) 0.90(0.10) 0.87(0.07) 0.90(0.08) 0.90(0.03) 0.92(0.07) 0.92(0.04) 0.91(0.09) 0.92(0.06) 0.90(0.07) 0.90(0.03) 0.89(0.04) 0.90(0.09) 0.90(0.03) 0.90(0.05) 0.90(0.04) 0.88(0.07) 0.88(0.07) 0.87(0.05) 0.91(0.07) 0.92(0.04) 0.95(0.05) 0.93(0.11) 0.90(0.07) 0.91(0.03) 0.91(0.08) 0.91(0.03) 0.90(0.03) 0.93(0.05) 0.92(0.03) 0.96(0.07) 0.93(0.09) 0.94(0.11) 0.94(0.04) 0.95(0.04) 0.94(0.02) 0.92(0.03) 0.93(0.04) 0.92(0.04) 0.92(0.04) 0.91(0.07) 0.93(0.05) 0.90(0.05) 0.94(0.06) 0.91(0.07) 0.90(0.05) 0.89(0.06) 0.90(0.05) 0.90(0.03) 0.90(0.03) 0.93(0.05) 0.91(0.05) 0.91(0.05) 0.89(0.07) 0.93(0.07) 0.91(0.05) 0.93(0.04) 0.94(0.05) 0.90(0.08) 0.88(0.09) 0.89(0.05) 0.90(0.03) 0.89(0.03) 0.92(0.05) 0.91(0.05) 0.91(0.02) 0.91(0.02) 0.92(0.03) 0.93(0.04) 0.94(0.03) 0.97(0.05) 0.92(0.08) 0.94(0.04) 0.92(0.03) 0.95(0.07) 0.94(0.06) 0.96(0.03) 0.95(0.06) 0.95(0.06) 0.93(0.06) 0.93(0.06) 0.96(0.05) 0.99(0.09) 1.03(0.11) 0.96(0.12) 0.92(0.07) 0.92(0.04) 0.96(0.09) 0.97(0.04) 0.98(0.02) 0.99(0.05) 0.97(0.03) 0.98(0.04) 0.94(0.11) 0.96(0.10) 0.98(0.03) 1.00(0.05) 1.02(0.03) 1.02(0.03) 1.03(0.11) 1.00(0.05) 1.03(0.07) 1.04(0.02) 1.05(0.05) 1.04(0.03) 1.04(0.06) 1.02(0.07) 0.99(0.09) 1.00(0.04) 1.00(0.05) 1.03(0.06) 1.02(0.05) 1.04(0.06) 1.01(0.06) 1.02(0.06) 1.02(0.06) 1.00(0.06) 1.02(0.04) 1.01(0.05) 1.04(0.05) 1.01(0.05) 1.02(0.05) 0.99(0.09) 1.00(0.10) 1.02(0.04) 1.01(0.04) 1.03(0.04) 1.04(0.02) 1.04(0.08) 1.01(0.07) 1.04(0.08) 1.03(0.03) 1.04(0.08) 1.04(0.02) 1.03(0.04) 1.04(0.06) 1.00(0.06) 1.01(0.04) 1.00(0.02) 1.03(0.06) 1.02(0.05) 1.03(0.06) 1.03(0.06) 1.02(0.05) 1.05(0.07) 1.05(0.07) 1.06(0.02) 1.03(0.05) 1.04(0.03) 1.02(0.08) 1.03(0.05) 1.04(0.07) 1.04(0.07) 1.06(0.04) 1.05(0.04) 1.06(0.03) 1.03(0.11) 1.03(0.08) 1.02(0.03) 1.01(0.07) 1.02(0.05) 1.02(0.07) 1.03(0.08) 1.03(0.03) 1.08(0.21) 1.07(0.04) 1.07(0.03) 1.07(0.03) 1.05(0.02) 1.05(0.06) 1.03(0.10) 1.03(0.09) 1.04(0.03) 1.05(0.06) 1.06(0.03) 1.06(0.04) 1.07(0.05) 1.03(0.09) 1.02(0.07) 0.98(0.05) 1.01(0.07) 1.04(0.04) 1.02(0.04) 1.04(0.04) 1.03(0.03) 1.03(0.06) 1.01(0.08) 1.01(0.10) 1.00(0.02) 0.97(0.08) 0.97(0.06) 0.95(0.05) 0.96(0.10) 0.97(0.05) 1.01(0.09) 1.02(0.03) 1.03(0.07) 1.04(0.03) 1.03(0.05) 1.04(0.06) 1.03(0.05) 1.05(0.04) 1.05(0.06) 1.07(0.04) 1.05(0.05) 1.07(0.05) 1.04(0.09) 1.04(0.03) 1.00(0.11) 1.01(0.13) 1.00(0.04) 1.02(0.05) 1.03(0.03) 1.03(0.03) 1.05(0.05) 1.04(0.05) 1.04(0.05) 1.04(0.06) 1.06(0.09) 1.05(0.05) 1.06(0.03) 1.06(0.03) 1.02(0.07) 0.99(0.05) 0.99(0.08) 1.01(0.04) 1.05(0.05) 1.09(0.06) 1.06(0.06) 1.09(0.05) 1.06(0.07) 1.07(0.02) 1.06(0.05) 1.09(0.08) 1.10(0.04) 1.09(0.03) 1.09(0.04) 1.05(0.05) 1.05(0.05) 1.01(0.09) 1.04(0.09) 1.02(0.03) 1.02(0.07) 1.03(0.02) 1.01(0.03) 1.03(0.04) 1.01(0.05) 1.00(0.05) 1.01(0.07) 1.04(0.07) 1.02(0.03) 1.04(0.06) 1.02(0.04) 0.99(0.05) 0.98(0.05) 0.98(0.07) 1.01(0.05) 1.00(0.04) 1.04(0.09) 1.03(0.04) 1.03(0.05) 1.02(0.08) 1.01(0.06) 1.02(0.03) 1.03(0.08) 1.05(0.05) 1.03(0.05) 1.02(0.05) 1.01(0.04) 1.01(0.09) 0.99(0.10) 0.98(0.06) 1.00(0.05) 1.00(0.06) 1.02(0.06) 0.99(0.04) 1.01(0.03) 0.99(0.08) 0.91(0.09) 0.91(0.05) 0.97(0.10) 1.02(0.07) 1.02(0.02) 1.02(0.05) 1.03(0.04) 1.03(0.04) 1.03(0.07) 1.01(0.06) 1.05(0.05) 1.03(0.03) 1.06(0.09) 1.07(0.04) 1.06(0.07) 1.07(0.11) 1.03(0.04) 1.08(0.10) 1.09(0.03) 1.11(0.03) 1.13(0.04) 1.13(0.02) 1.14(0.04) 1.13(0.03) 1.13(0.03) 1.09(0.06) 1.09(0.04) 1.10(0.05) 1.10(0.07) 1.10(0.08) 1.08(0.04) 1.10(0.06) 1.11(0.06) 1.11(0.03) 1.09(0.03) 1.10(0.02) 1.11(0.04) 1.11(0.03) 1.10(0.05) 1.07(0.07) 1.05(0.05) 1.07(0.09) 1.10(0.06) 1.08(0.06) 1.07(0.03) 1.07(0.07) 1.07(0.07) 1.11(0.07) 1.13(0.07) 1.16(0.04) 1.16(0.06) 1.18(0.04) 1.16(0.03) 1.17(0.03) 1.14(0.09) 1.17(0.08) 1.17(0.02) 1.16(0.03) 1.18(0.02) 1.18(0.03) 1.20(0.10) 1.17(0.06) 1.18(0.05) 1.19(0.03) 1.21(0.06) 1.22(0.01) 1.22(0.03) 1.21(0.05) 1.17(0.07) 1.17(0.03) 1.18(0.03) 1.21(0.08) 1.21(0.03) 1.22(0.03) 1.22(0.03) 1.21(0.06) 1.20(0.06) 1.19(0.03) 1.23(0.07) 1.24(0.06) 1.25(0.01) 1.25(0.03) 1.25(0.05) 1.23(0.07) 1.25(0.05) 1.24(0.03) 1.29(0.10) 1.29(0.03) 1.29(0.04) 1.27(0.03) 1.25(0.07) 1.25(0.05) 1.23(0.08) 1.23(0.07) 1.20(0.05) 1.22(0.05) 1.21(0.10) 1.20(0.03) 1.22(0.07) 1.21(0.07) 1.26(0.07) 1.25(0.06) 1.24(0.04) 1.21(0.06) 1.23(0.03) 1.21(0.07) 1.21(0.11) 1.22(0.03) 1.22(0.06) 1.23(0.03) 1.22(0.02) 1.25(0.08) 1.23(0.06) 1.25(0.05) 1.24(0.02) 1.27(0.07) 1.25(0.03) 1.24(0.05) 1.23(0.09) 1.21(0.04) 1.23(0.04) 1.21(0.08) 1.22(0.05) 1.19(0.03) 1.21(0.03) 1.19(0.10) 1.22(0.04) 1.24(0.04) 1.26(0.09) 1.29(0.04) 1.28(0.03) 1.28(0.04) 1.28(0.02) 1.28(0.07) 1.27(0.06) 1.30(0.07) 1.29(0.01) 1.31(0.05) 1.30(0.02) 1.28(0.07) 1.29(0.06) 1.30(0.05) 1.32(0.04) 1.32(0.04) 1.35(0.05) 1.32(0.09) 1.34(0.08) 1.33(0.02) 1.31(0.04) 1.32(0.03) 1.30(0.03) 1.30(0.08) 1.29(0.06) 1.31(0.05) 1.28(0.05) 1.31(0.06) 1.29(0.04) 1.28(0.05) 1.26(0.05) 1.17(0.12) 1.15(0.05) 1.17(0.06) 1.19(0.05) 1.19(0.03) 1.19(0.03) 1.17(0.09) 1.19(0.04) 1.17(0.06) 1.19(0.09) 1.18(0.04) 1.20(0.04) 1.19(0.03) 1.22(0.05) 1.21(0.08) 1.17(0.08) 1.20(0.05) 1.21(0.02) 1.26(0.08) 1.25(0.04) 1.27(0.04) 1.27(0.05) 1.26(0.06) 1.27(0.05) 1.29(0.10) 1.31(0.05) 1.30(0.04) 1.28(0.03) 1.25(0.14) 1.28(0.06) 1.29(0.03) 1.30(0.05) 1.29(0.04) 1.30(0.06) 1.25(0.15) 1.22(0.08) 1.23(0.11) 1.24(0.03) 1.25(0.04) 1.26(0.04) 1.26(0.06) 1.30(0.09) 1.30(0.03) 1.29(0.06) 1.29(0.04) 1.29(0.02) 1.30(0.09) 1.29(0.05) 1.33(0.11) 1.32(0.01) 1.35(0.08) 1.36(0.03) 1.37(0.07) 1.34(0.04) 1.31(0.08) 1.33(0.07) 1.35(0.04) 1.42(0.09) 1.36(0.10) 1.35(0.06) 1.32(0.06) 1.30(0.08) 1.31(0.05) 1.30(0.06) 1.31(0.06) 1.30(0.03) 1.31(0.07) 1.28(0.06) 1.27(0.03) 1.25(0.05) 1.22(0.07) 1.24(0.06) 1.26(0.06) 1.28(0.04) 1.29(0.03) 1.32(0.06) 1.33(0.02) 1.33(0.08) 1.31(0.04) 1.32(0.05) 1.32(0.02) 1.35(0.07) 1.36(0.02) 1.36(0.05) 1.37(0.04) 1.36(0.06) 1.32(0.09) 1.33(0.05) 1.37(0.08) 1.37(0.07) 1.39(0.06) 1.40(0.05) 1.42(0.04) 1.41(0.07) 1.40(0.06) 1.36(0.09) 1.37(0.07) 1.37(0.05) 1.37(0.07) 1.36(0.04) 1.37(0.03) 1.37(0.07) 1.35(0.07) 1.37(0.03) 1.36(0.05) 1.38(0.05) 1.33(0.07) 1.32(0.04) 1.31(0.07) 1.30(0.04) 1.30(0.04) 1.30(0.08) 1.32(0.05) 1.23(0.11) 1.21(0.03) 1.14(0.10) 0.99(0.16) 0.92(0.11) 0.89(0.06) 0.92(0.06) 0.95(0.13) 0.96(0.06) 0.92(0.07) 0.89(0.07) 0.89(0.06) 0.89(0.02) 0.87(0.05) 0.89(0.07) 0.91(0.05) 0.91(0.05) 0.97(0.10) 0.95(0.04) 0.94(0.09) 0.88(0.07) 0.89(0.06) 0.87(0.03) 0.89(0.08) 0.87(0.05) 0.90(0.08) 0.88(0.04)
++ Max displacement in automask = 1.42 (mm) at sub-brick 1048
++ Max delta displ  in automask = 0.21 (mm) at sub-brick 683
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb03.GA02.r01.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GA02_unif_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master MPRAGE.GA02_unif_ns+tlrc -dxyz 2.5 -source pb02.GA02.r01.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA02_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GA02.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 708.5 sec
3dNwarpApply -master MPRAGE.GA02_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA02_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb03.GA02.r02.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GA02.r02.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 98138 voxels
 + 10829 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.215  pitch=-0.295  yaw=-0.195  dS=+0.047  dL=-0.114  dP=-0.171
++ Mean: roll=+0.442  pitch=+0.005  yaw=+0.054  dS=+0.340  dL=+0.168  dP=+0.036
++ Max : roll=+0.688  pitch=+0.242  yaw=+0.250  dS=+0.935  dL=+0.363  dP=+0.174
++ Max displacements (mm) for each sub-brick:
 0.64(0.00) 0.73(0.11) 0.73(0.02) 0.70(0.05) 0.67(0.07) 0.69(0.08) 0.70(0.11) 0.69(0.07) 0.72(0.08) 0.71(0.05) 0.71(0.06) 0.72(0.08) 0.74(0.04) 0.68(0.07) 0.66(0.06) 0.64(0.02) 0.67(0.05) 0.72(0.07) 0.73(0.06) 0.74(0.05) 0.70(0.05) 0.71(0.08) 0.72(0.06) 0.73(0.06) 0.75(0.08) 0.72(0.05) 0.68(0.04) 0.65(0.05) 0.65(0.08) 0.69(0.08) 0.74(0.07) 0.75(0.08) 0.75(0.05) 0.79(0.07) 0.79(0.04) 0.80(0.04) 0.83(0.08) 0.86(0.05) 0.79(0.09) 0.76(0.06) 0.75(0.04) 0.72(0.06) 0.71(0.05) 0.69(0.05) 0.69(0.02) 0.71(0.10) 0.67(0.10) 0.68(0.02) 0.66(0.08) 0.66(0.03) 0.65(0.04) 0.67(0.05) 0.66(0.05) 0.66(0.04) 0.62(0.05) 0.63(0.10) 0.61(0.02) 0.63(0.04) 0.65(0.04) 0.67(0.06) 0.71(0.07) 0.68(0.07) 0.68(0.06) 0.67(0.07) 0.66(0.03) 0.70(0.08) 0.72(0.05) 0.72(0.06) 0.68(0.07) 0.68(0.05) 0.68(0.02) 0.69(0.06) 0.72(0.09) 0.72(0.05) 0.73(0.07) 0.71(0.08) 0.70(0.04) 0.68(0.04) 0.70(0.05) 0.70(0.03) 0.72(0.04) 0.73(0.08) 0.68(0.10) 0.69(0.04) 0.67(0.03) 0.66(0.03) 0.66(0.04) 0.68(0.09) 0.65(0.06) 0.64(0.05) 0.60(0.05) 0.61(0.05) 0.62(0.05) 0.65(0.04) 0.68(0.06) 0.70(0.06) 0.71(0.06) 0.68(0.07) 0.70(0.02) 0.68(0.04) 0.70(0.04) 0.73(0.08) 0.73(0.03) 0.73(0.05) 0.69(0.07) 0.69(0.03) 0.66(0.05) 0.67(0.05) 0.66(0.04) 0.64(0.04) 0.66(0.05) 0.65(0.09) 0.63(0.01) 0.61(0.05) 0.63(0.07) 0.63(0.07) 0.63(0.04) 0.62(0.02) 0.61(0.07) 0.60(0.05) 0.60(0.06) 0.59(0.06) 0.54(0.09) 0.54(0.05) 0.53(0.03) 0.56(0.05) 0.55(0.05) 0.57(0.05) 0.60(0.07) 0.62(0.05) 0.62(0.07) 0.60(0.06) 0.62(0.05) 0.63(0.05) 0.62(0.14) 0.65(0.06) 0.59(0.12) 0.56(0.07) 0.56(0.03) 0.57(0.06) 0.60(0.08) 0.56(0.04) 0.52(0.05) 0.52(0.05) 0.57(0.06) 0.59(0.09) 0.60(0.04) 0.57(0.03) 0.59(0.05) 0.59(0.06) 0.59(0.05) 0.61(0.08) 0.61(0.02) 0.68(0.15) 0.69(0.08) 0.68(0.13) 0.70(0.03) 0.69(0.04) 0.71(0.05) 0.71(0.03) 0.74(0.03) 0.77(0.10) 0.74(0.09) 0.73(0.02) 0.73(0.06) 0.74(0.03) 0.76(0.04) 0.80(0.08) 0.80(0.06) 0.77(0.05) 0.76(0.03) 0.74(0.07) 0.73(0.03) 0.72(0.04) 0.74(0.07) 0.73(0.05) 0.72(0.05) 0.71(0.04) 0.70(0.06) 0.69(0.04) 0.70(0.07) 0.70(0.04) 0.67(0.07) 0.69(0.07) 0.69(0.06) 0.66(0.05) 0.69(0.08) 0.73(0.09) 0.73(0.04) 0.67(0.09) 0.69(0.04) 0.71(0.04) 0.73(0.05) 0.76(0.05) 0.76(0.09) 0.74(0.05) 0.71(0.06) 0.72(0.08) 0.72(0.05) 0.71(0.04) 0.69(0.04) 0.70(0.03) 0.72(0.04) 0.75(0.09) 0.71(0.07) 0.71(0.07) 0.68(0.07) 0.68(0.02) 0.68(0.05) 0.68(0.04) 0.72(0.10) 0.70(0.08) 0.69(0.03) 0.68(0.04) 0.70(0.04) 0.67(0.04) 0.71(0.08) 0.70(0.03) 0.67(0.11) 0.66(0.03) 0.65(0.05) 0.66(0.03) 0.66(0.02) 0.71(0.09) 0.68(0.06) 0.67(0.07) 0.69(0.04) 0.69(0.06) 0.64(0.10) 0.70(0.14) 0.69(0.04) 0.70(0.03) 0.67(0.07) 0.70(0.10) 0.66(0.06) 0.64(0.07) 0.67(0.07) 0.63(0.06) 0.59(0.08) 0.60(0.09) 0.61(0.07) 0.59(0.05) 0.58(0.07) 0.58(0.05) 0.58(0.05) 0.60(0.06) 0.63(0.04) 0.65(0.03) 0.64(0.05) 0.64(0.03) 0.63(0.06) 0.63(0.05) 0.63(0.05) 0.65(0.04) 0.66(0.03) 0.65(0.04) 0.66(0.03) 0.65(0.04) 0.68(0.05) 0.70(0.09) 0.70(0.06) 0.71(0.03) 0.68(0.09) 0.67(0.03) 0.66(0.03) 0.68(0.06) 0.69(0.08) 0.69(0.04) 0.65(0.03) 0.63(0.08) 0.64(0.03) 0.64(0.03) 0.67(0.07) 0.66(0.06) 0.67(0.03) 0.68(0.04) 0.68(0.08) 0.69(0.03) 0.71(0.05) 0.70(0.06) 0.66(0.07) 0.66(0.05) 0.69(0.03) 0.70(0.07) 0.70(0.03) 0.69(0.04) 0.70(0.07) 0.69(0.06) 0.76(0.08) 0.89(0.18) 0.80(0.15) 0.84(0.05) 0.86(0.02) 0.87(0.04) 0.88(0.03) 0.89(0.03) 0.86(0.05) 0.83(0.04) 0.83(0.04) 0.79(0.06) 0.73(0.11) 0.75(0.11) 0.77(0.03) 0.76(0.03) 0.77(0.11) 0.75(0.05) 0.77(0.06) 0.79(0.04) 0.76(0.05) 0.72(0.05) 0.72(0.06) 0.78(0.11) 0.90(0.19) 0.93(0.09) 0.85(0.11) 0.87(0.11) 0.82(0.05) 0.80(0.06) 0.80(0.06) 0.77(0.07) 0.79(0.04) 0.85(0.06) 0.88(0.07) 0.90(0.06) 0.93(0.06) 0.92(0.03) 0.90(0.04) 0.93(0.04) 0.88(0.09) 0.91(0.05) 0.93(0.03) 0.93(0.05) 0.97(0.05) 0.99(0.05) 1.01(0.03) 0.99(0.05) 0.94(0.07) 0.96(0.04) 0.98(0.04) 0.96(0.06) 0.95(0.09) 0.92(0.04) 0.92(0.03) 0.94(0.05) 0.95(0.04) 0.95(0.10) 0.96(0.05) 1.00(0.05) 0.98(0.03) 0.99(0.06) 0.97(0.05) 0.98(0.03) 1.00(0.02) 1.00(0.06) 1.01(0.03) 1.02(0.03) 1.01(0.03) 1.01(0.06) 1.05(0.06) 1.08(0.04) 1.09(0.04) 1.13(0.08) 1.18(0.06) 1.18(0.04) 1.13(0.06) 1.12(0.03) 1.11(0.03) 1.12(0.06) 1.11(0.06) 1.11(0.03) 1.12(0.03) 1.12(0.05) 1.13(0.03) 1.14(0.05) 1.16(0.02) 1.17(0.04) 1.16(0.05) 1.14(0.09) 1.14(0.03) 1.13(0.04) 1.13(0.04) 1.15(0.08) 1.15(0.04) 1.16(0.05) 1.13(0.05) 1.13(0.04) 1.14(0.03) 1.13(0.03) 1.12(0.04) 1.13(0.07) 1.16(0.08) 1.14(0.07) 1.13(0.03) 1.14(0.05) 1.13(0.03) 1.13(0.03) 1.14(0.07) 1.13(0.07) 1.12(0.02) 1.10(0.02) 1.11(0.08) 1.10(0.02) 1.09(0.06) 1.09(0.04) 1.12(0.06) 1.13(0.06) 1.11(0.09) 1.11(0.05) 1.12(0.02) 1.13(0.04) 1.18(0.13) 1.22(0.05) 1.22(0.04) 1.19(0.09) 1.21(0.04) 1.18(0.06) 1.19(0.05) 1.19(0.04) 1.22(0.05) 1.26(0.09) 1.24(0.08) 1.23(0.05) 1.24(0.06) 1.24(0.06) 1.25(0.06) 1.26(0.03) 1.15(0.16) 1.12(0.24) 1.14(0.08) 1.15(0.15) 1.17(0.07) 1.17(0.07) 1.15(0.05) 1.01(0.16) 0.91(0.10) 0.95(0.05) 0.94(0.07) 0.92(0.05) 0.94(0.05) 0.93(0.08) 0.94(0.03) 0.95(0.03) 0.98(0.08) 0.99(0.05) 1.00(0.03) 1.00(0.01) 0.99(0.06) 0.99(0.03) 0.99(0.03) 1.00(0.06) 1.00(0.02) 1.07(0.09) 1.11(0.06) 1.16(0.10) 1.16(0.02) 1.15(0.04) 1.17(0.05) 1.17(0.04) 1.18(0.05) 1.17(0.06) 1.18(0.06) 1.17(0.03) 1.17(0.04) 1.15(0.03) 1.16(0.04) 1.17(0.07) 1.17(0.07) 1.17(0.05) 1.18(0.05) 1.19(0.03) 1.21(0.08) 1.21(0.04) 1.21(0.02) 1.18(0.07) 1.19(0.04) 1.17(0.04) 1.17(0.05) 1.17(0.01) 1.19(0.07) 1.20(0.05) 1.19(0.06) 1.19(0.02) 1.18(0.05) 1.18(0.01) 1.19(0.04) 1.21(0.04) 1.23(0.06) 1.25(0.05) 1.21(0.09) 1.22(0.03) 1.21(0.02) 1.21(0.04) 1.24(0.08) 1.27(0.04) 1.23(0.05) 1.21(0.06) 1.21(0.05) 1.18(0.04) 1.19(0.03) 1.15(0.11) 1.16(0.05) 1.16(0.04) 1.15(0.08) 1.12(0.06) 1.12(0.02) 1.14(0.07) 1.21(0.10) 1.23(0.05) 1.22(0.02) 1.24(0.09) 1.25(0.03) 1.22(0.05) 1.22(0.03) 1.22(0.02) 1.20(0.08) 1.20(0.04) 1.24(0.09) 1.27(0.04) 1.25(0.06) 1.24(0.04) 1.23(0.01) 1.24(0.06) 1.29(0.07) 1.28(0.04) 1.25(0.03) 1.27(0.06) 1.27(0.03) 1.22(0.08) 1.25(0.07) 1.26(0.06) 1.23(0.05) 1.22(0.08) 1.21(0.06) 1.22(0.05) 1.22(0.04) 1.25(0.06) 1.25(0.04) 1.24(0.06) 1.26(0.06) 1.27(0.03) 1.26(0.03) 1.23(0.06) 1.25(0.08) 1.26(0.05) 1.23(0.04) 1.20(0.08) 1.20(0.02) 1.20(0.04) 1.20(0.03) 1.22(0.07) 1.26(0.06) 1.28(0.07) 1.27(0.05) 1.28(0.05) 1.28(0.04) 1.27(0.04) 1.28(0.04) 1.32(0.07) 1.36(0.09) 1.32(0.11) 1.31(0.05) 1.30(0.05) 1.29(0.05) 1.28(0.03) 1.28(0.08) 1.31(0.06) 1.29(0.07) 1.26(0.04) 1.27(0.06) 1.27(0.01) 1.24(0.05) 1.25(0.03) 1.25(0.06) 1.27(0.07) 1.27(0.05) 1.27(0.03) 1.27(0.08) 1.28(0.04) 1.24(0.03) 1.26(0.03) 1.25(0.09) 1.28(0.05) 1.30(0.05) 1.28(0.06) 1.27(0.04) 1.28(0.03) 1.29(0.06) 1.30(0.05) 1.33(0.03) 1.33(0.02) 1.31(0.09) 1.31(0.02) 1.25(0.11) 1.24(0.04) 1.29(0.09) 1.34(0.10) 1.31(0.07) 1.29(0.04) 1.27(0.03) 1.26(0.03) 1.28(0.03) 1.30(0.06) 1.31(0.04) 1.28(0.07) 1.27(0.05) 1.24(0.06) 1.24(0.05) 1.24(0.02) 1.28(0.07) 1.32(0.07) 1.29(0.07) 1.27(0.05) 1.25(0.03) 1.26(0.02) 1.27(0.05) 1.27(0.02) 1.29(0.05) 1.32(0.06) 1.29(0.07) 1.27(0.04) 1.25(0.04) 1.25(0.03) 1.28(0.07) 1.31(0.05) 1.32(0.04) 1.29(0.05) 1.27(0.04) 1.27(0.03) 1.24(0.05) 1.24(0.03) 1.25(0.08) 1.24(0.05) 1.22(0.04) 1.26(0.05) 1.25(0.06) 1.24(0.05) 1.25(0.06) 1.27(0.10) 1.26(0.04) 1.31(0.05) 1.27(0.08) 1.27(0.04) 1.27(0.04) 1.26(0.03) 1.27(0.03) 1.27(0.07) 1.27(0.09) 1.30(0.07) 1.27(0.06) 1.30(0.09) 1.28(0.09) 1.26(0.05) 1.32(0.07) 1.34(0.03) 1.33(0.04) 1.32(0.06) 1.32(0.04) 1.31(0.07) 1.30(0.04) 1.29(0.04) 1.31(0.05) 1.30(0.06) 1.29(0.06) 1.28(0.03) 1.28(0.07) 1.24(0.05) 1.24(0.01) 1.25(0.04) 1.29(0.11) 1.32(0.12) 1.35(0.03) 1.33(0.06) 1.31(0.03) 1.32(0.03) 1.37(0.09) 1.37(0.07) 1.36(0.04) 1.35(0.02) 1.35(0.08) 1.37(0.05) 1.35(0.06) 1.36(0.04) 1.38(0.04) 1.39(0.06) 1.35(0.11) 1.34(0.03) 1.34(0.02) 1.36(0.04) 1.33(0.13) 1.18(0.27) 1.00(0.32) 0.90(0.22) 0.83(0.12) 0.80(0.05) 0.81(0.06) 0.85(0.06) 0.82(0.04) 0.77(0.15) 0.83(0.09) 0.85(0.07) 0.86(0.08) 0.86(0.07) 0.89(0.06) 0.90(0.06) 0.92(0.07) 0.92(0.05) 0.94(0.03) 0.95(0.04) 0.96(0.03) 0.96(0.01) 0.97(0.05) 0.96(0.04) 0.98(0.06) 1.00(0.07) 0.99(0.09) 1.01(0.06) 0.96(0.12) 0.95(0.04) 0.94(0.05) 0.95(0.07) 0.94(0.04) 0.94(0.05) 0.94(0.03) 0.94(0.02) 0.94(0.05) 0.94(0.04) 0.95(0.04) 0.95(0.07) 0.96(0.05) 0.93(0.06) 0.92(0.03) 0.93(0.03) 0.94(0.04) 0.92(0.06) 0.92(0.02) 0.91(0.06) 0.91(0.04) 0.91(0.09) 0.92(0.03) 0.91(0.02) 0.93(0.07) 0.91(0.03) 0.95(0.08) 0.93(0.06) 0.95(0.02) 0.95(0.02) 1.09(0.34) 1.03(0.26) 0.93(0.19) 0.92(0.13) 0.96(0.17) 0.92(0.15) 0.96(0.06) 0.97(0.06) 0.99(0.02) 0.97(0.05) 0.92(0.07) 0.95(0.04) 1.00(0.06) 0.99(0.05) 0.96(0.04) 0.94(0.08) 0.91(0.17) 0.93(0.06) 0.95(0.04) 0.96(0.04) 0.96(0.03) 0.97(0.04) 0.96(0.06) 0.98(0.07) 0.92(0.11) 0.92(0.05) 0.95(0.05) 0.93(0.07) 0.94(0.02) 0.97(0.07) 0.99(0.06) 0.99(0.04) 1.04(0.07) 1.01(0.06) 1.01(0.03) 1.02(0.02) 1.00(0.07) 1.01(0.05) 1.02(0.03) 1.03(0.06) 1.02(0.02) 1.03(0.07) 1.02(0.03) 1.01(0.05) 1.01(0.04) 1.06(0.11) 1.07(0.05) 1.06(0.04) 1.06(0.06) 1.07(0.05) 1.10(0.04) 1.04(0.08) 1.07(0.06) 1.06(0.07) 1.07(0.04) 1.09(0.03) 1.10(0.06) 1.10(0.05) 1.08(0.03) 1.08(0.03) 1.05(0.06) 1.05(0.05) 1.03(0.04) 1.01(0.11) 1.01(0.05) 1.03(0.07) 0.97(0.13) 1.00(0.04) 1.01(0.06) 1.02(0.07) 0.99(0.05) 1.05(0.10) 1.06(0.05) 1.02(0.10) 1.03(0.02) 1.03(0.02) 1.03(0.04) 1.03(0.04) 1.00(0.06) 1.00(0.05) 1.01(0.04) 1.01(0.06) 1.03(0.03) 1.01(0.03) 1.02(0.04) 1.02(0.08) 1.06(0.08) 1.00(0.06) 1.02(0.06) 1.05(0.04) 1.00(0.08) 0.94(0.06) 0.92(0.05) 0.94(0.06) 0.92(0.06) 0.90(0.08) 0.91(0.03) 0.91(0.02) 0.94(0.05) 0.99(0.08) 0.99(0.07) 0.98(0.07) 0.96(0.05) 0.95(0.07) 1.02(0.08) 1.02(0.03) 1.01(0.04) 0.98(0.09) 0.97(0.03) 0.95(0.06) 0.95(0.04) 1.03(0.10) 1.05(0.06) 1.02(0.04) 1.00(0.05) 1.01(0.03) 0.99(0.03) 1.00(0.05) 1.02(0.07) 1.07(0.07) 1.11(0.09) 1.06(0.10) 1.01(0.06) 0.99(0.05) 1.00(0.02) 1.03(0.04) 1.07(0.06) 1.06(0.05) 1.00(0.10) 1.02(0.03) 1.04(0.03) 1.06(0.02) 1.07(0.04) 1.11(0.07) 1.12(0.03) 1.11(0.03) 1.10(0.04) 1.09(0.05) 1.13(0.05) 1.13(0.04) 1.14(0.07) 1.16(0.06) 1.10(0.07) 1.00(0.11) 1.02(0.02) 1.06(0.08) 1.06(0.06) 1.04(0.05) 1.02(0.10) 0.95(0.07) 0.96(0.04) 1.00(0.06) 1.04(0.07) 1.07(0.08) 1.10(0.06) 1.05(0.08) 1.03(0.02) 1.05(0.04) 1.05(0.03) 1.07(0.12) 1.12(0.06) 1.17(0.09) 1.19(0.03) 1.19(0.06) 1.22(0.07) 1.21(0.03) 1.23(0.05) 1.29(0.07) 1.33(0.07) 1.27(0.09) 1.21(0.08) 1.22(0.05) 1.21(0.06) 1.22(0.04) 1.23(0.08) 1.26(0.05) 1.26(0.05) 1.22(0.12) 1.19(0.04) 1.21(0.06) 1.21(0.05) 1.22(0.02) 1.23(0.06) 1.28(0.05) 1.26(0.04) 1.26(0.03) 1.25(0.06) 1.26(0.06) 1.27(0.04) 1.27(0.07) 1.30(0.04) 1.35(0.09) 1.32(0.05) 1.25(0.12) 1.24(0.05) 1.24(0.07) 1.27(0.04) 1.27(0.06) 1.28(0.02) 1.31(0.08) 1.29(0.08) 1.23(0.06) 1.26(0.06) 1.24(0.09) 1.24(0.02) 1.24(0.03) 1.27(0.06) 1.32(0.09) 1.33(0.03) 1.29(0.06) 1.29(0.02) 1.28(0.05) 1.30(0.04) 1.27(0.04) 1.33(0.10) 1.34(0.05) 1.35(0.04) 1.30(0.06) 1.31(0.03) 1.30(0.04) 1.28(0.01) 1.28(0.03) 1.32(0.08) 1.34(0.08) 1.31(0.06) 1.29(0.11) 1.28(0.04) 1.30(0.05) 1.31(0.06) 1.31(0.01) 1.34(0.03) 1.38(0.08) 1.35(0.06) 1.31(0.05) 1.28(0.05) 1.29(0.02) 1.30(0.04) 1.34(0.06) 1.35(0.05) 1.30(0.06) 1.31(0.06) 1.29(0.03) 1.30(0.05) 1.29(0.03) 1.28(0.08) 1.35(0.08) 1.30(0.07) 1.26(0.08) 1.26(0.04) 1.29(0.04) 1.29(0.04) 1.32(0.05) 1.35(0.06) 1.38(0.05) 1.33(0.12) 1.32(0.03) 1.31(0.05) 1.32(0.02) 1.35(0.05) 1.37(0.07) 1.31(0.08) 1.28(0.04) 1.31(0.03) 1.28(0.06) 1.29(0.07) 1.30(0.05) 1.34(0.09) 1.31(0.08) 1.30(0.04) 1.29(0.06) 1.27(0.07) 1.30(0.04) 1.38(0.12) 1.45(0.08) 1.44(0.05) 1.43(0.03) 1.40(0.09) 1.43(0.05) 1.42(0.03) 1.43(0.03) 1.46(0.06) 1.49(0.05) 1.47(0.04) 1.42(0.07) 1.42(0.02) 1.40(0.05) 1.41(0.05) 1.41(0.03) 1.48(0.07) 1.46(0.05) 1.43(0.04) 1.42(0.08) 1.38(0.05) 1.37(0.06) 1.35(0.04) 1.40(0.09) 1.42(0.03) 1.31(0.13) 1.25(0.07) 1.21(0.07) 1.23(0.03) 1.17(0.11) 1.14(0.07) 1.20(0.08) 1.21(0.05) 1.24(0.04) 1.30(0.07) 1.30(0.05) 1.28(0.04) 1.26(0.09) 1.24(0.05) 1.25(0.04) 1.25(0.04) 1.25(0.04) 1.26(0.07) 1.29(0.04) 1.27(0.03) 1.25(0.05) 1.19(0.09) 1.21(0.04) 1.23(0.03) 1.29(0.11) 1.30(0.04) 1.27(0.05) 1.22(0.06) 1.22(0.04) 1.20(0.05) 1.19(0.04) 1.21(0.02) 1.25(0.07) 1.18(0.07) 1.16(0.06) 1.14(0.06) 1.16(0.02) 1.14(0.07) 1.14(0.08) 1.07(0.08) 0.96(0.14) 1.02(0.13) 0.97(0.13) 1.22(0.25) 1.22(0.14) 1.22(0.09) 1.24(0.05) 1.29(0.06) 1.30(0.07) 1.31(0.05) 1.31(0.02) 1.32(0.04) 1.32(0.06)
++ Max displacement in automask = 1.49 (mm) at sub-brick 1027
++ Max delta displ  in automask = 0.34 (mm) at sub-brick 746
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb03.GA02.r02.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GA02_unif_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master MPRAGE.GA02_unif_ns+tlrc -dxyz 2.5 -source pb02.GA02.r02.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA02_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GA02.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 752.9 sec
3dNwarpApply -master MPRAGE.GA02_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA02_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb03.GA02.r03.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GA02.r03.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 97911 voxels
 + 10820 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.002  pitch=-0.336  yaw=-0.022  dS=+0.619  dL=-0.239  dP=-0.078
++ Mean: roll=+0.121  pitch=-0.124  yaw=+0.064  dS=+0.989  dL=-0.148  dP=-0.001
++ Max : roll=+0.304  pitch=+0.021  yaw=+0.213  dS=+1.098  dL=+0.049  dP=+0.138
++ Max displacements (mm) for each sub-brick:
 1.04(0.00) 1.01(0.04) 0.99(0.06) 1.03(0.04) 1.07(0.07) 1.10(0.07) 1.19(0.10) 1.14(0.08) 1.13(0.05) 1.13(0.06) 1.14(0.05) 1.18(0.08) 1.22(0.05) 1.25(0.05) 1.20(0.08) 1.18(0.04) 1.19(0.02) 1.19(0.06) 1.25(0.10) 1.28(0.04) 1.31(0.06) 1.26(0.10) 1.25(0.02) 1.24(0.05) 1.27(0.06) 1.29(0.07) 1.28(0.05) 1.31(0.06) 1.27(0.09) 1.24(0.05) 1.20(0.08) 1.15(0.17) 1.19(0.09) 1.16(0.11) 1.12(0.06) 1.07(0.09) 1.07(0.03) 1.09(0.05) 1.12(0.08) 1.18(0.11) 1.20(0.04) 1.16(0.07) 1.10(0.08) 1.10(0.07) 1.08(0.04) 1.09(0.02) 1.16(0.11) 1.13(0.08) 1.11(0.02) 1.13(0.03) 1.14(0.04) 1.12(0.04) 1.19(0.10) 1.21(0.04) 1.18(0.05) 1.19(0.03) 1.15(0.08) 1.17(0.02) 1.18(0.04) 1.19(0.03) 1.23(0.05) 1.25(0.05) 1.20(0.09) 1.19(0.03) 1.17(0.05) 1.19(0.05) 1.19(0.01) 1.23(0.08) 1.26(0.08) 1.20(0.10) 1.19(0.03) 1.19(0.03) 1.19(0.01) 1.20(0.04) 1.23(0.04) 1.24(0.03) 1.23(0.03) 1.21(0.04) 1.20(0.02) 1.18(0.03) 1.19(0.05) 1.20(0.03) 1.22(0.04) 1.23(0.08) 1.18(0.08) 1.19(0.04) 1.16(0.06) 1.17(0.05) 1.19(0.06) 1.18(0.04) 1.15(0.06) 1.15(0.02) 1.13(0.04) 1.16(0.07) 1.15(0.03) 1.20(0.08) 1.20(0.05) 1.15(0.10) 1.15(0.05) 1.13(0.05) 1.14(0.02) 1.15(0.03) 1.17(0.04) 1.18(0.05) 1.17(0.02) 1.13(0.05) 1.13(0.03) 1.14(0.04) 1.13(0.05) 1.18(0.09) 1.16(0.03) 1.14(0.05) 1.11(0.07) 1.12(0.03) 1.10(0.04) 1.12(0.05) 1.15(0.06) 1.14(0.06) 1.16(0.05) 1.13(0.08) 1.11(0.02) 1.12(0.03) 1.12(0.02) 1.15(0.05) 1.16(0.05) 1.13(0.09) 1.12(0.05) 1.13(0.03) 1.11(0.04) 1.17(0.10) 1.19(0.06) 1.19(0.03) 1.14(0.08) 1.13(0.03) 1.12(0.03) 1.15(0.05) 1.14(0.05) 1.18(0.07) 1.21(0.08) 1.17(0.10) 1.18(0.04) 1.16(0.07) 1.16(0.02) 1.15(0.04) 1.19(0.06) 1.21(0.04) 1.21(0.03) 1.19(0.08) 1.23(0.05) 1.22(0.04) 1.20(0.03) 1.26(0.09) 1.26(0.05) 1.29(0.05) 1.25(0.08) 1.23(0.03) 1.23(0.02) 1.24(0.04) 1.25(0.03) 1.29(0.08) 1.32(0.07) 1.27(0.07) 1.26(0.03) 1.21(0.08) 1.19(0.05) 1.19(0.05) 1.22(0.05) 1.26(0.06) 1.25(0.02) 1.20(0.10) 1.21(0.04) 1.17(0.05) 1.16(0.05) 1.18(0.04) 1.19(0.04) 1.21(0.07) 1.15(0.10) 1.17(0.03) 1.15(0.03) 1.16(0.05) 1.22(0.06) 1.29(0.09) 1.25(0.04) 1.17(0.11) 1.12(0.06) 1.12(0.04) 1.14(0.05) 1.17(0.07) 1.18(0.02) 1.12(0.09) 1.12(0.03) 1.14(0.04) 1.15(0.02) 1.15(0.02) 1.21(0.08) 1.24(0.06) 1.21(0.04) 1.17(0.07) 1.16(0.02) 1.17(0.03) 1.15(0.04) 1.18(0.08) 1.20(0.03) 1.27(0.11) 1.21(0.10) 1.21(0.05) 1.19(0.07) 1.20(0.02) 1.19(0.03) 1.22(0.06) 1.24(0.05) 1.26(0.05) 1.20(0.09) 1.19(0.03) 1.18(0.04) 1.16(0.04) 1.21(0.09) 1.20(0.04) 1.22(0.06) 1.16(0.09) 1.16(0.02) 1.14(0.05) 1.14(0.03) 1.18(0.05) 1.22(0.08) 1.22(0.06) 1.19(0.05) 1.17(0.02) 1.16(0.06) 1.17(0.07) 1.20(0.05) 1.19(0.04) 1.16(0.04) 1.15(0.02) 1.11(0.05) 1.10(0.03) 1.18(0.10) 1.18(0.05) 1.23(0.10) 1.21(0.08) 1.16(0.09) 1.13(0.10) 1.16(0.05) 1.18(0.06) 1.17(0.03) 1.22(0.08) 1.28(0.08) 1.22(0.09) 1.18(0.04) 1.17(0.06) 1.16(0.03) 1.17(0.03) 1.19(0.07) 1.17(0.03) 1.23(0.08) 1.25(0.04) 1.21(0.10) 1.22(0.03) 1.19(0.08) 1.20(0.02) 1.16(0.05) 1.21(0.09) 1.24(0.07) 1.25(0.06) 1.21(0.07) 1.17(0.08) 1.16(0.04) 1.15(0.04) 1.15(0.03) 1.17(0.03) 1.23(0.09) 1.24(0.05) 1.21(0.04) 1.20(0.04) 1.17(0.05) 1.20(0.04) 1.18(0.03) 1.23(0.06) 1.25(0.04) 1.33(0.09) 1.27(0.09) 1.26(0.03) 1.22(0.05) 1.20(0.03) 1.20(0.02) 1.23(0.05) 1.24(0.05) 1.26(0.05) 1.22(0.07) 1.18(0.09) 1.19(0.03) 1.18(0.03) 1.19(0.04) 1.22(0.04) 1.23(0.05) 1.19(0.06) 1.17(0.03) 1.15(0.04) 1.15(0.03) 1.14(0.04) 1.20(0.09) 1.23(0.05) 1.23(0.04) 1.19(0.06) 1.14(0.08) 1.14(0.05) 1.11(0.04) 1.15(0.06) 1.18(0.06) 1.19(0.02) 1.15(0.06) 1.14(0.02) 1.12(0.05) 1.10(0.06) 1.11(0.03) 1.16(0.09) 1.16(0.05) 1.12(0.06) 1.11(0.02) 1.08(0.07) 1.11(0.04) 1.13(0.04) 1.16(0.05) 1.19(0.04) 1.20(0.04) 1.17(0.07) 1.17(0.02) 1.15(0.05) 1.17(0.05) 1.14(0.04) 1.19(0.07) 1.24(0.09) 1.22(0.05) 1.21(0.02) 1.18(0.07) 1.18(0.01) 1.18(0.03) 1.21(0.04) 1.24(0.03) 1.28(0.08) 1.23(0.08) 1.19(0.04) 1.19(0.04) 1.18(0.04) 1.19(0.06) 1.23(0.04) 1.24(0.05) 1.18(0.10) 1.17(0.01) 1.14(0.06) 1.15(0.05) 1.14(0.03) 1.16(0.02) 1.22(0.07) 1.17(0.09) 1.16(0.03) 1.14(0.04) 1.13(0.02) 1.14(0.03) 1.19(0.07) 1.21(0.05) 1.21(0.02) 1.17(0.08) 1.15(0.04) 1.16(0.06) 1.15(0.04) 1.19(0.08) 1.19(0.03) 1.24(0.08) 1.20(0.06) 1.16(0.05) 1.12(0.06) 1.14(0.02) 1.14(0.04) 1.16(0.07) 1.22(0.08) 1.20(0.05) 1.16(0.05) 1.12(0.05) 1.09(0.03) 1.07(0.03) 1.10(0.04) 1.12(0.04) 1.14(0.06) 1.10(0.09) 1.10(0.04) 1.10(0.03) 1.10(0.02) 1.19(0.11) 1.20(0.06) 1.24(0.08) 1.18(0.12) 1.15(0.03) 1.13(0.04) 1.10(0.03) 1.15(0.04) 1.21(0.07) 1.21(0.04) 1.17(0.03) 1.17(0.02) 1.15(0.04) 1.15(0.04) 1.13(0.03) 1.14(0.04) 1.14(0.06) 1.16(0.05) 1.14(0.08) 1.10(0.05) 1.11(0.02) 1.11(0.03) 1.13(0.06) 1.19(0.07) 1.25(0.08) 1.21(0.06) 1.17(0.07) 1.14(0.05) 1.14(0.06) 1.14(0.02) 1.15(0.02) 1.20(0.09) 1.15(0.09) 1.13(0.03) 1.12(0.06) 1.10(0.02) 1.11(0.03) 1.14(0.08) 1.14(0.04) 1.12(0.03) 1.10(0.03) 1.06(0.08) 1.07(0.05) 1.08(0.03) 1.12(0.06) 1.14(0.05) 1.18(0.06) 1.13(0.10) 1.14(0.02) 1.09(0.06) 1.08(0.07) 1.08(0.03) 1.08(0.03) 1.15(0.11) 1.09(0.12) 1.10(0.02) 1.07(0.04) 1.04(0.04) 1.06(0.04) 1.10(0.07) 1.13(0.05) 1.11(0.03) 1.10(0.04) 1.07(0.07) 1.07(0.04) 1.05(0.05) 1.05(0.06) 1.08(0.06) 1.16(0.09) 1.14(0.04) 1.11(0.06) 1.10(0.04) 1.10(0.02) 1.12(0.05) 1.14(0.03) 1.19(0.06) 1.22(0.07) 1.17(0.08) 1.15(0.02) 1.16(0.04) 1.13(0.05) 1.14(0.06) 1.20(0.06) 1.22(0.05) 1.18(0.05) 1.14(0.06) 1.12(0.05) 1.12(0.04) 1.10(0.04) 1.14(0.09) 1.18(0.05) 1.14(0.07) 1.13(0.03) 1.10(0.07) 1.10(0.05) 1.08(0.03) 1.12(0.05) 1.17(0.05) 1.16(0.04) 1.11(0.10) 1.10(0.02) 1.08(0.04) 1.08(0.04) 1.11(0.03) 1.14(0.06) 1.17(0.04) 1.10(0.08) 1.12(0.05) 1.10(0.06) 1.10(0.07) 1.07(0.06) 1.14(0.11) 1.18(0.05) 1.16(0.04) 1.11(0.07) 1.10(0.04) 1.09(0.04) 1.12(0.04) 1.16(0.04) 1.20(0.07) 1.19(0.04) 1.19(0.03) 1.17(0.06) 1.16(0.05) 1.14(0.03) 1.13(0.01) 1.19(0.08) 1.21(0.05) 1.20(0.03) 1.15(0.10) 1.21(0.08) 1.20(0.03) 1.21(0.03) 1.19(0.06) 1.23(0.07) 1.24(0.04) 1.20(0.06) 1.20(0.03) 1.17(0.06) 1.16(0.04) 1.18(0.06) 1.23(0.06) 1.24(0.03) 1.21(0.05) 1.15(0.09) 1.15(0.05) 1.16(0.05) 1.17(0.05) 1.20(0.05) 1.24(0.05) 1.25(0.02) 1.20(0.09) 1.22(0.02) 1.19(0.06) 1.20(0.04) 1.20(0.02) 1.25(0.07) 1.26(0.05) 1.22(0.06) 1.18(0.06) 1.18(0.01) 1.18(0.02) 1.17(0.04) 1.21(0.03) 1.24(0.06) 1.23(0.03) 1.19(0.06) 1.20(0.03) 1.18(0.04) 1.17(0.02) 1.17(0.04) 1.22(0.06) 1.26(0.05) 1.27(0.03) 1.21(0.08) 1.25(0.05) 1.27(0.13) 1.18(0.15) 1.22(0.06) 1.24(0.08) 1.24(0.02) 1.29(0.08) 1.30(0.03) 1.28(0.03) 1.25(0.06) 1.26(0.02) 1.25(0.03) 1.24(0.03) 1.27(0.04) 1.34(0.08) 1.35(0.03) 1.33(0.02) 1.33(0.06) 1.30(0.06) 1.33(0.05) 1.30(0.05) 1.36(0.09) 1.39(0.05) 1.41(0.03) 1.35(0.08) 1.33(0.03) 1.31(0.05) 1.30(0.04) 1.31(0.03) 1.34(0.03) 1.42(0.12) 1.39(0.07) 1.36(0.03) 1.31(0.06) 1.33(0.03) 1.32(0.04) 1.31(0.03) 1.37(0.06) 1.41(0.08) 1.37(0.07) 1.34(0.04) 1.34(0.01) 1.32(0.05) 1.32(0.06) 1.31(0.02) 1.35(0.08) 1.38(0.04) 1.34(0.05) 1.31(0.07) 1.30(0.01) 1.30(0.03) 1.30(0.08) 1.35(0.06) 1.38(0.06) 1.37(0.02) 1.33(0.09) 1.31(0.03) 1.31(0.02) 1.33(0.03) 1.36(0.05) 1.40(0.05) 1.39(0.04) 1.36(0.04) 1.33(0.06) 1.32(0.05) 1.33(0.02) 1.31(0.02) 1.35(0.07) 1.37(0.04) 1.40(0.07) 1.35(0.12) 1.33(0.03) 1.31(0.03) 1.30(0.01) 1.28(0.04) 1.32(0.05) 1.36(0.05) 1.38(0.05) 1.34(0.08) 1.33(0.02) 1.31(0.05) 1.31(0.05) 1.32(0.03) 1.33(0.04) 1.39(0.06) 1.42(0.07) 1.41(0.04) 1.36(0.10) 1.37(0.04) 1.35(0.03) 1.34(0.03) 1.34(0.03) 1.39(0.06) 1.43(0.06) 1.42(0.04) 1.36(0.10) 1.32(0.04) 1.32(0.05) 1.31(0.05) 1.34(0.04) 1.37(0.05) 1.42(0.08) 1.38(0.07) 1.36(0.03) 1.32(0.09) 1.32(0.04) 1.30(0.05) 1.34(0.04) 1.39(0.06) 1.44(0.07) 1.38(0.07) 1.36(0.04) 1.34(0.04) 1.34(0.04) 1.33(0.04) 1.34(0.04) 1.38(0.05) 1.41(0.06) 1.37(0.07) 1.33(0.05) 1.31(0.05) 1.29(0.04) 1.28(0.02) 1.29(0.02) 1.36(0.10) 1.36(0.04) 1.30(0.05) 1.27(0.06) 1.27(0.02) 1.26(0.02) 1.26(0.03) 1.27(0.02) 1.31(0.07) 1.31(0.04) 1.26(0.07) 1.24(0.05) 1.22(0.04) 1.24(0.05) 1.23(0.04) 1.30(0.11) 1.36(0.06) 1.39(0.05) 1.31(0.08) 1.30(0.03) 1.26(0.05) 1.29(0.04) 1.29(0.03) 1.34(0.08) 1.38(0.06) 1.36(0.07) 1.32(0.07) 1.29(0.07) 1.31(0.05) 1.28(0.04) 1.26(0.05) 1.31(0.06) 1.36(0.06) 1.35(0.03) 1.31(0.05) 1.29(0.08) 1.28(0.04) 1.27(0.04) 1.28(0.06) 1.30(0.02) 1.34(0.06) 1.39(0.07) 1.37(0.08) 1.37(0.02) 1.34(0.08) 1.34(0.02) 1.31(0.03) 1.32(0.02) 1.35(0.05) 1.38(0.06) 1.36(0.04) 1.34(0.05) 1.32(0.05) 1.30(0.03) 1.29(0.04) 1.29(0.06) 1.35(0.07) 1.37(0.05) 1.34(0.04) 1.28(0.11) 1.26(0.05) 1.26(0.03) 1.28(0.04) 1.29(0.05) 1.31(0.03) 1.35(0.06) 1.32(0.06) 1.24(0.12) 1.28(0.06) 1.28(0.04) 1.29(0.06) 1.33(0.05) 1.37(0.09) 1.36(0.03) 1.32(0.07) 1.32(0.02) 1.27(0.07) 1.28(0.04) 1.31(0.04) 1.37(0.06) 1.37(0.04) 1.32(0.07) 1.28(0.06) 1.29(0.02) 1.28(0.04) 1.26(0.05) 1.30(0.05) 1.36(0.11) 1.34(0.06) 1.29(0.06) 1.30(0.02) 1.28(0.06) 1.28(0.03) 1.29(0.04) 1.36(0.09) 1.37(0.04) 1.32(0.07) 1.30(0.05) 1.28(0.04) 1.27(0.04) 1.27(0.05) 1.33(0.08) 1.37(0.05) 1.37(0.03) 1.31(0.11) 1.33(0.03) 1.29(0.06) 1.27(0.04) 1.30(0.04) 1.39(0.09) 1.42(0.06) 1.38(0.06) 1.33(0.09) 1.31(0.04) 1.31(0.05) 1.32(0.04) 1.33(0.02) 1.36(0.04) 1.43(0.10) 1.36(0.08) 1.33(0.04) 1.29(0.09) 1.28(0.03) 1.27(0.03) 1.30(0.05) 1.35(0.06) 1.36(0.05) 1.30(0.08) 1.28(0.03) 1.26(0.05) 1.25(0.03) 1.31(0.09) 1.34(0.05) 1.35(0.03) 1.30(0.07) 1.27(0.04) 1.25(0.04) 1.25(0.02) 1.22(0.05) 1.26(0.07) 1.31(0.06) 1.32(0.04) 1.27(0.10) 1.25(0.05) 1.24(0.06) 1.24(0.06) 1.25(0.04) 1.26(0.05) 1.29(0.07) 1.36(0.08) 1.37(0.06) 1.33(0.04) 1.32(0.05) 1.27(0.06) 1.28(0.04) 1.26(0.04) 1.31(0.11) 1.34(0.04) 1.36(0.05) 1.30(0.08) 1.29(0.04) 1.26(0.04) 1.24(0.04) 1.25(0.03) 1.30(0.07) 1.35(0.05) 1.31(0.05) 1.26(0.09) 1.26(0.06) 1.25(0.05) 1.22(0.05) 1.23(0.04) 1.26(0.04) 1.31(0.08) 1.28(0.10) 1.26(0.03) 1.24(0.04) 1.22(0.02) 1.22(0.02) 1.22(0.06) 1.27(0.06) 1.31(0.09) 1.29(0.07) 1.25(0.04) 1.22(0.06) 1.20(0.03) 1.25(0.07) 1.27(0.04) 1.33(0.10) 1.25(0.11) 1.24(0.02) 1.24(0.03) 1.24(0.02) 1.23(0.03) 1.25(0.03) 1.30(0.06) 1.33(0.04) 1.27(0.08) 1.25(0.03) 1.24(0.04) 1.24(0.02) 1.25(0.02) 1.29(0.06) 1.34(0.05) 1.31(0.05) 1.28(0.07) 1.28(0.02) 1.28(0.05) 1.26(0.05) 1.28(0.03) 1.31(0.04) 1.34(0.08) 1.27(0.10) 1.28(0.04) 1.27(0.05) 1.27(0.05) 1.24(0.03) 1.29(0.08) 1.33(0.05) 1.31(0.02) 1.27(0.07) 1.25(0.04) 1.25(0.03) 1.24(0.04) 1.26(0.02) 1.30(0.09) 1.34(0.06) 1.29(0.06) 1.28(0.03) 1.24(0.08) 1.24(0.06) 1.22(0.03) 1.26(0.07) 1.31(0.06) 1.35(0.07) 1.29(0.08) 1.28(0.04) 1.26(0.04) 1.25(0.04) 1.26(0.02) 1.32(0.09) 1.35(0.04) 1.35(0.04) 1.31(0.08) 1.27(0.08) 1.29(0.04) 1.27(0.05) 1.32(0.10) 1.36(0.04) 1.40(0.08) 1.33(0.10) 1.31(0.04) 1.28(0.05) 1.28(0.02) 1.27(0.01) 1.31(0.07) 1.35(0.04) 1.35(0.05) 1.30(0.11) 1.29(0.03) 1.29(0.06) 1.28(0.03) 1.30(0.06) 1.32(0.03) 1.38(0.12) 1.34(0.08) 1.31(0.03) 1.27(0.07) 1.27(0.01) 1.26(0.02) 1.28(0.06) 1.33(0.05) 1.33(0.06) 1.28(0.11) 1.27(0.03) 1.26(0.05) 1.25(0.03) 1.28(0.04) 1.31(0.04) 1.36(0.10) 1.33(0.08) 1.29(0.04) 1.27(0.05) 1.26(0.01) 1.26(0.03) 1.27(0.04) 1.31(0.05) 1.34(0.08) 1.31(0.08) 1.30(0.03) 1.27(0.06) 1.24(0.05) 1.26(0.04) 1.27(0.03) 1.35(0.12) 1.34(0.05) 1.31(0.04) 1.29(0.03) 1.30(0.02) 1.29(0.03) 1.30(0.03) 1.33(0.03) 1.35(0.07) 1.32(0.09) 1.29(0.06) 1.29(0.03) 1.26(0.05) 1.28(0.07) 1.30(0.04) 1.35(0.12) 1.32(0.06) 1.31(0.03) 1.27(0.08) 1.26(0.01) 1.25(0.02) 1.25(0.02) 1.28(0.05) 1.33(0.07) 1.30(0.08) 1.28(0.03) 1.27(0.06) 1.26(0.04) 1.26(0.01) 1.29(0.05) 1.35(0.10) 1.35(0.05) 1.33(0.03) 1.30(0.08) 1.29(0.02) 1.27(0.04) 1.28(0.02) 1.29(0.03) 1.34(0.07) 1.35(0.03) 1.30(0.07) 1.28(0.07) 1.28(0.02) 1.31(0.04) 1.29(0.02) 1.34(0.10) 1.37(0.06) 1.40(0.08) 1.34(0.09) 1.32(0.05) 1.30(0.06) 1.29(0.01) 1.28(0.03) 1.31(0.07) 1.35(0.04) 1.34(0.04) 1.31(0.08) 1.28(0.05) 1.29(0.03) 1.27(0.04) 1.32(0.09) 1.36(0.06) 1.41(0.10) 1.34(0.11) 1.34(0.02) 1.32(0.05) 1.33(0.01) 1.31(0.04) 1.31(0.03) 1.35(0.07) 1.41(0.09) 1.41(0.01) 1.36(0.06) 1.32(0.09) 1.31(0.04) 1.30(0.04) 1.31(0.05) 1.34(0.04) 1.36(0.05) 1.36(0.03) 1.31(0.09) 1.29(0.03) 1.26(0.12) 1.25(0.12) 1.02(0.31) 0.97(0.17) 0.96(0.03) 0.87(0.14) 0.94(0.09) 0.95(0.08) 0.99(0.09) 1.05(0.08) 1.11(0.08) 1.14(0.06) 1.14(0.07) 1.20(0.06) 1.21(0.04) 1.23(0.07) 1.19(0.05) 1.22(0.06) 1.24(0.03) 1.28(0.06) 1.30(0.06) 1.35(0.05) 1.40(0.06) 1.40(0.02) 1.39(0.08) 1.37(0.06) 1.39(0.06) 1.36(0.04) 1.37(0.05) 1.38(0.04) 1.40(0.03) 1.45(0.06) 1.45(0.04)
++ Max displacement in automask = 1.45 (mm) at sub-brick 1095
++ Max delta displ  in automask = 0.31 (mm) at sub-brick 1065
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb03.GA02.r03.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GA02_unif_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master MPRAGE.GA02_unif_ns+tlrc -dxyz 2.5 -source pb02.GA02.r03.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA02_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GA02.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 675.2 sec
3dNwarpApply -master MPRAGE.GA02_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA02_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GA02.r01.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GA02.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GA02.r02.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GA02.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GA02.r03.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GA02.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GA02_unif_al_junk_mat.aff12.1D -I
3dNwarpApply -master MPRAGE.GA02_unif_ns+tlrc -dxyz 2.5 -source vr_base_min_outlier+orig -nwarp anat.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base_min_outlier
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA02_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'vr_base_min_outlier+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./final_epi_vr_base_min_outlier+tlrc.BRIK
++ total Elapsed time = 1.4 sec
3dcopy MPRAGE.GA02_unif_ns+tlrc anat_final.GA02
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dAllineate -base final_epi_vr_base_min_outlier+tlrc -allcostX -input anat_final.GA02+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.GA02+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base_min_outlier+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'TOHD(12.9425)'
 +        -cmass x y z shifts =   -0.294    0.121    0.135
 +  shift search range is +/- =   69.817   89.077   73.830
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.096711
   sp   = 0.292655
   mi   = 2.83269
   crM  = 0.0202384
   nmi  = 0.833274
   je   = 2.83269
   hel  = -0.118891
   crA  = 0.142279
   crU  = 0.144506
   lss  = 0.903289
   lpc  = 0.43148
   lpa  = 0.56852
   lpc+ = 0.530227
   lpa+ = 0.667266
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.8
++ ###########################################################
3dNwarpApply -source MPRAGE.GA02_unif+orig -master anat_final.GA02+tlrc -ainterp wsinc5 -nwarp anat.aff.qw_WARP.nii anat.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'MPRAGE.GA02_unif+orig'
++ -master dataset is 'anat_final.GA02+tlrc'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 9.4 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb04.volreg pb04.GA02.r01.volreg+tlrc.HEAD pb04.GA02.r02.volreg+tlrc.HEAD pb04.GA02.r03.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 6.2 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
