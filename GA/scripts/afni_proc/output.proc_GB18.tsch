echo auto-generated by afni_proc.py, Fri Jan 20 09:20:16 2023
auto-generated by afni_proc.py, Fri Jan 20 09:20:16 2023
echo (version 7.17, July 16, 2021)
(version 7.17, July 16, 2021)
echo execution started: `date`
date
execution started: Fri Jan 20 09:20:16 AM KST 2023
afni -ver
Precompiled binary linux_ubuntu_16_64: Jul 28 2021 (Version AFNI_21.2.04 'Nerva')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   27 Jul 2021
if ( 0 ) then
if ( 0 > 0 ) then
set subj = GB18
endif
set output_dir = /mnt/ext5/GA/fmri_data/preproc_data/GB18
if ( -d /mnt/ext5/GA/fmri_data/preproc_data/GB18 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir -p /mnt/ext5/GA/fmri_data/preproc_data/GB18
mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB18/stimuli
3dcopy /mnt/ext5/GA/fmri_data/raw_data/GB18/MPRAGE.GB18.nii /mnt/ext5/GA/fmri_data/preproc_data/GB18/MPRAGE.GB18
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB18/blip_forward /mnt/ext5/GA/fmri_data/raw_data/GB18/dist_AP.GB18.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB18/blip_reverse /mnt/ext5/GA/fmri_data/raw_data/GB18/dist_PA.GB18.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB18/pb00.GB18.r01.tcat /mnt/ext5/GA/fmri_data/raw_data/GB18/func.GB18.r01.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 306.9 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB18/pb00.GB18.r02.tcat /mnt/ext5/GA/fmri_data/raw_data/GB18/func.GB18.r02.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 202.8 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GB18/pb00.GB18.r03.tcat /mnt/ext5/GA/fmri_data/raw_data/GB18/func.GB18.r03.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 279.3 s
set tr_counts = ( 1096 1096 1096 )
cd /mnt/ext5/GA/fmri_data/preproc_data/GB18
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.GB18.r01.tcat+orig.HEAD pb00.GB18.r02.tcat+orig.HEAD pb00.GB18.r03.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 121.4 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 106.9 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 39.0 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB18.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2631.8 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB18.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2631.8 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GB18.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2631.8 MB)
........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

3dUnifize -prefix MPRAGE.GB18_unif -GM MPRAGE.GB18+orig
++ 3dUnifize: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + Pre-processing: ADV...............................UW[s117464]Gm
++ Output dataset ./MPRAGE.GB18_unif+orig.BRIK
++ ===== Elapsed = 51.3 sec
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB18.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 83942 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB18.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 83958 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GB18.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 84158 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 1096 1096 1096 -index_to_run_tr 28
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
set minoutrun = 01
set minouttr = 28
echo min outlier: run 01, TR 28
tee out.min_outlier.txt
min outlier: run 01, TR 28
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.GB18.r01.despike pb00.GB18.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB18.r01.tcat+orig
++ processing all 629472 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #11
++ start OpenMP thread #9
++ start OpenMP thread #13
++ start OpenMP thread #2
++ start OpenMP thread #6
++ start OpenMP thread #12
++ start OpenMP thread #5
++ start OpenMP thread #14
++ start OpenMP thread #3
++ start OpenMP thread #1
++ start OpenMP thread #10
++ start OpenMP thread #4
++ start OpenMP thread #7
++ start OpenMP thread #8
............................................................................................................................................................................................................................................................................
++ Elapsed despike time =  10s 987ms

++ FINAL: 412445624 data points, 15500585 edits [3.758%], 1100515 big edits [0.267%]
++ Output dataset ./pb01.GB18.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB18.r02.despike pb00.GB18.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB18.r02.tcat+orig
++ processing all 629472 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #14
++ start OpenMP thread #12
++ start OpenMP thread #1
++ start OpenMP thread #3
++ start OpenMP thread #5
++ start OpenMP thread #4
++ start OpenMP thread #2
++ start OpenMP thread #6
++ start OpenMP thread #8
++ start OpenMP thread #10
++ start OpenMP thread #7
++ start OpenMP thread #9
++ start OpenMP thread #13
++ start OpenMP thread #11
............................................................................................................................................................................................................................................................................
++ Elapsed despike time =  11s 107ms

++ FINAL: 412445624 data points, 17402102 edits [4.219%], 2009105 big edits [0.487%]
++ Output dataset ./pb01.GB18.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GB18.r03.despike pb00.GB18.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GB18.r03.tcat+orig
++ processing all 629472 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #8
++ start OpenMP thread #4
++ start OpenMP thread #11
++ start OpenMP thread #7
++ start OpenMP thread #13
++ start OpenMP thread #1
++ start OpenMP thread #6
++ start OpenMP thread #10
++ start OpenMP thread #5
++ start OpenMP thread #14
++ start OpenMP thread #12
++ start OpenMP thread #3
++ start OpenMP thread #9
++ start OpenMP thread #2
............................................................................................................................................................................................................................................................................
++ Elapsed despike time =  11s 315ms

++ FINAL: 412445624 data points, 21028766 edits [5.099%], 3485175 big edits [0.845%]
++ Output dataset ./pb01.GB18.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.GB18.r01.tshift pb01.GB18.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB18.r02.tshift pb01.GB18.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GB18.r03.tshift pb01.GB18.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTstat -median -prefix rm.blip.med.fwd blip_forward+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.fwd+orig.BRIK
3dTstat -median -prefix rm.blip.med.rev blip_reverse+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.rev+orig.BRIK
3dAutomask -apply_prefix rm.blip.med.masked.fwd rm.blip.med.fwd+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.fwd+orig
++ Forming automask
 + Fixed clip level = 5983.345703
 + Used gradual clip level = 5596.688965 .. 6456.047363
 + Number voxels above clip level = 94791
 + Clustering voxels ...
 + Largest cluster has 92774 voxels
 + Clustering voxels ...
 + Largest cluster has 90251 voxels
 + Filled   463 voxels in small holes; now have 90714 voxels
 + Filled   870 voxels in large holes; now have 91584 voxels
 + Clustering voxels ...
 + Largest cluster has 91584 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 537888 voxels
 + Mask now has 91584 voxels
++ 91584 voxels in the mask [out of 629472: 14.55%]
++ first  14 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first  16 y-planes are zero [from A]
++ last   19 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last   15 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dAutomask -apply_prefix rm.blip.med.masked.rev rm.blip.med.rev+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.rev+orig
++ Forming automask
 + Fixed clip level = 5975.610352
 + Used gradual clip level = 5593.535156 .. 6345.169922
 + Number voxels above clip level = 92688
 + Clustering voxels ...
 + Largest cluster has 89866 voxels
 + Clustering voxels ...
 + Largest cluster has 89520 voxels
 + Filled   362 voxels in small holes; now have 89882 voxels
 + Filled   937 voxels in large holes; now have 90819 voxels
 + Clustering voxels ...
 + Largest cluster has 90816 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 538656 voxels
 + Mask now has 90816 voxels
++ 90816 voxels in the mask [out of 629472: 14.43%]
++ first  14 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first  13 y-planes are zero [from A]
++ last   19 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last   15 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dQwarp -plusminus -pmNAMES Rev For -pblur 0.05 0.05 -blur -1 -1 -noweight -minpatch 9 -source rm.blip.med.masked.rev+orig -base rm.blip.med.masked.fwd+orig -prefix blip_warp
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=3 ytop=3  zbot=4 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=./rm.blip.med.masked.fwd+orig.HEAD  source=./rm.blip.med.masked.rev+orig.HEAD
++ AFNI warpomatic start: 89 x 102 x 86 volume ; autobbox = 6..83 11..89 1..78
lev=0 0..88 2..98 0..85: [first cost=-1.61561] ...... done [cost=-1.71483]
lev=1 patch=67x73x65: [first cost=-1.59854] ........ done [cost:-1.65431 ; 8 patches optimized, 0 skipped]
lev=2 patch=51x55x49: [first cost=-1.57873] .......................... done [cost:-1.64164 ; 26 patches optimized, 1 skipped]
lev=3 patch=37x41x37: [first cost=-1.56895] ............. done [cost:-1.64680 ; 46 patches optimized, 18 skipped]
lev=4 patch=29x31x27: [first cost=-1.63013] .............. done [cost:-1.71299 ; 99 patches optimized, 51 skipped]
lev=5 patch=21x23x21: [first cost=-1.68743] ......................... done [cost:-1.78568 ; 243 patches optimized, 149 skipped]
lev=6 patch=15x17x15: [first cost=-1.71485] ............................. done [cost:-1.81850 ; 689 patches optimized, 521 skipped]
lev=7 patch=11x13x11: [first cost=-1.82526] ........ +      cubic12 patch 068..078 025..037 025..035 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x19edbf0  xbot=0x19d1360  xtop=0x19ce800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
......... +      cubic12 patch 003..013 037..049 035..045 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x19edbf0  xbot=0x19d1360  xtop=0x19ce800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.............................. done [cost:-1.92333 ; 1741 patches optimized, 1379 skipped]
lev=8 patch=9x9x9: [first cost=-1.92344] ........ +      cubic12 patch 062..070 076..084 017..025 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x19edbf0  xbot=0x19d1360  xtop=0x19ce800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
...... +      cubic12 patch 058..066 080..088 045..053 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x19edbf0  xbot=0x19d1360  xtop=0x19ce800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
............ +      cubic12 patch 050..058 048..056 069..077 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x19edbf0  xbot=0x19d1360  xtop=0x19ce800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
... +      cubic12 patch 046..054 072..080 005..013 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x19edbf0  xbot=0x19d1360  xtop=0x19ce800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
......................... +      cubic12 patch 034..042 076..084 009..017 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x19edbf0  xbot=0x19d1360  xtop=0x19ce800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.. +      cubic12 patch 030..038 080..088 033..041 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x19edbf0  xbot=0x19d1360  xtop=0x19ce800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.............. +      cubic12 patch 014..022 072..080 025..033 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x19edbf0  xbot=0x19d1360  xtop=0x19ce800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
...... +      cubic12 patch 006..014 032..040 037..045 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x19edbf0  xbot=0x19d1360  xtop=0x19ce800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
. +      cubic12 patch 003..011 044..052 045..053 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x19edbf0  xbot=0x19d1360  xtop=0x19ce800  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 done [cost:-1.97966 ; 4016 patches optimized, 3584 skipped]
++ ====== total number of parameters 'optimized' = 82605
 +      initial unpenalized cost = -1.61561
 +        final unpenalized cost = -2.03016
 +        final penalized   cost = -1.97966
++ Output dataset ./blip_warp_Rev+orig.BRIK
++ Output dataset ./blip_warp_For+orig.BRIK
++ Output dataset ./blip_warp_Rev_WARP+orig.BRIK
++ Output dataset ./blip_warp_For_WARP+orig.BRIK
++ ===== clock time = 47s 310ms
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.fwd+orig -prefix blip_med_for
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for+orig.BRIK
++ total Elapsed time = 0.4 sec
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.masked.fwd+orig -prefix blip_med_for_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for_masked+orig.BRIK
++ total Elapsed time = 0.4 sec
3dNwarpApply -quintic -nwarp blip_warp_Rev_WARP+orig -source rm.blip.med.masked.rev+orig -prefix blip_med_rev_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.rev+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_rev_masked+orig.BRIK
++ total Elapsed time = 0.4 sec
foreach run ( 01 02 03 )
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB18.r01.tshift+orig -prefix pb03.GB18.r01.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB18.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB18.r01.blip+orig.BRIK
++ total Elapsed time = 114.2 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB18.r02.tshift+orig -prefix pb03.GB18.r02.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB18.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB18.r02.blip+orig.BRIK
++ total Elapsed time = 170.7 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GB18.r03.tshift+orig -prefix pb03.GB18.r03.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GB18.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GB18.r03.blip+orig.BRIK
++ total Elapsed time = 133.4 sec
end
3dbucket -prefix vr_base_min_outlier pb03.GB18.r01.blip+orig[28]
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
align_epi_anat.py -anat2epi -anat MPRAGE.GB18_unif+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off -tshift off
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB18/MPRAGE.GB18_unif+orig
#++ Multi-cost is lpa
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB18_unif*
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB18_unif+orig ./MPRAGE.GB18_unif_unflipped+orig
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./MPRAGE.GB18_unif_unflipped+orig -prefix ./MPRAGE.GB18_unif_unflipped_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 96, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 108, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 120, avoid_vent -1
Warning 3dSkullStrip: Stubborn intersection remaining at smoothing of 120. Ignoring it.#Script is running (command trimmed):
  3dinfo ./MPRAGE.GB18_unif_unflipped_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB18/MPRAGE.GB18_unif_unflipped_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GB18/vr_base_min_outlier+orig is not oblique
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_ts ./vr_base_min_outlier+orig'[0]'
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_min_outlier_ts_ns ./__tt_vr_base_min_outlier_ts+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 4095.618896
 + Used gradual clip level = 3844.120117 .. 4345.338867
 + Number voxels above clip level = 86063
 + Clustering voxels ...
 + Largest cluster has 84090 voxels
 + Clustering voxels ...
 + Largest cluster has 82638 voxels
 + Filled   326 voxels in small holes; now have 82964 voxels
 + Filled   997 voxels in large holes; now have 83961 voxels
 + Clustering voxels ...
 + Largest cluster has 83961 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 545511 voxels
 + Mask now has 83961 voxels
++ 83961 voxels in the mask [out of 629472: 13.34%]
++ first  15 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first  17 y-planes are zero [from A]
++ last   19 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last   16 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_min_outlier_ts_ns+orig
#++ Applying threshold of 9518.996094 on /mnt/ext5/GA/fmri_data/preproc_data/GB18/vr_base_min_outlier_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_min_outlier_ts_ns_wt -a ./vr_base_min_outlier_ts_ns+orig -expr 'min(1,(a/9518.996094))'
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpa -wtprefix ./MPRAGE.GB18_unif_unflipped_ns_al_junk_wtal -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB18_unif_unflipped_ns+orig -prefix ./MPRAGE.GB18_unif_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB18_unif_al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB18_unif_unflipped_ns+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4837001 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 83961 voxels [12.5%] in weight mask
++ Number of points for matching = 83961
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.837 50.487 42.754 (index)
 + source center of mass = 109.957 193.628 161.503 (index)
 + source-target CM = -1.584 -0.107 -2.239 (xyz)
 + estimated center of mass shifts = -1.584 -0.107 -2.239
++ shift param auto-range: -72.2..69.0 -81.9..81.7 -73.7..69.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.584190 .. 8.415810  center = -1.584190
 + Range param#2 [y-shift] = -10.107376 .. 9.892624  center = -0.107376
 + Range param#3 [z-shift] = -12.239006 .. 7.760994  center = -2.239006
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.584190 .. 38.415810  center = -1.584190
 + Range param#2 [y-shift] = -40.107376 .. 39.892624  center = -0.107376
 + Range param#3 [z-shift] = -42.239006 .. 37.760994  center = -2.239006
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -41.584 ..   38.416
 +       y-shift =  -40.107 ..   39.893
 +       z-shift =  -42.239 ..   37.761
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4837001 [out of 23184225] voxels
 + base mask has 104049 [out of 669312] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=264.049 usiz=401.241
 + - copying weight image
 + - using 83961 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 74931 total points stored in 146 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#o*[#2=0.980287] *+*[#4=0.977722] *-*[#6=0.962154] *o.--++o-+*[#45=0.960962] *o+$
 + - best 88 costs found:
   o= 0 v= 0.960962:   5.08   6.56  -8.91  -7.50   7.50  -7.50  [grid]
   o= 1 v= 0.961189:   5.08  -6.77  -8.91  -7.50  -7.50  -7.50  [grid]
   o= 2 v= 0.961927:  -8.25   6.56  -8.91  30.00  -7.50   7.50  [grid]
   o= 3 v= 0.962154:  -8.25   6.56  -8.91   7.50   7.50   7.50  [grid]
   o= 4 v= 0.962788:  -8.25  -6.77  -8.91   7.50  -7.50   7.50  [grid]
   o= 5 v= 0.963092: -35.91 -16.69   6.36  16.34  -8.64  40.54  [rand]
   o= 6 v= 0.964034: -33.42 -11.90   0.50  23.31   3.26  40.47  [rand]
   o= 7 v= 0.964889: -36.45  30.45 -18.01 -11.68 -29.04 -39.38  [rand]
   o= 8 v= 0.966237:  -8.25   6.56  -8.91   7.50   7.50  30.00  [grid]
   o= 9 v= 0.966328:  20.74  29.52  -9.23   8.73 -38.75  33.73  [rand]
   o=10 v= 0.966586:   5.08   6.56  -8.91   7.50   7.50 -30.00  [grid]
   o=11 v= 0.967122: -33.42 -11.90  -4.98  23.31  -3.26  40.47  [rand]
   o=12 v= 0.967193: -10.10  28.90  29.13  12.98 -30.57  -5.92  [rand]
   o=13 v= 0.967234: -15.58  15.43 -37.92 -14.61  39.00 -28.71  [rand]
   o=14 v= 0.967410:  -5.72  24.02   0.38  26.16  25.44 -13.47  [rand]
   o=15 v= 0.967446: -33.42 -11.90  -4.98  23.31   3.26  40.47  [rand]
   o=16 v= 0.967605: -23.91  29.52   4.76  -8.73 -38.75 -33.73  [rand]
   o=17 v= 0.967872: -23.91  29.52   4.76   8.73 -38.75 -33.73  [rand]
   o=18 v= 0.967896:  14.40  19.39   3.49 -20.53   3.14  10.08  [rand]
   o=19 v= 0.967984:  33.28  30.45 -18.01  11.68 -29.04  39.38  [rand]
   o=20 v= 0.968054:  12.62  -9.56  -7.08  15.99  13.53  29.93  [rand]
   o=21 v= 0.968123:  -8.25   6.56  -8.91  -7.50   7.50  30.00  [grid]
   o=22 v= 0.968199:  -8.25  -6.77  -8.91   7.50  -7.50  30.00  [grid]
   o=23 v= 0.968551:  35.08  27.66  -7.12  15.70 -36.90  27.47  [rand]
   o=24 v= 0.968762: -33.42 -11.90   0.50  23.31  -3.26  40.47  [rand]
   o=25 v= 0.968950:  -8.25   6.56  -8.91   7.50  -7.50  30.00  [grid]
   o=26 v= 0.968979: -28.25  26.56  -8.91  -7.50 -30.00  -7.50  [grid]
   o=27 v= 0.969010: -10.01  34.93 -28.71   3.45 -23.10  -5.60  [rand]
   o=28 v= 0.969242:  -8.25  -6.77  -8.91  -7.50  -7.50  30.00  [grid]
   o=29 v= 0.969328: -35.41  29.39 -15.20  31.95  -9.87  34.85  [rand]
   o=30 v= 0.969549:   5.08   6.56  -8.91   7.50   7.50  -7.50  [grid]
   o=31 v= 0.969641: -33.42  11.69  -4.98  23.31   3.26 -40.47  [rand]
   o=32 v= 0.969737: -28.25  26.56   4.43  -7.50 -30.00 -30.00  [grid]
   o=33 v= 0.969827: -10.01  34.93  24.23   3.45 -23.10  -5.60  [rand]
   o=34 v= 0.969858: -15.79   9.35  -7.08 -15.99  13.53  29.93  [rand]
   o=35 v= 0.969929:   7.06  20.33 -19.71  25.20  18.50  13.54  [rand]
   o=36 v= 0.970034: -28.25  -6.77  -8.91 -30.00  -7.50   7.50  [grid]
   o=37 v= 0.970036: -28.25  26.56  -8.91   7.50 -30.00  -7.50  [grid]
   o=38 v= 0.970046: -28.25  -6.77  -8.91  -7.50  -7.50  -7.50  [grid]
   o=39 v= 0.970078: -36.45  30.45  13.53 -11.68 -29.04  39.38  [rand]
   o=40 v= 0.970086: -19.92  26.04  -8.29   6.51 -20.18  -7.56  [rand]
   o=41 v= 0.970087: -10.01  34.93  24.23   3.45 -23.10   5.60  [rand]
   o=42 v= 0.970185: -23.91  29.52  -9.23  -8.73 -38.75 -33.73  [rand]
   o=43 v= 0.970208: -28.25  26.56  -8.91  -7.50  -7.50   7.50  [grid]
   o=44 v= 0.970246:  20.74  29.52  -9.23  -8.73 -38.75  33.73  [rand]
   o=45 v= 0.970281:   5.08   6.56  -8.91  -7.50   7.50 -30.00  [grid]
   o=46 v= 0.970585:  20.74  29.52   4.76  -8.73 -38.75  33.73  [rand]
   o=47 v= 0.970722: -10.10  28.90  29.13  12.98 -30.57   5.92  [rand]
   o=48 v= 0.970779:  25.08   6.56   4.43   7.50  -7.50   7.50  [grid]
   o=49 v= 0.970821: -28.25  26.56   4.43   7.50   7.50 -30.00  [grid]
   o=50 v= 0.970910: -15.53  23.76 -20.42   5.58 -38.34 -17.97  [rand]
   o=51 v= 0.970922: -22.56  28.27  30.01   3.65 -28.33  14.78  [rand]
   o=52 v= 0.970948:  -7.68  -6.46 -18.66 -16.81  28.15  41.40  [rand]
   o=53 v= 0.970956: -28.25   6.56   4.43  -7.50   7.50  -7.50  [grid]
   o=54 v= 0.971034: -28.25  26.56  -8.91  -7.50 -30.00 -30.00  [grid]
   o=55 v= 0.971127: -19.92  26.04  -8.29   6.51  20.18  -7.56  [rand]
   o=56 v= 0.971204:  -8.25  26.56 -28.91   7.50  30.00   7.50  [grid]
   o=57 v= 0.971289: -28.25  -6.77  -8.91  -7.50  -7.50   7.50  [grid]
   o=58 v= 0.971495: -33.42  11.69  -4.98  23.31  -3.26 -40.47  [rand]
   o=59 v= 0.971507: -10.01  34.93 -28.71   3.45 -23.10   5.60  [rand]
   o=60 v= 0.971544: -36.44  35.57 -16.49  40.22 -24.26  41.52  [rand]
   o=61 v= 0.971600: -35.91 -16.69   6.36  16.34   8.64  40.54  [rand]
   o=62 v= 0.971604: -33.79  28.94  33.90  40.41  19.09 -40.75  [rand]
   o=63 v= 0.971686:  16.75  26.04   3.81   6.51  20.18  -7.56  [rand]
   o=64 v= 0.971731:  25.08   6.56   4.43   7.50   7.50   7.50  [grid]
   o=65 v= 0.971766: -15.58  15.43 -37.92 -14.61  39.00  28.71  [rand]
   o=66 v= 0.971842:  17.91  16.56   0.36 -30.54  19.59  20.03  [rand]
   o=67 v= 0.971852:  -8.25  26.56   4.43  30.00   7.50 -30.00  [grid]
   o=68 v= 0.971940: -10.10  28.90 -33.61  12.98 -30.57  -5.92  [rand]
   o=69 v= 0.971944: -10.10  28.90 -33.61  12.98 -30.57   5.92  [rand]
   o=70 v= 0.971958:   2.56  24.02   0.38 -26.16 -25.44 -13.47  [rand]
   o=71 v= 0.971966:  25.08  26.56  -8.91  -7.50 -30.00   7.50  [grid]
   o=72 v= 0.972040:  -8.25  -6.77  -8.91  30.00   7.50   7.50  [grid]
   o=73 v= 0.972045: -36.45  30.45 -18.01  11.68 -29.04  39.38  [rand]
   o=74 v= 0.972068:   5.08   6.56  -8.91 -30.00  -7.50  -7.50  [grid]
   o=75 v= 0.972139: -10.10  28.90 -33.61  12.98  30.57   5.92  [rand]
   o=76 v= 0.972149:  -8.25   6.56  24.43   7.50 -30.00   7.50  [grid]
   o=77 v= 0.972265: -28.25  26.56  -8.91  -7.50  -7.50  -7.50  [grid]
   o=78 v= 0.972268:  30.91  26.88 -34.13  -9.69 -21.75  40.77  [rand]
   o=79 v= 0.972283:  25.08   6.56   4.43  30.00  30.00   7.50  [grid]
   o=80 v= 0.972285:  -8.25   6.56  -8.91  30.00   7.50  -7.50  [grid]
   o=81 v= 0.972378: -22.56  28.27  30.01  -3.65 -28.33  14.78  [rand]
   o=82 v= 0.972402:  25.08  26.56  24.43  -7.50 -30.00  30.00  [grid]
   o=83 v= 0.972416:   5.08  -6.77   4.43  -7.50   7.50 -30.00  [grid]
   o=84 v= 0.972421: -28.25  26.56  24.43  -7.50 -30.00   7.50  [grid]
   o=85 v= 0.972425:  12.62   9.35  -7.08  15.99  13.53 -29.93  [rand]
   o=86 v= 0.972429: -36.44  35.57  12.01  40.22 -24.26  41.52  [rand]
   o=87 v= 0.972444:  -8.25  26.56  24.43   7.50 -30.00  -7.50  [grid]
 + - A little optimization:*[#11719=0.959778] *[#11722=0.959183] *[#11726=0.954746] *[#11729=0.954294] *[#11731=0.954016] *[#11734=0.953745] *[#11737=0.952927] *[#11738=0.952417] *[#11741=0.952207] *[#11742=0.951695] *[#11743=0.951223] *[#11751=0.951168] *[#11754=0.951142] *[#11755=0.951117] *[#11758=0.951112] *[#11759=0.951103] *[#11762=0.951101] *[#11763=0.951084] .*[#11791=0.950394] *[#11792=0.947337] *[#11796=0.946561] *[#11799=0.945837] *[#11802=0.944918] *[#11803=0.943973] *[#11806=0.942247] *[#11807=0.940822] *[#11811=0.940002] *[#11817=0.939795] *[#11820=0.939686] *[#11822=0.939642] *[#11827=0.93964] *[#11831=0.939637] ..*[#11923=0.939469] *[#11924=0.939077] *[#11929=0.93891] *[#11931=0.938814] *[#11935=0.93879] ......................*[#13049=0.93842] *[#13050=0.938037] *[#13051=0.937241] *[#13060=0.93719] *[#13061=0.936982] *[#13063=0.936981] *[#13064=0.936802] *[#13067=0.936792] *[#13070=0.936786] *[#13073=0.936726] *[#13076=0.936704] ...............................................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.951084:   5.26   7.01  -7.70 -10.26   4.13  -4.06  [grid]  [f=52]
   o= 1 v= 0.939637:   1.89  -2.11  -8.07  -5.14  -3.06  -0.56  [grid]  [f=67]
   o= 2 v= 0.954921:  -4.72   5.71  -7.62  29.93  -9.13   7.22  [grid]  [f=45]
   o= 3 v= 0.938790:  -8.11   3.98  -4.97   4.84   4.09  11.33  [grid]  [f=61]
   o= 4 v= 0.951506:  -8.32  -2.18  -9.33   8.82  -6.08   7.92  [grid]  [f=36]
   o= 5 v= 0.955475: -37.77 -17.21   4.61  17.98  -5.73  40.62  [rand]  [f=38]
   o= 6 v= 0.960283: -34.07 -12.56   0.05  16.49   2.29  40.36  [rand]  [f=38]
   o= 7 v= 0.954455: -38.66  34.84 -17.66 -10.52 -28.35 -44.42  [rand]  [f=55]
   o= 8 v= 0.943910: -12.06   4.45 -10.18   0.21   4.52  23.61  [grid]  [f=63]
   o= 9 v= 0.962402:  23.90  28.50  -8.41  10.91 -38.55  34.39  [rand]  [f=65]
   o=10 v= 0.947670:  10.89   4.39  -9.85   6.48   5.61 -23.90  [grid]  [f=63]
   o=11 v= 0.960704: -33.94 -15.26  -4.52  21.80  -0.45  41.94  [rand]  [f=49]
   o=12 v= 0.961052: -10.91  34.24  29.97  13.78 -29.97  -5.90  [rand]  [f=33]
   o=13 v= 0.956255: -18.70  19.41 -36.05 -15.53  42.87 -27.30  [rand]  [f=48]
   o=14 v= 0.959409:  -4.95  21.18   1.15  25.54  24.87 -14.19  [rand]  [f=44]
   o=15 v= 0.956980: -34.90 -11.02  -4.93  14.62   2.51  44.88  [rand]  [f=57]
   o=16 v= 0.956877: -24.63  27.47   1.36  -2.33 -35.30 -38.99  [rand]  [f=47]
   o=17 v= 0.959454: -23.71  28.22   1.51   8.16 -40.15 -37.01  [rand]  [f=56]
   o=18 v= 0.958077:  18.58  20.39   3.39 -21.26   3.29   9.36  [rand]  [f=42]
   o=19 v= 0.954076:  37.67  32.55 -17.07  12.91 -34.64  43.59  [rand]  [f=43]
   o=20 v= 0.965392:  13.16  -9.25  -6.93  20.61  13.09  29.86  [rand]  [f=31]
   o=21 v= 0.944313: -11.31   3.30 -11.22  -5.49   5.78  28.37  [grid]  [f=63]
   o=22 v= 0.962485:  -6.96  -4.98  -3.48   7.34  -4.32  30.35  [grid]  [f=60]
   o=23 v= 0.953212:  34.51  27.49 -14.28   6.42 -40.11  44.83  [rand]  [f=53]
   o=24 v= 0.957884: -35.88 -13.11   3.41  18.07  -1.46  39.38  [rand]  [f=62]
  *o=25 v= 0.936704: -11.70   4.65  -8.09   5.88   3.75  18.00  [grid]  [f=69]
   o=26 v= 0.965617: -27.61  30.57  -8.52  -7.76 -30.70  -7.19  [grid]  [f=35]
   o=27 v= 0.961769: -13.65  34.78 -27.19   3.78 -23.21  -4.85  [rand]  [f=39]
   o=28 v= 0.960674:  -9.60  -4.66  -8.65  -1.94  -9.31  27.79  [grid]  [f=50]
   o=29 v= 0.964720: -35.47  30.39 -14.78  30.20 -14.76  37.12  [rand]  [f=42]
   o=30 v= 0.943310:   4.53   3.56  -3.37   4.48   6.36 -11.31  [grid]  [f=59]
   o=31 v= 0.964903: -32.38  11.44  -6.47  20.63   6.43 -42.13  [rand]  [f=49]
   o=32 v= 0.960598: -28.07  29.03   1.89  -6.48 -32.43 -34.86  [grid]  [f=62]
   o=33 v= 0.961643: -12.47  34.99  23.10   7.02 -24.48   0.64  [rand]  [f=34]
   o=34 v= 0.961458: -10.44   7.73  -7.45 -16.91  13.85  30.04  [rand]  [f=47]
   o=35 v= 0.965881:   6.48  20.99 -19.96  25.76  18.88  17.53  [rand]  [f=39]
   o=36 v= 0.956337: -28.34  -6.64  -7.21 -24.69  -7.66   7.78  [grid]  [f=48]
   o=37 v= 0.958927: -24.14  27.50  -4.78   5.16 -35.41  -7.72  [grid]  [f=43]
   o=38 v= 0.963074: -23.95  -5.34  -7.95 -11.94  -8.62  -5.94  [grid]  [f=47]
   o=39 v= 0.964648: -41.53  31.49  13.08  -9.64 -29.72  40.50  [rand]  [f=48]
   o=40 v= 0.961761: -18.44  27.23  -7.42   7.25 -18.40  -1.80  [rand]  [f=50]
   o=41 v= 0.959689: -11.40  35.71  24.12   9.80 -25.91   1.44  [rand]  [f=47]
   o=42 v= 0.957892: -27.71  27.80   0.89  -0.12 -31.26 -40.03  [rand]  [f=66]
   o=43 v= 0.963079: -23.46  25.64  -7.74  -5.97  -7.18   9.05  [grid]  [f=43]
   o=44 v= 0.958987:  24.60  26.84  -4.99   1.88 -44.40  32.54  [rand]  [f=54]
   o=45 v= 0.953638:   8.97   3.98  -8.56   5.34   6.27 -27.96  [grid]  [f=71]
   o=46 v= 0.962969:  23.48  29.78   3.36  -4.20 -38.61  34.46  [rand]  [f=43]
   o=47 v= 0.962660: -11.16  32.76  28.30  13.61 -29.93   5.47  [rand]  [f=36]
   o=48 v= 0.960487:  25.20   2.98   4.80   5.35  -4.05  11.22  [grid]  [f=72]
   o=49 v= 0.963418: -31.89  28.15   5.09   9.26   8.64 -28.28  [grid]  [f=45]
   o=50 v= 0.961707: -20.24  26.44 -17.95   1.77 -41.43 -15.59  [rand]  [f=49]
   o=51 v= 0.963892: -23.26  28.85  29.90  -0.35 -32.13  11.75  [rand]  [f=41]
   o=52 v= 0.968483:  -8.43  -6.11 -17.67 -16.65  28.21  41.10  [rand]  [f=36]
   o=53 v= 0.962916: -29.53   8.87   5.83  -8.14  14.13 -11.20  [grid]  [f=66]
   o=54 v= 0.960146: -33.58  27.57  -5.30  -2.00 -37.33 -31.14  [grid]  [f=46]
   o=55 v= 0.969173: -19.88  25.83  -8.20   7.53  23.84  -8.50  [rand]  [f=36]
   o=56 v= 0.962074: -11.35  27.84 -24.86   7.65  29.80   8.86  [grid]  [f=44]
   o=57 v= 0.960270: -25.64  -5.53  -7.07 -13.54  -5.64   8.92  [grid]  [f=58]
   o=58 v= 0.965449: -32.49  10.92  -7.38  20.62   7.52 -41.26  [rand]  [f=41]
   o=59 v= 0.960023: -12.84  34.76 -26.78   6.24 -25.16  -5.43  [rand]  [f=52]
   o=60 v= 0.960261: -31.56  27.80 -14.48  39.02 -18.79  43.64  [rand]  [f=47]
   o=61 v= 0.964145: -32.51 -17.07   3.22  19.25   7.87  42.48  [rand]  [f=46]
   o=62 v= 0.966296: -34.27  25.25  33.19  41.53  17.88 -41.75  [rand]  [f=40]
   o=63 v= 0.969833:  17.29  25.38   3.29   5.57  20.96  -8.38  [rand]  [f=60]
   o=64 v= 0.958268:  26.93   3.50   1.80   8.39   2.99  10.52  [grid]  [f=50]
   o=65 v= 0.964698: -16.35  15.99 -41.69 -15.60  36.72  25.82  [rand]  [f=52]
   o=66 v= 0.967165:  21.39  16.84   1.21 -30.26  19.39  20.38  [rand]  [f=38]
   o=67 v= 0.967659:  -8.94  22.52   5.53  30.74   6.50 -29.92  [grid]  [f=36]
   o=68 v= 0.965911: -11.72  33.77 -33.17  13.43 -29.41  -6.08  [rand]  [f=37]
   o=69 v= 0.968234: -10.54  33.15 -35.33  13.60 -31.44   5.32  [rand]  [f=30]
   o=70 v= 0.969311:   2.79  24.18  -2.03 -25.18 -24.84 -17.52  [rand]  [f=55]
   o=71 v= 0.959911:  23.18  30.54  -7.57  -7.37 -31.62   9.68  [grid]  [f=71]
   o=72 v= 0.965107:  -7.08  -6.41 -10.48  32.88   7.65   6.64  [grid]  [f=54]
   o=73 v= 0.954432: -40.02  35.71 -25.06  15.19 -23.34  44.27  [rand]  [f=52]
   o=74 v= 0.967154:   5.52   5.23  -8.50 -30.48  -8.22  -7.75  [grid]  [f=49]
   o=75 v= 0.958870: -11.03  29.84 -28.28  11.00  42.02   8.27  [rand]  [f=50]
   o=76 v= 0.963869: -10.25   7.87  16.61  10.71 -26.22   5.14  [grid]  [f=55]
   o=77 v= 0.964288: -27.34  26.47 -10.38  -5.57  -9.01  -0.50  [grid]  [f=39]
   o=78 v= 0.958751:  32.50  33.24 -26.55  -8.48 -23.59  40.91  [rand]  [f=52]
   o=79 v= 0.964810:  23.72   6.70   3.90  33.43  30.61   7.87  [grid]  [f=42]
   o=80 v= 0.969039:  -9.23   4.28  -8.24  28.94   6.02  -9.19  [grid]  [f=34]
   o=81 v= 0.964767: -24.04  31.61  29.37  -2.63 -30.79  12.29  [rand]  [f=42]
   o=82 v= 0.966294:  24.83  30.53  24.47  -8.09 -30.92  30.19  [grid]  [f=34]
   o=83 v= 0.964937:   9.04  -6.89   4.46  -7.53   7.54 -30.03  [grid]  [f=30]
   o=84 v= 0.965733: -28.44  29.75  27.28  -7.53 -31.38   6.86  [grid]  [f=47]
   o=85 v= 0.968747:  11.78   9.00  -7.44  15.23  13.01 -25.74  [rand]  [f=45]
   o=86 v= 0.967296: -37.36  35.27  10.68  35.92 -21.56  42.29  [rand]  [f=49]
   o=87 v= 0.958702: -13.63  27.17  25.99   4.18 -35.15  -8.00  [grid]  [f=60]
 + - saving #25 for use with twobest
 + - saving # 3 for use with twobest
 + - saving # 1 for use with twobest
 + - saving #30 for use with twobest
 + - saving # 8 for use with twobest
 + - saving #21 for use with twobest
 + - saving #10 for use with twobest
 + - saving # 0 for use with twobest
 + - saving # 4 for use with twobest
 + - saving #23 for use with twobest
 + - skip #45 for twobest: too close to set #10
 + - saving #19 for use with twobest
 + - saving #73 for use with twobest
 + - saving # 7 for use with twobest
 + - saving # 2 for use with twobest
 + - saving # 5 for use with twobest
 + - saving #13 for use with twobest
 + - saving #36 for use with twobest
 + - saving #16 for use with twobest
 + - saving #15 for use with twobest
 + - saving #24 for use with twobest
 + - skip #42 for twobest: too close to set #16
 + - saving #18 for use with twobest
 + - saving #64 for use with twobest
 + - saving #87 for use with twobest
 + - saving #78 for use with twobest
 + - saving #75 for use with twobest
 + - saving #37 for use with twobest
 + - saving #44 for use with twobest
 + - saving #14 for use with twobest
 + - saving #17 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=264.049 usiz=401.241
 + - retaining old weight image
 + - using 83961 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 74899 total points stored in 148 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.948870 [o=25 t=0]
 + -- Parameters = -11.5544 4.6815 -8.0660 5.8479 3.8565 16.7868 1.0007 1.0003 0.9953 0.0005 0.0003 0.0016
 + - param set #2 has cost=0.948771 [o=3 t=1]
 + -- Parameters = -8.5663 3.5083 -5.9330 4.7260 4.2407 11.8682 1.0138 1.0001 1.0004 0.0147 0.0028 0.0040
 + - param set #3 has cost=0.938630 [o=1 t=2]
 + -- Parameters = 0.4734 -1.7741 -8.9444 -4.0872 -1.1178 0.9563 1.0169 1.0206 0.9956 0.0044 0.0203 0.0050
 + - param set #4 has cost=0.952545 [o=30 t=3]
 + -- Parameters = 5.4946 3.5952 -3.4723 3.9661 6.3776 -11.0211 1.0075 0.9947 0.9978 0.0004 -0.0020 0.0055
 + - param set #5 has cost=0.948570 [o=8 t=4]
 + -- Parameters = -11.4832 3.5139 -9.6149 -0.4108 5.4439 16.4758 1.0739 0.9833 0.9346 -0.0065 -0.0074 -0.0069
 + - param set #6 has cost=0.954972 [o=21 t=5]
 + -- Parameters = -11.2417 3.6225 -11.3140 -5.1209 5.3935 28.1372 1.0017 0.9968 1.0017 -0.0005 -0.0007 -0.0006
 + - param set #7 has cost=0.952162 [o=10 t=6]
 + -- Parameters = 11.3262 4.1183 -10.0732 5.2658 3.7379 -23.0459 1.0367 0.9853 0.9994 0.0020 0.0134 0.0025
 + - param set #8 has cost=0.958511 [o=0 t=7]
 + -- Parameters = 6.2050 6.6378 -7.9516 -10.0526 4.0554 -4.0395 1.0224 0.9998 0.9857 -0.0011 0.0015 -0.0017
 + - param set #9 has cost=0.947729 [o=4 t=8]
 + -- Parameters = -8.0378 -2.0678 -8.4636 17.1386 -10.6086 5.2973 1.0393 0.9609 0.9616 -0.0058 -0.0073 -0.0371
 + - param set #10 has cost=0.957168 [o=23 t=9]
 + -- Parameters = 34.5569 27.7311 -14.2640 6.3455 -40.2675 44.8569 0.9961 0.9930 0.9999 -0.0002 0.0005 -0.0005
 + - param set #11 has cost=0.958857 [o=19 t=10]
 + -- Parameters = 37.9634 31.5889 -16.8416 11.7906 -35.7987 42.8962 0.9980 0.9880 0.9885 -0.0008 0.0012 -0.0008
 + - param set #12 has cost=0.955352 [o=73 t=11]
 + -- Parameters = -39.9740 35.7607 -25.0278 15.1896 -23.3182 44.3416 1.0002 1.0001 1.0033 0.0009 -0.0008 -0.0006
 + - param set #13 has cost=0.958232 [o=7 t=12]
 + -- Parameters = -39.3687 35.3971 -18.0624 -10.3579 -22.0622 -44.3902 1.0013 1.0004 1.0027 0.0024 0.0018 0.0025
 + - param set #14 has cost=0.962282 [o=2 t=13]
 + -- Parameters = -4.6510 5.5348 -7.7697 29.7085 -9.1125 7.2089 0.9989 1.0002 1.0002 -0.0002 0.0002 0.0001
 + - param set #15 has cost=0.959983 [o=5 t=14]
 + -- Parameters = -37.9106 -17.4338 5.1410 17.9803 -6.3447 40.2310 0.9994 0.9969 1.0378 0.0006 -0.0017 0.0005
 + - param set #16 has cost=0.961886 [o=13 t=15]
 + -- Parameters = -18.4857 18.8191 -37.2438 -15.9101 44.6591 -26.7009 1.0013 1.0078 1.0072 0.0164 0.0037 0.0026
 + - param set #17 has cost=0.963856 [o=36 t=16]
 + -- Parameters = -28.5589 -7.0215 -7.6352 -24.3878 -7.5602 8.0830 1.0377 1.0059 1.0013 0.0002 0.0011 -0.0007
*[#17576=0.904522] *[#17592=0.902253] *[#17595=0.89946] *[#17596=0.896975] *[#17599=0.89621] *[#17600=0.89607] *[#17602=0.887053] *[#17603=0.873599] *[#17605=0.872383] *[#17606=0.864215] *[#17610=0.860009] *[#17611=0.857778] *[#17612=0.855132] *[#17614=0.853092] *[#17616=0.851767] *[#17619=0.850603] *[#17621=0.849447] *[#17622=0.848572] *[#17625=0.847975] *[#17628=0.846166] *[#17635=0.844006] *[#17638=0.84309] *[#17648=0.841979] *[#17651=0.841599] *[#17656=0.841406] *[#17658=0.841357] *[#17659=0.841294] *[#17660=0.841194] *[#17664=0.841129] *[#17665=0.841045] *[#17666=0.840919] *[#17667=0.840686] *[#17668=0.840391] *[#17670=0.840363] 
 + - param set #18 has cost=0.840363 [o=-1 t=-1]
 + -- Parameters = -0.9924 0.3168 1.2625 0.0301 1.2430 0.1996 0.9888 0.9917 0.9788 -0.0011 -0.0007 -0.0018
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.128 
 + --- dist(#3,#1) = 0.19 
 + --- dist(#4,#1) = 0.181 
 + --- dist(#5,#1) = 0.13 
 + --- dist(#6,#1) = 0.184 
 + --- dist(#7,#1) = 0.258 
 + --- dist(#8,#1) = 0.125 
 + --- dist(#9,#1) = 0.31 
 + --- dist(#10,#1) = 0.49 
 + --- dist(#11,#1) = 0.496 
 + --- dist(#12,#1) = 0.495 
 + --- dist(#13,#1) = 0.115 
 + --- dist(#14,#1) = 0.487 
 + --- dist(#15,#1) = 0.461 
 + --- dist(#16,#1) = 0.482 
 + --- dist(#17,#1) = 0.33 
 + --- dist(#18,#1) = 0.345 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=264.049 usiz=401.241
 + - retaining old weight image
 + - using 83961 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 73889 total points stored in 146 'TOHD(13.984)' bloks (0 duplicates)
*[#17693=0.840069] *[#17694=0.839107] *[#17697=0.838707] *[#17698=0.838572] *[#17699=0.838491] *[#17704=0.837726] *[#17716=0.837626] *[#17720=0.837624] *[#17721=0.837616] *[#17722=0.837605] *[#17723=0.83759] *[#17724=0.837586] *[#17725=0.837585] *[#17727=0.837568] *[#17728=0.837541] *[#17731=0.837504] *[#17732=0.837492] *[#17733=0.837489] *[#17734=0.837479] *[#17735=0.837478] *[#17738=0.837478] *[#17740=0.837468] *[#17741=0.837448] *[#17742=0.837437] *[#17743=0.837396] *[#17744=0.837395] *[#17745=0.837375] *[#17746=0.837364] *[#17750=0.837362] *[#17751=0.837361] *[#17752=0.837347] *[#17755=0.837301] *[#17756=0.83728] *[#17757=0.837227] *[#17758=0.837206] *[#17761=0.8372] *[#17763=0.837199] *[#17764=0.837195] *[#17767=0.83719] *[#17768=0.837187] *[#17769=0.837185] *[#17770=0.837175] *[#17771=0.837159] *[#17772=0.83715] *[#17773=0.837145] *[#17774=0.837132] *[#17775=0.837132] *[#17777=0.837115] *[#17778=0.837108] *[#17779=0.837101] *[#17780=0.837089] *[#17781=0.837087] 
 + - param set #1 has cost=0.837087 [o=-1 t=-1]
 + -- Parameters = -1.0330 0.4585 1.7379 -0.0924 1.3556 0.1420 0.9801 0.9885 0.9545 -0.0010 -0.0004 -0.0015
 + - param set #2 has cost=0.942285 [o=1 t=2]
 + -- Parameters = -0.8676 -1.3763 -8.2556 0.5370 -0.7577 -0.6308 1.0125 1.0409 0.9732 0.0108 0.0244 0.0128
 + - param set #3 has cost=0.958090 [o=4 t=8]
 + -- Parameters = -8.1897 -2.1796 -8.6949 17.3802 -10.5429 5.3876 1.0387 0.9642 0.9616 0.0030 -0.0071 -0.0377
 + - param set #4 has cost=0.955781 [o=8 t=4]
 + -- Parameters = -11.5197 3.7638 -9.6087 -0.2431 5.6255 16.2579 1.0741 0.9817 0.9351 0.0027 -0.0068 -0.0070
 + - param set #5 has cost=0.953151 [o=3 t=1]
 + -- Parameters = -9.1527 3.8363 -7.8110 3.6901 4.3793 13.8365 1.0262 0.9879 0.9811 0.0290 0.0131 0.0177
 + - param set #6 has cost=0.956628 [o=25 t=0]
 + -- Parameters = -11.4972 5.0186 -8.0906 5.8116 4.1192 16.5231 1.0248 0.9973 0.9920 0.0004 -0.0003 0.0016
 + - param set #7 has cost=0.958767 [o=10 t=6]
 + -- Parameters = 10.9840 4.1128 -10.1124 4.9536 3.5986 -22.9912 1.0400 0.9890 0.9992 0.0014 0.0129 0.0013
 + - param set #8 has cost=0.961605 [o=30 t=3]
 + -- Parameters = 5.6252 3.8595 -3.7330 3.6619 6.1279 -11.0214 1.0070 0.9916 0.9989 -0.0021 -0.0005 0.0062
 + - param set #9 has cost=0.962129 [o=21 t=5]
 + -- Parameters = -11.3428 3.8723 -11.7429 -5.2763 5.6768 28.6743 0.9968 0.9965 1.0000 -0.0007 -0.0010 -0.0023
 + - param set #10 has cost=0.957974 [o=73 t=11]
 + -- Parameters = -40.0292 35.8831 -25.0135 15.1770 -23.2369 44.5001 0.9994 1.0017 1.0013 0.0007 -0.0014 -0.0008
 + - param set #11 has cost=0.960130 [o=23 t=9]
 + -- Parameters = 34.7606 28.2460 -13.9721 5.9875 -40.6526 44.9972 0.9781 0.9791 0.9944 0.0012 0.0014 -0.0012
 + - param set #12 has cost=0.961077 [o=7 t=12]
 + -- Parameters = -39.3223 35.4029 -18.0350 -10.3852 -22.1485 -44.4755 1.0010 1.0000 1.0035 0.0036 0.0020 0.0022
 + - param set #13 has cost=0.962627 [o=0 t=7]
 + -- Parameters = 6.0501 6.2827 -8.1744 -8.8662 4.1393 -3.7981 1.0373 0.9806 0.9830 -0.0019 -0.0028 0.0029
 + - param set #14 has cost=0.961402 [o=19 t=10]
 + -- Parameters = 37.9666 31.3052 -16.5261 8.9637 -35.7043 43.9890 0.9767 0.9744 0.9848 -0.0026 0.0016 -0.0021
 + - param set #15 has cost=0.962701 [o=5 t=14]
 + -- Parameters = -37.5601 -17.5119 4.9583 18.0014 -6.5407 40.1321 1.0011 1.0235 1.0367 0.0019 -0.0019 -0.0006
 + - param set #16 has cost=0.967076 [o=13 t=15]
 + -- Parameters = -18.4708 19.0529 -37.3743 -15.7857 44.6665 -26.7142 1.0013 1.0046 1.0067 0.0259 0.0046 0.0021
 + - param set #17 has cost=0.968872 [o=2 t=13]
 + -- Parameters = -4.2063 5.8741 -7.6640 28.0107 -8.5889 6.8736 0.9889 0.9979 1.0013 -0.0007 0.0083 0.0036
 + - param set #18 has cost=0.967466 [o=36 t=16]
 + -- Parameters = -28.7263 -7.0459 -7.4828 -24.4078 -7.5973 8.0860 1.0367 1.0061 1.0037 0.0000 0.0009 -0.0008
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.125 
 + --- dist(#3,#1) = 0.152 
 + --- dist(#4,#1) = 0.179 
 + --- dist(#5,#1) = 0.182 
 + --- dist(#6,#1) = 0.493 
 + --- dist(#7,#1) = 0.194 
 + --- dist(#8,#1) = 0.257 
 + --- dist(#9,#1) = 0.498 
 + --- dist(#10,#1) = 0.496 
 + --- dist(#11,#1) = 0.487 
 + --- dist(#12,#1) = 0.124 
 + --- dist(#13,#1) = 0.317 
 + --- dist(#14,#1) = 0.124 
 + --- dist(#15,#1) = 0.457 
 + --- dist(#16,#1) = 0.489 
 + --- dist(#17,#1) = 0.346 
 + --- dist(#18,#1) = 0.312 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=264.049 usiz=401.241
 + - retaining old weight image
 + - using 83961 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 74029 total points stored in 147 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.842830 [o=-1 t=-1]
 + -- Parameters = -1.1517 0.5513 1.6581 -0.0885 1.2524 -0.1697 0.9831 0.9879 0.9558 -0.0027 0.0072 -0.0041
 + - param set #2 has cost=0.933801 [o=1 t=2]
 + -- Parameters = -1.1346 -1.0447 -7.7011 1.3124 0.4845 -0.0765 1.0168 1.0334 0.9018 0.0133 0.0260 0.0101
 + - param set #3 has cost=0.957219 [o=3 t=1]
 + -- Parameters = -9.0866 3.9254 -7.7944 3.7656 4.4811 13.8488 1.0264 0.9855 0.9816 0.0288 0.0125 0.0180
 + - param set #4 has cost=0.959089 [o=8 t=4]
 + -- Parameters = -10.8708 3.7578 -9.3518 -0.0340 5.7106 15.4993 1.0824 0.9829 0.9363 0.0035 -0.0078 0.0015
 + - param set #5 has cost=0.960339 [o=25 t=0]
 + -- Parameters = -11.4932 5.1012 -8.0587 5.9184 4.0698 16.5645 1.0245 0.9971 0.9916 0.0004 -0.0002 0.0012
 + - param set #6 has cost=0.958470 [o=73 t=11]
 + -- Parameters = -39.9123 36.8326 -24.7664 14.8064 -22.6845 44.7514 0.9997 1.0100 1.0046 0.0013 -0.0012 -0.0007
 + - param set #7 has cost=0.961470 [o=4 t=8]
 + -- Parameters = -8.1693 -2.2397 -8.5147 17.3605 -10.9788 4.9064 1.0408 0.9645 0.9848 0.0029 -0.0061 -0.0391
 + - param set #8 has cost=0.963258 [o=10 t=6]
 + -- Parameters = 11.0147 4.0929 -10.0055 5.0342 3.5440 -23.0249 1.0408 0.9907 1.0012 0.0009 0.0134 0.0012
 + - param set #9 has cost=0.960993 [o=23 t=9]
 + -- Parameters = 34.7594 28.2428 -13.9793 5.9884 -40.6543 44.9956 0.9781 0.9791 0.9958 0.0008 0.0014 -0.0013
 + - param set #10 has cost=0.961266 [o=7 t=12]
 + -- Parameters = -38.7964 36.4710 -17.4932 -9.9927 -22.8623 -44.8164 0.9997 1.0000 0.9858 0.0039 0.0011 -0.0008
 + - param set #11 has cost=0.962257 [o=19 t=10]
 + -- Parameters = 36.8064 31.5869 -16.5242 8.9527 -35.7242 43.7274 0.9768 0.9736 0.9845 -0.0028 0.0015 -0.0022
 + - param set #12 has cost=0.964397 [o=30 t=3]
 + -- Parameters = 6.6509 4.2842 -3.8909 2.8621 6.3734 -11.1330 1.0152 0.9887 0.9994 -0.0040 -0.0018 0.0056
 + - param set #13 has cost=0.966679 [o=21 t=5]
 + -- Parameters = -11.3300 3.8851 -11.7793 -5.2881 5.6672 28.6707 0.9970 0.9984 0.9998 -0.0008 -0.0009 -0.0023
 + - param set #14 has cost=0.967153 [o=0 t=7]
 + -- Parameters = 5.9994 6.2841 -8.2190 -8.9036 4.1079 -3.7309 1.0347 0.9807 0.9835 -0.0024 -0.0027 0.0030
 + - param set #15 has cost=0.964612 [o=5 t=14]
 + -- Parameters = -37.5617 -17.4988 5.1686 17.9929 -6.5221 40.1237 1.0011 1.0413 1.0365 0.0019 -0.0019 -0.0005
 + - param set #16 has cost=0.968625 [o=13 t=15]
 + -- Parameters = -18.4382 19.0660 -37.4775 -15.8400 44.6667 -26.7246 1.0014 1.0045 1.0070 0.0256 0.0044 0.0023
 + - param set #17 has cost=0.969987 [o=36 t=16]
 + -- Parameters = -28.7375 -7.0833 -7.4741 -24.3991 -7.6409 8.1474 1.0352 1.0062 1.0032 -0.0002 0.0007 -0.0010
 + - param set #18 has cost=0.972711 [o=2 t=13]
 + -- Parameters = -4.2720 5.9601 -7.6592 28.1864 -8.5086 6.9341 0.9901 0.9974 1.0031 -0.0011 0.0143 0.0037
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.117 
 + --- dist(#3,#1) = 0.156 
 + --- dist(#4,#1) = 0.499 
 + --- dist(#5,#1) = 0.174 
 + --- dist(#6,#1) = 0.186 
 + --- dist(#7,#1) = 0.502 
 + --- dist(#8,#1) = 0.496 
 + --- dist(#9,#1) = 0.194 
 + --- dist(#10,#1) = 0.488 
 + --- dist(#11,#1) = 0.254 
 + --- dist(#12,#1) = 0.122 
 + --- dist(#13,#1) = 0.455 
 + --- dist(#14,#1) = 0.32 
 + --- dist(#15,#1) = 0.123 
 + --- dist(#16,#1) = 0.489 
 + --- dist(#17,#1) = 0.345 
 + --- dist(#18,#1) = 0.314 
 + - Total coarse refinement net CPU time = 0.0 s; 5078 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=264.049 usiz=401.241
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 74577 total points stored in 149 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.847620 * [o=-1 t=-1]
 + -- Parameters = -1.1517 0.5513 1.6581 -0.0885 1.2524 -0.1697 0.9831 0.9879 0.9558 -0.0027 0.0072 -0.0041
 + - cost(#2)=0.936708   [o=1 t=2]
 + -- Parameters = -1.1346 -1.0447 -7.7011 1.3124 0.4845 -0.0765 1.0168 1.0334 0.9018 0.0133 0.0260 0.0101
 + - cost(#3)=0.959443   [o=3 t=1]
 + -- Parameters = -9.0866 3.9254 -7.7944 3.7656 4.4811 13.8488 1.0264 0.9855 0.9816 0.0288 0.0125 0.0180
 + - cost(#4)=0.958708   [o=73 t=11]
 + -- Parameters = -39.9123 36.8326 -24.7664 14.8064 -22.6845 44.7514 0.9997 1.0100 1.0046 0.0013 -0.0012 -0.0007
 + - cost(#5)=0.961298   [o=8 t=4]
 + -- Parameters = -10.8708 3.7578 -9.3518 -0.0340 5.7106 15.4993 1.0824 0.9829 0.9363 0.0035 -0.0078 0.0015
 + - cost(#6)=0.962148   [o=25 t=0]
 + -- Parameters = -11.4932 5.1012 -8.0587 5.9184 4.0698 16.5645 1.0245 0.9971 0.9916 0.0004 -0.0002 0.0012
 + - cost(#7)=0.961943   [o=23 t=9]
 + -- Parameters = 34.7594 28.2428 -13.9793 5.9884 -40.6543 44.9956 0.9781 0.9791 0.9958 0.0008 0.0014 -0.0013
 + - cost(#8)=0.962120   [o=7 t=12]
 + -- Parameters = -38.7964 36.4710 -17.4932 -9.9927 -22.8623 -44.8164 0.9997 1.0000 0.9858 0.0039 0.0011 -0.0008
 + - cost(#9)=0.963314   [o=4 t=8]
 + -- Parameters = -8.1693 -2.2397 -8.5147 17.3605 -10.9788 4.9064 1.0408 0.9645 0.9848 0.0029 -0.0061 -0.0391
 + - cost(#10)=0.963276   [o=19 t=10]
 + -- Parameters = 36.8064 31.5869 -16.5242 8.9527 -35.7242 43.7274 0.9768 0.9736 0.9845 -0.0028 0.0015 -0.0022
 + - cost(#11)=0.964752   [o=10 t=6]
 + -- Parameters = 11.0147 4.0929 -10.0055 5.0342 3.5440 -23.0249 1.0408 0.9907 1.0012 0.0009 0.0134 0.0012
 + - cost(#12)=0.966389   [o=30 t=3]
 + -- Parameters = 6.6509 4.2842 -3.8909 2.8621 6.3734 -11.1330 1.0152 0.9887 0.9994 -0.0040 -0.0018 0.0056
 + - cost(#13)=0.965497   [o=5 t=14]
 + -- Parameters = -37.5617 -17.4988 5.1686 17.9929 -6.5221 40.1237 1.0011 1.0413 1.0365 0.0019 -0.0019 -0.0005
 + - cost(#14)=0.968047   [o=21 t=5]
 + -- Parameters = -11.3300 3.8851 -11.7793 -5.2881 5.6672 28.6707 0.9970 0.9984 0.9998 -0.0008 -0.0009 -0.0023
 + - cost(#15)=0.968538   [o=0 t=7]
 + -- Parameters = 5.9994 6.2841 -8.2190 -8.9036 4.1079 -3.7309 1.0347 0.9807 0.9835 -0.0024 -0.0027 0.0030
 + - cost(#16)=0.969030   [o=13 t=15]
 + -- Parameters = -18.4382 19.0660 -37.4775 -15.8400 44.6667 -26.7246 1.0014 1.0045 1.0070 0.0256 0.0044 0.0023
 + - cost(#17)=0.971264   [o=36 t=16]
 + -- Parameters = -28.7375 -7.0833 -7.4741 -24.3991 -7.6409 8.1474 1.0352 1.0062 1.0032 -0.0002 0.0007 -0.0010
 + - cost(#18)=0.974028   [o=2 t=13]
 + -- Parameters = -4.2720 5.9601 -7.6592 28.1864 -8.5086 6.9341 0.9901 0.9974 1.0031 -0.0011 0.0143 0.0037
 + - cost(#19)=0.959922   [o=-2 t=-2]
 + -- Parameters = -1.5842 -0.1074 -2.2390 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.847571 * [o=-1 t=-1]
 + -- Parameters = -1.1384 0.5480 1.6452 -0.0816 1.2391 -0.1195 0.9842 0.9877 0.9558 -0.0023 0.0071 -0.0046
 + - cost(#2)=0.933545   [o=1 t=2]
 + -- Parameters = -1.1981 -0.8389 -7.3106 1.0791 1.7105 -0.2274 1.0179 1.0328 0.9085 0.0158 0.0267 0.0312
 + - cost(#3)=0.958557   [o=3 t=1]
 + -- Parameters = -9.2132 4.3717 -7.7725 3.9552 4.9258 13.8428 1.0308 0.9763 0.9813 0.0325 0.0145 0.0179
 + - cost(#4)=0.958670   [o=73 t=11]
 + -- Parameters = -39.9135 36.8262 -24.7743 14.8238 -22.6819 44.7481 0.9996 1.0100 1.0046 0.0013 0.0062 -0.0007
 + - cost(#5)=0.960759   [o=8 t=4]
 + -- Parameters = -10.7121 3.8338 -9.2148 0.0306 5.7293 15.3183 1.0838 0.9823 0.9377 0.0037 -0.0080 0.0095
 + - cost(#6)=0.962123   [o=25 t=0]
 + -- Parameters = -11.5003 5.0987 -8.0457 5.9305 4.0476 16.5794 1.0243 0.9969 0.9918 0.0004 -0.0002 0.0012
 + - cost(#7)=0.961943   [o=23 t=9]
 + -- Parameters = 34.7594 28.2428 -13.9793 5.9884 -40.6543 44.9956 0.9781 0.9791 0.9958 0.0008 0.0014 -0.0013
 + - cost(#8)=0.961744   [o=7 t=12]
 + -- Parameters = -38.8043 36.4871 -17.4737 -9.8957 -23.0054 -44.7735 0.9998 0.9992 0.9866 0.0114 0.0010 -0.0015
 + - cost(#9)=0.963060   [o=4 t=8]
 + -- Parameters = -8.1849 -2.2109 -8.5490 17.3656 -11.0386 4.8228 1.0408 0.9644 0.9847 0.0025 0.0011 -0.0388
 + - cost(#10)=0.962565   [o=19 t=10]
 + -- Parameters = 36.7582 31.6104 -16.5061 8.9588 -35.6482 43.6518 0.9768 0.9745 0.9620 -0.0026 0.0009 -0.0021
 + - cost(#11)=0.964430   [o=10 t=6]
 + -- Parameters = 10.9205 4.1148 -9.9730 4.8949 3.5776 -22.9917 1.0407 0.9890 1.0024 -0.0058 0.0135 0.0011
 + - cost(#12)=0.965905   [o=30 t=3]
 + -- Parameters = 6.8546 4.1929 -4.1745 2.2581 6.2655 -11.1930 1.0145 0.9921 0.9966 -0.0083 -0.0020 0.0063
 + - cost(#13)=0.965402   [o=5 t=14]
 + -- Parameters = -37.5617 -17.4988 5.1686 17.9929 -6.5221 40.1237 1.0011 1.0413 1.0365 0.0019 -0.0019 0.0069
 + - cost(#14)=0.967846   [o=21 t=5]
 + -- Parameters = -11.3821 3.9181 -12.0175 -5.3746 5.4856 28.7472 0.9967 1.0000 0.9966 -0.0009 -0.0082 -0.0013
 + - cost(#15)=0.968477   [o=0 t=7]
 + -- Parameters = 5.9719 6.3823 -8.2035 -8.8963 4.1644 -3.7235 1.0350 0.9806 0.9835 -0.0024 -0.0036 0.0036
 + - cost(#16)=0.969005   [o=13 t=15]
 + -- Parameters = -18.4744 19.0434 -37.4771 -15.8299 44.6727 -26.7284 1.0012 1.0045 1.0070 0.0257 0.0043 0.0023
 + - cost(#17)=0.970843   [o=36 t=16]
 + -- Parameters = -28.6381 -7.0737 -7.4492 -24.6509 -7.5548 8.1202 1.0325 1.0062 1.0050 -0.0094 -0.0002 -0.0007
 + - cost(#18)=0.974018   [o=2 t=13]
 + -- Parameters = -4.2722 5.9602 -7.6689 28.1810 -8.5037 6.9365 0.9901 0.9973 1.0033 -0.0010 0.0143 0.0030
 + - cost(#19)=0.847733   [o=-2 t=-2]
 + -- Parameters = -1.1205 0.5079 1.6004 0.0330 1.4434 -0.0952 0.9842 0.9914 0.9605 0.0028 0.0080 0.0024
 + - case #1 [o=-1 t=-1] is now the best
 + - Initial  cost = 0.847571
 + - Initial fine Parameters = -1.1384 0.5480 1.6452 -0.0816 1.2391 -0.1195 0.9842 0.9877 0.9558 -0.0023 0.0071 -0.0046
 + - Finalish cost = 0.847374 ; 348 funcs
 + - ini Finalish Parameters = -1.2205 0.6402 1.6611 -0.0496 1.0115 -0.2827 0.9855 0.9863 0.9542 -0.0014 0.0096 -0.0108
 + - Final    cost = 0.847374 ; 266 funcs
 + Final fine fit Parameters:
       x-shift= -1.2218   y-shift=  0.6397   z-shift=  1.6607  ...  enorm=  2.1587 mm
       z-angle= -0.0490   x-angle=  1.0123   y-angle= -0.2831  ...  total=  1.0525 deg
       x-scale=  0.9855   y-scale=  0.9863   z-scale=  0.9542  ...  vol3D=  0.9275 = base bigger than source
     y/x-shear= -0.0014 z/x-shear=  0.0096 z/y-shear= -0.0107
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -1.2218 0.6397 1.6607 -0.0490 1.0123 -0.2831 0.9855 0.9863 0.9542 -0.0014 0.0096 -0.0107
++ Unloading unneeded data
++ Wrote -1Dmatrix_save ./MPRAGE.GB18_unif_al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 42.6
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_MPRAGE.GB18_unif_lr_al_junk -overwrite ./MPRAGE.GB18_unif_unflipped_ns+orig
++ processing ./MPRAGE.GB18_unif_unflipped_ns+orig ...
#Script is running (command trimmed):
  3dAllineate -lpa -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./__tt_MPRAGE.GB18_unif_lr_al_junk+orig -prefix ./MPRAGE.GB18_unif_flip_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GB18_unif_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_MPRAGE.GB18_unif_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4837001 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 83961 voxels [12.5%] in weight mask
++ Number of points for matching = 83961
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.837 50.487 42.754 (index)
 + source center of mass = 114.043 193.628 161.503 (index)
 + source-target CM = 1.276 -0.107 -2.239 (xyz)
 + estimated center of mass shifts = 1.276 -0.107 -2.239
++ shift param auto-range: -69.3..71.9 -81.9..81.7 -73.7..69.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -8.723892 .. 11.276108  center = 1.276108
 + Range param#2 [y-shift] = -10.107376 .. 9.892624  center = -0.107376
 + Range param#3 [z-shift] = -12.239006 .. 7.760994  center = -2.239006
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -38.723892 .. 41.276108  center = 1.276108
 + Range param#2 [y-shift] = -40.107376 .. 39.892624  center = -0.107376
 + Range param#3 [z-shift] = -42.239006 .. 37.760994  center = -2.239006
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -38.724 ..   41.276
 +       y-shift =  -40.107 ..   39.893
 +       z-shift =  -42.239 ..   37.761
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4837001 [out of 23184225] voxels
 + base mask has 104049 [out of 669312] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=264.049 usiz=401.241
 + - copying weight image
 + - using 83961 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 74931 total points stored in 146 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#o*[#2=0.986764] *-*[#4=0.982744] *-*[#6=0.964535] *+ooo+*[#24=0.964083] *+o-*[#63=0.96324] *.*[#2085=0.961666] *$-.++
 + - best 88 costs found:
   o= 0 v= 0.961666:   7.94   6.56  -8.91   7.50   7.50 -30.00  [grid]
   o= 1 v= 0.963240:   7.94  -6.77  -8.91  -7.50  -7.50  -7.50  [grid]
   o= 2 v= 0.963430:  23.60  29.52  -9.23   8.73 -38.75  33.73  [rand]
   o= 3 v= 0.964025:  36.14  30.45 -18.01  11.68 -29.04  39.38  [rand]
   o= 4 v= 0.964083:  -5.39  -6.77  -8.91   7.50  -7.50   7.50  [grid]
   o= 5 v= 0.964130: -30.56 -11.90   0.50  23.31   3.26  40.47  [rand]
   o= 6 v= 0.964249: -30.56 -11.90  -4.98  23.31   3.26  40.47  [rand]
   o= 7 v= 0.964508:   7.94   6.56  -8.91  -7.50   7.50  -7.50  [grid]
   o= 8 v= 0.964535:  -5.39   6.56  -8.91   7.50   7.50   7.50  [grid]
   o= 9 v= 0.966203: -21.05  29.52   4.76   8.73 -38.75 -33.73  [rand]
   o=10 v= 0.966474: -33.59  30.45 -18.01 -11.68 -29.04 -39.38  [rand]
   o=11 v= 0.966893:  23.60  29.52   4.76   8.73 -38.75  33.73  [rand]
   o=12 v= 0.967240: -25.39  26.56  -8.91   7.50 -30.00  -7.50  [grid]
   o=13 v= 0.967242: -30.56 -11.90  -4.98  23.31  -3.26  40.47  [rand]
   o=14 v= 0.967318:  -5.39   6.56  -8.91   7.50   7.50  30.00  [grid]
   o=15 v= 0.967448:  27.94  26.56  -8.91   7.50 -30.00  30.00  [grid]
   o=16 v= 0.967492: -30.56 -11.90   0.50  23.31  -3.26  40.47  [rand]
   o=17 v= 0.967728:  -5.39  -6.77  -8.91   7.50  -7.50  -7.50  [grid]
   o=18 v= 0.967904:  37.94  27.66  -7.12  15.70 -36.90  27.47  [rand]
   o=19 v= 0.968100:  17.26  19.39   3.49 -20.53   3.14  10.08  [rand]
   o=20 v= 0.968136:   7.94  -6.77   4.43  -7.50   7.50 -30.00  [grid]
   o=21 v= 0.968240: -33.05 -16.69   6.36  16.34   8.64  40.54  [rand]
   o=22 v= 0.968807: -25.39  26.56  -8.91  -7.50  -7.50   7.50  [grid]
   o=23 v= 0.968917:  15.48  -9.56  -7.08  15.99  13.53  29.93  [rand]
   o=24 v= 0.969277:  27.94   6.56   4.43   7.50  -7.50   7.50  [grid]
   o=25 v= 0.969346: -18.21  16.56   0.36  30.54  19.59 -20.03  [rand]
   o=26 v= 0.969383:  -5.39  -6.77  -8.91   7.50  -7.50  30.00  [grid]
   o=27 v= 0.969396: -12.93   9.35  -7.08 -15.99  13.53  29.93  [rand]
   o=28 v= 0.969420:  36.14  30.45 -18.01 -11.68 -29.04  39.38  [rand]
   o=29 v= 0.969458: -22.63   6.82  11.69 -13.51 -15.92  -9.43  [rand]
   o=30 v= 0.969481:  27.94  26.56   4.43   7.50 -30.00  30.00  [grid]
   o=31 v= 0.969882:  35.10  29.39  10.72 -31.95  -9.87  34.85  [rand]
   o=32 v= 0.969974:  15.28  15.43 -37.92  14.61  39.00  28.71  [rand]
   o=33 v= 0.970058:   7.94   6.56  -8.91  -7.50   7.50 -30.00  [grid]
   o=34 v= 0.970106: -17.06  26.04  -8.29   6.51 -20.18  -7.56  [rand]
   o=35 v= 0.970224:  15.22  23.76 -20.42   5.58 -38.34  17.97  [rand]
   o=36 v= 0.970314:   7.94   6.56  -8.91 -30.00  -7.50  -7.50  [grid]
   o=37 v= 0.970393:   7.94  26.56   4.43  30.00   7.50  30.00  [grid]
   o=38 v= 0.970464: -27.74  27.04  31.37  -7.44 -27.42 -25.63  [rand]
   o=39 v= 0.970474: -25.39  26.56  -8.91  -7.50 -30.00  -7.50  [grid]
   o=40 v= 0.970542:  31.40  32.81  -5.43   3.65 -37.49   5.77  [rand]
   o=41 v= 0.970611: -33.58  35.57 -16.49  40.22 -24.26  41.52  [rand]
   o=42 v= 0.970615: -21.05  29.52  -9.23   8.73 -38.75 -33.73  [rand]
   o=43 v= 0.970735:   7.94  -6.77  -8.91   7.50   7.50  30.00  [grid]
   o=44 v= 0.970778:  36.69  29.40  -5.34  13.33   5.58  13.04  [rand]
   o=45 v= 0.970883:   9.92  20.33 -19.71  25.20  18.50  13.54  [rand]
   o=46 v= 0.970904:   9.70  34.93 -28.71   3.45 -23.10   5.60  [rand]
   o=47 v= 0.970973: -25.39  26.56  -8.91  -7.50 -30.00 -30.00  [grid]
   o=48 v= 0.971060:  15.30  15.61  12.43 -24.25 -37.55  -4.41  [rand]
   o=49 v= 0.971118:  15.48   9.35  -7.08  15.99  13.53 -29.93  [rand]
   o=50 v= 0.971200:  -5.39   6.56  -8.91  30.00  -7.50   7.50  [grid]
   o=51 v= 0.971232: -12.75 -15.83  12.43  24.25  37.55  -4.41  [rand]
   o=52 v= 0.971344: -25.39  -6.77  -8.91 -30.00  -7.50   7.50  [grid]
   o=53 v= 0.971378: -25.39  26.56   4.43   7.50   7.50 -30.00  [grid]
   o=54 v= 0.971422:  23.60  29.52   4.76  -8.73 -38.75  33.73  [rand]
   o=55 v= 0.971463: -30.56  11.69  -4.98  23.31   3.26 -40.47  [rand]
   o=56 v= 0.971577:  27.94  26.56   4.43   7.50   7.50   7.50  [grid]
   o=57 v= 0.971616: -17.06  26.04   3.81  -6.51  20.18   7.56  [rand]
   o=58 v= 0.971623:  11.73  27.16 -23.73  34.95   5.03  42.69  [rand]
   o=59 v= 0.971650: -25.39   6.56  -8.91   7.50   7.50  -7.50  [grid]
   o=60 v= 0.971694:   7.94  -6.77  -8.91   7.50  30.00  30.00  [grid]
   o=61 v= 0.971711: -17.06  26.04  -8.29   6.51 -20.18   7.56  [rand]
   o=62 v= 0.971713:  27.94   6.56   4.43   7.50   7.50   7.50  [grid]
   o=63 v= 0.971778:  17.79  16.70   8.77  -3.23  15.52  33.24  [rand]
   o=64 v= 0.971779:   7.94  -6.77   4.43 -30.00 -30.00 -30.00  [grid]
   o=65 v= 0.971817:  36.13  35.57 -16.49  40.22  24.26  41.52  [rand]
   o=66 v= 0.971834:  27.94  26.56   4.43   7.50  -7.50   7.50  [grid]
   o=67 v= 0.971853:  27.94  26.56  -8.91  -7.50 -30.00   7.50  [grid]
   o=68 v= 0.971888:   7.94  -6.77   4.43   7.50  30.00 -30.00  [grid]
   o=69 v= 0.971905:   5.42  24.02   0.38 -26.16  25.44  13.47  [rand]
   o=70 v= 0.971909:  11.73  27.16 -23.73  34.95  -5.03  42.69  [rand]
   o=71 v= 0.971913: -35.39  27.66  -7.12 -15.70 -36.90 -27.47  [rand]
   o=72 v= 0.971985: -25.39  26.56  -8.91  -7.50  -7.50  -7.50  [grid]
   o=73 v= 0.971991:  28.21  28.03 -40.18  15.05   4.71  12.78  [rand]
   o=74 v= 0.971995: -25.39  26.56   4.43  30.00   7.50 -30.00  [grid]
   o=75 v= 0.972002:   7.94  -6.77   4.43 -30.00  -7.50 -30.00  [grid]
   o=76 v= 0.972012:   7.94  -6.77   4.43  -7.50  -7.50 -30.00  [grid]
   o=77 v= 0.972013: -30.56  11.69   0.50  23.31   3.26 -40.47  [rand]
   o=78 v= 0.972031: -19.70  28.27  30.01   3.65 -28.33  14.78  [rand]
   o=79 v= 0.972038:  35.05  31.81   5.47  12.26 -17.56  17.80  [rand]
   o=80 v= 0.972086:   7.94  -6.77  -8.91 -30.00  -7.50  -7.50  [grid]
   o=81 v= 0.972105:   7.94  26.56   4.43  30.00  -7.50  30.00  [grid]
   o=82 v= 0.972115:  29.13  27.51 -12.06  16.34 -19.59  25.89  [rand]
   o=83 v= 0.972139: -12.72  15.43 -37.92 -14.61  39.00 -28.71  [rand]
   o=84 v= 0.972157: -12.93  -9.56  -7.08 -15.99  13.53 -29.93  [rand]
   o=85 v= 0.972161:  15.28  15.43 -37.92  14.61  39.00 -28.71  [rand]
   o=86 v= 0.972176:  23.60  29.52  -9.23  -8.73 -38.75  33.73  [rand]
   o=87 v= 0.972222:   7.94   6.56  -8.91   7.50  30.00  30.00  [grid]
 + - A little optimization:*[#11714=0.958837] *[#11723=0.957768] *[#11725=0.95681] *[#11727=0.956143] *[#11730=0.955712] *[#11731=0.955586] *[#11735=0.955314] *[#11737=0.955119] *[#11738=0.955039] *[#11741=0.954956] *[#11745=0.954944] *[#11746=0.954766] *[#11747=0.954577] *[#11748=0.954219] *[#11752=0.954119] *[#11756=0.954076] *[#11759=0.954042] *[#11762=0.954019] .*[#11778=0.953025] *[#11779=0.948822] *[#11781=0.94723] *[#11782=0.941917] *[#11786=0.93954] *[#11787=0.938794] *[#11789=0.938231] *[#11791=0.937668] *[#11794=0.937028] *[#11798=0.93699] *[#11802=0.936842] *[#11803=0.93678] *[#11806=0.936587] *[#11807=0.936357] *[#11814=0.936231] *[#11815=0.936208] *[#11816=0.936192] *[#11818=0.936121] *[#11819=0.936078] *[#11824=0.935937] *[#11825=0.935825] *[#11828=0.935745] *[#11831=0.93573] *[#11834=0.935715] *[#11836=0.935696] .......................................................................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.954019:  11.64   5.16 -10.03   8.06   8.64 -29.49  [grid]  [f=51]
  *o= 1 v= 0.935696:   5.08  -6.70  -4.30  -5.04  -6.39  -2.90  [grid]  [f=73]
   o= 2 v= 0.957888:  28.73  27.82  -7.58   9.63 -40.39  28.61  [rand]  [f=44]
   o= 3 v= 0.954403:  36.28  34.90 -16.24   9.28 -31.15  40.83  [rand]  [f=44]
   o= 4 v= 0.954185:  -5.39  -2.80  -8.14   8.20  -7.63   7.49  [grid]  [f=40]
   o= 5 v= 0.960739: -31.32 -14.16  -0.03  22.83   0.81  42.58  [rand]  [f=49]
   o= 6 v= 0.962842: -31.60 -12.49  -1.13  22.83   3.39  40.52  [rand]  [f=32]
   o= 7 v= 0.950689:   9.42   5.10  -8.05  -7.35   2.12 -13.52  [grid]  [f=61]
   o= 8 v= 0.939111:  -5.10   1.43  -5.23   5.06   3.16   7.82  [grid]  [f=66]
   o= 9 v= 0.961041: -21.03  29.12  -0.02   7.94 -38.05 -35.24  [rand]  [f=47]
   o=10 v= 0.957236: -34.54  30.12 -16.97  -6.88 -36.36 -44.99  [rand]  [f=64]
   o=11 v= 0.956175:  26.09  26.86  -1.34   6.79 -33.74  39.43  [rand]  [f=44]
   o=12 v= 0.959240: -23.45  28.13  -7.71   6.54 -34.03  -7.95  [grid]  [f=49]
   o=13 v= 0.962884: -30.56 -11.90  -4.98  23.31   1.24  40.47  [rand]  [f=28]
   o=14 v= 0.957416:  -7.45   2.49  -7.85   2.19   3.74  27.71  [grid]  [f=57]
   o=15 v= 0.957116:  30.06  29.27  -7.51   6.32 -37.37  28.48  [grid]  [f=58]
   o=16 v= 0.963358: -30.56 -11.90   0.50  23.31   1.24  40.47  [rand]  [f=28]
   o=17 v= 0.942414:  -1.74  -3.37  -7.19   4.59  -5.26   1.59  [grid]  [f=49]
   o=18 v= 0.956745:  30.87  29.24 -10.09   3.83 -34.92  27.65  [rand]  [f=53]
   o=19 v= 0.960420:  20.06  20.74   2.43 -20.86   4.06  11.36  [rand]  [f=46]
   o=20 v= 0.955993:   7.94  -8.67   0.27 -12.10   4.98 -33.69  [grid]  [f=37]
   o=21 v= 0.960595: -33.11 -19.68   3.10  16.56   6.16  41.22  [rand]  [f=46]
   o=22 v= 0.962530: -23.21  26.89  -8.98  -4.73  -6.05   7.28  [grid]  [f=41]
   o=23 v= 0.966445:  15.68  -8.66  -6.01  17.70  12.87  30.22  [rand]  [f=50]
   o=24 v= 0.959546:  26.62   1.88   3.18   6.09  -5.96   6.73  [grid]  [f=46]
   o=25 v= 0.962758: -18.25  19.73  -0.20  29.91  17.39 -20.28  [rand]  [f=43]
   o=26 v= 0.960604:  -6.45  -6.30  -4.44   4.82  -6.66  32.09  [grid]  [f=47]
   o=27 v= 0.963371: -11.16   7.30  -9.55 -14.66  13.41  30.37  [rand]  [f=52]
   o=28 v= 0.952304:  34.19  33.20 -22.78  -3.59 -27.93  42.89  [rand]  [f=41]
   o=29 v= 0.964611: -23.76   7.17  12.12  -9.28 -16.25 -13.73  [rand]  [f=49]
   o=30 v= 0.966995:  28.55  30.05   4.22   7.50 -29.98  29.69  [grid]  [f=29]
   o=31 v= 0.967307:  34.35  30.12  14.48 -32.60  -9.96  34.99  [rand]  [f=36]
   o=32 v= 0.963607:  17.10  19.39 -35.94  16.55  40.34  27.94  [rand]  [f=63]
   o=33 v= 0.950927:   8.48   4.72  -8.56  -5.77  -0.20 -17.58  [grid]  [f=80]
   o=34 v= 0.958066: -18.49  32.90  -4.39   5.58 -24.18  -2.80  [rand]  [f=44]
   o=35 v= 0.958901:  15.46  26.76 -17.90   3.36 -41.13  14.39  [rand]  [f=49]
   o=36 v= 0.961449:   8.23   1.03  -6.04 -28.76  -8.06  -4.75  [grid]  [f=51]
   o=37 v= 0.963458:   8.49  25.68  -0.02  28.86   7.37  29.97  [grid]  [f=42]
   o=38 v= 0.964919: -28.60  33.36  28.25  -8.90 -27.09 -27.62  [rand]  [f=37]
   o=39 v= 0.962442: -23.93  30.37  -8.81  -6.18 -31.94  -6.94  [grid]  [f=43]
   o=40 v= 0.964690:  29.50  28.73  -6.97   3.60 -34.99   6.51  [rand]  [f=45]
   o=41 v= 0.968604: -33.20  35.35 -16.86  40.71 -18.90  40.16  [rand]  [f=36]
   o=42 v= 0.961721: -21.89  28.93  -1.37   7.47 -37.79 -33.30  [rand]  [f=40]
   o=43 v= 0.964192:   3.07  -5.43  -8.90   7.12   7.82  29.51  [grid]  [f=47]
   o=44 v= 0.963278:  33.44  29.56  -5.81   8.58   2.37  14.71  [rand]  [f=46]
   o=45 v= 0.964832:   6.60  20.38 -20.15  25.90  17.85  13.56  [rand]  [f=36]
   o=46 v= 0.968746:  10.31  35.37 -28.23   1.00 -23.42   4.54  [rand]  [f=47]
   o=47 v= 0.966061: -25.79  30.68  -8.70  -7.27 -29.30 -29.90  [grid]  [f=40]
   o=48 v= 0.970288:  15.22  15.31  12.44 -23.69 -37.17  -3.93  [rand]  [f=36]
   o=49 v= 0.960356:  11.47   8.74  -8.82  10.96  12.05 -30.37  [rand]  [f=50]
   o=50 v= 0.961667:  -2.37   4.34  -7.86  29.14  -8.11   7.97  [grid]  [f=52]
   o=51 v= 0.967635: -12.26 -14.86  11.62  22.17  37.61  -3.24  [rand]  [f=47]
   o=52 v= 0.964481: -24.74  -6.18  -8.00 -25.15  -6.47   8.69  [grid]  [f=40]
   o=53 v= 0.961843: -25.69  28.92   4.19  11.27   7.99 -27.87  [grid]  [f=56]
   o=54 v= 0.957225:  29.38  27.59   1.72  -1.13 -35.33  38.71  [rand]  [f=47]
   o=55 v= 0.967417: -32.52  11.97  -1.33  24.38   4.01 -39.41  [rand]  [f=52]
   o=56 v= 0.960875:  30.47  29.50   5.84   4.62   2.34  12.93  [grid]  [f=40]
   o=57 v= 0.967199: -16.94  25.27   3.18  -5.19  19.22   5.36  [rand]  [f=45]
   o=58 v= 0.964500:  13.77  22.84 -23.00  33.35  -5.14  38.44  [rand]  [f=50]
   o=59 v= 0.965522: -21.18   6.20  -6.83   7.91   4.20  -8.91  [grid]  [f=50]
   o=60 v= 0.969349:   7.24  -9.74  -7.85   7.08  29.11  29.93  [grid]  [f=40]
   o=61 v= 0.958163: -15.94  33.52  -4.55   7.25 -24.40   0.68  [rand]  [f=42]
   o=62 v= 0.960314:  31.16   5.32   2.44   6.97   5.71   9.85  [grid]  [f=46]
   o=63 v= 0.970102:  17.41  17.26   7.76  -3.90  14.94  32.70  [rand]  [f=36]
   o=64 v= 0.967417:   8.89  -7.53   4.60 -24.15 -29.76 -29.75  [grid]  [f=38]
   o=65 v= 0.965341:  34.83  35.36 -16.77  35.06  24.10  41.04  [rand]  [f=48]
   o=66 v= 0.966468:  28.11  26.84   1.27   4.94  -4.39   9.21  [grid]  [f=43]
   o=67 v= 0.966025:  27.24  28.62 -11.76  -3.75 -32.67  10.77  [grid]  [f=52]
   o=68 v= 0.967821:   8.46  -3.63   3.02  12.34  28.38 -29.03  [grid]  [f=52]
   o=69 v= 0.949181:   3.08  19.73   1.57 -21.80  25.71  14.96  [rand]  [f=69]
   o=70 v= 0.966376:  11.77  23.55 -23.41  34.11  -4.84  42.21  [rand]  [f=41]
   o=71 v= 0.954537: -32.84  26.42 -11.50  -3.62 -39.81 -31.47  [rand]  [f=49]
   o=72 v= 0.967407: -24.08  26.24 -10.63  -2.94  -7.30  -6.82  [grid]  [f=38]
   o=73 v= 0.955851:  34.14  28.38 -40.98  10.31   3.07   4.80  [rand]  [f=45]
   o=74 v= 0.957844: -34.95  24.79   5.85  31.47   5.25 -34.92  [grid]  [f=46]
   o=75 v= 0.954185:   8.32  -8.05  -0.36 -18.17  -7.12 -27.54  [grid]  [f=60]
   o=76 v= 0.955137:   8.24  -8.47  -0.30  -7.02  -4.05 -29.76  [grid]  [f=44]
   o=77 v= 0.967558: -31.43  11.44  -2.76  20.96   2.46 -35.74  [rand]  [f=38]
   o=78 v= 0.967945: -19.35  29.72  26.50   0.57 -31.46  13.82  [rand]  [f=41]
   o=79 v= 0.964735:  33.59  32.96   7.67  10.69 -11.07  15.93  [rand]  [f=43]
   o=80 v= 0.959441:   8.27  -2.67  -8.37 -27.59  -9.61  -8.18  [grid]  [f=38]
   o=81 v= 0.962776:  10.04  34.30   2.74  29.51  -6.31  28.91  [grid]  [f=42]
   o=82 v= 0.963800:  36.01  28.09 -15.47  14.77 -25.43  28.06  [rand]  [f=41]
   o=83 v= 0.956439: -18.39  20.52 -36.75 -14.12  43.25 -31.17  [rand]  [f=46]
   o=84 v= 0.964825: -14.71 -11.30  -7.86 -17.74  13.83 -32.67  [rand]  [f=48]
   o=85 v= 0.965254:  12.97  12.85 -37.50  13.85  34.36 -29.67  [rand]  [f=42]
   o=86 v= 0.958040:  29.18  27.36  -9.45   5.20 -38.13  31.57  [rand]  [f=47]
   o=87 v= 0.965937:   6.96   4.17  -7.14   4.36  31.10  32.18  [grid]  [f=44]
 + - saving # 1 for use with twobest
 + - saving # 8 for use with twobest
 + - saving #17 for use with twobest
 + - saving #69 for use with twobest
 + - saving # 7 for use with twobest
 + - skip #33 for twobest: too close to set # 7
 + - saving #28 for use with twobest
 + - saving # 0 for use with twobest
 + - saving #75 for use with twobest
 + - saving # 4 for use with twobest
 + - saving # 3 for use with twobest
 + - saving #71 for use with twobest
 + - saving #76 for use with twobest
 + - saving #73 for use with twobest
 + - saving #20 for use with twobest
 + - saving #11 for use with twobest
 + - saving #83 for use with twobest
 + - saving #18 for use with twobest
 + - skip #15 for twobest: too close to set #18
 + - saving #54 for use with twobest
 + - saving #10 for use with twobest
 + - saving #14 for use with twobest
 + - saving #74 for use with twobest
 + - skip # 2 for twobest: too close to set #15
 + - skip #86 for twobest: too close to set #18
 + - saving #34 for use with twobest
 + - skip #61 for twobest: too close to set #34
 + - saving #35 for use with twobest
 + - saving #12 for use with twobest
 + - saving #80 for use with twobest
 + - saving #24 for use with twobest
 + - saving #62 for use with twobest
 + - skip #49 for twobest: too close to set # 0
 + - saving #19 for use with twobest
 + - saving #21 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=264.049 usiz=401.241
 + - retaining old weight image
 + - using 83961 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 74899 total points stored in 148 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.947469 [o=1 t=0]
 + -- Parameters = 5.0767 -6.6092 -4.5296 -5.5044 -6.3163 -2.6588 1.0002 0.9998 0.9985 -0.0002 0.0123 -0.0002
 + - param set #2 has cost=0.943073 [o=8 t=1]
 + -- Parameters = -5.0147 2.2422 -6.0127 4.3868 2.1245 8.0655 0.9878 0.9967 0.9770 -0.0009 -0.0010 0.0004
 + - param set #3 has cost=0.941693 [o=17 t=2]
 + -- Parameters = -0.0849 -4.3378 -8.0871 4.4541 -6.9961 -0.5549 1.0292 0.9796 0.9571 0.0013 -0.0012 0.0129
 + - param set #4 has cost=0.954938 [o=69 t=3]
 + -- Parameters = 3.1764 19.5924 1.2175 -21.8052 25.4009 15.3787 0.9934 0.9940 1.0021 -0.0014 -0.0006 -0.0021
 + - param set #5 has cost=0.957461 [o=7 t=4]
 + -- Parameters = 9.7966 4.9507 -7.7352 -6.8449 1.9250 -12.4929 1.0390 1.0046 0.9920 0.0001 -0.0008 -0.0011
 + - param set #6 has cost=0.957289 [o=28 t=5]
 + -- Parameters = 34.1012 33.0198 -22.9131 -3.0365 -27.6561 42.0218 1.0012 1.0014 0.9995 -0.0003 -0.0004 0.0001
 + - param set #7 has cost=0.961200 [o=0 t=6]
 + -- Parameters = 11.5359 4.9579 -10.0260 7.8939 8.3587 -29.1946 1.0054 0.9968 0.9996 -0.0003 0.0003 0.0014
 + - param set #8 has cost=0.962393 [o=75 t=7]
 + -- Parameters = 8.2557 -7.8414 -0.4926 -17.8136 -6.1718 -28.1377 1.0057 0.9951 1.0014 -0.0046 0.0010 0.0166
 + - param set #9 has cost=0.962901 [o=4 t=8]
 + -- Parameters = -5.4570 -2.9620 -8.4527 8.0615 -7.1914 7.2658 0.9937 0.9962 0.9926 0.0016 -0.0018 0.0013
 + - param set #10 has cost=0.949551 [o=3 t=9]
 + -- Parameters = 36.6272 33.3068 -15.5087 3.9117 -34.0247 42.5069 0.8934 0.9360 0.9683 -0.0042 -0.0121 0.0124
 + - param set #11 has cost=0.959160 [o=71 t=10]
 + -- Parameters = -32.8207 26.4181 -11.5113 -3.6853 -39.8392 -31.4187 1.0003 0.9998 1.0012 -0.0009 0.0006 0.0123
 + - param set #12 has cost=0.964556 [o=76 t=11]
 + -- Parameters = 8.5608 -8.5346 -0.3584 -7.0977 -3.8260 -29.7832 1.0013 0.9995 0.9989 -0.0005 -0.0001 -0.0004
 + - param set #13 has cost=0.956758 [o=73 t=12]
 + -- Parameters = 39.2815 27.4687 -41.2230 10.8134 3.7636 4.8409 1.0000 0.9980 0.9979 -0.0006 -0.0010 -0.0010
 + - param set #14 has cost=0.963049 [o=20 t=13]
 + -- Parameters = 8.1529 -8.4576 -0.0152 -7.1225 5.5009 -34.4202 1.0041 1.0059 0.9981 0.0007 0.0012 0.0023
 + - param set #15 has cost=0.956105 [o=11 t=14]
 + -- Parameters = 27.5784 27.1415 -0.3430 4.9048 -33.7058 39.7750 1.0445 1.0282 1.0487 0.0081 0.0065 0.0029
 + - param set #16 has cost=0.960866 [o=83 t=15]
 + -- Parameters = -18.3909 20.8004 -36.3356 -14.7532 44.1152 -30.7423 1.0006 1.0507 1.0072 0.0023 0.0025 0.0019
 + - param set #17 has cost=0.960762 [o=18 t=16]
 + -- Parameters = 31.0896 29.3143 -10.0414 3.5341 -34.7386 27.1998 1.0032 0.9958 1.0009 -0.0010 0.0128 0.0012
*[#17431=0.935629] *[#17432=0.93437] *[#17433=0.931998] *[#17434=0.928907] *[#17436=0.927713] 
 + - param set #18 has cost=0.927713 [o=-1 t=-1]
 + -- Parameters = 1.9397 -0.9007 4.1078 -0.1020 -4.6716 -0.9670 0.9473 0.9916 0.9120 -0.0217 -0.0224 -0.0122
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.152 
 + --- dist(#3,#1) = 0.127 
 + --- dist(#4,#1) = 0.157 
 + --- dist(#5,#1) = 0.483 
 + --- dist(#6,#1) = 0.334 
 + --- dist(#7,#1) = 0.453 
 + --- dist(#8,#1) = 0.567 
 + --- dist(#9,#1) = 0.478 
 + --- dist(#10,#1) = 0.148 
 + --- dist(#11,#1) = 0.435 
 + --- dist(#12,#1) = 0.378 
 + --- dist(#13,#1) = 0.542 
 + --- dist(#14,#1) = 0.314 
 + --- dist(#15,#1) = 0.302 
 + --- dist(#16,#1) = 0.157 
 + --- dist(#17,#1) = 0.372 
 + --- dist(#18,#1) = 0.32 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=264.049 usiz=401.241
 + - retaining old weight image
 + - using 83961 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 73889 total points stored in 146 'TOHD(13.984)' bloks (0 duplicates)
*[#17491=0.927708] *[#17492=0.927638] *[#17494=0.927557] *[#17495=0.927382] *[#17506=0.927378] *[#17508=0.927378] *[#17509=0.927237] *[#17510=0.927125] *[#17512=0.927123] *[#17513=0.927042] *[#17514=0.927006] *[#17517=0.926989] *[#17519=0.926905] *[#17520=0.926837] *[#17522=0.926834] *[#17523=0.926753] *[#17524=0.926735] *[#17531=0.926632] *[#17534=0.92663] *[#17537=0.926494] *[#17544=0.926462] 
 + - param set #1 has cost=0.926462 [o=-1 t=-1]
 + -- Parameters = 1.4464 -1.3308 5.2063 -0.6235 -7.2001 -1.6165 0.9603 0.9794 0.8888 -0.0129 -0.0192 -0.0154
 + - param set #2 has cost=0.949078 [o=17 t=2]
 + -- Parameters = 0.0403 -4.1446 -8.3988 2.7528 -6.4132 0.0061 1.0292 0.9819 0.9426 0.0156 -0.0042 0.0107
 + - param set #3 has cost=0.950970 [o=8 t=1]
 + -- Parameters = -4.9524 3.3506 -6.1086 5.8747 3.1764 8.0668 0.9254 0.9867 0.9687 -0.0087 -0.0002 0.0010
 + - param set #4 has cost=0.959863 [o=1 t=0]
 + -- Parameters = 4.9944 -6.6155 -4.6241 -5.4854 -6.5309 -2.7975 0.9997 1.0021 0.9983 0.0003 0.0129 -0.0011
 + - param set #5 has cost=0.954266 [o=3 t=9]
 + -- Parameters = 36.2784 33.4949 -15.6781 3.5826 -33.8493 43.9044 0.8903 0.9372 0.9713 -0.0032 -0.0112 0.0126
 + - param set #6 has cost=0.959471 [o=69 t=3]
 + -- Parameters = 3.0995 19.7689 1.2005 -21.9452 25.4250 15.5163 0.9874 0.9871 1.0043 -0.0001 -0.0012 -0.0037
 + - param set #7 has cost=0.960062 [o=11 t=14]
 + -- Parameters = 27.3646 27.5785 -0.1233 4.1247 -33.4571 41.0240 1.0796 1.0293 1.0491 0.0082 0.0086 0.0035
 + - param set #8 has cost=0.960268 [o=73 t=12]
 + -- Parameters = 39.2878 27.4623 -41.2287 10.7975 3.7552 4.8629 0.9999 0.9979 0.9978 -0.0006 -0.0009 -0.0009
 + - param set #9 has cost=0.960522 [o=28 t=5]
 + -- Parameters = 34.0338 32.9698 -22.9510 -3.2390 -27.6178 42.0917 1.0020 1.0016 1.0001 0.0079 -0.0001 -0.0006
 + - param set #10 has cost=0.962252 [o=7 t=4]
 + -- Parameters = 9.7715 5.0286 -7.7385 -6.7534 1.9342 -12.6282 1.0392 1.0299 0.9913 0.0002 0.0002 -0.0017
 + - param set #11 has cost=0.964986 [o=71 t=10]
 + -- Parameters = -32.8085 26.5541 -11.3450 -3.7763 -39.9130 -34.8553 1.0025 1.0010 1.0001 0.0003 0.0005 0.0116
 + - param set #12 has cost=0.962791 [o=18 t=16]
 + -- Parameters = 31.2400 30.9947 -9.2870 4.6658 -33.6631 27.0645 1.0039 0.9745 0.9906 0.0025 0.0183 -0.0011
 + - param set #13 has cost=0.965381 [o=83 t=15]
 + -- Parameters = -18.3339 21.8614 -36.4679 -15.0415 44.3840 -30.6101 0.9905 1.0517 1.0044 0.0033 0.0021 0.0022
 + - param set #14 has cost=0.965763 [o=0 t=6]
 + -- Parameters = 11.6162 4.8646 -9.9142 7.8588 8.2601 -29.2791 1.0041 0.9948 1.0030 -0.0007 0.0018 0.0014
 + - param set #15 has cost=0.969386 [o=75 t=7]
 + -- Parameters = 8.4135 -8.0610 -0.6885 -14.0575 -6.2277 -28.9189 1.0105 0.9981 0.9967 -0.0055 0.0012 0.0170
 + - param set #16 has cost=0.955337 [o=4 t=8]
 + -- Parameters = -4.0961 -4.4725 -10.8015 8.9325 -12.0117 3.1149 1.0804 0.9489 0.9535 -0.0145 -0.0335 -0.0021
 + - param set #17 has cost=0.966770 [o=20 t=13]
 + -- Parameters = 7.7334 -8.6518 0.0021 -6.6520 5.7671 -34.5831 1.0056 1.0046 0.9983 0.0004 0.0011 0.0022
 + - param set #18 has cost=0.968976 [o=76 t=11]
 + -- Parameters = 9.0575 -8.6961 -0.4664 -6.9809 -7.3403 -29.4590 1.0022 0.9997 0.9982 -0.0004 -0.0001 -0.0000
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.17 
 + --- dist(#3,#1) = 0.141 
 + --- dist(#4,#1) = 0.506 
 + --- dist(#5,#1) = 0.2 
 + --- dist(#6,#1) = 0.363 
 + --- dist(#7,#1) = 0.158 
 + --- dist(#8,#1) = 0.474 
 + --- dist(#9,#1) = 0.58 
 + --- dist(#10,#1) = 0.486 
 + --- dist(#11,#1) = 0.162 
 + --- dist(#12,#1) = 0.404 
 + --- dist(#13,#1) = 0.428 
 + --- dist(#14,#1) = 0.573 
 + --- dist(#15,#1) = 0.307 
 + --- dist(#16,#1) = 0.366 
 + --- dist(#17,#1) = 0.309 
 + --- dist(#18,#1) = 0.303 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=264.049 usiz=401.241
 + - retaining old weight image
 + - using 83961 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 74029 total points stored in 147 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.927237 [o=-1 t=-1]
 + -- Parameters = 1.7763 -1.0222 5.7776 -1.0509 -9.1383 -0.1503 0.9516 0.9724 0.8484 -0.0080 -0.0082 -0.0428
 + - param set #2 has cost=0.954318 [o=17 t=2]
 + -- Parameters = 0.1792 -4.0676 -8.1989 2.4688 -6.3546 -0.1005 1.0324 0.9770 0.9460 0.0155 -0.0032 0.0096
 + - param set #3 has cost=0.954248 [o=8 t=1]
 + -- Parameters = -5.3719 2.8231 -5.5817 5.5834 3.7237 6.8943 0.9098 0.9936 0.9684 -0.0092 -0.0011 0.0029
 + - param set #4 has cost=0.956353 [o=3 t=9]
 + -- Parameters = 36.2833 33.5177 -15.6351 3.5957 -33.8728 43.9091 0.8903 0.9375 0.9711 0.0025 -0.0108 0.0122
 + - param set #5 has cost=0.959974 [o=4 t=8]
 + -- Parameters = -4.0678 -4.4417 -10.8328 9.0974 -12.1170 3.1031 1.0849 0.9478 0.9538 -0.0149 -0.0338 -0.0017
 + - param set #6 has cost=0.960239 [o=69 t=3]
 + -- Parameters = 3.2357 19.5968 0.9548 -22.0991 25.2278 16.8282 0.9722 0.9775 1.0122 0.0029 0.0034 -0.0018
 + - param set #7 has cost=0.966506 [o=1 t=0]
 + -- Parameters = 4.9664 -6.6632 -4.7527 -5.5961 -6.5145 -2.7601 1.0009 1.0040 0.9951 -0.0014 0.0125 -0.0030
 + - param set #8 has cost=0.960603 [o=11 t=14]
 + -- Parameters = 27.2800 27.4495 -0.4044 4.2595 -33.2562 41.1005 1.0825 1.0348 1.0243 -0.0034 -0.0058 0.0091
 + - param set #9 has cost=0.963448 [o=73 t=12]
 + -- Parameters = 39.2873 27.4618 -41.2295 10.7969 3.7545 4.8646 0.9997 0.9979 0.9978 -0.0006 -0.0009 -0.0009
 + - param set #10 has cost=0.962227 [o=28 t=5]
 + -- Parameters = 34.0334 32.9785 -22.9443 -3.2538 -27.6086 42.0772 1.0020 1.0016 1.0001 0.0079 -0.0000 -0.0006
 + - param set #11 has cost=0.966919 [o=7 t=4]
 + -- Parameters = 9.7671 5.0536 -7.7373 -6.7528 1.9382 -12.6291 1.0392 1.0317 0.9914 0.0001 0.0002 -0.0017
 + - param set #12 has cost=0.964436 [o=18 t=16]
 + -- Parameters = 31.2394 30.9948 -9.2884 4.6754 -33.6712 27.0834 1.0037 0.9745 0.9906 0.0025 0.0184 -0.0011
 + - param set #13 has cost=0.967231 [o=71 t=10]
 + -- Parameters = -32.8227 26.6028 -10.9955 -3.8400 -40.0055 -34.8359 1.0184 1.0009 0.9997 -0.0000 0.0004 0.0125
 + - param set #14 has cost=0.965368 [o=83 t=15]
 + -- Parameters = -18.2148 21.8113 -36.4170 -15.1133 44.3675 -30.3900 0.9905 1.0537 1.0222 0.0032 0.0023 0.0023
 + - param set #15 has cost=0.970221 [o=0 t=6]
 + -- Parameters = 11.6615 4.8973 -9.8331 7.8490 8.2140 -29.4966 1.0019 0.9953 1.0062 -0.0011 0.0023 0.0007
 + - param set #16 has cost=0.969693 [o=20 t=13]
 + -- Parameters = 7.7240 -8.5193 -0.0237 -6.6457 5.7782 -34.6408 1.0057 1.0048 0.9977 0.0004 0.0012 0.0023
 + - param set #17 has cost=0.969950 [o=76 t=11]
 + -- Parameters = 8.5991 -8.8529 -0.2428 -7.0489 -7.6554 -28.8784 1.0209 0.9942 0.9901 0.0006 0.0024 -0.0000
 + - param set #18 has cost=0.970779 [o=75 t=7]
 + -- Parameters = 8.4271 -7.8777 -0.8032 -14.0926 -5.8669 -29.1207 1.0116 0.9995 0.9948 -0.0052 0.0070 0.0174
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.206 
 + --- dist(#3,#1) = 0.236 
 + --- dist(#4,#1) = 0.49 
 + --- dist(#5,#1) = 0.208 
 + --- dist(#6,#1) = 0.382 
 + --- dist(#7,#1) = 0.458 
 + --- dist(#8,#1) = 0.469 
 + --- dist(#9,#1) = 0.588 
 + --- dist(#10,#1) = 0.4 
 + --- dist(#11,#1) = 0.595 
 + --- dist(#12,#1) = 0.211 
 + --- dist(#13,#1) = 0.206 
 + --- dist(#14,#1) = 0.432 
 + --- dist(#15,#1) = 0.383 
 + --- dist(#16,#1) = 0.319 
 + --- dist(#17,#1) = 0.326 
 + --- dist(#18,#1) = 0.322 
 + - Total coarse refinement net CPU time = 0.0 s; 4950 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=264.049 usiz=401.241
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 74577 total points stored in 149 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.929833 * [o=-1 t=-1]
 + -- Parameters = 1.7763 -1.0222 5.7776 -1.0509 -9.1383 -0.1503 0.9516 0.9724 0.8484 -0.0080 -0.0082 -0.0428
 + - cost(#2)=0.956079   [o=8 t=1]
 + -- Parameters = -5.3719 2.8231 -5.5817 5.5834 3.7237 6.8943 0.9098 0.9936 0.9684 -0.0092 -0.0011 0.0029
 + - cost(#3)=0.956180   [o=17 t=2]
 + -- Parameters = 0.1792 -4.0676 -8.1989 2.4688 -6.3546 -0.1005 1.0324 0.9770 0.9460 0.0155 -0.0032 0.0096
 + - cost(#4)=0.957576   [o=3 t=9]
 + -- Parameters = 36.2833 33.5177 -15.6351 3.5957 -33.8728 43.9091 0.8903 0.9375 0.9711 0.0025 -0.0108 0.0122
 + - cost(#5)=0.961686   [o=4 t=8]
 + -- Parameters = -4.0678 -4.4417 -10.8328 9.0974 -12.1170 3.1031 1.0849 0.9478 0.9538 -0.0149 -0.0338 -0.0017
 + - cost(#6)=0.961884   [o=69 t=3]
 + -- Parameters = 3.2357 19.5968 0.9548 -22.0991 25.2278 16.8282 0.9722 0.9775 1.0122 0.0029 0.0034 -0.0018
 + - cost(#7)=0.961507   [o=11 t=14]
 + -- Parameters = 27.2800 27.4495 -0.4044 4.2595 -33.2562 41.1005 1.0825 1.0348 1.0243 -0.0034 -0.0058 0.0091
 + - cost(#8)=0.962710   [o=28 t=5]
 + -- Parameters = 34.0334 32.9785 -22.9443 -3.2538 -27.6086 42.0772 1.0020 1.0016 1.0001 0.0079 -0.0000 -0.0006
 + - cost(#9)=0.963481   [o=73 t=12]
 + -- Parameters = 39.2873 27.4618 -41.2295 10.7969 3.7545 4.8646 0.9997 0.9979 0.9978 -0.0006 -0.0009 -0.0009
 + - cost(#10)=0.965184   [o=18 t=16]
 + -- Parameters = 31.2394 30.9948 -9.2884 4.6754 -33.6712 27.0834 1.0037 0.9745 0.9906 0.0025 0.0184 -0.0011
 + - cost(#11)=0.966297   [o=83 t=15]
 + -- Parameters = -18.2148 21.8113 -36.4170 -15.1133 44.3675 -30.3900 0.9905 1.0537 1.0222 0.0032 0.0023 0.0023
 + - cost(#12)=0.968132   [o=1 t=0]
 + -- Parameters = 4.9664 -6.6632 -4.7527 -5.5961 -6.5145 -2.7601 1.0009 1.0040 0.9951 -0.0014 0.0125 -0.0030
 + - cost(#13)=0.968144   [o=7 t=4]
 + -- Parameters = 9.7671 5.0536 -7.7373 -6.7528 1.9382 -12.6291 1.0392 1.0317 0.9914 0.0001 0.0002 -0.0017
 + - cost(#14)=0.968227   [o=71 t=10]
 + -- Parameters = -32.8227 26.6028 -10.9955 -3.8400 -40.0055 -34.8359 1.0184 1.0009 0.9997 -0.0000 0.0004 0.0125
 + - cost(#15)=0.970832   [o=20 t=13]
 + -- Parameters = 7.7240 -8.5193 -0.0237 -6.6457 5.7782 -34.6408 1.0057 1.0048 0.9977 0.0004 0.0012 0.0023
 + - cost(#16)=0.970743   [o=76 t=11]
 + -- Parameters = 8.5991 -8.8529 -0.2428 -7.0489 -7.6554 -28.8784 1.0209 0.9942 0.9901 0.0006 0.0024 -0.0000
 + - cost(#17)=0.971515   [o=0 t=6]
 + -- Parameters = 11.6615 4.8973 -9.8331 7.8490 8.2140 -29.4966 1.0019 0.9953 1.0062 -0.0011 0.0023 0.0007
 + - cost(#18)=0.972026   [o=75 t=7]
 + -- Parameters = 8.4271 -7.8777 -0.8032 -14.0926 -5.8669 -29.1207 1.0116 0.9995 0.9948 -0.0052 0.0070 0.0174
 + - cost(#19)=0.990404   [o=-2 t=-2]
 + -- Parameters = 1.2761 -0.1074 -2.2390 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
*[#20992=0.92639] 
 + - cost(#1)=0.926390 * [o=-1 t=-1]
 + -- Parameters = 1.9161 -0.8359 7.0163 -1.3109 -10.8656 0.0496 0.9432 0.9608 0.7883 -0.0136 -0.0149 -0.0764
 + - cost(#2)=0.955712   [o=8 t=1]
 + -- Parameters = -5.4718 2.9108 -5.2825 5.4732 3.8747 6.8408 0.9071 0.9933 0.9721 -0.0094 0.0062 0.0041
 + - cost(#3)=0.956160   [o=17 t=2]
 + -- Parameters = 0.1831 -4.1040 -8.1660 2.4540 -6.3292 -0.1139 1.0324 0.9765 0.9462 0.0163 -0.0030 0.0096
 + - cost(#4)=0.957559   [o=3 t=9]
 + -- Parameters = 36.2721 33.5009 -15.6424 3.6055 -33.8792 43.8991 0.8903 0.9397 0.9712 0.0025 -0.0115 0.0123
 + - cost(#5)=0.961673   [o=4 t=8]
 + -- Parameters = -4.0641 -4.4467 -10.8255 9.0941 -12.1121 3.0994 1.0849 0.9476 0.9539 -0.0148 -0.0338 -0.0017
 + - cost(#6)=0.961797   [o=69 t=3]
 + -- Parameters = 3.1775 19.5954 0.9861 -22.0823 25.2565 16.8499 0.9700 0.9776 1.0122 0.0029 0.0033 0.0060
 + - cost(#7)=0.961261   [o=11 t=14]
 + -- Parameters = 27.2568 27.4166 -0.4607 4.1722 -33.4221 41.0874 1.0813 1.0347 1.0257 -0.0034 -0.0056 0.0016
 + - cost(#8)=0.962700   [o=28 t=5]
 + -- Parameters = 34.0302 32.9814 -22.9441 -3.2518 -27.6114 42.0716 1.0020 1.0017 0.9999 0.0078 -0.0001 -0.0007
 + - cost(#9)=0.960974   [o=73 t=12]
 + -- Parameters = 39.4202 28.3975 -40.7225 7.5823 3.3662 4.2805 1.0012 0.9924 1.0013 -0.0018 -0.0000 -0.0005
 + - cost(#10)=0.965146   [o=18 t=16]
 + -- Parameters = 31.2341 30.9941 -9.2763 4.6780 -33.6516 27.0899 1.0036 0.9746 0.9908 0.0025 0.0263 -0.0017
 + - cost(#11)=0.965821   [o=83 t=15]
 + -- Parameters = -18.3282 21.8790 -36.3049 -14.8304 44.1082 -30.4021 0.9871 1.0528 1.0244 0.0107 0.0017 0.0025
 + - cost(#12)=0.967943   [o=1 t=0]
 + -- Parameters = 4.8773 -6.7665 -4.7992 -5.6792 -6.6531 -2.6491 1.0011 1.0085 0.9906 -0.0021 0.0118 -0.0157
 + - cost(#13)=0.968128   [o=7 t=4]
 + -- Parameters = 9.7585 5.0593 -7.7221 -6.7399 1.9333 -12.6216 1.0393 1.0316 0.9913 -0.0006 0.0002 -0.0018
 + - cost(#14)=0.968030   [o=71 t=10]
 + -- Parameters = -32.7459 26.5901 -11.0458 -3.8238 -39.9627 -34.9099 1.0175 1.0009 0.9775 -0.0005 -0.0001 0.0121
 + - cost(#15)=0.970791   [o=20 t=13]
 + -- Parameters = 7.7356 -8.5627 -0.0906 -6.6451 5.7907 -34.6346 1.0055 1.0053 0.9984 0.0006 0.0014 0.0027
 + - cost(#16)=0.970254   [o=76 t=11]
 + -- Parameters = 8.5876 -8.9702 -0.0962 -7.0475 -7.8249 -29.0489 1.0267 0.9909 0.9880 -0.0035 0.0020 0.0020
 + - cost(#17)=0.969684   [o=0 t=6]
 + -- Parameters = 12.0771 3.8074 -9.7324 7.6004 7.5960 -29.9688 0.9961 0.9978 1.0172 -0.0142 0.0069 0.0042
 + - cost(#18)=0.971996   [o=75 t=7]
 + -- Parameters = 8.4310 -7.8367 -0.8187 -14.0587 -5.8642 -29.1015 1.0117 1.0017 0.9951 -0.0052 0.0069 0.0175
 + - cost(#19)=0.938769   [o=-2 t=-2]
 + -- Parameters = 1.8834 0.8854 3.6567 0.9252 -0.9802 -1.0242 1.0014 1.0168 0.8863 -0.0103 0.0115 -0.0012
 + - case #1 [o=-1 t=-1] is now the best
 + - Initial  cost = 0.926390
 + - Initial fine Parameters = 1.9161 -0.8359 7.0163 -1.3109 -10.8656 0.0496 0.9432 0.9608 0.7883 -0.0136 -0.0149 -0.0764
*[#22836=0.926352] *[#22849=0.92622] *[#22858=0.9261] *[#22863=0.926088] *[#22865=0.92603] *[#22867=0.926023] *[#22868=0.926006] *[#22871=0.925978] *[#22872=0.925951] *[#22879=0.925913] *[#22882=0.92586] *[#22887=0.925792] *[#22888=0.925752] *[#22891=0.925741] *[#22892=0.925734] *[#22896=0.925729] *[#22897=0.925723] *[#22900=0.925718] *[#22905=0.925702] *[#22911=0.925697] *[#22920=0.925697] *[#22922=0.925686] *[#22927=0.925681] *[#22930=0.925677] *[#22933=0.925675] *[#22934=0.925674] *[#22937=0.925674] *[#22940=0.925672] *[#22944=0.92567] *[#22945=0.925667] *[#22946=0.925665] *[#22948=0.925664] *[#22949=0.925662] *[#22950=0.925661] *[#22951=0.925658] *[#22952=0.925657] *[#22954=0.925654] *[#22955=0.925652] *[#22960=0.925652] *[#22963=0.92565] *[#22964=0.92565] *[#22965=0.925648] *[#22968=0.925648] *[#22969=0.925647] *[#22970=0.925646] *[#22971=0.925646] *[#22973=0.925644] *[#22974=0.925643] *[#22976=0.92564] *[#22977=0.925638] *[#22978=0.925637] *[#22979=0.925636] *[#22980=0.925634] *[#22981=0.925632] *[#22982=0.925631] *[#22983=0.925628] *[#22984=0.925625] *[#22985=0.925624] *[#22986=0.92562] *[#22987=0.925616] *[#22988=0.925613] *[#22991=0.92561] *[#22992=0.925605] *[#22993=0.925597] *[#22994=0.925585] *[#22995=0.925575] *[#22996=0.925573] *[#22997=0.925551] *[#22998=0.925542] *[#22999=0.925536] *[#23000=0.925533] *[#23007=0.92553] *[#23011=0.925529] *[#23013=0.925527] *[#23016=0.925526] *[#23017=0.925525] *[#23018=0.925525] *[#23022=0.925522] *[#23025=0.925522] *[#23027=0.925522] *[#23030=0.925521] *[#23031=0.92552] *[#23034=0.925517] *[#23035=0.925515] *[#23036=0.925513] *[#23037=0.925512] *[#23038=0.925512] *[#23039=0.92551] *[#23040=0.92551] *[#23043=0.925509] *[#23044=0.925508] *[#23045=0.925507] *[#23048=0.925507] *[#23052=0.925505] *[#23053=0.925503] *[#23056=0.925502] *[#23057=0.925502] *[#23060=0.925502] *[#23065=0.925501] *[#23066=0.925501] *[#23072=0.925501] *[#23073=0.9255] *[#23076=0.9255] *[#23077=0.9255] *[#23082=0.925497] *[#23086=0.925497] *[#23091=0.925495] *[#23092=0.925495] *[#23094=0.925494] *[#23117=0.925494] *[#23120=0.925493] *[#23124=0.925493] *[#23128=0.925493] *[#23129=0.925493] *[#23131=0.925493] *[#23132=0.925493] *[#23133=0.925493] *[#23134=0.925492] *[#23139=0.925492] *[#23142=0.925492] *[#23145=0.925492] *[#23148=0.925492] *[#23153=0.925492] *[#23158=0.925492] *[#23163=0.925492] *[#23164=0.925492] *[#23166=0.925492] *[#23169=0.925492] *[#23176=0.925491] *[#23181=0.925491] *[#23186=0.925491] *[#23190=0.925491] *[#23191=0.925491] *[#23197=0.925491] *[#23204=0.925491] *[#23220=0.925491] *[#23225=0.925491] 
 + - Finalish cost = 0.925491 ; 425 funcs
 + - ini Finalish Parameters = 1.7999 -0.6852 6.9985 -0.9990 -10.7858 -0.1150 0.9508 0.9665 0.7799 -0.0020 -0.0254 -0.0776
*[#23445=0.925491] *[#23454=0.925491] *[#23461=0.925491] *[#23462=0.925491] *[#23465=0.925491] *[#23473=0.92549] *[#23480=0.92549] *[#23483=0.92549] *[#23484=0.92549] *[#23487=0.92549] *[#23489=0.92549] *[#23490=0.92549] *[#23491=0.92549] *[#23495=0.92549] *[#23496=0.925489] *[#23505=0.925489] *[#23508=0.925489] *[#23510=0.925489] *[#23515=0.925489] *[#23516=0.925489] *[#23520=0.925489] *[#23522=0.925489] *[#23525=0.925489] *[#23527=0.925488] *[#23528=0.925488] *[#23529=0.925488] *[#23538=0.925488] *[#23545=0.925488] *[#23548=0.925488] *[#23550=0.925488] *[#23551=0.925488] *[#23556=0.925488] *[#23557=0.925488] *[#23558=0.925488] *[#23559=0.925488] *[#23564=0.925487] *[#23569=0.925487] *[#23572=0.925487] *[#23578=0.925487] *[#23583=0.925487] *[#23587=0.925487] *[#23590=0.925486] *[#23591=0.925486] *[#23594=0.925486] *[#23596=0.925486] *[#23609=0.925486] *[#23612=0.925486] *[#23618=0.925486] *[#23636=0.925486] *[#23637=0.925486] *[#23641=0.925486] *[#23643=0.925486] *[#23645=0.925486] *[#23646=0.925485] *[#23647=0.925485] *[#23649=0.925485] *[#23654=0.925485] *[#23657=0.925485] *[#23660=0.925485] *[#23661=0.925484] *[#23662=0.925484] *[#23667=0.925484] *[#23668=0.925484] *[#23671=0.925484] *[#23672=0.925483] *[#23673=0.925483] *[#23676=0.925483] *[#23683=0.925483] *[#23688=0.925483] *[#23693=0.925482] *[#23694=0.925482] *[#23695=0.925482] *[#23696=0.925482] *[#23701=0.925482] *[#23702=0.925482] *[#23705=0.925482] *[#23711=0.925481] *[#23712=0.925481] *[#23713=0.925481] *[#23714=0.925481] *[#23716=0.925481] *[#23717=0.925481] *[#23719=0.925481] *[#23722=0.925481] *[#23723=0.925481] *[#23725=0.925481] *[#23727=0.92548] *[#23730=0.92548] *[#23732=0.92548] *[#23738=0.92548] *[#23745=0.92548] *[#23746=0.92548] *[#23748=0.92548] *[#23750=0.92548] *[#23751=0.925479] *[#23756=0.925479] *[#23759=0.925479] *[#23760=0.925479] *[#23761=0.925479] *[#23762=0.925478] *[#23765=0.925478] *[#23766=0.925478] *[#23768=0.925478] *[#23777=0.925478] *[#23778=0.925478] *[#23779=0.925478] *[#23780=0.925477] *[#23781=0.925477] *[#23782=0.925476] *[#23783=0.925474] *[#23786=0.925474] *[#23791=0.925473] *[#23792=0.925473] *[#23794=0.925473] *[#23797=0.925473] *[#23800=0.925472] *[#23803=0.925472] *[#23809=0.925472] *[#23810=0.925472] *[#23815=0.925472] *[#23817=0.925471] *[#23820=0.925471] *[#23822=0.925471] *[#23823=0.925471] *[#23832=0.925471] *[#23849=0.925471] *[#23851=0.925471] *[#23853=0.925471] *[#23856=0.925471] *[#23857=0.925471] *[#23860=0.925471] *[#23865=0.925471] *[#23870=0.92547] *[#23871=0.92547] *[#23872=0.92547] *[#23875=0.92547] *[#23882=0.92547] *[#23885=0.92547] *[#23891=0.92547] *[#23898=0.92547] *[#23903=0.92547] *[#23913=0.92547] *[#23914=0.92547] *[#23923=0.92547] *[#23932=0.92547] *[#23935=0.925469] *[#23937=0.925469] *[#23942=0.925469] *[#23944=0.925469] *[#23947=0.925469] *[#23954=0.925469] *[#23959=0.925469] *[#23966=0.925469] *[#23967=0.925469] *[#23970=0.925469] *[#23971=0.925468] *[#23980=0.925468] *[#23983=0.925468] *[#23984=0.925468] *[#23988=0.925468] *[#23989=0.925467] *[#23997=0.925467] *[#23999=0.925467] *[#24000=0.925467] *[#24004=0.925467] *[#24007=0.925467] *[#24015=0.925467] *[#24019=0.925467] *[#24022=0.925467] *[#24026=0.925467] *[#24027=0.925466] *[#24030=0.925466] *[#24032=0.925466] *[#24035=0.925466] *[#24038=0.925466] *[#24039=0.925465] *[#24044=0.925465] *[#24047=0.925465] *[#24048=0.925465] *[#24054=0.925465] *[#24055=0.925465] *[#24056=0.925465] *[#24057=0.925464] *[#24058=0.925464] *[#24067=0.925464] *[#24072=0.925464] *[#24077=0.925464] *[#24090=0.925464] *[#24103=0.925463] *[#24112=0.925463] *[#24115=0.925463] *[#24116=0.925463] *[#24117=0.925463] *[#24118=0.925463] *[#24119=0.925463] *[#24130=0.925463] *[#24143=0.925462] *[#24144=0.925462] *[#24153=0.925462] *[#24154=0.925462] *[#24177=0.925462] *[#24178=0.925462] *[#24198=0.925462] *[#24206=0.925462] *[#24213=0.925462] *[#24224=0.925462] *[#24225=0.925462] *[#24236=0.925462] *[#24244=0.925462] *[#24245=0.925462] *[#24246=0.925461] *[#24247=0.925461] *[#24248=0.925461] *[#24259=0.925461] *[#24262=0.925461] *[#24266=0.925461] *[#24267=0.925461] *[#24268=0.925461] *[#24269=0.925461] *[#24271=0.92546] *[#24282=0.92546] *[#24283=0.92546] *[#24284=0.92546] *[#24297=0.92546] *[#24298=0.92546] *[#24299=0.92546] *[#24300=0.92546] *[#24301=0.92546] *[#24306=0.92546] *[#24307=0.925459] *[#24318=0.925459] *[#24326=0.925459] *[#24333=0.925459] *[#24336=0.925459] *[#24345=0.925459] *[#24351=0.925459] *[#24354=0.925459] *[#24358=0.925459] *[#24359=0.925459] 
 + - Final    cost = 0.925459 ; 1194 funcs
 + Final fine fit Parameters:
       x-shift=  1.8162   y-shift= -0.6769   z-shift=  6.9636  ...  enorm=  7.2283 mm
       z-angle= -0.9745   x-angle=-10.8547   y-angle= -0.1191  ...  total= 10.8978 deg
       x-scale=  0.9509   y-scale=  0.9661   z-scale=  0.7804  ...  vol3D=  0.7169 = base bigger than source
     y/x-shear= -0.0016 z/x-shear= -0.0243 z/y-shear= -0.0800
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 1.8162 -0.6769 6.9636 -0.9745 -10.8547 -0.1191 0.9509 0.9661 0.7804 -0.0016 -0.0243 -0.0800
++ Unloading unneeded data
++ Output dataset ./MPRAGE.GB18_unif_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./MPRAGE.GB18_unif_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 44.2
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB18_unif_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB18_unif_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5197043 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 83961 voxels [12.5%] in weight mask
++ Number of points for matching = 83961
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.837 50.487 42.754 (index)
 + source center of mass = 161.188 193.857 140.942 (index)
 + source-target CM = -0.365 -0.765 -3.697 (xyz)
 + estimated center of mass shifts = -0.365 -0.765 -3.697
++ shift param auto-range: -71.0..70.3 -82.6..81.1 -75.2..67.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.364632 .. 9.635368  center = -0.364632
 + Range param#2 [y-shift] = -10.764542 .. 9.235458  center = -0.764542
 + Range param#3 [z-shift] = -13.696732 .. 6.303268  center = -3.696732
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.364632 .. 39.635368  center = -0.364632
 + Range param#2 [y-shift] = -40.764542 .. 39.235458  center = -0.764542
 + Range param#3 [z-shift] = -43.696732 .. 36.303268  center = -3.696732
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -40.365 ..   39.635
 +       y-shift =  -40.765 ..   39.235
 +       z-shift =  -43.697 ..   36.303
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5197043 [out of 35458272] voxels
 + base mask has 104049 [out of 669312] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=280.33 usiz=392.457
 + - copying weight image
 + - using 83961 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 312.799 .. 1086.03; base clip 2838.09 .. 10063.2
 +  - versus source range 0 .. 1107.73; base range 0 .. 13114.2
 + 74577 total points stored in 149 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GB18_unif_flip_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GB18_unif_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 6651843 voxels in -source_automask+2
++ Zero-pad: zbot=5 ztop=0
++ 83961 voxels [12.5%] in weight mask
++ Number of points for matching = 83961
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 41.837 50.487 42.754 (index)
 + source center of mass = 161.067 195.078 132.312 (index)
 + source-target CM = -0.449 0.090 -9.738 (xyz)
 + estimated center of mass shifts = -0.449 0.090 -9.738
++ shift param auto-range: -71.1..70.2 -81.7..81.9 -81.2..61.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.449379 .. 9.550621  center = -0.449379
 + Range param#2 [y-shift] = -9.909988 .. 10.090012  center = 0.090012
 + Range param#3 [z-shift] = -19.737617 .. 0.262383  center = -9.737617
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.449379 .. 39.550621  center = -0.449379
 + Range param#2 [y-shift] = -39.909988 .. 40.090012  center = 0.090012
 + Range param#3 [z-shift] = -49.737617 .. 30.262383  center = -9.737617
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -40.449 ..   39.551
 +       y-shift =  -39.910 ..   40.090
 +       z-shift =  -49.738 ..   30.262
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 6651843 [out of 35458272] voxels
 + base mask has 104049 [out of 669312] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=299.935 usiz=382.943
 + - copying weight image
 + - using 83961 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 315.408 .. 1085.88; base clip 2838.09 .. 10063.2
 +  - versus source range 0 .. 1131.05; base range 0 .. 13114.2
 + 74577 total points stored in 149 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
No flip cost is 0.846733 for lpa cost function
Flip cost is 0.926573 for lpa cost function
Data does not need flipping
#++ Creating final output: skullstripped anat data
copying from dataset /mnt/ext5/GA/fmri_data/preproc_data/GB18/MPRAGE.GB18_unif_unflipped_ns+orig to /mnt/ext5/GA/fmri_data/preproc_data/GB18/MPRAGE.GB18_unif_ns+orig
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GB18_unif_unflipped_ns+orig MPRAGE.GB18_unif_ns
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat MPRAGE.GB18_unif+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base \
 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off \
 -tshift off" \
 ./MPRAGE.GB18_unif_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GB18_unif*

# Finished alignment successfully

auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input MPRAGE.GB18_unif_ns+orig -skull_strip_input no -unifize_input no
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ auto_warp.py version: 0.06
# Output directory /mnt/ext5/GA/fmri_data/preproc_data/GB18/awpy/
#Script is running:
  mkdir /mnt/ext5/GA/fmri_data/preproc_data/GB18/awpy/
cd /mnt/ext5/GA/fmri_data/preproc_data/GB18/awpy/
#Script is running (command trimmed):
  3dcopy /mnt/ext5/GA/fmri_data/preproc_data/GB18/MPRAGE.GB18_unif_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#Script is running (command trimmed):
  3dcopy /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz ./base.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB18/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB18/awpy/anat.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ anat already stripped, re-using
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_15pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 1569.900100 ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (cubic final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m -base dataset __ats_tmp__ref_base.nii_15pad+tlrc has 5 sub-bricks; will only use #0
RMS[0] = 488.112 297.648   ITER = 5/50
488.112

Warping has converged.

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
Cleanup ...
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB18/awpy/anat.aff.nii
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GB18/awpy/base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.aff.nii ./base.nii
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GB18/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GB18/awpy/anat.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.aff.nii 
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ base dataset has more than 1 sub-brick: ignoring all but the first
++ base dataset has more than 1 sub-brick: ignoring all but the first [0]
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=4 ytop=6  zbot=19 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=/mnt/ext5/GA/fmri_data/preproc_data/GB18/awpy/base.nii  source=/mnt/ext5/GA/fmri_data/preproc_data/GB18/awpy/anat.aff.nii
++ AFNI warpomatic: 199 x 239 x 215 volume ; autobbox = 22..176 24..214 20..183 [clock= 4s 271ms]
lev=0 3..195 1..237 1..203: [first cost=-0.59990] ..... done [cost:-0.59990==>-0.67389]
lev=1 patch=145x177x153 [clock= 1m 2s 644ms]........:[cost=-0.70610]:........done [cost:-0.67389==>-0.71920 ; 16 patches optimized, 0 skipped, bbox=4:194,3:235,3:202]
lev=2 patch=109x133x115 [clock= 1m 33s 269ms]........done [cost:-0.71920==>-0.74701 ; 8 patches optimized, 0 skipped, bbox=4:194,3:235,3:202]
lev=3 patch=81x99x85 [clock= 1m 40s 760ms].......done [cost:-0.74701==>-0.80394 ; 23 patches optimized, 4 skipped, bbox=4:194,3:235,3:202]
lev=4 patch=61x75x65 [clock= 2m 2s 777ms]..........done [cost:-0.80394==>-0.88738 ; 88 patches optimized, 37 skipped, bbox=4:194,3:235,3:202]
lev=5 patch=45x57x49 [clock= 2m 33s 386ms].............done [cost:-0.88738==>-0.94580 ; 169 patches optimized, 83 skipped, bbox=4:194,3:235,3:202]
lev=6 patch=35x43x37 [clock= 2m 59s 607ms]............done [cost:-0.94580==>-0.98509 ; 438 patches optimized, 291 skipped, bbox=4:194,3:235,3:202]
lev=7 patch=25x25x25 [clock= 3m 29s 724ms].........................................done [cost:-0.98509==>-1.10102 ; 1432 patches optimized, 908 skipped, bbox=4:194,3:235,3:202]
++ ====== total number of parameters 'optimized' = 26238
 +      initial unpenalized cost = -0.599901
 +        final unpenalized cost = -1.11518
 +        final penalized   cost = -1.10102
++ Output dataset ./anat.aff.qw.nii
++ Output dataset ./anat.aff.qw_WARP.nii
++ ===== clock time = 4m 10s 161ms
#++ Applying warps to /mnt/ext5/GA/fmri_data/preproc_data/GB18/MPRAGE.GB18_unif_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.aff.qw_WARP.nii anat.aff.Xat.1D" -master ./base.nii -source /mnt/ext5/GA/fmri_data/preproc_data/GB18/MPRAGE.GB18_unif_ns+orig -prefix ./MPRAGE.GB18_unif_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/mnt/ext5/GA/fmri_data/preproc_data/GB18/MPRAGE.GB18_unif_ns+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./MPRAGE.GB18_unif_ns.aw.nii
++ total Elapsed time = 2.5 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input \
 MPRAGE.GB18_unif_ns+orig -skull_strip_input no -unifize_input no" \
 ./MPRAGE.GB18_unif_ns.aw.nii


3dbucket -DAFNI_NIFTI_VIEW=tlrc -prefix MPRAGE.GB18_unif_ns awpy/MPRAGE.GB18_unif_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
mv awpy/anat.aff.Xat.1D .
mv awpy/anat.aff.qw_WARP.nii .
if ( ! -f MPRAGE.GB18_unif_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb03.GB18.r01.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB18.r01.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 97668 voxels
 + 11072 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.037  pitch=-0.414  yaw=-0.040  dS=-0.856  dL=-0.043  dP=-0.584
++ Mean: roll=+0.295  pitch=-0.147  yaw=+0.143  dS=-0.376  dL=+0.249  dP=-0.216
++ Max : roll=+0.556  pitch=+0.101  yaw=+0.383  dS=+0.181  dL=+0.518  dP=+0.079
++ Max displacements (mm) for each sub-brick:
 0.18(0.00) 0.14(0.07) 0.15(0.03) 0.10(0.10) 0.23(0.20) 0.30(0.08) 0.20(0.12) 0.10(0.12) 0.06(0.07) 0.08(0.05) 0.10(0.09) 0.09(0.05) 0.11(0.08) 0.07(0.06) 0.08(0.03) 0.10(0.06) 0.25(0.18) 0.29(0.08) 0.18(0.12) 0.06(0.14) 0.05(0.05) 0.06(0.05) 0.12(0.09) 0.13(0.04) 0.22(0.17) 0.19(0.08) 0.12(0.10) 0.04(0.10) 0.00(0.04) 0.05(0.05) 0.05(0.05) 0.08(0.03) 0.12(0.05) 0.13(0.02) 0.11(0.02) 0.12(0.02) 0.20(0.17) 0.23(0.06) 0.18(0.09) 0.05(0.16) 0.07(0.03) 0.10(0.04) 0.14(0.06) 0.16(0.06) 0.22(0.14) 0.19(0.04) 0.10(0.12) 0.09(0.08) 0.08(0.04) 0.21(0.26) 0.26(0.20) 0.25(0.10) 0.27(0.12) 0.22(0.08) 0.22(0.06) 0.25(0.06) 0.20(0.13) 0.19(0.10) 0.16(0.08) 0.19(0.12) 0.20(0.08) 0.25(0.05) 0.25(0.05) 0.25(0.03) 0.31(0.09) 0.23(0.10) 0.17(0.13) 0.15(0.08) 0.25(0.14) 0.26(0.07) 0.31(0.05) 0.30(0.09) 0.29(0.07) 0.21(0.17) 0.15(0.07) 0.19(0.08) 0.23(0.10) 0.23(0.06) 0.25(0.04) 0.28(0.08) 0.32(0.04) 0.25(0.16) 0.20(0.12) 0.19(0.10) 0.21(0.11) 0.22(0.02) 0.25(0.04) 0.22(0.06) 0.22(0.03) 0.23(0.05) 0.28(0.05) 0.31(0.03) 0.30(0.03) 0.22(0.20) 0.21(0.08) 0.18(0.08) 0.18(0.07) 0.23(0.06) 0.27(0.07) 0.28(0.04) 0.29(0.02) 0.30(0.02) 0.31(0.03) 0.24(0.14) 0.26(0.09) 0.28(0.07) 0.26(0.13) 0.30(0.08) 0.30(0.05) 0.29(0.02) 0.33(0.07) 0.31(0.04) 0.33(0.02) 0.34(0.03) 0.30(0.07) 0.21(0.14) 0.22(0.10) 0.24(0.15) 0.28(0.09) 0.31(0.04) 0.34(0.09) 0.38(0.05) 0.40(0.10) 0.40(0.08) 0.38(0.05) 0.33(0.09) 0.31(0.19) 0.26(0.08) 0.31(0.12) 0.34(0.08) 0.36(0.10) 0.38(0.04) 0.43(0.18) 0.43(0.08) 0.47(0.06) 0.38(0.17) 0.38(0.09) 0.39(0.07) 0.36(0.14) 0.29(0.09) 0.33(0.06) 0.35(0.14) 0.36(0.05) 0.36(0.08) 0.39(0.06) 0.37(0.05) 0.34(0.16) 0.30(0.10) 0.36(0.08) 0.37(0.15) 0.40(0.07) 0.38(0.03) 0.41(0.07) 0.44(0.06) 0.43(0.04) 0.44(0.02) 0.39(0.17) 0.31(0.13) 0.35(0.05) 0.34(0.19) 0.38(0.07) 0.39(0.06) 0.39(0.06) 0.40(0.07) 0.41(0.08) 0.41(0.08) 0.38(0.24) 0.28(0.15) 0.28(0.09) 0.33(0.22) 0.35(0.04) 0.33(0.03) 0.33(0.18) 0.28(0.11) 0.31(0.05) 0.32(0.12) 0.34(0.08) 0.36(0.06) 0.34(0.11) 0.32(0.14) 0.33(0.04) 0.31(0.12) 0.37(0.12) 0.38(0.03) 0.32(0.06) 0.38(0.07) 0.37(0.07) 0.40(0.13) 0.33(0.19) 0.35(0.03) 0.36(0.14) 0.41(0.13) 0.41(0.06) 0.42(0.06) 0.44(0.18) 0.40(0.12) 0.42(0.06) 0.41(0.09) 0.43(0.06) 0.44(0.04) 0.44(0.07) 0.47(0.03) 0.43(0.07) 0.47(0.19) 0.43(0.10) 0.42(0.06) 0.44(0.11) 0.40(0.09) 0.42(0.04) 0.41(0.02) 0.44(0.03) 0.48(0.14) 0.43(0.11) 0.44(0.05) 0.40(0.16) 0.46(0.10) 0.45(0.04) 0.42(0.04) 0.46(0.19) 0.41(0.12) 0.45(0.04) 0.48(0.10) 0.46(0.10) 0.46(0.04) 0.45(0.04) 0.47(0.16) 0.49(0.10) 0.47(0.05) 0.48(0.10) 0.49(0.11) 0.49(0.04) 0.51(0.06) 0.49(0.14) 0.49(0.10) 0.46(0.08) 0.51(0.12) 0.45(0.10) 0.51(0.07) 0.48(0.09) 0.48(0.17) 0.46(0.06) 0.41(0.14) 0.46(0.09) 0.46(0.13) 0.51(0.06) 0.46(0.06) 0.52(0.24) 0.46(0.11) 0.47(0.07) 0.54(0.11) 0.53(0.09) 0.52(0.03) 0.50(0.04) 0.51(0.20) 0.43(0.11) 0.46(0.11) 0.48(0.17) 0.53(0.06) 0.49(0.05) 0.52(0.20) 0.55(0.10) 0.54(0.14) 0.58(0.08) 0.58(0.08) 0.56(0.03) 0.58(0.08) 0.60(0.18) 0.53(0.07) 0.58(0.12) 0.56(0.14) 0.63(0.08) 0.57(0.07) 0.62(0.14) 0.56(0.15) 0.58(0.04) 0.55(0.11) 0.62(0.12) 0.58(0.09) 0.66(0.13) 0.60(0.16) 0.67(0.12) 0.62(0.14) 0.71(0.10) 0.66(0.10) 0.69(0.04) 0.68(0.03) 0.72(0.06) 0.65(0.09) 0.74(0.14) 0.63(0.15) 0.71(0.07) 0.62(0.17) 0.71(0.10) 0.65(0.08) 0.71(0.07) 0.71(0.03) 0.77(0.07) 0.74(0.05) 0.75(0.01) 0.69(0.09) 0.69(0.17) 0.61(0.09) 0.66(0.10) 0.66(0.09) 0.73(0.09) 0.71(0.05) 0.77(0.06) 0.73(0.05) 0.77(0.04) 0.71(0.07) 0.75(0.04) 0.68(0.11) 0.67(0.16) 0.58(0.11) 0.70(0.16) 0.68(0.08) 0.75(0.08) 0.67(0.08) 0.77(0.17) 0.69(0.15) 0.72(0.05) 0.71(0.21) 0.74(0.07) 0.65(0.11) 0.70(0.07) 0.64(0.06) 0.70(0.07) 0.68(0.05) 0.72(0.18) 0.63(0.15) 0.64(0.02) 0.68(0.14) 0.74(0.10) 0.70(0.04) 0.71(0.05) 0.71(0.02) 0.76(0.13) 0.73(0.11) 0.69(0.10) 0.70(0.10) 0.77(0.12) 0.78(0.09) 0.77(0.03) 0.77(0.08) 0.77(0.17) 0.75(0.12) 0.73(0.08) 0.77(0.13) 0.80(0.12) 0.78(0.05) 0.77(0.03) 0.78(0.07) 0.76(0.18) 0.75(0.07) 0.77(0.13) 0.78(0.11) 0.80(0.05) 0.77(0.04) 0.78(0.19) 0.75(0.10) 0.69(0.07) 0.76(0.10) 0.70(0.13) 0.75(0.08) 0.66(0.09) 0.77(0.16) 0.60(0.21) 0.68(0.08) 0.60(0.16) 0.69(0.13) 0.67(0.07) 0.71(0.05) 0.70(0.08) 0.68(0.18) 0.67(0.04) 0.66(0.13) 0.72(0.13) 0.68(0.07) 0.70(0.04) 0.68(0.07) 0.69(0.19) 0.64(0.12) 0.68(0.07) 0.68(0.15) 0.75(0.08) 0.74(0.10) 0.77(0.07) 0.75(0.15) 0.78(0.13) 0.77(0.05) 0.78(0.15) 0.78(0.11) 0.77(0.05) 0.78(0.04) 0.78(0.09) 0.81(0.16) 0.80(0.07) 0.80(0.11) 0.83(0.09) 0.81(0.09) 0.82(0.03) 0.79(0.05) 0.78(0.05) 0.78(0.15) 0.68(0.12) 0.79(0.11) 0.73(0.14) 0.82(0.12) 0.74(0.10) 0.84(0.15) 0.75(0.14) 0.78(0.06) 0.77(0.09) 0.81(0.07) 0.79(0.06) 0.81(0.05) 0.82(0.04) 0.84(0.05) 0.86(0.14) 0.80(0.09) 0.80(0.09) 0.80(0.06) 0.83(0.08) 0.80(0.05) 0.83(0.04) 0.78(0.06) 0.86(0.08) 0.78(0.08) 0.83(0.06) 0.79(0.05) 0.81(0.04) 0.78(0.03) 0.81(0.03) 0.81(0.04) 0.82(0.08) 0.78(0.15) 0.72(0.08) 0.77(0.07) 0.81(0.11) 0.85(0.07) 0.81(0.08) 0.86(0.07) 0.83(0.04) 0.83(0.17) 0.76(0.16) 0.75(0.04) 0.76(0.09) 0.80(0.10) 0.84(0.07) 0.87(0.06) 0.88(0.05) 0.87(0.14) 0.84(0.14) 0.84(0.07) 0.85(0.12) 0.88(0.12) 0.89(0.08) 0.89(0.05) 0.90(0.03) 0.88(0.14) 0.89(0.18) 0.82(0.11) 0.90(0.12) 0.92(0.16) 0.94(0.06) 0.93(0.04) 0.96(0.18) 0.89(0.10) 0.94(0.05) 0.90(0.14) 0.98(0.10) 1.01(0.09) 1.01(0.03) 1.01(0.10) 0.97(0.16) 0.93(0.06) 0.96(0.06) 0.97(0.13) 0.99(0.07) 1.02(0.05) 0.99(0.04) 1.06(0.07) 1.03(0.03) 1.03(0.01) 1.04(0.04) 1.01(0.13) 1.00(0.14) 0.94(0.11) 0.99(0.09) 0.98(0.08) 1.04(0.10) 1.02(0.06) 1.07(0.08) 1.13(0.08) 1.14(0.05) 1.12(0.17) 1.07(0.13) 1.05(0.11) 1.03(0.12) 1.04(0.11) 1.04(0.07) 1.09(0.09) 1.03(0.08) 1.08(0.08) 1.05(0.05) 1.07(0.15) 1.00(0.18) 0.99(0.05) 0.99(0.07) 1.00(0.09) 1.03(0.06) 1.05(0.05) 1.07(0.07) 1.09(0.14) 1.08(0.14) 1.03(0.07) 1.05(0.13) 1.08(0.16) 1.06(0.08) 1.06(0.02) 1.02(0.04) 1.07(0.13) 1.03(0.15) 0.98(0.07) 1.04(0.09) 1.01(0.11) 1.05(0.06) 1.04(0.09) 1.07(0.08) 1.06(0.12) 1.06(0.16) 0.96(0.10) 1.02(0.07) 0.96(0.14) 1.04(0.10) 1.01(0.05) 1.05(0.05) 1.08(0.09) 1.08(0.16) 1.08(0.07) 1.08(0.07) 1.13(0.10) 1.12(0.11) 1.11(0.05) 1.12(0.03) 1.11(0.03) 1.17(0.08) 1.17(0.15) 1.10(0.10) 1.12(0.09) 1.09(0.19) 1.13(0.05) 1.13(0.05) 1.16(0.15) 1.12(0.12) 1.16(0.06) 1.10(0.12) 1.16(0.07) 1.10(0.10) 1.13(0.05) 1.13(0.10) 1.13(0.12) 1.12(0.05) 1.13(0.11) 1.17(0.11) 1.18(0.06) 1.16(0.04) 1.20(0.18) 1.14(0.14) 1.11(0.06) 1.11(0.11) 1.12(0.15) 1.13(0.05) 1.08(0.05) 1.14(0.19) 1.03(0.12) 1.08(0.06) 1.01(0.14) 1.09(0.10) 1.05(0.07) 1.09(0.05) 1.07(0.06) 1.08(0.17) 1.09(0.13) 1.01(0.10) 1.06(0.11) 1.08(0.07) 1.07(0.05) 1.07(0.04) 1.08(0.03) 1.10(0.10) 1.11(0.14) 1.03(0.08) 1.10(0.10) 1.08(0.11) 1.11(0.04) 1.07(0.06) 1.10(0.06) 1.12(0.05) 1.13(0.17) 1.07(0.09) 1.10(0.05) 1.10(0.11) 1.14(0.08) 1.11(0.08) 1.15(0.04) 1.12(0.06) 1.13(0.15) 1.09(0.07) 1.11(0.07) 1.10(0.08) 1.13(0.05) 1.10(0.04) 1.15(0.05) 1.13(0.09) 1.14(0.13) 1.14(0.10) 1.06(0.09) 1.13(0.13) 1.11(0.06) 1.09(0.06) 1.13(0.06) 1.15(0.04) 1.16(0.11) 1.19(0.07) 1.11(0.16) 1.17(0.07) 1.11(0.09) 1.14(0.04) 1.10(0.05) 1.14(0.16) 1.06(0.14) 1.10(0.07) 1.10(0.14) 1.18(0.10) 1.17(0.08) 1.18(0.03) 1.21(0.05) 1.21(0.17) 1.15(0.15) 1.06(0.19) 1.08(0.12) 1.05(0.07) 1.06(0.27) 1.06(0.17) 1.06(0.06) 1.05(0.05) 1.11(0.09) 1.12(0.22) 1.03(0.13) 1.11(0.16) 1.10(0.13) 0.94(0.19) 1.00(0.14) 1.03(0.09) 1.06(0.06) 1.06(0.05) 1.08(0.05) 1.12(0.08) 1.08(0.10) 1.04(0.08) 1.02(0.16) 1.06(0.09) 1.05(0.01) 1.05(0.05) 1.04(0.10) 1.04(0.05) 1.00(0.07) 1.06(0.18) 0.98(0.09) 1.07(0.14) 1.11(0.06) 1.03(0.14) 1.05(0.07) 1.05(0.04) 1.08(0.17) 1.08(0.10) 1.08(0.07) 1.14(0.16) 1.15(0.05) 1.09(0.07) 1.12(0.09) 1.07(0.13) 1.09(0.06) 1.08(0.10) 1.13(0.09) 1.11(0.09) 1.15(0.06) 1.12(0.04) 1.17(0.18) 1.09(0.10) 1.12(0.07) 1.10(0.16) 1.16(0.12) 1.15(0.07) 1.18(0.07) 1.15(0.05) 1.15(0.03) 1.16(0.03) 1.17(0.09) 1.17(0.09) 1.22(0.06) 1.23(0.19) 1.16(0.12) 1.16(0.08) 1.16(0.07) 1.18(0.02) 1.15(0.07) 1.20(0.05) 1.19(0.05) 1.23(0.04) 1.17(0.07) 1.19(0.06) 1.08(0.16) 1.03(0.15) 0.96(0.16) 0.93(0.16) 1.00(0.11) 1.07(0.08) 1.12(0.08) 1.19(0.09) 1.25(0.06) 1.23(0.07) 1.23(0.08) 1.20(0.07) 1.19(0.05) 1.16(0.04) 1.14(0.12) 1.07(0.09) 1.11(0.07) 1.08(0.13) 1.11(0.09) 1.10(0.06) 1.11(0.07) 1.12(0.04) 1.14(0.05) 1.16(0.11) 1.08(0.10) 1.11(0.13) 1.09(0.07) 1.07(0.08) 1.09(0.04) 1.08(0.04) 1.12(0.08) 1.10(0.03) 1.12(0.06) 1.12(0.03) 1.08(0.09) 1.13(0.06) 1.06(0.15) 1.11(0.06) 1.08(0.03) 1.10(0.02) 1.10(0.02) 1.14(0.12) 1.09(0.10) 1.13(0.10) 1.13(0.13) 1.10(0.09) 1.13(0.07) 1.12(0.03) 1.14(0.13) 1.11(0.12) 1.12(0.07) 1.11(0.08) 1.13(0.08) 1.07(0.07) 1.13(0.11) 1.08(0.11) 1.11(0.13) 1.06(0.10) 1.11(0.12) 1.13(0.04) 1.09(0.08) 1.10(0.05) 1.10(0.04) 1.09(0.03) 1.06(0.04) 1.03(0.11) 1.02(0.11) 1.02(0.04) 1.05(0.04) 1.05(0.04) 1.06(0.12) 1.02(0.10) 1.11(0.13) 1.05(0.15) 1.10(0.06) 1.04(0.10) 1.08(0.16) 1.01(0.12) 1.04(0.05) 1.01(0.11) 1.03(0.04) 1.04(0.06) 1.07(0.08) 1.09(0.03) 1.04(0.15) 0.98(0.12) 0.92(0.08) 1.03(0.20) 1.08(0.11) 1.08(0.05) 1.15(0.17) 1.03(0.18) 0.91(0.19) 0.92(0.05) 0.95(0.07) 0.95(0.04) 0.95(0.07) 0.98(0.15) 1.11(0.24) 1.14(0.21) 1.08(0.09) 1.06(0.09) 1.06(0.07) 1.08(0.04) 1.07(0.07) 1.07(0.11) 1.04(0.06) 1.02(0.07) 1.00(0.07) 0.99(0.02) 1.04(0.05) 1.03(0.06) 1.01(0.02) 1.00(0.03) 1.02(0.13) 0.95(0.09) 1.01(0.07) 0.98(0.14) 1.02(0.08) 1.09(0.11) 1.06(0.07) 1.05(0.04) 1.03(0.05) 1.03(0.02) 0.98(0.12) 0.93(0.15) 0.92(0.03) 0.95(0.09) 0.95(0.05) 0.98(0.07) 0.99(0.03) 0.97(0.06) 0.99(0.05) 1.01(0.04) 0.99(0.13) 0.97(0.11) 0.96(0.06) 0.98(0.09) 1.01(0.08) 1.02(0.06) 1.03(0.05) 1.02(0.12) 1.02(0.11) 1.06(0.08) 1.11(0.13) 1.13(0.07) 1.10(0.04) 1.13(0.05) 1.12(0.14) 1.13(0.12) 1.18(0.06) 1.17(0.14) 1.19(0.11) 1.21(0.04) 1.19(0.12) 1.13(0.15) 1.13(0.06) 1.15(0.13) 1.19(0.10) 1.21(0.09) 1.20(0.07) 1.19(0.14) 1.19(0.12) 1.18(0.09) 1.29(0.20) 1.27(0.06) 1.23(0.08) 1.31(0.13) 1.36(0.21) 1.29(0.16) 1.33(0.10) 1.39(0.17) 1.42(0.09) 1.45(0.13) 1.38(0.24) 1.25(0.16) 1.24(0.13) 1.28(0.09) 1.29(0.14) 1.34(0.07) 1.38(0.04) 1.40(0.10) 1.34(0.21) 1.35(0.09) 1.40(0.20) 1.42(0.10) 1.43(0.06) 1.44(0.06) 1.43(0.05) 1.42(0.15) 1.40(0.18) 1.43(0.12) 1.44(0.12) 1.44(0.06) 1.44(0.07) 1.49(0.10) 1.39(0.17) 1.36(0.05) 1.38(0.24) 1.42(0.25) 1.38(0.11) 1.38(0.06) 1.42(0.05) 1.53(0.13) 1.57(0.11) 1.58(0.02) 1.53(0.10) 1.47(0.16) 1.48(0.08) 1.56(0.15) 1.57(0.06) 1.55(0.05) 1.55(0.07) 1.52(0.08) 1.49(0.06) 1.42(0.19) 1.35(0.16) 1.42(0.14) 1.49(0.14) 1.50(0.04) 1.47(0.05) 1.48(0.02) 1.46(0.11) 1.41(0.19) 1.38(0.05) 1.39(0.12) 1.37(0.09) 1.37(0.09) 1.34(0.06) 1.34(0.04) 1.32(0.07) 1.30(0.14) 1.27(0.06) 1.33(0.10) 1.34(0.08) 1.37(0.05) 1.36(0.05) 1.37(0.03) 1.32(0.17) 1.26(0.15) 1.27(0.06) 1.33(0.17) 1.37(0.08) 1.39(0.08) 1.39(0.08) 1.34(0.10) 1.30(0.14) 1.30(0.07) 1.35(0.14) 1.41(0.11) 1.41(0.07) 1.37(0.07) 1.47(0.22) 1.45(0.09) 1.38(0.10) 1.24(0.61) 1.23(0.14) 1.53(0.62) 1.38(0.31) 1.39(0.05) 1.44(0.10) 1.43(0.06) 1.44(0.08) 1.44(0.08) 1.44(0.16) 1.44(0.14) 1.46(0.06) 1.47(0.06) 1.42(0.15) 1.39(0.11) 1.43(0.12) 1.50(0.15) 1.53(0.11) 1.49(0.10) 1.48(0.07) 1.44(0.12) 1.38(0.12) 1.39(0.05) 1.44(0.10) 1.50(0.08) 1.55(0.07) 1.53(0.06) 1.50(0.15) 1.43(0.15) 1.36(0.14) 1.34(0.06) 1.38(0.08) 1.39(0.07) 1.41(0.08) 1.39(0.05) 1.40(0.03) 1.37(0.05) 1.38(0.04) 1.53(0.37) 1.45(0.19) 1.50(0.16) 1.48(0.10) 1.51(0.20) 1.50(0.13) 1.48(0.07) 1.46(0.09) 1.50(0.08) 1.45(0.17) 1.40(0.19) 1.28(0.29) 1.23(0.11) 1.18(0.08) 1.25(0.21) 1.31(0.13) 1.38(0.19) 1.39(0.10) 1.38(0.17) 1.38(0.18) 1.40(0.11) 1.43(0.10) 1.42(0.06) 1.45(0.09) 1.45(0.06) 1.44(0.05) 1.41(0.09) 1.33(0.15) 1.33(0.07) 1.36(0.08) 1.38(0.05) 1.38(0.03) 1.39(0.08) 1.45(0.08) 1.46(0.07) 1.51(0.09) 1.50(0.09) 1.53(0.07) 1.55(0.05) 1.53(0.04) 1.51(0.04) 1.53(0.06) 1.52(0.04) 1.45(0.11) 1.41(0.19) 1.40(0.16) 1.46(0.07) 1.45(0.07) 1.45(0.05) 1.43(0.14) 1.55(0.13) 1.61(0.11) 1.62(0.03) 1.63(0.03) 1.63(0.03) 1.57(0.08) 1.62(0.10) 1.64(0.15) 1.55(0.11) 1.57(0.04) 1.64(0.10) 1.60(0.08) 1.58(0.05) 1.52(0.15) 1.63(0.15) 1.60(0.09) 1.54(0.12) 1.50(0.13) 1.45(0.16) 1.47(0.04) 1.48(0.06) 1.49(0.02) 1.52(0.05) 1.51(0.03) 1.48(0.07) 1.49(0.06) 1.57(0.14) 1.58(0.06) 1.57(0.02) 1.57(0.02) 1.57(0.07) 1.51(0.08) 1.44(0.10) 1.40(0.05) 1.45(0.12) 1.44(0.05) 1.46(0.21) 1.44(0.08) 1.41(0.07) 1.43(0.07)
++ Max displacement in automask = 1.64 (mm) at sub-brick 1066
++ Max delta displ  in automask = 0.62 (mm) at sub-brick 970
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb03.GB18.r01.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB18_unif_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB18_unif_ns+tlrc -dxyz 2.5 -source pb02.GB18.r01.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB18_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB18.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 577.4 sec
3dNwarpApply -master MPRAGE.GB18_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB18_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb03.GB18.r02.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB18.r02.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 97534 voxels
 + 11037 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.134  pitch=-0.433  yaw=-0.012  dS=-1.364  dL=+0.049  dP=-0.847
++ Mean: roll=+0.409  pitch=-0.018  yaw=+0.439  dS=-0.743  dL=+0.683  dP=-0.472
++ Max : roll=+0.787  pitch=+0.404  yaw=+0.856  dS=-0.152  dL=+1.112  dP=+0.042
++ Max displacements (mm) for each sub-brick:
 1.36(0.00) 1.39(0.12) 1.38(0.09) 1.33(0.10) 1.17(0.19) 1.12(0.09) 1.20(0.11) 1.26(0.09) 1.28(0.05) 1.29(0.07) 1.22(0.09) 1.13(0.18) 1.14(0.09) 1.27(0.15) 1.32(0.06) 1.32(0.05) 1.35(0.10) 1.32(0.14) 1.28(0.10) 1.30(0.15) 1.33(0.08) 1.33(0.05) 1.37(0.04) 1.38(0.05) 1.45(0.08) 1.36(0.16) 1.32(0.11) 1.39(0.10) 1.43(0.16) 1.43(0.06) 1.44(0.06) 1.39(0.10) 1.28(0.12) 1.18(0.14) 1.23(0.12) 1.33(0.13) 1.41(0.11) 1.45(0.10) 1.44(0.09) 1.28(0.23) 1.23(0.15) 1.33(0.13) 1.54(0.25) 1.56(0.05) 1.73(0.33) 1.65(0.12) 1.58(0.07) 1.53(0.07) 1.36(0.26) 1.31(0.16) 1.41(0.19) 1.45(0.14) 1.52(0.12) 1.58(0.06) 1.69(0.12) 1.72(0.06) 1.60(0.15) 1.51(0.15) 1.60(0.12) 1.70(0.15) 1.77(0.09) 1.75(0.07) 1.75(0.04) 1.61(0.24) 1.61(0.10) 1.73(0.14) 1.85(0.13) 1.88(0.05) 1.93(0.07) 1.86(0.14) 1.79(0.17) 1.84(0.08) 1.99(0.23) 2.04(0.07) 2.12(0.08) 2.11(0.03) 2.12(0.01) 2.00(0.20) 1.95(0.13) 2.04(0.14) 2.11(0.15) 2.12(0.05) 2.11(0.05) 1.99(0.17) 1.87(0.18) 1.82(0.07) 1.86(0.13) 1.92(0.12) 1.93(0.04) 1.93(0.07) 1.93(0.03) 1.82(0.13) 1.72(0.17) 1.76(0.11) 1.85(0.17) 1.94(0.11) 1.97(0.04) 2.00(0.04) 1.89(0.19) 1.83(0.12) 1.84(0.05) 1.90(0.13) 1.93(0.11) 1.97(0.09) 1.96(0.05) 1.94(0.05) 1.98(0.10) 1.99(0.03) 2.07(0.17) 2.23(0.20) 2.13(0.16) 1.88(0.39) 1.79(0.11) 1.73(0.13) 1.75(0.08) 1.91(0.26) 1.94(0.10) 1.94(0.06) 1.91(0.20) 1.87(0.16) 1.92(0.08) 1.97(0.09) 2.02(0.11) 2.03(0.06) 2.02(0.03) 2.03(0.04) 1.96(0.18) 1.95(0.12) 2.01(0.12) 2.14(0.22) 2.12(0.08) 2.14(0.10) 2.05(0.20) 2.03(0.12) 2.11(0.13) 2.12(0.09) 1.99(0.17) 1.99(0.06) 1.93(0.15) 1.86(0.17) 1.86(0.13) 1.90(0.13) 1.98(0.13) 1.89(0.18) 1.88(0.07) 1.89(0.05) 1.88(0.10) 1.88(0.14) 1.88(0.08) 1.95(0.21) 1.97(0.14) 1.98(0.11) 1.93(0.09) 1.91(0.06) 1.72(0.28) 1.23(1.35) 1.10(0.22) 0.91(0.22) 0.96(0.12) 1.00(0.16) 1.07(0.14) 1.10(0.13) 1.09(0.06) 1.13(0.22) 1.08(0.13) 1.08(0.12) 1.13(0.15) 1.15(0.07) 1.12(0.08) 1.11(0.11) 1.05(0.18) 1.05(0.03) 1.13(0.19) 1.17(0.07) 1.12(0.06) 1.14(0.04) 1.11(0.08) 1.08(0.16) 1.02(0.07) 1.07(0.16) 1.05(0.16) 1.05(0.11) 0.99(0.15) 1.00(0.23) 0.90(0.16) 0.92(0.12) 1.00(0.13) 0.99(0.19) 1.00(0.08) 1.01(0.07) 0.99(0.07) 1.00(0.13) 1.09(0.11) 1.10(0.11) 1.08(0.08) 1.05(0.27) 1.07(0.27) 1.14(0.12) 1.24(0.15) 1.22(0.15) 1.23(0.12) 1.30(0.12) 1.30(0.14) 1.37(0.08) 1.46(0.11) 1.55(0.14) 1.51(0.10) 1.44(0.12) 1.49(0.09) 1.46(0.08) 1.41(0.24) 1.44(0.18) 1.38(0.12) 1.37(0.06) 1.36(0.05) 1.36(0.05) 1.37(0.09) 1.40(0.09) 1.25(0.34) 1.21(0.24) 1.22(0.16) 1.20(0.13) 1.27(0.22) 1.63(0.58) 1.40(0.37) 1.53(0.28) 1.45(0.20) 1.45(0.27) 1.48(0.09) 1.50(0.08) 1.50(0.05) 1.54(0.06) 1.57(0.05) 1.56(0.02) 1.53(0.04) 1.52(0.03) 1.44(0.14) 1.35(0.26) 1.39(0.08) 1.36(0.08) 1.37(0.04) 1.40(0.05) 1.44(0.09) 1.44(0.07) 1.46(0.05) 1.49(0.04) 1.41(0.22) 1.38(0.12) 1.39(0.04) 1.39(0.05) 1.41(0.05) 1.42(0.06) 1.42(0.08) 1.40(0.07) 1.35(0.12) 1.20(0.26) 1.22(0.21) 1.26(0.09) 1.29(0.10) 1.32(0.08) 1.32(0.16) 1.35(0.10) 1.45(0.17) 1.52(0.10) 1.55(0.08) 1.53(0.07) 1.58(0.29) 1.58(0.24) 1.60(0.13) 1.50(0.21) 1.52(0.11) 1.56(0.17) 1.58(0.11) 1.58(0.08) 1.53(0.07) 1.50(0.12) 1.40(0.12) 1.34(0.20) 1.41(0.14) 1.60(0.29) 1.69(0.13) 1.84(0.27) 1.81(0.11) 1.82(0.09) 1.85(0.10) 1.75(0.22) 1.44(0.55) 1.48(0.19) 1.55(0.12) 1.68(0.28) 1.74(0.15) 1.83(0.20) 1.83(0.13) 1.73(0.19) 1.68(0.17) 1.77(0.12) 1.88(0.13) 1.94(0.11) 1.95(0.06) 1.93(0.06) 1.81(0.19) 1.75(0.15) 1.83(0.11) 1.94(0.19) 1.99(0.12) 1.96(0.07) 1.90(0.07) 1.76(0.21) 1.76(0.11) 1.78(0.04) 1.75(0.08) 1.74(0.20) 1.63(0.33) 1.51(0.19) 1.40(0.14) 1.46(0.09) 1.48(0.19) 1.43(0.15) 1.46(0.09) 1.48(0.07) 1.52(0.06) 1.50(0.15) 1.44(0.16) 1.52(0.09) 1.63(0.18) 1.64(0.07) 1.64(0.08) 1.65(0.06) 1.66(0.04) 1.65(0.12) 1.61(0.17) 1.63(0.08) 1.78(0.21) 1.79(0.08) 1.94(0.31) 1.97(0.07) 1.88(0.10) 1.87(0.03) 1.85(0.12) 1.74(0.20) 1.75(0.07) 1.87(0.15) 1.96(0.20) 1.86(0.22) 1.66(0.37) 1.64(0.10) 1.63(0.14) 1.61(0.10) 1.70(0.15) 1.77(0.11) 1.79(0.05) 1.79(0.04) 1.77(0.16) 1.74(0.10) 1.81(0.11) 1.85(0.21) 1.93(0.29) 1.87(0.19) 1.84(0.05) 1.81(0.07) 1.77(0.04) 1.78(0.05) 1.73(0.16) 1.72(0.10) 1.74(0.08) 1.83(0.21) 1.81(0.05) 1.79(0.06) 1.77(0.05) 1.73(0.07) 1.61(0.22) 1.65(0.11) 1.70(0.11) 1.78(0.13) 1.78(0.06) 1.79(0.03) 1.71(0.10) 1.62(0.14) 1.68(0.07) 1.79(0.17) 1.82(0.11) 1.82(0.06) 1.86(0.06) 1.79(0.14) 1.77(0.15) 1.85(0.11) 1.96(0.26) 2.01(0.13) 2.19(0.40) 2.09(0.21) 2.04(0.08) 2.04(0.09) 1.89(0.28) 1.91(0.14) 2.00(0.10) 2.12(0.20) 2.12(0.07) 2.10(0.05) 2.01(0.13) 1.91(0.16) 1.90(0.05) 1.97(0.15) 1.98(0.09) 1.95(0.07) 1.95(0.03) 1.86(0.14) 1.79(0.18) 1.84(0.05) 1.97(0.19) 1.97(0.06) 1.93(0.05) 1.96(0.03) 1.88(0.15) 1.84(0.12) 1.87(0.05) 2.03(0.25) 2.02(0.07) 2.10(0.17) 1.98(0.19) 1.81(0.21) 1.80(0.12) 1.77(0.07) 1.81(0.06) 1.86(0.09) 1.88(0.05) 1.90(0.13) 1.90(0.06) 1.99(0.21) 1.97(0.11) 1.94(0.12) 1.92(0.12) 1.89(0.20) 1.92(0.19) 1.97(0.15) 1.95(0.09) 1.95(0.04) 1.95(0.05) 1.93(0.06) 1.93(0.05) 1.93(0.02) 1.94(0.03) 1.95(0.03) 1.98(0.09) 1.96(0.16) 1.90(0.19) 2.11(0.42) 2.21(0.21) 2.26(0.10) 2.19(0.10) 2.19(0.07) 2.17(0.07) 2.20(0.06) 2.23(0.04) 2.26(0.05) 2.20(0.14) 2.14(0.16) 2.14(0.05) 2.19(0.13) 2.20(0.06) 2.18(0.04) 2.19(0.02) 2.20(0.04) 2.25(0.07) 2.24(0.05) 2.20(0.11) 2.16(0.10) 2.22(0.11) 2.24(0.09) 2.22(0.06) 2.20(0.04) 2.22(0.05) 2.23(0.05) 2.22(0.04) 2.10(0.22) 2.03(0.13) 2.01(0.05) 2.05(0.10) 2.10(0.25) 2.34(0.48) 2.43(0.12) 2.46(0.06) 2.38(0.12) 2.43(0.12) 2.31(0.31) 2.37(0.07) 2.38(0.01) 2.26(0.18) 2.17(0.17) 2.23(0.12) 2.30(0.15) 2.31(0.04) 2.32(0.04) 2.33(0.07) 2.34(0.03) 2.36(0.09) 2.36(0.21) 2.35(0.22) 2.24(0.21) 2.22(0.10) 1.92(0.31) 1.68(0.25) 1.51(0.17) 1.52(0.07) 1.59(0.07) 1.56(0.10) 1.29(0.30) 1.31(0.79) 1.30(0.19) 1.30(0.16) 1.22(0.12) 1.20(0.05) 1.24(0.06) 1.18(0.12) 1.12(0.11) 1.11(0.12) 1.15(0.09) 1.24(0.20) 1.32(0.12) 1.34(0.08) 1.32(0.09) 1.24(0.10) 1.25(0.11) 1.30(0.08) 1.32(0.04) 1.32(0.05) 1.31(0.04) 1.29(0.07) 1.28(0.05) 1.28(0.06) 1.22(0.08) 1.13(0.12) 1.12(0.09) 1.26(0.17) 1.32(0.07) 1.36(0.07) 1.33(0.03) 1.33(0.04) 1.22(0.24) 1.13(0.55) 1.05(0.20) 0.95(0.34) 0.81(0.21) 0.83(0.14) 0.87(0.11) 1.05(0.26) 1.11(0.09) 1.18(0.17) 1.15(0.10) 1.16(0.11) 1.09(0.13) 1.09(0.07) 1.22(0.21) 1.27(0.07) 1.31(0.08) 1.34(0.08) 1.33(0.05) 1.23(0.16) 1.18(0.09) 1.22(0.05) 1.30(0.11) 1.30(0.09) 1.29(0.03) 1.30(0.05) 1.28(0.05) 1.22(0.11) 1.21(0.06) 1.30(0.12) 1.35(0.09) 1.35(0.03) 1.35(0.03) 1.32(0.05) 1.23(0.11) 1.14(0.11) 1.21(0.12) 1.25(0.15) 1.28(0.08) 1.28(0.02) 1.27(0.09) 1.23(0.12) 1.24(0.04) 1.21(0.05) 1.21(0.18) 1.14(0.14) 1.27(0.14) 1.29(0.12) 1.33(0.05) 1.47(0.23) 1.44(0.31) 1.45(0.11) 1.48(0.06) 1.47(0.07) 1.45(0.11) 1.42(0.08) 1.43(0.12) 1.35(0.12) 1.32(0.12) 1.30(0.07) 1.44(0.14) 1.50(0.10) 1.52(0.03) 1.50(0.05) 1.55(0.06) 1.51(0.12) 1.43(0.13) 1.50(0.30) 1.76(0.34) 1.79(0.04) 1.85(0.10) 1.80(0.10) 1.82(0.04) 1.75(0.15) 1.70(0.15) 1.70(0.12) 1.77(0.10) 1.87(0.16) 1.96(0.27) 1.92(0.07) 1.79(0.16) 1.75(0.12) 1.88(0.15) 1.97(0.12) 2.02(0.14) 2.00(0.07) 2.03(0.06) 1.90(0.25) 1.82(0.09) 1.87(0.11) 1.97(0.14) 2.00(0.15) 1.96(0.12) 1.93(0.17) 1.93(0.08) 1.92(0.07) 1.86(0.19) 1.83(0.10) 1.88(0.08) 1.94(0.10) 2.03(0.17) 2.00(0.09) 1.98(0.08) 1.90(0.13) 1.89(0.11) 1.94(0.13) 2.00(0.10) 2.04(0.09) 2.06(0.09) 2.03(0.11) 1.92(0.17) 1.78(0.22) 1.87(0.16) 1.92(0.13) 2.00(0.21) 1.96(0.08) 1.99(0.14) 1.93(0.14) 1.93(0.14) 2.08(0.20) 2.04(0.06) 2.00(0.18) 2.05(0.10) 2.05(0.09) 2.02(0.15) 2.08(0.08) 2.10(0.07) 2.13(0.09) 2.13(0.04) 2.13(0.05) 2.09(0.07) 2.04(0.13) 2.00(0.27) 2.33(0.42) 2.35(0.23) 2.41(0.22) 2.36(0.17) 2.28(0.18) 2.30(0.08) 2.33(0.09) 2.40(0.12) 2.40(0.10) 2.47(0.08) 2.49(0.09) 2.41(0.15) 2.39(0.09) 2.39(0.09) 2.40(0.09) 2.41(0.07) 2.43(0.10) 2.41(0.08) 2.39(0.12) 2.33(0.11) 2.24(0.16) 2.14(0.18) 2.10(0.21) 2.16(0.13) 2.22(0.16) 2.20(0.08) 2.22(0.05) 2.23(0.05) 2.16(0.10) 2.10(0.13) 2.17(0.09) 2.31(0.31) 2.36(0.11) 2.31(0.13) 2.51(0.30) 2.48(0.22) 2.61(0.16) 2.68(0.09) 2.68(0.18) 2.69(0.09) 2.69(0.18) 2.74(0.11) 2.77(0.24) 2.87(0.18) 2.87(0.15) 2.75(0.25) 2.66(0.14) 2.65(0.08) 2.69(0.08) 2.70(0.06) 2.70(0.07) 2.66(0.04) 2.66(0.08) 2.75(0.26) 2.69(0.28) 2.73(0.19) 2.77(0.29) 2.79(0.10) 2.77(0.20) 2.71(0.12) 2.70(0.03) 2.75(0.07) 2.69(0.15) 2.64(0.13) 2.63(0.07) 2.73(0.21) 2.73(0.08) 2.71(0.07) 2.74(0.05) 2.71(0.10) 2.62(0.17) 2.63(0.10) 2.65(0.08) 2.71(0.12) 2.71(0.11) 2.77(0.20) 2.64(0.26) 2.57(0.09) 2.51(0.07) 2.52(0.08) 2.57(0.09) 2.58(0.04) 2.59(0.06) 2.57(0.06) 2.50(0.11) 2.39(0.12) 2.29(0.14) 2.47(0.32) 2.38(0.19) 2.31(0.11) 2.25(0.09) 2.19(0.09) 2.17(0.04) 2.16(0.05) 2.03(0.18) 1.99(0.10) 2.03(0.10) 2.10(0.12) 2.11(0.06) 2.16(0.06) 2.18(0.10) 2.14(0.09) 2.09(0.18) 2.08(0.08) 2.12(0.11) 2.19(0.14) 2.19(0.09) 2.32(0.23) 2.31(0.66) 2.09(0.26) 2.15(0.34) 2.21(0.22) 2.24(0.08) 2.24(0.10) 2.24(0.04) 2.21(0.03) 2.23(0.07) 2.18(0.15) 2.13(0.14) 2.12(0.05) 2.18(0.11) 2.35(0.30) 2.20(0.19) 2.19(0.12) 2.25(0.14) 2.31(0.12) 2.32(0.09) 2.27(0.20) 2.26(0.09) 2.37(0.14) 2.41(0.08) 2.44(0.09) 2.41(0.08) 2.38(0.07) 2.27(0.19) 2.34(0.07) 2.43(0.11) 2.48(0.06) 2.51(0.08) 2.56(0.06) 2.55(0.05) 2.50(0.07) 2.36(0.19) 2.29(0.13) 2.29(0.05) 2.34(0.13) 2.37(0.06) 2.40(0.05) 2.38(0.02) 2.35(0.06) 2.24(0.12) 2.22(0.11) 2.28(0.13) 2.36(0.15) 2.38(0.05) 2.40(0.05) 2.36(0.04) 2.31(0.11) 2.27(0.11) 2.37(0.12) 2.45(0.09) 2.50(0.09) 2.46(0.06) 2.39(0.07) 2.35(0.14) 2.34(0.07) 2.37(0.09) 2.38(0.11) 2.32(0.10) 2.29(0.06) 2.24(0.10) 2.15(0.12) 2.16(0.09) 2.27(0.16) 2.33(0.12) 2.36(0.06) 2.34(0.06) 2.23(0.19) 2.20(0.10) 2.23(0.09) 2.34(0.15) 2.37(0.08) 2.41(0.08) 2.35(0.10) 2.36(0.14) 2.45(0.21) 2.47(0.08) 2.42(0.18) 2.44(0.04) 2.38(0.13) 2.40(0.12) 2.37(0.06) 2.40(0.09) 2.31(0.21) 2.29(0.13) 2.35(0.14) 2.32(0.17) 2.42(0.25) 2.40(0.09) 2.42(0.08) 2.42(0.09) 2.40(0.10) 2.33(0.19) 2.27(0.13) 2.27(0.07) 2.34(0.14) 2.36(0.06) 2.36(0.07) 2.39(0.05) 2.40(0.08) 2.34(0.15) 2.33(0.10) 2.35(0.10) 2.42(0.13) 2.47(0.09) 2.50(0.05) 2.44(0.08) 2.33(0.16) 2.31(0.11) 2.28(0.13) 2.30(0.10) 2.32(0.09) 2.28(0.07) 2.26(0.08) 2.21(0.07) 2.19(0.03) 2.16(0.04) 2.19(0.04) 2.15(0.11) 2.09(0.14) 2.13(0.08) 2.18(0.11) 2.19(0.09) 2.19(0.07) 2.18(0.03) 2.19(0.05) 2.17(0.04) 2.08(0.17) 2.10(0.13) 2.15(0.08) 2.20(0.12) 2.19(0.05) 2.20(0.04) 2.18(0.05) 2.15(0.05) 2.05(0.16) 2.06(0.08) 2.13(0.09) 2.18(0.10) 2.20(0.07) 2.18(0.04) 2.13(0.07) 2.02(0.13) 2.05(0.12) 1.89(0.21) 1.84(0.14) 1.81(0.11) 1.88(0.08) 1.99(0.18) 2.10(0.17) 2.02(0.25) 1.87(0.24) 1.92(0.07) 1.92(0.07) 1.90(0.03) 1.82(0.11) 1.76(0.18) 1.79(0.09) 1.84(0.10) 2.01(0.55) 1.91(0.33) 2.05(0.48) 2.06(0.23) 2.08(0.11) 2.06(0.06) 2.05(0.06) 2.10(0.11) 2.13(0.09) 2.19(0.10) 2.22(0.11) 2.25(0.05) 2.26(0.06) 2.23(0.05) 2.21(0.05) 2.20(0.05) 2.19(0.05) 2.18(0.03) 2.18(0.03) 2.17(0.02) 2.16(0.02) 2.15(0.02) 2.14(0.02) 2.12(0.05) 2.00(0.18) 1.94(0.10) 1.96(0.09) 2.01(0.11) 2.01(0.03) 2.02(0.02) 2.02(0.05) 2.04(0.02) 2.00(0.10) 1.98(0.07) 2.01(0.07) 2.10(0.19) 2.11(0.04) 2.10(0.05) 2.07(0.06) 2.01(0.11) 1.98(0.10) 1.97(0.05) 1.97(0.03) 2.00(0.10) 1.99(0.05) 2.02(0.08) 1.99(0.09) 1.97(0.09) 1.97(0.08) 1.96(0.09) 1.97(0.07) 1.99(0.10) 1.99(0.06) 1.98(0.04) 1.97(0.07) 1.99(0.06) 2.00(0.09) 1.96(0.26) 1.92(0.17) 1.92(0.09) 1.93(0.12) 1.96(0.10) 1.98(0.09) 1.96(0.09) 1.97(0.04) 1.95(0.07) 1.97(0.05) 1.96(0.08) 1.90(0.16) 1.89(0.07) 1.91(0.11) 1.92(0.04) 1.94(0.04) 1.94(0.02) 1.94(0.05) 1.94(0.03) 1.97(0.05) 1.97(0.05) 2.01(0.23) 1.96(0.12) 1.98(0.10) 2.07(0.17) 2.09(0.07) 2.09(0.12) 2.11(0.08) 2.13(0.13) 2.14(0.16) 2.07(0.11) 1.92(0.18) 1.74(0.30) 1.68(0.15) 1.77(0.15) 1.78(0.13) 1.73(0.08) 1.78(0.06) 1.85(0.10) 1.87(0.05) 1.81(0.14) 1.79(0.17) 1.85(0.11) 1.95(0.21) 1.89(0.09) 1.89(0.08) 1.85(0.09) 1.86(0.02) 1.82(0.12) 1.74(0.19) 1.73(0.10) 1.76(0.16) 1.76(0.24) 1.81(0.49) 1.72(0.13) 1.69(0.15) 1.59(0.22) 1.50(0.25) 1.50(0.14) 1.44(0.14) 1.27(0.25) 1.19(0.21) 1.23(0.04) 1.21(0.10) 1.22(0.06) 1.20(0.07) 1.18(0.10) 1.10(0.17) 1.00(0.15) 0.94(0.10) 1.00(0.13) 1.00(0.10) 1.04(0.10) 1.03(0.06) 1.03(0.11) 0.98(0.11) 1.00(0.08) 0.95(0.08) 1.05(0.14) 0.98(0.23) 1.02(0.25) 1.00(0.16) 1.01(0.12) 0.98(0.26) 1.02(0.04) 0.99(0.09) 1.01(0.09) 1.03(0.04) 0.99(0.09) 1.01(0.15) 1.11(0.14) 1.04(0.09) 1.02(0.10) 1.03(0.04) 1.10(0.14) 1.00(0.14) 0.95(0.10) 1.02(0.10) 1.12(0.11) 1.14(0.04)
++ Max displacement in automask = 2.87 (mm) at sub-brick 713
++ Max delta displ  in automask = 1.35 (mm) at sub-brick 155
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb03.GB18.r02.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB18_unif_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB18_unif_ns+tlrc -dxyz 2.5 -source pb02.GB18.r02.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB18_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB18.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 814.4 sec
3dNwarpApply -master MPRAGE.GB18_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB18_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb03.GB18.r03.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GB18.r03.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 98570 voxels
 + 11122 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.115  pitch=+0.426  yaw=+0.145  dS=-2.974  dL=+0.451  dP=-1.827
++ Mean: roll=+0.395  pitch=+1.569  yaw=+0.567  dS=-1.965  dL=+1.040  dP=-1.236
++ Max : roll=+0.785  pitch=+3.021  yaw=+1.103  dS=-0.815  dL=+1.670  dP=-0.480
++ Max displacements (mm) for each sub-brick:
 2.14(0.00) 2.12(0.06) 2.05(0.11) 2.09(0.08) 2.08(0.08) 2.08(0.06) 2.08(0.07) 2.14(0.09) 2.45(0.34) 2.29(0.18) 2.29(0.06) 2.26(0.03) 2.24(0.06) 2.05(0.21) 1.88(0.17) 1.96(0.08) 2.12(0.16) 2.29(0.19) 2.36(0.08) 2.68(0.33) 2.48(0.27) 2.51(0.08) 2.56(0.09) 2.56(0.06) 2.40(0.18) 2.29(0.15) 2.38(0.14) 2.57(0.19) 2.62(0.11) 2.65(0.09) 2.70(0.06) 2.56(0.20) 2.47(0.13) 2.47(0.04) 2.61(0.21) 2.62(0.05) 2.64(0.06) 2.52(0.15) 2.32(0.21) 2.27(0.09) 2.45(0.21) 2.49(0.10) 2.51(0.07) 2.50(0.06) 2.43(0.08) 2.24(0.19) 2.16(0.09) 2.19(0.05) 2.33(0.16) 2.39(0.07) 2.43(0.08) 2.42(0.09) 2.28(0.15) 2.12(0.17) 2.14(0.10) 2.26(0.13) 2.41(0.16) 2.46(0.05) 2.50(0.07) 2.42(0.12) 2.28(0.16) 2.20(0.11) 2.22(0.09) 2.63(0.44) 2.84(0.29) 2.82(0.05) 2.77(0.14) 2.65(0.16) 2.03(0.67) 1.79(0.28) 1.88(0.09) 1.89(0.14) 2.00(0.12) 2.30(0.31) 2.76(0.49) 2.77(0.06) 2.78(0.10) 2.65(0.16) 2.58(0.10) 2.59(0.10) 2.75(0.17) 2.77(0.09) 2.82(0.07) 2.80(0.07) 2.68(0.19) 2.55(0.17) 2.70(0.18) 2.78(0.10) 2.86(0.09) 2.88(0.06) 2.89(0.06) 2.69(0.21) 2.58(0.13) 2.68(0.16) 2.79(0.15) 2.69(0.19) 2.79(0.38) 3.13(0.45) 3.42(0.36) 3.53(0.14) 3.74(0.22) 3.90(0.21) 4.17(0.29) 4.11(0.27) 3.86(0.64) 3.93(0.38) 3.47(0.53) 3.39(0.19) 3.45(0.19) 3.57(0.13) 3.70(0.13) 3.76(0.16) 3.82(0.07) 3.85(0.05) 3.88(0.05) 3.85(0.09) 3.85(0.09) 3.84(0.11) 3.81(0.10) 3.73(0.12) 3.72(0.07) 3.75(0.07) 3.72(0.17) 3.72(0.11) 3.73(0.09) 3.75(0.05) 3.78(0.04) 3.81(0.06) 3.87(0.12) 3.93(0.09) 3.89(0.09) 3.86(0.13) 3.98(0.14) 4.02(0.08) 4.06(0.07) 4.05(0.09) 4.03(0.15) 3.93(0.18) 3.76(0.17) 3.87(0.15) 3.91(0.12) 3.81(0.19) 3.78(0.15) 3.71(0.11) 3.54(0.18) 3.38(0.17) 3.46(0.10) 3.58(0.17) 3.73(0.17) 3.78(0.09) 3.73(0.10) 3.74(0.05) 3.73(0.04) 3.66(0.11) 3.51(0.16) 3.48(0.11) 3.60(0.13) 3.67(0.07) 3.68(0.05) 3.71(0.06) 3.58(0.19) 3.57(0.10) 3.69(0.16) 3.75(0.11) 3.73(0.13) 3.70(0.07) 3.58(0.13) 3.41(0.17) 3.40(0.07) 3.58(0.18) 3.60(0.06) 3.59(0.06) 3.60(0.05) 3.43(0.20) 3.37(0.08) 3.47(0.10) 3.58(0.12) 3.59(0.03) 3.65(0.08) 3.57(0.13) 3.44(0.13) 3.40(0.06) 3.56(0.16) 3.59(0.05) 3.63(0.06) 3.61(0.07) 3.60(0.06) 3.44(0.19) 3.34(0.11) 3.43(0.10) 3.56(0.13) 3.58(0.03) 3.61(0.04) 3.49(0.16) 3.37(0.13) 3.42(0.07) 3.58(0.17) 3.61(0.05) 3.62(0.07) 3.55(0.09) 3.44(0.14) 3.48(0.08) 3.64(0.19) 3.62(0.08) 3.46(0.24) 3.52(0.16) 3.78(0.29) 4.01(0.25) 4.30(0.32) 4.64(0.39) 4.79(0.15) 4.85(0.13) 4.51(0.58) 4.28(0.57) 3.79(0.58) 3.77(0.12) 3.88(0.17) 3.98(0.11) 3.95(0.15) 3.97(0.08) 4.00(0.04) 4.03(0.06) 4.02(0.07) 4.05(0.07) 4.07(0.09) 4.11(0.06) 4.07(0.09) 4.13(0.10) 4.05(0.17) 4.04(0.06) 4.06(0.02) 4.06(0.09) 3.96(0.13) 3.94(0.03) 3.91(0.07) 3.86(0.06) 3.70(0.18) 3.71(0.07) 3.81(0.13) 3.79(0.05) 3.82(0.07) 3.82(0.04) 3.82(0.04) 3.83(0.03) 3.81(0.03) 3.79(0.03) 3.65(0.14) 3.65(0.08) 3.81(0.17) 3.83(0.06) 3.84(0.03) 3.83(0.03) 3.81(0.07) 3.63(0.18) 3.55(0.09) 3.66(0.15) 3.76(0.12) 3.80(0.07) 3.83(0.04) 3.73(0.12) 3.61(0.13) 3.68(0.12) 3.90(0.22) 3.96(0.05) 3.98(0.05) 3.92(0.07) 3.75(0.17) 3.67(0.08) 3.80(0.16) 3.97(0.18) 4.24(0.29) 4.19(0.14) 4.03(0.18) 3.98(0.09) 3.79(0.20) 3.61(0.22) 3.41(0.24) 3.42(0.13) 3.61(0.19) 3.65(0.07) 3.76(0.17) 3.69(0.09) 3.64(0.06) 3.65(0.05) 3.66(0.05) 3.51(0.15) 3.31(0.21) 3.36(0.10) 3.53(0.20) 3.57(0.06) 3.65(0.10) 3.61(0.15) 3.52(0.18) 3.53(0.06) 3.67(0.15) 3.74(0.08) 3.74(0.06) 3.59(0.19) 3.49(0.16) 3.59(0.20) 3.85(0.26) 4.29(0.47) 4.71(0.45) 5.05(0.35) 5.45(0.51) 5.67(0.23) 5.82(0.16) 5.81(0.16) 5.38(0.57) 4.71(0.80) 4.95(0.26) 5.07(0.15) 5.03(0.08) 4.92(0.12) 4.89(0.16) 4.93(0.12) 4.96(0.13) 4.90(0.21) 4.76(0.22) 4.73(0.05) 4.67(0.20) 4.62(0.12) 4.61(0.05) 4.61(0.07) 4.62(0.09) 4.61(0.08) 4.64(0.10) 4.62(0.05) 4.63(0.06) 4.60(0.06) 4.58(0.05) 4.56(0.07) 4.55(0.05) 4.59(0.07) 4.61(0.09) 4.58(0.07) 4.62(0.10) 4.56(0.13) 4.48(0.14) 4.42(0.09) 4.46(0.14) 4.47(0.04) 4.43(0.05) 4.42(0.04) 4.41(0.03) 4.42(0.03) 4.38(0.09) 4.18(0.20) 4.23(0.13) 4.32(0.13) 4.33(0.05) 4.37(0.12) 4.38(0.07) 4.41(0.04) 4.37(0.07) 4.25(0.13) 4.28(0.08) 4.42(0.15) 4.48(0.11) 4.45(0.12) 4.40(0.07) 4.34(0.07) 4.17(0.19) 4.11(0.07) 4.26(0.17) 4.34(0.08) 4.37(0.10) 4.36(0.07) 4.24(0.12) 4.11(0.13) 4.20(0.12) 4.27(0.09) 4.23(0.10) 4.27(0.13) 4.28(0.14) 4.26(0.04) 4.30(0.06) 4.29(0.06) 4.21(0.10) 4.06(0.15) 4.07(0.05) 4.17(0.13) 4.21(0.10) 4.25(0.05) 4.29(0.10) 4.12(0.22) 4.08(0.09) 4.24(0.28) 4.38(0.16) 4.28(0.12) 4.08(0.24) 4.16(0.24) 4.28(0.18) 4.69(0.47) 5.11(0.50) 5.35(0.38) 5.70(0.40) 5.97(0.27) 6.01(0.23) 5.47(0.87) 5.17(0.60) 4.91(0.27) 4.77(0.17) 4.75(0.09) 4.73(0.15) 4.77(0.11) 4.76(0.09) 4.81(0.14) 4.85(0.11) 4.92(0.12) 4.97(0.14) 5.01(0.16) 4.86(0.18) 4.84(0.19) 4.90(0.11) 4.93(0.12) 4.91(0.14) 4.96(0.10) 4.95(0.10) 4.93(0.07) 4.97(0.05) 4.96(0.04) 5.00(0.10) 4.98(0.06) 4.92(0.10) 4.85(0.17) 4.83(0.08) 4.81(0.04) 4.80(0.06) 4.77(0.07) 4.78(0.04) 4.78(0.08) 4.76(0.03) 4.75(0.06) 4.75(0.05) 4.77(0.08) 4.74(0.04) 4.74(0.03) 4.73(0.02) 4.74(0.03) 4.65(0.10) 4.51(0.14) 4.53(0.05) 4.66(0.13) 4.75(0.09) 4.86(0.11) 4.91(0.12) 4.87(0.13) 4.66(0.21) 4.37(0.29) 4.48(0.17) 4.64(0.18) 4.66(0.07) 4.68(0.04) 4.72(0.07) 4.77(0.08) 4.74(0.06) 4.51(0.25) 4.47(0.11) 4.63(0.17) 4.70(0.11) 4.70(0.03) 4.72(0.04) 4.71(0.08) 4.56(0.20) 4.51(0.10) 4.58(0.14) 4.49(0.15) 4.54(0.13) 4.40(0.15) 4.34(0.10) 4.36(0.05) 4.34(0.06) 4.31(0.09) 4.36(0.10) 4.46(0.13) 4.48(0.05) 4.54(0.20) 4.46(0.17) 4.51(0.32) 4.49(0.06) 4.48(0.08) 4.45(0.04) 4.27(0.21) 4.20(0.14) 4.35(0.16) 4.47(0.15) 4.50(0.08) 4.45(0.12) 4.28(0.18) 4.30(0.11) 4.45(0.16) 4.45(0.13) 4.29(0.16) 4.19(0.12) 4.36(0.22) 4.82(0.53) 5.53(0.75) 5.82(0.59) 6.22(0.43) 6.32(0.15) 6.39(0.08) 6.39(0.23) 5.94(0.65) 5.36(0.66) 4.92(0.46) 4.93(0.10) 4.93(0.07) 4.96(0.14) 4.97(0.11) 4.98(0.13) 4.96(0.11) 4.95(0.07) 4.89(0.12) 4.94(0.12) 4.89(0.10) 4.86(0.07) 4.93(0.18) 4.95(0.05) 4.86(0.15) 4.85(0.11) 4.81(0.11) 4.77(0.06) 4.76(0.04) 4.76(0.01) 4.75(0.05) 4.73(0.06) 4.78(0.08) 4.72(0.08) 4.77(0.09) 4.77(0.10) 4.55(0.24) 4.39(0.20) 4.46(0.15) 4.43(0.25) 4.42(0.10) 4.45(0.06) 4.49(0.08) 4.63(0.16) 4.71(0.08) 4.75(0.10) 4.70(0.06) 4.72(0.08) 4.74(0.03) 4.81(0.14) 4.79(0.12) 4.81(0.08) 4.80(0.05) 4.85(0.07) 4.85(0.11) 4.80(0.09) 4.81(0.05) 4.97(0.16) 4.97(0.05) 4.99(0.07) 4.99(0.05) 4.98(0.07) 5.03(0.06) 5.09(0.08) 5.07(0.04) 5.12(0.11) 5.08(0.29) 5.19(0.29) 5.08(0.14) 5.08(0.11) 5.05(0.07) 5.05(0.05) 5.06(0.08) 4.98(0.11) 5.00(0.10) 5.12(0.13) 5.16(0.06) 5.19(0.04) 5.11(0.14) 4.94(0.18) 4.85(0.09) 4.98(0.14) 5.04(0.18) 5.08(0.05) 4.99(0.12) 4.90(0.16) 4.90(0.12) 5.20(0.39) 5.56(0.44) 6.11(0.62) 6.64(0.56) 6.87(0.26) 7.02(0.16) 7.10(0.16) 6.84(0.70) 6.31(0.55) 6.03(0.32) 6.14(0.16) 6.25(0.15) 6.35(0.12) 6.43(0.20) 6.50(0.11) 6.51(0.09) 6.51(0.21) 6.53(0.10) 6.56(0.07) 6.54(0.11) 6.54(0.04) 6.53(0.02) 6.44(0.10) 6.41(0.05) 6.35(0.12) 6.37(0.04) 6.39(0.06) 6.36(0.08) 6.60(0.29) 6.57(0.26) 6.56(0.20) 6.39(0.23) 6.28(0.26) 5.37(1.00) 5.27(0.15) 5.37(0.13) 5.50(0.13) 5.60(0.10) 5.81(0.23) 6.11(0.32) 6.02(0.12) 5.95(0.12) 5.99(0.07) 5.98(0.03) 5.97(0.06) 5.78(0.20) 5.61(0.21) 5.66(0.07) 5.82(0.22) 5.91(0.14) 5.88(0.13) 5.88(0.11) 5.91(0.16) 5.90(0.09) 5.90(0.10) 5.86(0.06) 5.63(0.26) 5.57(0.12) 5.71(0.17) 5.65(0.11) 5.58(0.12) 5.56(0.10) 5.54(0.21) 5.57(0.12) 5.56(0.06) 5.51(0.15) 5.59(0.12) 5.59(0.10) 5.48(0.20) 5.26(0.25) 5.29(0.07) 5.50(0.23) 5.60(0.14) 5.66(0.10) 5.61(0.16) 5.44(0.19) 5.24(0.25) 5.22(0.09) 5.43(0.29) 5.47(0.08) 5.49(0.07) 5.47(0.07) 5.44(0.10) 5.44(0.06) 5.27(0.21) 5.15(0.12) 5.31(0.23) 5.49(0.19) 5.50(0.09) 5.53(0.07) 5.36(0.25) 5.20(0.19) 5.33(0.18) 5.45(0.15) 5.54(0.13) 5.55(0.05) 5.38(0.21) 5.26(0.19) 5.30(0.14) 5.34(0.11) 5.28(0.09) 5.28(0.10) 5.51(0.27) 5.71(0.35) 6.12(0.49) 6.49(0.45) 6.75(0.32) 7.00(0.27) 7.20(0.21) 7.24(0.17) 7.07(0.51) 6.82(0.43) 6.26(0.66) 6.05(0.31) 6.03(0.12) 6.01(0.15) 6.08(0.09) 6.07(0.10) 6.14(0.10) 6.18(0.07) 6.16(0.07) 6.14(0.06) 6.14(0.08) 6.09(0.12) 6.07(0.09) 5.94(0.21) 5.75(0.24) 5.69(0.09) 5.68(0.10) 5.68(0.06) 5.70(0.11) 5.75(0.10) 5.77(0.05) 5.60(0.20) 5.26(0.37) 5.31(0.12) 5.46(0.20) 5.58(0.13) 5.79(0.21) 5.90(0.12) 5.85(0.14) 5.89(0.06) 5.66(0.26) 5.03(0.65) 4.94(0.13) 5.36(0.45) 5.55(0.23) 5.46(0.12) 5.50(0.06) 5.66(0.18) 5.72(0.09) 5.75(0.09) 5.70(0.23) 5.62(0.14) 5.65(0.10) 5.51(0.21) 5.45(0.10) 5.51(0.07) 5.64(0.13) 5.78(0.16) 5.84(0.08) 5.73(0.15) 5.62(0.13) 5.74(0.16) 5.83(0.12) 5.86(0.06) 5.66(0.23) 5.57(0.16) 5.64(0.11) 5.72(0.11) 5.78(0.11) 5.92(0.16) 5.99(0.09) 6.21(0.30) 6.50(0.34) 7.04(0.60) 7.59(0.62) 7.93(0.38) 7.99(0.12) 8.02(0.10) 8.03(0.18) 7.67(0.66) 7.25(0.55) 6.42(0.91) 6.31(0.12) 6.33(0.13) 6.38(0.13) 6.44(0.11) 6.43(0.12) 6.44(0.07) 6.42(0.06) 6.39(0.09) 6.32(0.09) 6.31(0.12) 6.22(0.14) 6.26(0.11) 6.27(0.18) 6.30(0.07) 6.29(0.14) 6.04(0.32) 5.93(0.16) 6.06(0.14) 6.17(0.12) 6.18(0.12) 6.27(0.14) 6.28(0.10) 6.31(0.12) 6.28(0.09) 6.39(0.12) 6.49(0.13) 6.54(0.11) 6.42(0.14) 6.36(0.10) 6.37(0.09) 6.05(0.33) 5.47(0.63) 5.44(0.08) 5.54(0.11) 5.81(0.28) 5.88(0.08) 5.72(0.19) 5.72(0.12) 5.88(0.18) 5.94(0.11) 5.95(0.06) 5.98(0.07) 5.99(0.05) 5.98(0.04) 6.01(0.07) 6.02(0.02) 5.86(0.17) 5.63(0.25) 5.46(0.19) 5.69(0.25) 5.63(0.17) 5.33(0.36) 5.30(0.07) 5.35(0.06) 5.41(0.08) 5.44(0.05) 5.49(0.09) 5.55(0.06) 5.85(0.35) 5.94(0.10) 5.86(0.17) 5.80(0.13) 5.81(0.06) 5.80(0.08) 5.79(0.19) 5.65(0.15) 5.49(0.18) 5.37(0.12) 5.53(0.17) 5.61(0.11) 5.68(0.11) 5.72(0.05) 5.72(0.08) 5.71(0.10) 5.69(0.03) 5.52(0.21) 5.54(0.13) 5.72(0.19) 5.76(0.13) 5.76(0.04) 5.61(0.18) 5.41(0.22) 5.44(0.04) 5.52(0.11) 5.57(0.18) 5.62(0.07) 5.59(0.09) 5.57(0.14) 5.67(0.13) 5.85(0.23) 5.92(0.12) 5.92(0.14) 6.01(0.21) 6.18(0.20) 6.75(0.62) 7.22(0.55) 7.81(0.72) 8.07(0.30) 8.28(0.25) 8.34(0.13) 8.34(0.08) 8.11(0.45) 7.77(0.35) 6.96(0.85) 6.85(0.20) 6.77(0.11) 6.61(0.24) 6.48(0.16) 6.59(0.15) 6.71(0.12) 7.03(0.35) 6.96(0.18) 6.95(0.10) 7.00(0.10) 6.92(0.12) 6.97(0.15) 6.98(0.16) 7.00(0.10) 6.97(0.12) 6.91(0.12) 6.94(0.08) 6.89(0.08) 6.90(0.09) 6.91(0.04) 6.90(0.04) 6.89(0.04) 6.89(0.04) 6.90(0.06) 6.86(0.14) 6.91(0.06) 6.83(0.10) 6.88(0.09) 6.80(0.10) 6.74(0.10) 6.73(0.02) 6.72(0.02) 6.72(0.02) 6.73(0.03) 6.73(0.03) 6.76(0.04) 6.74(0.02) 6.75(0.03) 6.71(0.05) 6.46(0.29) 6.27(0.20) 6.35(0.09) 6.49(0.15) 6.56(0.10) 6.69(0.17) 6.32(0.42) 5.90(0.44) 5.87(0.08) 6.07(0.24) 6.42(0.38) 6.54(0.19) 6.61(0.09) 6.67(0.07) 6.57(0.18) 6.41(0.18) 6.51(0.19) 6.50(0.14) 6.54(0.20) 6.59(0.12) 6.61(0.05) 6.64(0.04) 6.65(0.05) 6.53(0.17) 6.45(0.08) 6.53(0.09) 6.63(0.11) 6.64(0.05) 6.68(0.10) 6.66(0.06) 6.69(0.08) 6.65(0.09) 6.56(0.11) 6.54(0.04) 6.63(0.12) 6.65(0.04) 6.67(0.03) 6.70(0.12) 6.59(0.15) 6.53(0.09) 6.61(0.11) 6.60(0.07) 6.62(0.07) 6.66(0.07) 6.66(0.05) 6.63(0.05) 6.53(0.11) 6.40(0.14) 6.47(0.09) 6.57(0.13) 6.61(0.10) 6.61(0.08) 6.65(0.07) 6.59(0.11) 6.50(0.10) 6.50(0.07) 6.54(0.08) 6.53(0.10) 6.47(0.11) 6.46(0.07) 6.41(0.08) 6.18(0.28) 6.18(0.06) 6.21(0.16) 6.27(0.08) 6.36(0.13) 6.38(0.09) 6.34(0.08) 6.29(0.08) 6.27(0.04) 6.27(0.02) 6.29(0.07) 6.23(0.08) 6.11(0.13) 6.18(0.07) 6.27(0.10) 6.32(0.11) 6.32(0.05) 6.36(0.07) 6.20(0.28) 6.15(0.20) 6.19(0.09) 6.04(0.18) 6.12(0.17) 6.21(0.12) 6.27(0.10) 6.21(0.13) 6.10(0.13) 6.18(0.11) 6.36(0.21) 6.42(0.09) 6.24(0.19) 6.26(0.26) 6.34(0.09) 6.48(0.16) 6.55(0.25) 7.04(0.62) 7.49(0.47) 7.98(0.53) 8.15(0.18) 8.22(0.14) 8.27(0.07) 7.96(0.45) 6.98(1.02) 6.56(0.48) 6.64(0.15) 6.70(0.15) 6.75(0.13) 6.71(0.19) 6.43(0.35) 6.51(0.12) 6.50(0.10) 6.54(0.06) 6.65(0.21) 6.71(0.13) 6.70(0.07) 6.73(0.20) 6.68(0.15) 6.68(0.04) 6.67(0.05) 6.65(0.08) 6.68(0.09) 6.67(0.07) 6.68(0.08) 6.64(0.08) 6.67(0.11) 6.64(0.09) 6.66(0.10) 6.64(0.08) 6.66(0.06) 6.55(0.11) 6.34(0.23) 6.32(0.04) 6.40(0.16) 6.40(0.04) 6.39(0.19) 6.25(0.25) 5.92(0.41) 5.95(0.15) 6.03(0.10) 6.05(0.04) 6.17(0.15) 6.29(0.13) 6.32(0.04) 6.32(0.06) 6.23(0.10) 6.12(0.13) 6.20(0.21) 6.16(0.07) 5.99(0.28) 5.94(0.19) 5.98(0.11) 6.01(0.05) 5.95(0.08) 5.93(0.04) 5.90(0.07) 5.74(0.16) 5.68(0.13) 5.79(0.12) 5.82(0.08) 5.86(0.06) 5.89(0.03) 5.88(0.05) 5.86(0.06) 5.88(0.04) 5.88(0.05) 5.78(0.10) 5.68(0.11) 5.73(0.08) 5.77(0.06) 5.76(0.05) 5.78(0.05) 5.78(0.08) 5.78(0.04) 5.74(0.06) 5.62(0.12) 5.59(0.08) 5.66(0.09) 5.73(0.08) 5.67(0.09) 5.50(0.20) 5.45(0.20) 6.00(0.61) 5.65(0.44) 5.14(0.56) 5.13(0.05) 5.24(0.17)
++ Max displacement in automask = 8.34 (mm) at sub-brick 866
++ Max delta displ  in automask = 1.02 (mm) at sub-brick 1012
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb03.GB18.r03.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB18_unif_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master MPRAGE.GB18_unif_ns+tlrc -dxyz 2.5 -source pb02.GB18.r03.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB18_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GB18.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 722.7 sec
3dNwarpApply -master MPRAGE.GB18_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB18_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB18.r01.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB18.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB18.r02.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB18.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GB18.r03.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GB18.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GB18_unif_al_junk_mat.aff12.1D -I
3dNwarpApply -master MPRAGE.GB18_unif_ns+tlrc -dxyz 2.5 -source vr_base_min_outlier+orig -nwarp anat.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base_min_outlier
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GB18_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'vr_base_min_outlier+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./final_epi_vr_base_min_outlier+tlrc.BRIK
++ total Elapsed time = 13.2 sec
3dcopy MPRAGE.GB18_unif_ns+tlrc anat_final.GB18
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dAllineate -base final_epi_vr_base_min_outlier+tlrc -allcostX -input anat_final.GB18+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.GB18+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base_min_outlier+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'TOHD(12.9425)'
 +        -cmass x y z shifts =   -0.490    1.131   -0.542
 +  shift search range is +/- =   73.830   89.880   72.225
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.105978
   sp   = 0.307376
   mi   = 2.8238
   crM  = 0.0244713
   nmi  = 0.83772
   je   = 2.8238
   hel  = -0.11331
   crA  = 0.156459
   crU  = 0.159326
   lss  = 0.894022
   lpc  = 0.36725
   lpa  = 0.63275
   lpc+ = 0.476516
   lpa+ = 0.742016
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.1
++ ###########################################################
3dNwarpApply -source MPRAGE.GB18_unif+orig -master anat_final.GB18+tlrc -ainterp wsinc5 -nwarp anat.aff.qw_WARP.nii anat.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'MPRAGE.GB18_unif+orig'
++ -master dataset is 'anat_final.GB18+tlrc'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 56.6 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb04.volreg pb04.GB18.r01.volreg+tlrc.HEAD pb04.GB18.r02.volreg+tlrc.HEAD pb04.GB18.r03.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 473.0 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 1163.4 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 568.1 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB18.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB18.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb04.GB18.r03.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./sphere.mean.20.r03+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB18.r01.blur pb04.GB18.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GB18.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB18.r02.blur pb04.GB18.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GB18.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb05.GB18.r03.blur pb04.GB18.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2280.6 MB)

-- Wrote edited dataset: ./pb05.GB18.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -prefix rm.mask_r01 pb05.GB18.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB18.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 4062.163330
 + Used gradual clip level = 3831.938232 .. 4253.324707
 + Number voxels above clip level = 116993
 + Clustering voxels ...
 + Largest cluster has 115285 voxels
 + Clustering voxels ...
 + Largest cluster has 114412 voxels
 + Filled   137 voxels in small holes; now have 114549 voxels
 + Clustering voxels ...
 + Largest cluster has 114549 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 430919 voxels
 + Mask now has 114549 voxels
++ 114549 voxels in the mask [out of 545468: 21.00%]
++ first  10 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last   11 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb05.GB18.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB18.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 4042.021240
 + Used gradual clip level = 3819.305664 .. 4233.058594
 + Number voxels above clip level = 117006
 + Clustering voxels ...
 + Largest cluster has 115289 voxels
 + Clustering voxels ...
 + Largest cluster has 114606 voxels
 + Filled   124 voxels in small holes; now have 114730 voxels
 + Clustering voxels ...
 + Largest cluster has 114728 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 430740 voxels
 + Mask now has 114728 voxels
++ 114728 voxels in the mask [out of 545468: 21.03%]
++ first  10 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last   11 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb05.GB18.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb05.GB18.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 4009.391602
 + Used gradual clip level = 3772.319092 .. 4235.637695
 + Number voxels above clip level = 117329
 + Clustering voxels ...
 + Largest cluster has 115576 voxels
 + Clustering voxels ...
 + Largest cluster has 114929 voxels
 + Filled   121 voxels in small holes; now have 115050 voxels
 + Clustering voxels ...
 + Largest cluster has 115050 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 430418 voxels
 + Mask now has 115050 voxels
++ 115050 voxels in the mask [out of 545468: 21.09%]
++ first  10 x-planes are zero [from L]
++ last   10 x-planes are zero [from R]
++ first  11 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last   11 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.GB18
++ processing 3 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 115717 survived, 429751 were zero
++ writing result full_mask.GB18...
3dresample -master full_mask.GB18+tlrc -input MPRAGE.GB18_unif_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.GB18
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 147484 survived, 397984 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.GB18...
3dmask_tool -input full_mask.GB18+tlrc mask_anat.GB18+tlrc -inter -prefix mask_epi_anat.GB18
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 32635 clipped, 115283 survived, 397550 were zero
++ writing result mask_epi_anat.GB18...
3dABoverlap -no_automask full_mask.GB18+tlrc mask_anat.GB18+tlrc
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#A=./full_mask.GB18+tlrc.BRIK  B=./mask_anat.GB18+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
115717       147484       147918       115283       434          32201         0.3751     21.8336     1.1586     1.1123     1.1747
3ddot -dodice full_mask.GB18+tlrc mask_anat.GB18+tlrc
tee out.mask_ae_dice.txt
0.876007	
3dresample -master full_mask.GB18+tlrc -prefix ./rm.resam.group -input /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz[0]
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 122282 survived, 423186 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
3ddot -dodice mask_anat.GB18+tlrc mask_group+tlrc
tee out.mask_at_dice.txt
0.905985	
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb05.GB18.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb05.GB18.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb06.GB18.r01.scale
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
