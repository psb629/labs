echo auto-generated by afni_proc.py, Thu Jan 19 17:50:32 2023
auto-generated by afni_proc.py, Thu Jan 19 17:50:32 2023
echo (version 7.17, July 16, 2021)
(version 7.17, July 16, 2021)
echo execution started: `date`
date
execution started: Thu Jan 19 05:50:32 PM KST 2023
afni -ver
Precompiled binary linux_ubuntu_16_64: Jul 28 2021 (Version AFNI_21.2.04 'Nerva')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   27 Jul 2021
if ( 0 ) then
if ( 0 > 0 ) then
set subj = GA06
endif
set output_dir = /mnt/ext5/GA/fmri_data/preproc_data/GA06
if ( -d /mnt/ext5/GA/fmri_data/preproc_data/GA06 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir -p /mnt/ext5/GA/fmri_data/preproc_data/GA06
mkdir /mnt/ext5/GA/fmri_data/preproc_data/GA06/stimuli
3dcopy /mnt/ext5/GA/fmri_data/raw_data/GA06/MPRAGE.GA06.nii /mnt/ext5/GA/fmri_data/preproc_data/GA06/MPRAGE.GA06
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GA06/blip_forward /mnt/ext5/GA/fmri_data/raw_data/GA06/dist_AP.GA06.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.0 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GA06/blip_reverse /mnt/ext5/GA/fmri_data/raw_data/GA06/dist_PA.GA06.nii
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 0.0 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GA06/pb00.GA06.r01.tcat /mnt/ext5/GA/fmri_data/raw_data/GA06/func.GA06.r01.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 66.0 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GA06/pb00.GA06.r02.tcat /mnt/ext5/GA/fmri_data/raw_data/GA06/func.GA06.r02.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 263.5 s
3dTcat -prefix /mnt/ext5/GA/fmri_data/preproc_data/GA06/pb00.GA06.r03.tcat /mnt/ext5/GA/fmri_data/raw_data/GA06/func.GA06.r03.nii[0..$]
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 212.2 s
set tr_counts = ( 1096 1096 1096 )
cd /mnt/ext5/GA/fmri_data/preproc_data/GA06
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.GA06.r01.tcat+orig.HEAD pb00.GA06.r02.tcat+orig.HEAD pb00.GA06.r03.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 2.0 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 4.4 s
++ 3dTcat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ elapsed time = 2.4 s
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GA06.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1208.5 MB)

-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GA06.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2416.9 MB)

-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb00.GA06.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1208.5 MB)

-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ have do_clean, cleaning up...

3dUnifize -prefix MPRAGE.GA06_unif -GM MPRAGE.GA06+orig
++ 3dUnifize: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
 + Pre-processing: ADV.............UW[s128051]Gm
++ Output dataset ./MPRAGE.GA06_unif+orig.BRIK
++ ===== Elapsed = 115.5 sec
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 4 -legendre pb00.GA06.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 78958 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GA06.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 79031 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 4 -legendre pb00.GA06.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 78917 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 1096 1096 1096 -index_to_run_tr 215
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
set minoutrun = 01
set minouttr = 215
echo min outlier: run 01, TR 215
tee out.min_outlier.txt
min outlier: run 01, TR 215
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.GA06.r01.despike pb00.GA06.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GA06.r01.tcat+orig
++ processing all 578088 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #14
++ start OpenMP thread #5
++ start OpenMP thread #7
++ start OpenMP thread #6
++ start OpenMP thread #9
++ start OpenMP thread #12
++ start OpenMP thread #13
++ start OpenMP thread #8
++ start OpenMP thread #11
++ start OpenMP thread #1
++ start OpenMP thread #10
++ start OpenMP thread #4
++ start OpenMP thread #2
++ start OpenMP thread #3
......................................................................................................................................................................................................................................................
++ Elapsed despike time =  9s 36ms

++ FINAL: 412517960 data points, 15652979 edits [3.794%], 1025624 big edits [0.249%]
++ Output dataset ./pb01.GA06.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GA06.r02.despike pb00.GA06.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GA06.r02.tcat+orig
++ processing all 578088 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #14
++ start OpenMP thread #4
++ start OpenMP thread #5
++ start OpenMP thread #11
++ start OpenMP thread #9
++ start OpenMP thread #1
++ start OpenMP thread #6
++ start OpenMP thread #7
++ start OpenMP thread #2
++ start OpenMP thread #8
++ start OpenMP thread #10
++ start OpenMP thread #12
++ start OpenMP thread #13
++ start OpenMP thread #3
......................................................................................................................................................................................................................................................
++ Elapsed despike time =  9s 550ms

++ FINAL: 412600160 data points, 15976340 edits [3.872%], 1226363 big edits [0.297%]
++ Output dataset ./pb01.GA06.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.GA06.r03.despike pb00.GA06.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 1096
++ using 1096 time points => -corder 37
++ Loading dataset pb00.GA06.r03.tcat+orig
++ processing all 578088 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #14
++ start OpenMP thread #2
++ start OpenMP thread #12
++ start OpenMP thread #4
++ start OpenMP thread #7
++ start OpenMP thread #3
++ start OpenMP thread #5
++ start OpenMP thread #13
++ start OpenMP thread #10
++ start OpenMP thread #9
++ start OpenMP thread #6
++ start OpenMP thread #11
++ start OpenMP thread #8
......................................................................................................................................................................................................................................................
++ Elapsed despike time =  9s 161ms

++ FINAL: 412517960 data points, 16625937 edits [4.030%], 1791438 big edits [0.434%]
++ Output dataset ./pb01.GA06.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.GA06.r01.tshift pb01.GA06.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GA06.r02.tshift pb01.GA06.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTshift -tzero 0 -quintic -prefix pb02.GA06.r03.tshift pb01.GA06.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
[7m*+ WARNING:[0m dataset is already aligned in time!
[7m*+ WARNING:[0m ==>> output dataset is just a copy of input dataset
end
3dTstat -median -prefix rm.blip.med.fwd blip_forward+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.fwd+orig.BRIK
3dTstat -median -prefix rm.blip.med.rev blip_reverse+orig
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.blip.med.rev+orig.BRIK
3dAutomask -apply_prefix rm.blip.med.masked.fwd rm.blip.med.fwd+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.fwd+orig
++ Forming automask
 + Fixed clip level = 5759.554688
 + Used gradual clip level = 5616.889160 .. 5979.469238
 + Number voxels above clip level = 88920
 + Clustering voxels ...
 + Largest cluster has 87606 voxels
 + Clustering voxels ...
 + Largest cluster has 85445 voxels
 + Filled   370 voxels in small holes; now have 85815 voxels
 + Filled     2 voxels in large holes; now have 85817 voxels
 + Clustering voxels ...
 + Largest cluster has 85814 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 492274 voxels
 + Mask now has 85814 voxels
++ 85814 voxels in the mask [out of 578088: 14.84%]
++ first  17 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first  19 y-planes are zero [from A]
++ last   15 y-planes are zero [from P]
++ first   5 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dAutomask -apply_prefix rm.blip.med.masked.rev rm.blip.med.rev+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset rm.blip.med.rev+orig
++ Forming automask
 + Fixed clip level = 5755.627441
 + Used gradual clip level = 5511.800293 .. 6105.305176
 + Number voxels above clip level = 88266
 + Clustering voxels ...
 + Largest cluster has 87759 voxels
 + Clustering voxels ...
 + Largest cluster has 86200 voxels
 + Filled   301 voxels in small holes; now have 86501 voxels
 + Filled     2 voxels in large holes; now have 86503 voxels
 + Clustering voxels ...
 + Largest cluster has 86498 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 491578 voxels
 + Mask now has 86510 voxels
++ 86510 voxels in the mask [out of 578088: 14.96%]
++ first  17 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first  12 y-planes are zero [from A]
++ last   14 y-planes are zero [from P]
++ first   5 z-planes are zero [from I]
++ last   11 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
3dQwarp -plusminus -pmNAMES Rev For -pblur 0.05 0.05 -blur -1 -1 -noweight -minpatch 9 -source rm.blip.med.masked.rev+orig -base rm.blip.med.masked.fwd+orig -prefix blip_warp
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=3 ytop=3  zbot=5 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=./rm.blip.med.masked.fwd+orig.HEAD  source=./rm.blip.med.masked.rev+orig.HEAD
++ AFNI warpomatic start: 90 x 99 x 82 volume ; autobbox = 10..83 13..90 0..77
lev=0 1..89 4..98 0..81: [first cost=-1.58536] ...... done [cost=-1.70584]
lev=1 patch=67x71x61: [first cost=-1.59344] ........ done [cost:-1.65216 ; 8 patches optimized, 0 skipped]
lev=2 patch=51x53x47: [first cost=-1.58160] ......................... done [cost:-1.65515 ; 25 patches optimized, 2 skipped]
lev=3 patch=37x41x35: [first cost=-1.58350] ................. done [cost:-1.65262 ; 47 patches optimized, 17 skipped]
lev=4 patch=29x31x25: [first cost=-1.61605] ............... done [cost:-1.70671 ; 103 patches optimized, 47 skipped]
lev=5 patch=21x23x19: [first cost=-1.70682] ............................. done [cost:-1.80505 ; 252 patches optimized, 140 skipped]
lev=6 patch=15x17x15: [first cost=-1.73426] ................................ done [cost:-1.82255 ; 677 patches optimized, 533 skipped]
lev=7 patch=11x13x11: [first cost=-1.82989]  +      cubic12 patch 047..057 039..051 000..010 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x173f360  xbot=0x175bbf0  xtop=0x1715350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.. +      cubic12 patch 017..027 069..081 010..020 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x173f360  xbot=0x175bbf0  xtop=0x1715350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
................. +      cubic12 patch 072..082 045..057 040..050 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x173f360  xbot=0x175bbf0  xtop=0x1715350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
............... +      cubic12 patch 027..037 027..039 065..075 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x173f360  xbot=0x175bbf0  xtop=0x1715350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
..... done [cost:-1.92737 ; 1663 patches optimized, 1262 skipped]
lev=8 patch=9x9x9: [first cost=-1.92662] .. +      cubic12 patch 070..078 029..037 052..060 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x173f360  xbot=0x175bbf0  xtop=0x1715350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.... +      cubic12 patch 058..066 081..089 036..044 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x173f360  xbot=0x175bbf0  xtop=0x1715350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
 +      cubic12 patch 058..066 081..089 028..036 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x173f360  xbot=0x175bbf0  xtop=0x1715350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.................. +      cubic12 patch 046..054 077..085 052..060 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x173f360  xbot=0x175bbf0  xtop=0x1715350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.............. +      cubic12 patch 038..046 033..041 068..076 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x173f360  xbot=0x175bbf0  xtop=0x1715350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
.................. +      cubic12 patch 026..034 029..037 008..016 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x173f360  xbot=0x175bbf0  xtop=0x1715350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
...... +      cubic12 patch 018..026 017..025 044..052 : skipping - powell_newuoa_con() failure code=-1
 + powell_newuoa_con( ndim=12  x=0x173f360  xbot=0x175bbf0  xtop=0x1715350  nrand=0  rstart=0.333000  rend=0.002997  maxcall=127  ufunc=0x492700
... done [cost:-1.99046 ; 3875 patches optimized, 3345 skipped]
++ ====== total number of parameters 'optimized' = 79989
 +      initial unpenalized cost = -1.58536
 +        final unpenalized cost = -2.03509
 +        final penalized   cost = -1.99046
++ Output dataset ./blip_warp_Rev+orig.BRIK
++ Output dataset ./blip_warp_For+orig.BRIK
++ Output dataset ./blip_warp_Rev_WARP+orig.BRIK
++ Output dataset ./blip_warp_For_WARP+orig.BRIK
++ ===== clock time = 40s 331ms
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.fwd+orig -prefix blip_med_for
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for+orig.BRIK
++ total Elapsed time = 0.3 sec
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source rm.blip.med.masked.fwd+orig -prefix blip_med_for_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.fwd+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_for_masked+orig.BRIK
++ total Elapsed time = 0.3 sec
3dNwarpApply -quintic -nwarp blip_warp_Rev_WARP+orig -source rm.blip.med.masked.rev+orig -prefix blip_med_rev_masked
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'rm.blip.med.masked.rev+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./blip_med_rev_masked+orig.BRIK
++ total Elapsed time = 0.3 sec
foreach run ( 01 02 03 )
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GA06.r01.tshift+orig -prefix pb03.GA06.r01.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GA06.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GA06.r01.blip+orig.BRIK
++ total Elapsed time = 167.6 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GA06.r02.tshift+orig -prefix pb03.GA06.r02.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GA06.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GA06.r02.blip+orig.BRIK
++ total Elapsed time = 72.0 sec
end
3dNwarpApply -quintic -nwarp blip_warp_For_WARP+orig -source pb02.GA06.r03.tshift+orig -prefix pb03.GA06.r03.blip
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'pb02.GA06.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:.[R].................................................Z
++ Output dataset ./pb03.GA06.r03.blip+orig.BRIK
++ total Elapsed time = 21.5 sec
end
3dbucket -prefix vr_base_min_outlier pb03.GA06.r01.blip+orig[215]
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
align_epi_anat.py -anat2epi -anat MPRAGE.GA06_unif+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off -tshift off
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GA06/MPRAGE.GA06_unif+orig
#++ Multi-cost is lpa
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GA06_unif*
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GA06_unif+orig ./MPRAGE.GA06_unif_unflipped+orig
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./MPRAGE.GA06_unif_unflipped+orig -prefix ./MPRAGE.GA06_unif_unflipped_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 96, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 108, avoid_vent -1
#Script is running (command trimmed):
  3dinfo ./MPRAGE.GA06_unif_unflipped_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GA06/MPRAGE.GA06_unif_unflipped_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /mnt/ext5/GA/fmri_data/preproc_data/GA06/vr_base_min_outlier+orig is not oblique
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_ts ./vr_base_min_outlier+orig'[0]'
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_min_outlier_ts_ns ./__tt_vr_base_min_outlier_ts+orig
++ 3dAutomask: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 3965.913086
 + Used gradual clip level = 3739.764893 .. 4249.012695
 + Number voxels above clip level = 81942
 + Clustering voxels ...
 + Largest cluster has 80468 voxels
 + Clustering voxels ...
 + Largest cluster has 79049 voxels
 + Filled   290 voxels in small holes; now have 79339 voxels
 + Filled     1 voxels in large holes; now have 79340 voxels
 + Clustering voxels ...
 + Largest cluster has 79340 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 498748 voxels
 + Mask now has 79340 voxels
++ 79340 voxels in the mask [out of 578088: 13.72%]
++ first  16 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first  19 y-planes are zero [from A]
++ last   15 y-planes are zero [from P]
++ first   5 z-planes are zero [from I]
++ last   12 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_min_outlier_ts_ns+orig
#++ Applying threshold of 9347.289062 on /mnt/ext5/GA/fmri_data/preproc_data/GA06/vr_base_min_outlier_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_min_outlier_ts_ns_wt -a ./vr_base_min_outlier_ts_ns+orig -expr 'min(1,(a/9347.289062))'
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpa -wtprefix ./MPRAGE.GA06_unif_unflipped_ns_al_junk_wtal -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GA06_unif_unflipped_ns+orig -prefix ./MPRAGE.GA06_unif_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GA06_unif_al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GA06_unif_unflipped_ns+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4727954 voxels in -source_automask+2
++ Zero-pad: zbot=6 ztop=0
++ 79340 voxels [12.7%] in weight mask
++ Number of points for matching = 79340
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 42.638 50.425 40.448 (index)
 + source center of mass = 120.685 179.595 156.606 (index)
 + source-target CM = -0.595 -2.143 -5.804 (xyz)
 + estimated center of mass shifts = -0.595 -2.143 -5.804
++ shift param auto-range: -72.1..70.9 -81.4..77.1 -73.8..62.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.595093 .. 9.404907  center = -0.595093
 + Range param#2 [y-shift] = -12.143150 .. 7.856850  center = -2.143150
 + Range param#3 [z-shift] = -15.804054 .. 4.195946  center = -5.804054
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.595093 .. 39.404907  center = -0.595093
 + Range param#2 [y-shift] = -42.143150 .. 37.856850  center = -2.143150
 + Range param#3 [z-shift] = -45.804054 .. 34.195946  center = -5.804054
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -40.595 ..   39.405
 +       y-shift =  -42.143 ..   37.857
 +       z-shift =  -45.804 ..   34.196
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4727954 [out of 26640432] voxels
 + base mask has 99397 [out of 624960] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=270.807 usiz=395.692
 + - copying weight image
 + - using 79340 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 69738 total points stored in 138 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#o+o+oo+.+-+o--..o...+.-.$-. + - best 88 costs found:
   o= 0 v= 0.906661:  -0.60  -2.14  -5.80   0.00   0.00   0.00  [grid]
   o= 1 v= 0.963159:   6.07  -8.81 -12.47  -7.50  -7.50  -7.50  [grid]
   o= 2 v= 0.967971:  26.07  -8.81 -12.47  -7.50  -7.50  -7.50  [grid]
   o= 3 v= 0.969580:  36.05 -19.37  16.45   5.26 -41.39  40.03  [rand]
   o= 4 v= 0.970131:  17.90   3.71 -20.40  16.04  -3.33 -12.13  [rand]
   o= 5 v= 0.970420: -15.60  34.80 -24.05  34.16  13.44  39.30  [rand]
   o= 6 v= 0.971441: -24.50  -9.07 -19.73  13.51 -15.92   9.43  [rand]
   o= 7 v= 0.971519:   6.07  -8.81 -12.47  -7.50 -30.00  -7.50  [grid]
   o= 8 v= 0.971662:   6.07  -8.81 -12.47  -7.50  -7.50 -30.00  [grid]
   o= 9 v= 0.971759:  -7.26  -8.81 -12.47   7.50  -7.50   7.50  [grid]
   o=10 v= 0.972226: -27.26   4.52 -12.47  30.00   7.50   7.50  [grid]
   o=11 v= 0.972242:  34.82 -31.65  -2.70 -13.33  -5.58  13.04  [rand]
   o=12 v= 0.972718: -22.94 -18.53  10.03 -41.11 -22.86  -3.97  [rand]
   o=13 v= 0.972739:  17.90  -8.00 -20.40  16.04  -3.33 -12.13  [rand]
   o=14 v= 0.972769: -27.26  24.52 -12.47  30.00   7.50 -30.00  [grid]
   o=15 v= 0.972920:  31.90 -29.13  26.09  -9.69  21.75  40.77  [rand]
   o=16 v= 0.972947:  -7.26   4.52 -12.47   7.50   7.50   7.50  [grid]
   o=17 v= 0.972958:  26.07   4.52 -12.47 -30.00   7.50   7.50  [grid]
   o=18 v= 0.972963:  14.49 -27.29   7.43  41.17 -18.22  29.97  [rand]
   o=19 v= 0.972981: -15.56 -13.30   4.65 -35.95  25.02  -2.65  [rand]
   o=20 v= 0.973014: -19.09   3.71 -20.40 -16.04   3.33  12.13  [rand]
   o=21 v= 0.973093:  17.90   3.71 -20.40  16.04   3.33 -12.13  [rand]
   o=22 v= 0.973372: -37.40  30.95 -26.00  39.82  23.12   9.72  [rand]
   o=23 v= 0.973426:  26.07  -8.81 -12.47  -7.50   7.50  -7.50  [grid]
   o=24 v= 0.973468:  26.07   4.52   0.86  -7.50   7.50  -7.50  [grid]
   o=25 v= 0.973657: -27.26  -8.81 -12.47  30.00  -7.50   7.50  [grid]
   o=26 v= 0.973694:  -7.26  24.52 -32.47 -30.00  30.00 -30.00  [grid]
   o=27 v= 0.973736:  -7.26   4.52 -12.47  30.00 -30.00   7.50  [grid]
   o=28 v= 0.973740:  29.52  30.77  -8.99  -3.65  37.49  -5.77  [rand]
   o=29 v= 0.973794:  -2.72  -8.65 -35.91   6.85 -38.25 -36.13  [rand]
   o=30 v= 0.973849:  26.07   4.52   0.86   7.50  -7.50   7.50  [grid]
   o=31 v= 0.973969:  26.07   4.52 -12.47  -7.50   7.50  30.00  [grid]
   o=32 v= 0.974024:   6.07   4.52 -12.47 -30.00   7.50  -7.50  [grid]
   o=33 v= 0.974029:   6.07   4.52 -12.47   7.50  30.00 -30.00  [grid]
   o=34 v= 0.974037: -18.93  24.00 -11.85  -6.51  20.18  -7.56  [rand]
   o=35 v= 0.974057: -35.46 -32.70   9.97 -11.68 -29.04 -39.38  [rand]
   o=36 v= 0.974110:  -7.26  -8.81 -12.47   7.50  -7.50  30.00  [grid]
   o=37 v= 0.974135: -38.36 -17.78   1.95 -31.25 -41.23 -36.84  [rand]
   o=38 v= 0.974146:   6.07  -8.81 -12.47   7.50  -7.50 -30.00  [grid]
   o=39 v= 0.974157:  17.90  -8.00 -20.40  16.04   3.33 -12.13  [rand]
   o=40 v= 0.974206:  -7.26   4.52 -12.47  30.00   7.50   7.50  [grid]
   o=41 v= 0.974218:  31.89 -16.84   6.00  11.16   9.40  34.39  [rand]
   o=42 v= 0.974375:  33.18 -34.06   1.91 -12.26 -17.56  17.80  [rand]
   o=43 v= 0.974564:   6.07   4.52 -12.47  -7.50   7.50 -30.00  [grid]
   o=44 v= 0.974587:  33.23 -31.64   7.15  31.95  -9.87  34.85  [rand]
   o=45 v= 0.974594:   6.07  -8.81 -12.47  -7.50   7.50  -7.50  [grid]
   o=46 v= 0.974725: -29.96  25.96  -3.05  34.59   4.09 -21.59  [rand]
   o=47 v= 0.974788: -37.26  25.62  -0.92  15.70  36.90  27.47  [rand]
   o=48 v= 0.974959:  20.45  -6.17 -10.11  37.69 -26.76  -3.08  [rand]
   o=49 v= 0.974971:  23.31   4.79 -19.73  13.51  15.92  -9.43  [rand]
   o=50 v= 0.975036:  26.07   4.52 -12.47 -30.00  30.00   7.50  [grid]
   o=51 v= 0.975124:  -7.26  -8.81 -12.47   7.50  -7.50  -7.50  [grid]
   o=52 v= 0.975130:   6.07   4.52 -12.47 -30.00   7.50   7.50  [grid]
   o=53 v= 0.975137: -15.68  23.00   7.43  41.17 -18.22 -29.97  [rand]
   o=54 v= 0.975269:  -7.26   4.52 -12.47   7.50   7.50  30.00  [grid]
   o=55 v= 0.975298:  17.90  -8.00 -20.40 -16.04  -3.33  12.13  [rand]
   o=56 v= 0.975393:  26.07  -8.81   0.86 -30.00  -7.50   7.50  [grid]
   o=57 v= 0.975393:  33.73 -18.73   2.80 -16.34   8.64  40.54  [rand]
   o=58 v= 0.975430:  31.89 -16.84   6.00  11.16  -9.40  34.39  [rand]
   o=59 v= 0.975448:  -7.26   4.52 -12.47  30.00   7.50  30.00  [grid]
   o=60 v= 0.975486:  14.37   9.01   4.65  35.95  25.02   2.65  [rand]
   o=61 v= 0.975555:  20.45   1.88 -10.11 -37.69  26.76   3.08  [rand]
   o=62 v= 0.975609: -18.93  24.00 -11.85   6.51  20.18  -7.56  [rand]
   o=63 v= 0.975649: -38.36 -17.78   1.95  31.25  41.23 -36.84  [rand]
   o=64 v= 0.975698: -27.26   4.52 -12.47  30.00  -7.50   7.50  [grid]
   o=65 v= 0.975739: -19.09  -8.00 -20.40 -16.04   3.33  12.13  [rand]
   o=66 v= 0.975792:   6.07  24.52 -12.47  30.00   7.50  30.00  [grid]
   o=67 v= 0.975806:  23.75  27.55 -18.83 -28.68  38.91  32.36  [rand]
   o=68 v= 0.975809:  29.19 -12.89 -19.77  -4.50   6.71  -7.94  [rand]
   o=69 v= 0.975816:  31.89 -16.84   6.00 -11.16   9.40  34.39  [rand]
   o=70 v= 0.975830:  33.73  14.44   2.80 -16.34   8.64  40.54  [rand]
   o=71 v= 0.975838:  34.27 -32.70   9.97 -11.68  29.04  39.38  [rand]
   o=72 v= 0.975901:  37.17 -17.78   1.95 -31.25  41.23  36.84  [rand]
   o=73 v= 0.975907:  -7.26  -8.81 -12.47  30.00  -7.50  30.00  [grid]
   o=74 v= 0.975911: -34.92 -18.73   2.80  16.34   8.64 -40.54  [rand]
   o=75 v= 0.975929:  28.69 -17.90  24.06 -13.45  19.96  14.96  [rand]
   o=76 v= 0.976011:  -4.67  -8.37 -13.60   4.32  22.85  18.95  [rand]
   o=77 v= 0.976052:  -7.26   4.52 -12.47  30.00   7.50  -7.50  [grid]
   o=78 v= 0.976074:  17.90   3.71 -20.40 -16.04  -3.33 -12.13  [rand]
   o=79 v= 0.976095: -27.26   4.52 -12.47  -7.50  -7.50  30.00  [grid]
   o=80 v= 0.976140:  26.07   4.52 -12.47   7.50   7.50  30.00  [grid]
   o=81 v= 0.976162:  26.07 -28.81   0.86   7.50   7.50   7.50  [grid]
   o=82 v= 0.976165:  26.07   4.52 -12.47   7.50   7.50  -7.50  [grid]
   o=83 v= 0.976191:   6.29   6.93  -2.32 -42.18  25.76  19.54  [rand]
   o=84 v= 0.976198:  11.00   2.42  -1.91  24.53  29.49  26.10  [rand]
   o=85 v= 0.976252:  28.42 -29.29  27.81  -7.44  27.42  25.63  [rand]
   o=86 v= 0.976253:  36.07 -29.91  -0.92 -15.70 -36.90  27.47  [rand]
   o=87 v= 0.976286:   6.07  -8.81 -12.47  -7.50   7.50 -30.00  [grid]
 + - A little optimization:*[#11716=0.874062] *[#11726=0.868617] *[#11727=0.847624] *[#11728=0.828159] *[#11730=0.814141] *[#11731=0.810562] *[#11732=0.8031] *[#11734=0.801838] *[#11735=0.794052] *[#11741=0.793474] *[#11743=0.793045] *[#11744=0.792967] *[#11745=0.792737] *[#11746=0.792661] *[#11748=0.791751] *[#11749=0.791027] *[#11750=0.790419] *[#11752=0.79022] *[#11753=0.789976] *[#11756=0.789771] *[#11761=0.789507] *[#11762=0.7893] *[#11764=0.789268] *[#11766=0.789235] *[#11769=0.789217] *[#11773=0.78918] *[#11774=0.789166] ........................................................................................
 + - costs of the above after a little optimization:
  *o= 0 v= 0.789166:  -1.12  -1.05  -3.29   0.30   1.27   0.91  [grid]  [f=62]
   o= 1 v= 0.951396:   7.86  -6.84 -16.23  -7.10  -9.64  -8.54  [grid]  [f=57]
   o= 2 v= 0.958977:  26.17  -8.38 -10.44 -12.72  -9.30  -1.36  [grid]  [f=59]
   o= 3 v= 0.968014:  35.65 -19.72  15.79  10.10 -40.12  40.05  [rand]  [f=33]
   o= 4 v= 0.958869:  18.08   7.02 -17.04  21.07  -5.73 -13.08  [rand]  [f=58]
   o= 5 v= 0.954023: -18.46  35.13 -25.90  30.84  21.95  38.06  [rand]  [f=48]
   o= 6 v= 0.966427: -24.38 -12.69 -19.06  13.54 -16.54   9.57  [rand]  [f=34]
   o= 7 v= 0.957693:   8.17 -10.62 -18.12  -6.48 -13.50 -14.01  [grid]  [f=67]
   o= 8 v= 0.954203:   8.25  -7.00 -18.27  -4.07  -7.66 -28.23  [grid]  [f=54]
   o= 9 v= 0.963698: -12.18  -8.27 -15.09   6.66  -9.96   6.81  [grid]  [f=45]
   o=10 v= 0.969273: -28.90   3.16 -12.54  28.96   7.23   7.40  [grid]  [f=41]
   o=11 v= 0.967871:  34.50 -31.36   0.59 -12.99  -5.84  14.75  [rand]  [f=43]
   o=12 v= 0.967378: -21.90 -19.15   7.60 -44.91 -26.86  -6.44  [rand]  [f=41]
   o=13 v= 0.963481:  19.03  -6.42 -16.60  11.70  -3.21 -14.93  [rand]  [f=61]
   o=14 v= 0.970041: -28.07  23.23 -11.67  30.96   5.88 -32.74  [grid]  [f=33]
   o=15 v= 0.969676:  31.73 -29.43  23.28 -14.64  19.55  39.11  [rand]  [f=41]
   o=16 v= 0.964865:  -6.88   5.36 -17.14   8.71   5.00   4.32  [grid]  [f=46]
   o=17 v= 0.965011:  27.99   4.16  -4.67 -33.79   5.22   4.26  [grid]  [f=47]
   o=18 v= 0.970119:  13.96 -28.10   8.17  40.78 -13.35  29.85  [rand]  [f=40]
   o=19 v= 0.972048: -16.02 -13.67   4.83 -35.64  24.94  -1.75  [rand]  [f=32]
   o=20 v= 0.964471: -19.10   0.38 -18.47  -9.50   1.96  12.15  [rand]  [f=39]
   o=21 v= 0.963275:  17.88   3.74 -21.55  22.56   6.68 -15.76  [rand]  [f=51]
   o=22 v= 0.967034: -33.70  30.50 -26.27  40.33  23.14  10.41  [rand]  [f=31]
   o=23 v= 0.968348:  25.99  -4.87 -12.14  -6.16   7.74  -6.40  [grid]  [f=42]
   o=24 v= 0.968033:  27.19   4.46  -1.99 -10.72   4.95  -2.01  [grid]  [f=52]
   o=25 v= 0.967032: -25.45  -1.98 -14.81  30.00 -13.27   2.40  [grid]  [f=41]
   o=26 v= 0.964901:  -5.15  21.94 -31.36 -33.37  37.72 -27.64  [grid]  [f=62]
   o=27 v= 0.967455:  -7.99   3.80 -13.23  34.35 -29.10   9.42  [grid]  [f=51]
   o=28 v= 0.970238:  29.22  28.32 -10.07  -2.64  37.09  -6.01  [rand]  [f=59]
   o=29 v= 0.972332:  -2.73  -9.30 -35.82   7.81 -38.16 -36.39  [rand]  [f=46]
   o=30 v= 0.971021:  27.72   4.14  -0.14   6.34  -6.74  11.50  [grid]  [f=44]
   o=31 v= 0.966522:  28.69   1.92 -14.42  -6.59  11.68  23.31  [grid]  [f=60]
   o=32 v= 0.964375:   6.89   2.95 -12.07 -22.53   9.86  -6.42  [grid]  [f=51]
   o=33 v= 0.968648:   6.73   3.16 -13.34   5.24  33.01 -29.47  [grid]  [f=65]
   o=34 v= 0.963325: -19.91  23.54  -8.53  -3.40  19.70  -6.29  [rand]  [f=50]
   o=35 v= 0.967631: -38.59 -33.94   9.62  -9.41 -28.77 -39.04  [rand]  [f=43]
   o=36 v= 0.957006: -10.28  -3.48 -15.08  12.39  -2.91  28.79  [grid]  [f=76]
   o=37 v= 0.968999: -40.15 -16.98   6.32 -31.33 -40.35 -35.89  [rand]  [f=42]
   o=38 v= 0.954910:   8.14  -7.49 -17.88  -1.53  -7.09 -29.69  [grid]  [f=52]
   o=39 v= 0.961934:  17.65  -5.52 -16.44  13.47  -1.38 -16.52  [rand]  [f=46]
   o=40 v= 0.960990:  -6.45   3.57 -11.79  37.30  11.30   8.02  [grid]  [f=57]
   o=41 v= 0.966071:  32.46 -19.59   8.44   6.67   7.78  33.54  [rand]  [f=44]
   o=42 v= 0.965069:  33.77 -32.23   2.11 -13.52  -9.77  19.95  [rand]  [f=55]
   o=43 v= 0.958992:   6.37   3.49 -15.43  -8.82  14.55 -29.20  [grid]  [f=59]
   o=44 v= 0.964194:  34.77 -33.60   8.24  28.57 -10.27  39.64  [rand]  [f=43]
   o=45 v= 0.947980:  11.46  -1.66 -11.50  -4.81  -1.09 -10.65  [grid]  [f=83]
   o=46 v= 0.967293: -30.19  22.28  -3.29  33.45   4.85 -20.17  [rand]  [f=45]
   o=47 v= 0.964114: -39.14  23.88  -5.27  13.29  43.95  30.42  [rand]  [f=52]
   o=48 v= 0.969667:  19.91 -10.33 -10.24  37.86 -26.93  -3.14  [rand]  [f=42]
   o=49 v= 0.965833:  22.51   3.00 -14.80  14.51  12.89 -12.41  [rand]  [f=46]
   o=50 v= 0.968067:  24.45   2.06 -10.58 -31.27  24.08   5.43  [grid]  [f=45]
   o=51 v= 0.968255:  -5.20 -10.74 -13.59   6.06 -11.26  -9.00  [grid]  [f=69]
   o=52 v= 0.965045:   6.17   2.59 -12.07 -41.20   5.14   9.40  [grid]  [f=67]
   o=53 v= 0.971732: -19.91  22.55   8.22  39.90 -17.39 -27.95  [rand]  [f=39]
   o=54 v= 0.955928:  -6.89  -1.11 -13.95  12.73   0.10  25.12  [grid]  [f=61]
   o=55 v= 0.960832:  17.41  -4.51 -15.45 -16.02  -3.51   9.75  [rand]  [f=61]
   o=56 v= 0.963174:  32.37  -8.65  -2.78 -29.10 -10.86   4.33  [grid]  [f=47]
   o=57 v= 0.970460:  33.84 -19.27   7.04 -16.47   9.25  41.65  [rand]  [f=44]
   o=58 v= 0.965466:  31.39 -28.38   3.67  12.45  -4.85  38.58  [rand]  [f=47]
   o=59 v= 0.952938:  -5.18   3.20 -13.04  23.49   0.66  28.88  [grid]  [f=75]
   o=60 v= 0.970657:  14.25  11.19   5.71  37.05  23.95   3.33  [rand]  [f=53]
   o=61 v= 0.968739:  21.61  -1.34 -10.80 -39.55  29.32  10.20  [rand]  [f=44]
   o=62 v= 0.968616: -17.69  24.57 -11.95   4.45  18.87  -7.94  [rand]  [f=64]
   o=63 v= 0.965880: -38.51 -19.09  -2.22  30.54  31.54 -37.35  [rand]  [f=51]
   o=64 v= 0.965448: -28.64   1.31 -12.26  27.99  -9.37   7.31  [grid]  [f=51]
   o=65 v= 0.962706: -19.15  -3.90 -17.14 -13.17   3.66   9.11  [rand]  [f=79]
   o=66 v= 0.970463:   6.42  23.00 -13.44  28.50   7.36  35.01  [grid]  [f=53]
   o=67 v= 0.972825:  26.15  27.59 -18.33 -28.58  38.35  32.54  [rand]  [f=45]
   o=68 v= 0.968816:  27.29  -9.93 -16.33  -7.21   6.34  -5.64  [rand]  [f=46]
   o=69 v= 0.963753:  34.79 -25.46   7.12  -6.40   7.45  36.15  [rand]  [f=41]
   o=70 v= 0.971808:  33.54  12.55  -3.08 -16.33   9.13  40.09  [rand]  [f=48]
   o=71 v= 0.968398:  33.88 -28.29  11.29 -11.51  26.17  36.40  [rand]  [f=36]
   o=72 v= 0.970484:  38.02 -25.96   5.30 -29.91  43.40  39.13  [rand]  [f=39]
   o=73 v= 0.959054:  -4.88  -4.74 -13.44  19.65  -2.13  28.99  [grid]  [f=70]
   o=74 v= 0.962600: -38.41 -18.99   1.81  12.65  11.10 -31.41  [rand]  [f=49]
   o=75 v= 0.969700:  30.24 -17.00  19.17 -18.06  18.07  21.11  [rand]  [f=54]
   o=76 v= 0.961348:  -4.96  -5.90 -16.55   7.19  20.08  26.22  [rand]  [f=68]
   o=77 v= 0.965858:  -4.65   3.21 -13.74  33.69   7.04  -0.72  [grid]  [f=83]
   o=78 v= 0.948274:  13.58  -0.97 -12.58  -8.01  -2.37 -10.77  [rand]  [f=79]
   o=79 v= 0.968367: -25.49   3.48 -13.25 -10.48 -12.70  29.65  [grid]  [f=49]
   o=80 v= 0.966458:  26.04   3.68 -15.90   1.51   4.08  19.30  [grid]  [f=70]
   o=81 v= 0.975149:  26.61 -28.27   0.83   7.53   7.76   7.53  [grid]  [f=30]
   o=82 v= 0.963705:  18.83   2.72 -10.70   7.34   8.46  -2.34  [grid]  [f=61]
   o=83 v= 0.967680:   5.47   5.62   3.97 -40.07  22.69  19.46  [rand]  [f=63]
   o=84 v= 0.972878:  11.63   6.55  -1.97  24.40  28.90  27.01  [rand]  [f=52]
   o=85 v= 0.969568:  28.65 -32.46  23.35  -4.41  25.88  25.17  [rand]  [f=65]
   o=86 v= 0.972708:  36.08 -31.15   2.60 -15.73 -36.78  27.64  [rand]  [f=49]
   o=87 v= 0.961002:   5.39  -6.29 -18.88 -13.39   5.45 -29.79  [grid]  [f=71]
 + - saving # 0 for use with twobest
 + - saving #45 for use with twobest
 + - skip #78 for twobest: too close to set #45
 + - saving # 1 for use with twobest
 + - saving #59 for use with twobest
 + - saving # 5 for use with twobest
 + - saving # 8 for use with twobest
 + - skip #38 for twobest: too close to set # 8
 + - saving #54 for use with twobest
 + - skip #36 for twobest: too close to set #54
 + - saving # 7 for use with twobest
 + - saving # 4 for use with twobest
 + - saving # 2 for use with twobest
 + - saving #43 for use with twobest
 + - saving #73 for use with twobest
 + - saving #55 for use with twobest
 + - saving #40 for use with twobest
 + - saving #87 for use with twobest
 + - saving #76 for use with twobest
 + - saving #39 for use with twobest
 + - saving #74 for use with twobest
 + - saving #65 for use with twobest
 + - saving #56 for use with twobest
 + - saving #21 for use with twobest
 + - saving #34 for use with twobest
 + - skip #13 for twobest: too close to set #39
 + - saving # 9 for use with twobest
 + - saving #82 for use with twobest
 + - saving #69 for use with twobest
 + - saving #47 for use with twobest
 + - saving #44 for use with twobest
 + - saving #32 for use with twobest
 + - saving #20 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=270.807 usiz=395.692
 + - retaining old weight image
 + - using 79340 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 69363 total points stored in 139 'TOHD(14.0453)' bloks (0 duplicates)
*[#16390=0.788154] *[#16401=0.787604] *[#16410=0.78408] *[#16413=0.782968] *[#16415=0.781356] *[#16416=0.780977] *[#16422=0.775946] *[#16424=0.773809] *[#16427=0.773634] *[#16429=0.773004] *[#16430=0.772926] *[#16432=0.772387] *[#16433=0.769434] *[#16438=0.768219] *[#16440=0.767348] *[#16443=0.766674] *[#16444=0.764206] *[#16447=0.763165] *[#16456=0.763014] *[#16457=0.762112] *[#16461=0.762088] *[#16464=0.761852] *[#16465=0.761574] *[#16466=0.761475] *[#16469=0.761415] *[#16470=0.76134] *[#16471=0.76114] *[#16472=0.76089] *[#16473=0.760668] *[#16475=0.760654] *[#16477=0.760553] *[#16478=0.760502] *[#16479=0.76048] *[#16480=0.760209] *[#16481=0.759944] *[#16482=0.759694] *[#16485=0.759687] 
 + - param set #1 has cost=0.759687 [o=0 t=0]
 + -- Parameters = -0.9247 -0.6509 -3.1319 0.2016 1.0208 0.8164 0.9840 0.9892 0.9732 -0.0020 0.0136 -0.0040
 + - param set #2 has cost=0.958841 [o=45 t=1]
 + -- Parameters = 12.2011 -2.2253 -12.4838 -5.4158 -1.0057 -10.3359 0.9887 1.0094 0.9929 -0.0019 0.0010 -0.0004
 + - param set #3 has cost=0.959381 [o=1 t=2]
 + -- Parameters = 11.3434 -5.9773 -16.2919 -6.3003 -9.1541 -8.2775 1.0005 0.9948 0.9870 0.0014 -0.0016 -0.0008
 + - param set #4 has cost=0.956986 [o=59 t=3]
 + -- Parameters = -5.0940 2.4167 -15.6833 19.9155 2.2682 31.0762 0.9855 1.0016 0.9654 0.0187 -0.0037 0.0105
 + - param set #5 has cost=0.963787 [o=5 t=4]
 + -- Parameters = -18.4009 35.1161 -25.9666 30.4871 22.1038 38.1208 1.0014 1.0011 0.9973 0.0001 0.0005 0.0003
 + - param set #6 has cost=0.959822 [o=8 t=5]
 + -- Parameters = 8.6000 -7.5344 -17.8050 -3.5995 -7.5004 -27.0910 0.9906 1.0012 0.9865 0.0007 0.0022 -0.0064
 + - param set #7 has cost=0.956914 [o=54 t=6]
 + -- Parameters = -6.8632 -2.3938 -14.7708 15.8298 0.5734 30.3190 0.9897 1.0292 0.9724 -0.0056 -0.0053 -0.0045
 + - param set #8 has cost=0.962687 [o=7 t=7]
 + -- Parameters = 8.1084 -9.3541 -18.0261 -6.8568 -12.0820 -12.5883 0.9954 0.9980 1.0091 0.0014 0.0176 0.0016
 + - param set #9 has cost=0.962077 [o=4 t=8]
 + -- Parameters = 19.1879 6.8639 -16.9120 20.6026 -7.2845 -13.3818 0.9848 0.9851 0.9860 -0.0014 0.0006 -0.0012
 + - param set #10 has cost=0.964422 [o=2 t=9]
 + -- Parameters = 25.7986 -7.8075 -10.3118 -13.0431 -9.3182 -1.2571 0.9982 0.9985 1.0407 -0.0006 -0.0000 -0.0003
 + - param set #11 has cost=0.964582 [o=43 t=10]
 + -- Parameters = 5.7887 4.0873 -16.1742 -9.3556 12.9215 -31.1987 0.9921 1.0034 1.0125 -0.0020 0.0007 0.0135
 + - param set #12 has cost=0.964365 [o=73 t=11]
 + -- Parameters = -5.0423 -4.8249 -12.8701 19.2123 -2.3684 28.4323 1.0002 0.9970 1.0056 0.0170 -0.0015 -0.0003
 + - param set #13 has cost=0.966596 [o=55 t=12]
 + -- Parameters = 17.6256 -4.3714 -15.4495 -16.1240 -3.5341 9.5738 1.0064 0.9944 0.9985 -0.0008 0.0005 -0.0004
 + - param set #14 has cost=0.970125 [o=40 t=13]
 + -- Parameters = -6.4647 3.5047 -11.5166 36.8957 11.5781 8.0406 0.9992 1.0024 1.0046 0.0029 -0.0014 -0.0007
 + - param set #15 has cost=0.962648 [o=87 t=14]
 + -- Parameters = 6.7910 -5.0736 -18.4860 -12.0002 6.5094 -30.0579 0.9694 1.0004 0.9857 -0.0004 0.0237 0.0010
 + - param set #16 has cost=0.961977 [o=76 t=15]
 + -- Parameters = -6.6175 -7.8743 -17.7644 8.1988 10.1576 26.2624 0.9555 1.0916 1.0055 -0.0028 -0.0056 0.0070
 + - param set #17 has cost=0.965672 [o=39 t=16]
 + -- Parameters = 18.2008 -4.9454 -16.0537 13.4596 -1.8526 -16.9350 0.9922 0.9993 0.9965 0.0140 0.0006 0.0030
 + - param set #18 has cost=0.762224 [o=-1 t=-1]
 + -- Parameters = -0.6537 -0.4397 -3.3150 -0.4582 0.8037 1.6717 0.9714 0.9892 0.9724 -0.0094 -0.0082 -0.0072
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0979 
 + --- dist(#3,#1) = 0.328 
 + --- dist(#4,#1) = 0.336 
 + --- dist(#5,#1) = 0.164 
 + --- dist(#6,#1) = 0.165 
 + --- dist(#7,#1) = 0.31 
 + --- dist(#8,#1) = 0.283 
 + --- dist(#9,#1) = 0.251 
 + --- dist(#10,#1) = 0.343 
 + --- dist(#11,#1) = 0.186 
 + --- dist(#12,#1) = 0.447 
 + --- dist(#13,#1) = 0.307 
 + --- dist(#14,#1) = 0.334 
 + --- dist(#15,#1) = 0.356 
 + --- dist(#16,#1) = 0.239 
 + --- dist(#17,#1) = 0.232 
 + --- dist(#18,#1) = 0.408 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=270.807 usiz=395.692
 + - retaining old weight image
 + - using 79340 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 69391 total points stored in 141 'TOHD(13.984)' bloks (0 duplicates)
 + - param set #1 has cost=0.765956 [o=0 t=0]
 + -- Parameters = -0.9453 -0.5908 -2.9750 0.1724 0.8713 0.8763 0.9759 0.9900 0.9624 -0.0013 0.0103 -0.0057
 + - param set #2 has cost=0.765116 [o=-1 t=-1]
 + -- Parameters = -0.7546 -0.5748 -2.9244 0.1789 0.7287 1.5293 0.9765 0.9897 0.9561 -0.0037 -0.0088 -0.0082
 + - param set #3 has cost=0.965953 [o=54 t=6]
 + -- Parameters = -6.9394 -2.7273 -14.3974 16.4026 0.6656 30.4314 0.9947 1.0374 0.9795 0.0061 -0.0050 -0.0052
 + - param set #4 has cost=0.961943 [o=59 t=3]
 + -- Parameters = -4.5302 1.5434 -16.5144 18.8622 1.9548 35.4078 0.9890 1.0029 0.9684 0.0188 -0.0038 0.0081
 + - param set #5 has cost=0.966170 [o=45 t=1]
 + -- Parameters = 12.7402 -2.2487 -12.1513 -5.2591 -1.0393 -10.9398 0.9713 1.0148 0.9979 -0.0013 0.0090 -0.0027
 + - param set #6 has cost=0.966333 [o=1 t=2]
 + -- Parameters = 11.3096 -5.8762 -16.2471 -6.2082 -9.1605 -8.2796 1.0022 0.9920 0.9885 0.0010 -0.0008 -0.0008
 + - param set #7 has cost=0.962650 [o=8 t=5]
 + -- Parameters = 9.8889 -8.3741 -16.7996 -3.7119 -7.6329 -26.8094 0.9733 0.9833 0.9157 0.0036 -0.0055 -0.0157
 + - param set #8 has cost=0.969371 [o=76 t=15]
 + -- Parameters = -6.6123 -7.8023 -17.3961 8.4876 10.4019 25.4255 0.9542 1.0896 1.0069 -0.0037 -0.0060 0.0065
 + - param set #9 has cost=0.968802 [o=4 t=8]
 + -- Parameters = 19.2363 7.0069 -16.8827 20.5414 -7.0665 -13.3002 0.9842 0.9854 0.9864 -0.0014 0.0010 -0.0020
 + - param set #10 has cost=0.966866 [o=87 t=14]
 + -- Parameters = 6.8767 -4.9806 -17.8572 -11.4934 7.1372 -29.9636 0.9671 0.9983 0.9799 0.0006 0.0338 0.0007
 + - param set #11 has cost=0.969097 [o=7 t=7]
 + -- Parameters = 8.1537 -9.4492 -18.2248 -6.9381 -11.9257 -12.7730 0.9919 0.9980 1.0089 0.0025 0.0269 0.0013
 + - param set #12 has cost=0.967606 [o=5 t=4]
 + -- Parameters = -17.7892 34.8520 -26.0092 30.9059 23.0408 38.3579 1.0057 1.0018 0.9972 0.0003 0.0000 0.0007
 + - param set #13 has cost=0.970265 [o=73 t=11]
 + -- Parameters = -5.1816 -4.7067 -11.3285 19.7366 -1.0101 28.4126 0.9989 0.9805 1.0255 0.0275 0.0043 -0.0023
 + - param set #14 has cost=0.970531 [o=2 t=9]
 + -- Parameters = 25.7836 -7.8087 -9.9405 -13.7315 -9.0790 -0.8720 1.0010 1.0029 1.0493 0.0018 0.0090 0.0004
 + - param set #15 has cost=0.970810 [o=43 t=10]
 + -- Parameters = 5.8473 3.9079 -16.8577 -9.4529 12.2737 -31.3161 0.9897 1.0061 1.0184 -0.0013 0.0097 0.0153
 + - param set #16 has cost=0.971388 [o=39 t=16]
 + -- Parameters = 18.2933 -5.1907 -16.0683 13.1782 -1.7957 -16.9193 0.9887 0.9952 0.9863 0.0207 0.0019 0.0037
 + - param set #17 has cost=0.968076 [o=55 t=12]
 + -- Parameters = 19.5010 -3.5755 -14.1560 -17.2038 -3.9448 8.5130 1.0067 1.0097 0.9806 -0.0022 0.0096 0.0015
 + - param set #18 has cost=0.977257 [o=40 t=13]
 + -- Parameters = -6.7273 2.9713 -11.2510 37.1591 12.4030 7.8391 0.9979 1.0109 1.0056 0.0130 -0.0032 0.0012
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0858 
 + --- dist(#3,#1) = 0.376 
 + --- dist(#4,#1) = 0.315 
 + --- dist(#5,#1) = 0.321 
 + --- dist(#6,#1) = 0.169 
 + --- dist(#7,#1) = 0.167 
 + --- dist(#8,#1) = 0.35 
 + --- dist(#9,#1) = 0.443 
 + --- dist(#10,#1) = 0.253 
 + --- dist(#11,#1) = 0.25 
 + --- dist(#12,#1) = 0.191 
 + --- dist(#13,#1) = 0.266 
 + --- dist(#14,#1) = 0.299 
 + --- dist(#15,#1) = 0.332 
 + --- dist(#16,#1) = 0.365 
 + --- dist(#17,#1) = 0.238 
 + --- dist(#18,#1) = 0.411 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=270.807 usiz=395.692
 + - retaining old weight image
 + - using 79340 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 70768 total points stored in 146 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.782432 [o=-1 t=-1]
 + -- Parameters = -0.7751 -0.6208 -3.0347 0.1635 0.8364 1.3072 0.9787 0.9904 0.9658 -0.0035 -0.0013 -0.0069
 + - param set #2 has cost=0.782146 [o=0 t=0]
 + -- Parameters = -0.8602 -0.5811 -2.9979 0.2530 0.7910 0.9755 0.9803 0.9902 0.9658 0.0002 0.0083 -0.0081
 + - param set #3 has cost=0.968023 [o=59 t=3]
 + -- Parameters = -4.5268 1.5695 -16.5597 18.8213 2.0469 35.2573 0.9876 1.0041 0.9629 0.0207 -0.0053 0.0089
 + - param set #4 has cost=0.964705 [o=8 t=5]
 + -- Parameters = 9.9244 -8.4063 -16.6791 -3.5936 -7.7448 -26.7782 0.9812 0.9873 0.9210 0.0103 -0.0055 -0.0171
 + - param set #5 has cost=0.970170 [o=54 t=6]
 + -- Parameters = -6.9947 -2.6533 -14.0004 16.7990 0.4644 31.0607 0.9976 1.0374 0.9697 0.0098 -0.0082 -0.0122
 + - param set #6 has cost=0.967024 [o=45 t=1]
 + -- Parameters = 13.8594 -2.6769 -11.9875 -5.6065 -1.8687 -12.0645 0.9342 1.0170 0.9876 -0.0214 0.0085 -0.0182
 + - param set #7 has cost=0.971292 [o=1 t=2]
 + -- Parameters = 11.3556 -5.7764 -16.2535 -6.0072 -9.1328 -8.3707 1.0027 0.9913 0.9859 0.0014 -0.0005 -0.0009
 + - param set #8 has cost=0.968534 [o=87 t=14]
 + -- Parameters = 7.2613 -3.4519 -18.3732 -10.6172 7.2106 -30.0702 0.9604 1.0124 0.9773 -0.0068 0.0423 0.0044
 + - param set #9 has cost=0.971882 [o=5 t=4]
 + -- Parameters = -17.7633 34.8888 -26.0376 30.8334 23.0411 38.3390 1.0060 1.0018 0.9970 0.0002 0.0000 0.0007
 + - param set #10 has cost=0.972433 [o=55 t=12]
 + -- Parameters = 19.9915 -3.6590 -14.1177 -16.8126 -3.9317 8.3800 1.0212 1.0081 0.9819 -0.0009 0.0097 0.0007
 + - param set #11 has cost=0.970485 [o=4 t=8]
 + -- Parameters = 19.1722 7.5378 -16.9523 20.3039 -6.5857 -12.4434 0.9790 0.9734 0.9910 -0.0036 0.0043 -0.0245
 + - param set #12 has cost=0.972510 [o=7 t=7]
 + -- Parameters = 8.3851 -9.2931 -18.4571 -6.9163 -11.9004 -12.8488 0.9855 0.9968 1.0064 0.0026 0.0346 0.0001
 + - param set #13 has cost=0.970970 [o=76 t=15]
 + -- Parameters = -6.3146 -7.5777 -16.9305 9.5610 10.6095 24.3376 0.9668 1.0888 1.0196 0.0020 -0.0056 0.0076
 + - param set #14 has cost=0.974023 [o=73 t=11]
 + -- Parameters = -5.8619 -4.4919 -10.5988 22.4621 0.1061 26.0526 1.0006 0.9742 1.0044 0.0314 -0.0055 -0.0046
 + - param set #15 has cost=0.973192 [o=2 t=9]
 + -- Parameters = 25.8887 -7.8949 -9.7440 -13.9858 -9.1553 -0.9607 0.9981 0.9991 1.0675 -0.0001 0.0088 -0.0013
 + - param set #16 has cost=0.973790 [o=43 t=10]
 + -- Parameters = 5.8909 3.8638 -16.8934 -9.4282 12.4212 -31.5563 0.9901 1.0085 1.0190 -0.0016 0.0164 0.0165
 + - param set #17 has cost=0.973929 [o=39 t=16]
 + -- Parameters = 18.3075 -4.9396 -16.0053 13.5283 -1.4181 -16.9228 0.9890 0.9962 0.9841 0.0208 0.0004 0.0039
 + - param set #18 has cost=0.979914 [o=40 t=13]
 + -- Parameters = -6.9742 2.6734 -11.8038 37.2419 12.5240 7.2997 0.9984 1.0179 1.0089 0.0192 -0.0033 0.0024
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0435 
 + --- dist(#3,#1) = 0.308 
 + --- dist(#4,#1) = 0.184 
 + --- dist(#5,#1) = 0.381 
 + --- dist(#6,#1) = 0.345 
 + --- dist(#7,#1) = 0.334 
 + --- dist(#8,#1) = 0.25 
 + --- dist(#9,#1) = 0.26 
 + --- dist(#10,#1) = 0.166 
 + --- dist(#11,#1) = 0.443 
 + --- dist(#12,#1) = 0.261 
 + --- dist(#13,#1) = 0.193 
 + --- dist(#14,#1) = 0.334 
 + --- dist(#15,#1) = 0.361 
 + --- dist(#16,#1) = 0.24 
 + --- dist(#17,#1) = 0.279 
 + --- dist(#18,#1) = 0.411 
 + - Total coarse refinement net CPU time = 0.0 s; 5736 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=270.807 usiz=395.692
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 70478 total points stored in 145 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.788948 * [o=0 t=0]
 + -- Parameters = -0.8602 -0.5811 -2.9979 0.2530 0.7910 0.9755 0.9803 0.9902 0.9658 0.0002 0.0083 -0.0081
 + - cost(#2)=0.789290   [o=-1 t=-1]
 + -- Parameters = -0.7751 -0.6208 -3.0347 0.1635 0.8364 1.3072 0.9787 0.9904 0.9658 -0.0035 -0.0013 -0.0069
 + - cost(#3)=0.966217   [o=8 t=5]
 + -- Parameters = 9.9244 -8.4063 -16.6791 -3.5936 -7.7448 -26.7782 0.9812 0.9873 0.9210 0.0103 -0.0055 -0.0171
 + - cost(#4)=0.968755   [o=45 t=1]
 + -- Parameters = 13.8594 -2.6769 -11.9875 -5.6065 -1.8687 -12.0645 0.9342 1.0170 0.9876 -0.0214 0.0085 -0.0182
 + - cost(#5)=0.969376   [o=59 t=3]
 + -- Parameters = -4.5268 1.5695 -16.5597 18.8213 2.0469 35.2573 0.9876 1.0041 0.9629 0.0207 -0.0053 0.0089
 + - cost(#6)=0.969772   [o=87 t=14]
 + -- Parameters = 7.2613 -3.4519 -18.3732 -10.6172 7.2106 -30.0702 0.9604 1.0124 0.9773 -0.0068 0.0423 0.0044
 + - cost(#7)=0.971454   [o=54 t=6]
 + -- Parameters = -6.9947 -2.6533 -14.0004 16.7990 0.4644 31.0607 0.9976 1.0374 0.9697 0.0098 -0.0082 -0.0122
 + - cost(#8)=0.972163   [o=4 t=8]
 + -- Parameters = 19.1722 7.5378 -16.9523 20.3039 -6.5857 -12.4434 0.9790 0.9734 0.9910 -0.0036 0.0043 -0.0245
 + - cost(#9)=0.972005   [o=76 t=15]
 + -- Parameters = -6.3146 -7.5777 -16.9305 9.5610 10.6095 24.3376 0.9668 1.0888 1.0196 0.0020 -0.0056 0.0076
 + - cost(#10)=0.972587   [o=1 t=2]
 + -- Parameters = 11.3556 -5.7764 -16.2535 -6.0072 -9.1328 -8.3707 1.0027 0.9913 0.9859 0.0014 -0.0005 -0.0009
 + - cost(#11)=0.973130   [o=5 t=4]
 + -- Parameters = -17.7633 34.8888 -26.0376 30.8334 23.0411 38.3390 1.0060 1.0018 0.9970 0.0002 0.0000 0.0007
 + - cost(#12)=0.973818   [o=55 t=12]
 + -- Parameters = 19.9915 -3.6590 -14.1177 -16.8126 -3.9317 8.3800 1.0212 1.0081 0.9819 -0.0009 0.0097 0.0007
 + - cost(#13)=0.973775   [o=7 t=7]
 + -- Parameters = 8.3851 -9.2931 -18.4571 -6.9163 -11.9004 -12.8488 0.9855 0.9968 1.0064 0.0026 0.0346 0.0001
 + - cost(#14)=0.974135   [o=2 t=9]
 + -- Parameters = 25.8887 -7.8949 -9.7440 -13.9858 -9.1553 -0.9607 0.9981 0.9991 1.0675 -0.0001 0.0088 -0.0013
 + - cost(#15)=0.975381   [o=43 t=10]
 + -- Parameters = 5.8909 3.8638 -16.8934 -9.4282 12.4212 -31.5563 0.9901 1.0085 1.0190 -0.0016 0.0164 0.0165
 + - cost(#16)=0.974780   [o=39 t=16]
 + -- Parameters = 18.3075 -4.9396 -16.0053 13.5283 -1.4181 -16.9228 0.9890 0.9962 0.9841 0.0208 0.0004 0.0039
 + - cost(#17)=0.975246   [o=73 t=11]
 + -- Parameters = -5.8619 -4.4919 -10.5988 22.4621 0.1061 26.0526 1.0006 0.9742 1.0044 0.0314 -0.0055 -0.0046
 + - cost(#18)=0.981067   [o=40 t=13]
 + -- Parameters = -6.9742 2.6734 -11.8038 37.2419 12.5240 7.2997 0.9984 1.0179 1.0089 0.0192 -0.0033 0.0024
 + - cost(#19)=0.914325   [o=-2 t=-2]
 + -- Parameters = -0.5951 -2.1432 -5.8041 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.788886 * [o=0 t=0]
 + -- Parameters = -0.8566 -0.5898 -3.0111 0.2618 0.7632 0.9697 0.9807 0.9900 0.9659 0.0000 0.0076 -0.0088
 + - cost(#2)=0.789167   [o=-1 t=-1]
 + -- Parameters = -0.7754 -0.6495 -3.0015 0.2093 0.8362 1.2969 0.9786 0.9903 0.9635 -0.0026 -0.0015 -0.0079
 + - cost(#3)=0.966146   [o=8 t=5]
 + -- Parameters = 9.9562 -8.3437 -16.7571 -3.5207 -7.8563 -26.8015 0.9801 0.9847 0.9187 0.0112 -0.0055 -0.0172
 + - cost(#4)=0.967519   [o=45 t=1]
 + -- Parameters = 14.6129 -2.8728 -12.2013 -6.1221 -2.1514 -12.3970 0.9268 1.0070 0.9903 -0.0221 0.0224 -0.0179
 + - cost(#5)=0.969236   [o=59 t=3]
 + -- Parameters = -4.4313 1.6490 -16.6754 18.9512 2.1271 35.2034 0.9881 1.0034 0.9593 0.0204 -0.0125 0.0070
 + - cost(#6)=0.969189   [o=87 t=14]
 + -- Parameters = 7.3739 -3.1985 -18.3890 -10.9235 6.9829 -29.8864 0.9625 1.0186 0.9760 -0.0093 0.0434 -0.0026
 + - cost(#7)=0.970752   [o=54 t=6]
 + -- Parameters = -6.9998 -2.6279 -13.7615 17.2066 0.0388 31.0754 0.9977 1.0402 0.9694 0.0136 -0.0099 -0.0249
 + - cost(#8)=0.972013   [o=4 t=8]
 + -- Parameters = 19.2476 7.5998 -16.9147 20.2305 -6.6076 -12.4634 0.9791 0.9725 0.9895 -0.0032 0.0041 -0.0255
 + - cost(#9)=0.971889   [o=76 t=15]
 + -- Parameters = -6.3302 -7.5490 -16.9139 9.5923 10.6447 24.2694 0.9672 1.0884 1.0208 0.0019 -0.0055 0.0091
 + - cost(#10)=0.972575   [o=1 t=2]
 + -- Parameters = 11.3561 -5.7646 -16.2542 -5.9936 -9.1238 -8.3708 1.0025 0.9914 0.9862 0.0014 -0.0005 -0.0006
 + - cost(#11)=0.973101   [o=5 t=4]
 + -- Parameters = -17.7430 34.8936 -26.0282 30.8453 23.0501 38.3168 1.0063 1.0019 0.9973 0.0002 -0.0000 -0.0066
 + - cost(#12)=0.973758   [o=55 t=12]
 + -- Parameters = 20.0247 -3.7045 -14.1012 -16.7501 -3.9714 8.3954 1.0207 1.0069 0.9825 -0.0000 0.0091 -0.0001
 + - cost(#13)=0.973628   [o=7 t=7]
 + -- Parameters = 8.4426 -9.3295 -18.4865 -6.8904 -11.7959 -12.9309 0.9849 1.0005 1.0059 0.0023 0.0360 0.0003
 + - cost(#14)=0.974118   [o=2 t=9]
 + -- Parameters = 25.9078 -7.8973 -9.7826 -13.9997 -9.1719 -0.9449 0.9979 0.9989 1.0676 -0.0002 0.0088 -0.0022
 + - cost(#15)=0.974896   [o=43 t=10]
 + -- Parameters = 5.9740 4.0291 -16.9351 -9.3354 12.6359 -31.5618 0.9902 1.0069 1.0215 -0.0024 0.0183 0.0250
 + - cost(#16)=0.973926   [o=39 t=16]
 + -- Parameters = 18.4841 -4.8215 -16.0075 13.8068 -0.8530 -16.3095 0.9849 0.9934 0.9813 0.0314 -0.0041 -0.0003
 + - cost(#17)=0.975227   [o=73 t=11]
 + -- Parameters = -5.8577 -4.4921 -10.6030 22.4494 0.1013 26.1074 1.0002 0.9750 1.0037 0.0312 -0.0067 -0.0043
 + - cost(#18)=0.980816   [o=40 t=13]
 + -- Parameters = -7.0198 2.6354 -11.5252 37.2984 12.6337 7.3440 0.9994 1.0187 1.0073 0.0198 0.0042 0.0021
 + - cost(#19)=0.789036   [o=-2 t=-2]
 + -- Parameters = -0.8395 -0.6334 -2.9824 0.3129 0.9209 1.0298 0.9803 0.9899 0.9640 0.0019 0.0061 -0.0055
 + - case #1 [o=0 t=0] is now the best
 + - Initial  cost = 0.788886
 + - Initial fine Parameters = -0.8566 -0.5898 -3.0111 0.2618 0.7632 0.9697 0.9807 0.9900 0.9659 0.0000 0.0076 -0.0088
 + - Finalish cost = 0.788834 ; 411 funcs
 + - ini Finalish Parameters = -0.8447 -0.5657 -3.0204 0.2744 0.7065 1.0191 0.9807 0.9898 0.9659 -0.0001 0.0055 -0.0101
 + - Final    cost = 0.788834 ; 285 funcs
 + Final fine fit Parameters:
       x-shift= -0.8451   y-shift= -0.5662   z-shift= -3.0229  ...  enorm=  3.1895 mm
       z-angle=  0.2726   x-angle=  0.7069   y-angle=  1.0197  ...  total=  1.2718 deg
       x-scale=  0.9807   y-scale=  0.9898   z-scale=  0.9660  ...  vol3D=  0.9377 = base bigger than source
     y/x-shear= -0.0001 z/x-shear=  0.0055 z/y-shear= -0.0102
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.8451 -0.5662 -3.0229 0.2726 0.7069 1.0197 0.9807 0.9898 0.9660 -0.0001 0.0055 -0.0102
++ Unloading unneeded data
++ Wrote -1Dmatrix_save ./MPRAGE.GA06_unif_al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 30.7
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_MPRAGE.GA06_unif_lr_al_junk -overwrite ./MPRAGE.GA06_unif_unflipped_ns+orig
++ processing ./MPRAGE.GA06_unif_unflipped_ns+orig ...
#Script is running (command trimmed):
  3dAllineate -lpa -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./__tt_MPRAGE.GA06_unif_lr_al_junk+orig -prefix ./MPRAGE.GA06_unif_flip_al_junk -base ./vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./MPRAGE.GA06_unif_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_MPRAGE.GA06_unif_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 4727954 voxels in -source_automask+2
++ Zero-pad: zbot=6 ztop=0
++ 79340 voxels [12.7%] in weight mask
++ Number of points for matching = 79340
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 42.638 50.425 40.448 (index)
 + source center of mass = 125.315 179.595 156.606 (index)
 + source-target CM = 2.646 -2.143 -5.804 (xyz)
 + estimated center of mass shifts = 2.646 -2.143 -5.804
++ shift param auto-range: -68.8..74.1 -81.4..77.1 -73.8..62.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -7.353790 .. 12.646210  center = 2.646210
 + Range param#2 [y-shift] = -12.143150 .. 7.856850  center = -2.143150
 + Range param#3 [z-shift] = -15.804054 .. 4.195946  center = -5.804054
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -37.353790 .. 42.646210  center = 2.646210
 + Range param#2 [y-shift] = -42.143150 .. 37.856850  center = -2.143150
 + Range param#3 [z-shift] = -45.804054 .. 34.195946  center = -5.804054
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -37.354 ..   42.646
 +       y-shift =  -42.143 ..   37.857
 +       z-shift =  -45.804 ..   34.196
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.7000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Abs =======
 + source mask has 4727954 [out of 26640432] voxels
 + base mask has 99397 [out of 624960] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.68
 + - Smoothing source; radius=2.68
 + !source mask fill: ubot=270.807 usiz=395.692
 + - copying weight image
 + - using 79340 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 69738 total points stored in 138 'TOHD(14.1462)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+119)*64 params [top5=*o+-.]:#*[#1=0.994268] **[#2=0.985546] *+o+*[#6=0.985267] **[#7=0.983728] **[#8=0.978077] *oo+.-*[#32=0.976221] *o*[#45=0.975908] *.*[#63=0.968209] *-o-o.+o+*[#127=0.966198] *+*[#589=0.9653] *.o-.$*[#7560=0.964956] **[#11263=0.964196] *
 + - best 88 costs found:
   o= 0 v= 0.964196:  26.56  -9.07 -19.73 -13.51 -15.92  -9.43  [rand]
   o= 1 v= 0.964956:  -1.43  -8.37 -13.60   4.32  22.85  18.95  [rand]
   o= 2 v= 0.965300:  29.31   4.52 -12.47 -30.00   7.50   7.50  [grid]
   o= 3 v= 0.965791:  29.31   4.52 -12.47 -30.00  -7.50   7.50  [grid]
   o= 4 v= 0.966198:  29.31  -8.81 -12.47  -7.50  -7.50  -7.50  [grid]
   o= 5 v= 0.966342:  29.31   4.52 -12.47 -30.00   7.50  -7.50  [grid]
   o= 6 v= 0.966565:  29.31   4.52 -12.47 -30.00  -7.50  -7.50  [grid]
   o= 7 v= 0.967399:  -4.24   6.93  -2.32  42.18  25.76 -19.54  [rand]
   o= 8 v= 0.968003:  21.14   3.71 -20.40 -16.04  -3.33 -12.13  [rand]
   o= 9 v= 0.968193:  -4.02   4.52   0.86  30.00  30.00  -7.50  [grid]
   o=10 v= 0.968209:   9.31  -8.81 -12.47  -7.50  -7.50  -7.50  [grid]
   o=11 v= 0.968658:  -4.02  -8.81 -12.47   7.50   7.50  30.00  [grid]
   o=12 v= 0.969352: -34.16  30.95 -26.00  39.82  23.12   9.72  [rand]
   o=13 v= 0.969610:  -4.02  -8.81 -12.47   7.50  -7.50  30.00  [grid]
   o=14 v= 0.969951:   9.31   4.52 -12.47 -30.00   7.50 -30.00  [grid]
   o=15 v= 0.970122:  -1.43  -8.37 -13.60  -4.32  22.85  18.95  [rand]
   o=16 v= 0.970218:  -4.02   4.52   0.86  30.00   7.50  -7.50  [grid]
   o=17 v= 0.970524:  29.31  -8.81 -12.47 -30.00  -7.50   7.50  [grid]
   o=18 v= 0.970619:   9.31   4.52 -12.47  30.00   7.50  30.00  [grid]
   o=19 v= 0.970873: -29.79  12.20  -0.21   8.22   9.03 -36.72  [rand]
   o=20 v= 0.970948:  19.50 -20.73   8.65  19.57 -37.09  16.59  [rand]
   o=21 v= 0.971111: -29.84 -16.84   6.00 -11.16   9.40 -34.39  [rand]
   o=22 v= 0.971125:  27.34   2.47 -22.19   8.97 -18.72 -30.56  [rand]
   o=23 v= 0.971330:  21.14   3.71 -20.40 -16.04   3.33 -12.13  [rand]
   o=24 v= 0.971408:  39.29 -19.37  16.45   5.26 -41.39  40.03  [rand]
   o=25 v= 0.971536:  29.31   4.52   0.86  -7.50  30.00   7.50  [grid]
   o=26 v= 0.971696:  29.31  -8.81   0.86 -30.00  -7.50   7.50  [grid]
   o=27 v= 0.971771: -24.88  30.02 -16.85  26.08   6.57  36.57  [rand]
   o=28 v= 0.972043:  -4.02  -8.81 -12.47  -7.50  -7.50  30.00  [grid]
   o=29 v= 0.972125: -24.02  24.52 -12.47   7.50  30.00 -30.00  [grid]
   o=30 v= 0.972139:  29.31  -8.81 -12.47   7.50  -7.50  -7.50  [grid]
   o=31 v= 0.972279:  29.31   4.52 -12.47  -7.50  -7.50  -7.50  [grid]
   o=32 v= 0.972498: -29.84 -16.84   6.00 -11.16  -9.40 -34.39  [rand]
   o=33 v= 0.972542: -31.68 -18.73   2.80  16.34   8.64 -40.54  [rand]
   o=34 v= 0.972904:  21.14  -8.00 -20.40 -16.04  -3.33 -12.13  [rand]
   o=35 v= 0.973124:  -4.02  -8.81 -12.47  30.00 -30.00   7.50  [grid]
   o=36 v= 0.973292:  29.31   4.52 -12.47   7.50   7.50  -7.50  [grid]
   o=37 v= 0.973311:  29.31   4.52 -12.47   7.50  -7.50  -7.50  [grid]
   o=38 v= 0.973481:  -4.24   6.93  -9.28  42.18  25.76 -19.54  [rand]
   o=39 v= 0.973525: -16.84 -18.81  -3.20 -30.54 -19.59  20.03  [rand]
   o=40 v= 0.973534: -15.69  24.00   0.24  -6.51  20.18  -7.56  [rand]
   o=41 v= 0.973725: -31.13 -34.06   1.91  12.26 -17.56 -17.80  [rand]
   o=42 v= 0.973764:  29.31   4.52   0.86 -30.00   7.50   7.50  [grid]
   o=43 v= 0.974064:  29.31  -8.81 -12.47 -30.00  -7.50  -7.50  [grid]
   o=44 v= 0.974107:  29.31  -8.81   0.86   7.50  -7.50   7.50  [grid]
   o=45 v= 0.974175: -24.41  21.78 -13.28  25.95  25.17 -41.69  [rand]
   o=46 v= 0.974183: -34.16  30.95  14.39  39.82  23.12   9.72  [rand]
   o=47 v= 0.974264: -34.00 -19.37  16.45   5.26 -41.39 -40.03  [rand]
   o=48 v= 0.974276:  29.31  -8.81 -12.47   7.50 -30.00  -7.50  [grid]
   o=49 v= 0.974296:  -4.02   4.52 -12.47  30.00 -30.00   7.50  [grid]
   o=50 v= 0.974443:  -4.02   4.52   0.86  30.00   7.50 -30.00  [grid]
   o=51 v= 0.974457: -24.02  -8.81   0.86  30.00  -7.50  -7.50  [grid]
   o=52 v= 0.974617: -24.02   4.52   0.86  30.00   7.50  -7.50  [grid]
   o=53 v= 0.974659:  21.14  -8.00   8.79  16.04   3.33  12.13  [rand]
   o=54 v= 0.974915:   9.31  -8.81 -12.47  -7.50  -7.50 -30.00  [grid]
   o=55 v= 0.974945:  -4.02   4.52 -12.47   7.50  -7.50  30.00  [grid]
   o=56 v= 0.974946:  32.43 -12.89   8.16   4.50  -6.71  -7.94  [rand]
   o=57 v= 0.974953:   0.52  -8.65 -35.91  -6.85 -38.25  36.13  [rand]
   o=58 v= 0.975042:  27.34  -6.75 -22.19   8.97 -18.72 -30.56  [rand]
   o=59 v= 0.975115:  22.43  14.61 -23.48  -2.96   2.59 -18.65  [rand]
   o=60 v= 0.975145:  22.43 -18.89  11.87   2.96   2.59 -18.65  [rand]
   o=61 v= 0.975150:  -4.02   4.52 -12.47  -7.50   7.50  30.00  [grid]
   o=62 v= 0.975220:  -4.02   4.52 -12.47  30.00   7.50   7.50  [grid]
   o=63 v= 0.975233: -19.59  26.62 -22.18   7.16  21.11  33.11  [rand]
   o=64 v= 0.975315:  29.31  -8.81 -12.47 -30.00 -30.00  -7.50  [grid]
   o=65 v= 0.975363: -32.22 -32.70   9.97  11.68  29.04 -39.38  [rand]
   o=66 v= 0.975418:  22.43 -18.89  11.87  -2.96  -2.59 -18.65  [rand]
   o=67 v= 0.975418:  21.14  -8.00 -20.40 -16.04   3.33 -12.13  [rand]
   o=68 v= 0.975465:   9.31  -8.81 -12.47  -7.50   7.50  30.00  [grid]
   o=69 v= 0.975487: -34.00 -19.37  16.45  -5.26 -41.39 -40.03  [rand]
   o=70 v= 0.975584:  26.56   4.79 -19.73 -13.51  15.92  -9.43  [rand]
   o=71 v= 0.975603: -29.84  12.55   6.00  11.16   9.40 -34.39  [rand]
   o=72 v= 0.975626: -29.79  12.20 -11.40   8.22   9.03 -36.72  [rand]
   o=73 v= 0.975648:  21.14  -8.00   8.79  16.04  -3.33  12.13  [rand]
   o=74 v= 0.975669:   9.31  24.52 -32.47  30.00  30.00  30.00  [grid]
   o=75 v= 0.975670: -24.02  24.52   0.86  30.00   7.50 -30.00  [grid]
   o=76 v= 0.975672:  -4.02   4.52   0.86  30.00  30.00 -30.00  [grid]
   o=77 v= 0.975702:  16.85 -11.60 -10.64  15.99  13.53  29.93  [rand]
   o=78 v= 0.975710: -15.85  -8.00   8.79  16.04   3.33 -12.13  [rand]
   o=79 v= 0.975741: -28.74  27.82  -1.40  42.54   9.20 -25.31  [rand]
   o=80 v= 0.975772:   9.31  -8.81 -12.47   7.50  -7.50  30.00  [grid]
   o=81 v= 0.975779: -16.84  14.53  -3.20  30.54  19.59 -20.03  [rand]
   o=82 v= 0.975814: -29.85 -29.13  26.09   9.69  21.75 -40.77  [rand]
   o=83 v= 0.975852:  27.34  -6.75 -22.19  -8.97 -18.72 -30.56  [rand]
   o=84 v= 0.975886: -10.51  35.74 -43.00  14.03   8.39 -25.20  [rand]
   o=85 v= 0.975908:   9.31   4.52 -12.47  -7.50   7.50  -7.50  [grid]
   o=86 v= 0.975914: -18.40  -6.17 -10.11 -37.69 -26.76   3.08  [rand]
   o=87 v= 0.975917:  18.49  25.14   0.12  21.02   8.83 -40.31  [rand]
 + - A little optimization:*[#11727=0.963969] *[#11732=0.962661] *[#11733=0.961805] *[#11738=0.961474] *[#11742=0.961397] *[#11745=0.961266] *[#11747=0.961248] *[#11750=0.961195] *[#11752=0.961184] *[#11755=0.961172] *[#11757=0.961126] *[#11758=0.961073] *[#11760=0.96102] .*[#11794=0.960853] *[#11797=0.960801] *[#11804=0.960693] *[#11805=0.960638] *[#11806=0.960581] *[#11809=0.960568] *[#11810=0.960548] *[#11816=0.960546] ..*[#11862=0.959491] *[#11866=0.959217] *[#11868=0.958107] *[#11869=0.957099] *[#11875=0.956886] *[#11877=0.956288] *[#11884=0.956234] *[#11886=0.956229] *[#11887=0.956184] *[#11889=0.956122] *[#11890=0.956056] *[#11893=0.956008] *[#11894=0.955938] *[#11897=0.95583] ..*[#11983=0.954758] *[#11986=0.954418] *[#11990=0.954323] *[#11991=0.954292] *[#11997=0.954238] *[#12001=0.954192] *[#12006=0.954057] *[#12007=0.953934] *[#12009=0.953817] *[#12010=0.953809] *[#12011=0.953795] *[#12014=0.95368] *[#12015=0.953655] *[#12016=0.953649] *[#12019=0.953644] ..................*[#12960=0.953017] *[#12963=0.95289] *[#12968=0.952018] *[#12970=0.951981] *[#12971=0.951945] *[#12972=0.951847] *[#12973=0.951758] *[#12974=0.951733] *[#12976=0.951726] *[#12979=0.951617] *[#12980=0.951549] *[#12983=0.951474] *[#12985=0.9514] *[#12986=0.951363] *[#12987=0.951319] *[#12992=0.951209] *[#12993=0.951144] *[#12994=0.951086] *[#12996=0.951043] *[#12997=0.95095] *[#12998=0.950802] *[#13000=0.95074] *[#13001=0.950629] *[#13002=0.950615] *[#13005=0.950527] *[#13009=0.950524] *[#13010=0.950481] *[#13012=0.950427] *[#13015=0.950402] ...........*[#13544=0.949298] *[#13547=0.948853] *[#13550=0.948692] *[#13554=0.948638] *[#13558=0.948628] *[#13560=0.948555] *[#13561=0.948519] ......................................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.961020:  26.42  -9.29 -18.96 -13.33 -14.14  -9.81  [rand]  [f=55]
   o= 1 v= 0.960546:  -1.59  -7.75 -15.03   1.83  20.86  20.75  [rand]  [f=48]
   o= 2 v= 0.961885:  28.41   0.26 -13.40 -29.95   8.33   7.86  [grid]  [f=38]
   o= 3 v= 0.955830:  29.84   3.15 -11.36 -32.20  -2.26   4.29  [grid]  [f=48]
   o= 4 v= 0.957238:  26.28  -6.82 -16.60 -12.70 -10.05  -9.61  [grid]  [f=55]
   o= 5 v= 0.953644:  27.02   0.63 -13.58 -23.24  -3.55  -5.96  [grid]  [f=64]
   o= 6 v= 0.955684:  29.37   2.85 -12.50 -28.06  -3.35  -6.10  [grid]  [f=64]
   o= 7 v= 0.957878:  -3.43   5.61  -3.96  43.14  22.62 -20.15  [rand]  [f=49]
   o= 8 v= 0.954511:  26.11   0.33 -14.88 -10.83  -3.77  -9.26  [rand]  [f=43]
   o= 9 v= 0.956748:  -2.48   4.64   1.08  28.04  35.33  -7.88  [grid]  [f=46]
   o=10 v= 0.961836:   5.08  -7.61 -12.40  -7.65  -7.50  -7.60  [grid]  [f=40]
   o=11 v= 0.959050:  -3.07  -8.93  -9.31   4.92   1.41  30.16  [grid]  [f=61]
   o=12 v= 0.966109: -35.28  26.92 -25.14  40.74  23.51  10.54  [rand]  [f=36]
   o=13 v= 0.956567:  -0.67  -6.16 -12.74   3.12  -8.26  25.21  [grid]  [f=52]
   o=14 v= 0.954437:   5.49   2.19 -15.60 -28.61   6.07 -32.86  [grid]  [f=61]
   o=15 v= 0.957630:  -2.47  -8.50 -15.85  -2.96  19.82  24.53  [rand]  [f=52]
   o=16 v= 0.964610:  -4.44   3.51   0.71  32.00  13.09  -8.97  [grid]  [f=75]
   o=17 v= 0.957978:  28.03  -3.24 -11.91 -29.61 -10.76   6.59  [grid]  [f=43]
   o=18 v= 0.960052:  11.83   0.52 -14.88  26.82   4.57  32.32  [grid]  [f=52]
   o=19 v= 0.963730: -28.87  10.00  -4.72  13.06  10.27 -40.35  [rand]  [f=48]
   o=20 v= 0.967524:  18.46 -20.50   8.56  19.98 -33.73  18.30  [rand]  [f=49]
   o=21 v= 0.961734: -31.10 -17.12  11.95 -10.12   6.95 -36.60  [rand]  [f=64]
   o=22 v= 0.962275:  24.00  -0.03 -21.42   7.79 -15.90 -27.85  [rand]  [f=55]
   o=23 v= 0.950402:  20.91   1.24 -14.43 -14.18   0.30 -17.87  [rand]  [f=83]
   o=24 v= 0.962711:  41.75 -13.06  15.85   3.67 -39.96  35.97  [rand]  [f=55]
   o=25 v= 0.970454:  29.64   5.09   1.75  -7.34  30.79   6.95  [grid]  [f=60]
   o=26 v= 0.957799:  29.60  -8.84  -4.30 -27.86 -11.99   4.85  [grid]  [f=59]
   o=27 v= 0.958913: -18.30  31.40 -13.84  29.61  10.25  35.14  [rand]  [f=37]
   o=28 v= 0.961702:  -5.75  -7.27 -15.89  -2.62  -8.18  25.35  [grid]  [f=56]
   o=29 v= 0.970926: -24.05  24.49 -11.57   6.97  30.20 -30.11  [grid]  [f=39]
   o=30 v= 0.968690:  29.12  -7.23 -12.74  11.66  -6.97  -8.50  [grid]  [f=44]
   o=31 v= 0.953717:  26.05  -0.43 -15.48 -10.21  -4.12 -11.22  [grid]  [f=50]
   o=32 v= 0.968465: -29.24 -17.49   6.21 -12.50  -9.06 -30.82  [rand]  [f=50]
   o=33 v= 0.969935: -31.89 -19.57   6.49  16.26   8.61 -43.99  [rand]  [f=34]
  *o=34 v= 0.948519:  23.08  -1.44 -18.31 -11.19  -1.85 -23.75  [rand]  [f=54]
   o=35 v= 0.962693:  -0.96  -6.92 -10.95  31.94 -29.19   3.11  [grid]  [f=50]
   o=36 v= 0.971889:  28.03   5.27 -15.57   4.11   7.38  -8.36  [grid]  [f=40]
   o=37 v= 0.966677:  29.62   0.72 -11.97   7.32  -7.52  -7.94  [grid]  [f=32]
   o=38 v= 0.957375:  -3.81   5.81  -4.32  42.40  22.82 -20.94  [rand]  [f=55]
   o=39 v= 0.973159: -16.37 -18.85  -3.23 -30.51 -19.65  19.92  [rand]  [f=39]
   o=40 v= 0.970182: -15.15  24.85   0.32  -7.56  19.48  -3.95  [rand]  [f=43]
   o=41 v= 0.972700: -31.70 -34.04   2.78  12.42 -13.25 -17.87  [rand]  [f=37]
   o=42 v= 0.962341:  28.78   6.73  -4.33 -23.21   3.33   5.35  [grid]  [f=46]
   o=43 v= 0.957061:  27.68  -3.49 -16.73 -23.52  -9.73  -7.71  [grid]  [f=49]
   o=44 v= 0.972619:  30.17  -8.53   1.54   7.26  -8.40   7.56  [grid]  [f=44]
   o=45 v= 0.968106: -28.84  21.62 -11.89  25.02  25.44 -43.21  [rand]  [f=40]
   o=46 v= 0.973193: -34.15  30.73  14.01  39.61  22.04   9.37  [rand]  [f=37]
   o=47 v= 0.968873: -37.14 -19.05  16.20   4.38 -41.26 -39.87  [rand]  [f=47]
   o=48 v= 0.970270:  29.52  -8.58 -14.91   3.31 -25.82  -8.10  [grid]  [f=34]
   o=49 v= 0.965906:  -4.47   4.77 -14.90  34.02 -30.55   2.54  [grid]  [f=58]
   o=50 v= 0.957391:  -2.03   4.71   0.82  38.44   7.05 -29.41  [grid]  [f=55]
   o=51 v= 0.966474: -25.36  -4.52  -0.56  30.81  -8.34  -7.54  [grid]  [f=44]
   o=52 v= 0.967410: -24.68   4.39  -2.56  29.72   3.95  -7.23  [grid]  [f=63]
   o=53 v= 0.966966:  19.62  -8.53   7.40  19.12   7.39  10.69  [rand]  [f=55]
   o=54 v= 0.955643:  12.97  -6.66 -20.43 -11.46  -6.61 -32.88  [grid]  [f=57]
   o=55 v= 0.958554:  -4.33  -0.05 -12.71   9.43  -5.93  24.32  [grid]  [f=83]
   o=56 v= 0.973610:  32.19 -12.51   7.67   4.75  -7.47  -8.61  [rand]  [f=49]
   o=57 v= 0.974124:   0.45  -8.33 -35.75  -5.51 -39.11  36.63  [rand]  [f=50]
   o=58 v= 0.961821:  24.85   1.07 -20.41   8.51 -14.92 -28.54  [rand]  [f=57]
   o=59 v= 0.970635:  23.46  15.39 -22.80  -2.33   8.73 -15.75  [rand]  [f=46]
   o=60 v= 0.970569:  22.98 -16.76   9.60   2.67   2.40 -20.17  [rand]  [f=50]
   o=61 v= 0.956856:  -1.74   2.98 -14.43  -4.63   4.84  26.59  [grid]  [f=59]
   o=62 v= 0.964306:  -5.55   3.11 -10.52  27.54   9.02   3.47  [grid]  [f=67]
   o=63 v= 0.953030: -18.96  30.50 -26.99  18.18  20.79  38.07  [rand]  [f=55]
   o=64 v= 0.963531:  30.06  -4.09 -12.51 -28.02 -18.93  -4.72  [grid]  [f=54]
   o=65 v= 0.967943: -28.38 -29.71   9.30  14.64  23.46 -43.37  [rand]  [f=56]
   o=66 v= 0.970513:  22.24 -18.04   9.29  -4.92  -1.57 -18.97  [rand]  [f=43]
   o=67 v= 0.950118:  21.39  -1.15 -16.50 -12.31  -1.32 -20.09  [rand]  [f=75]
   o=68 v= 0.967625:   6.08  -9.22 -13.24  -7.19   7.60  30.25  [grid]  [f=37]
   o=69 v= 0.965977: -37.32 -17.87  13.30  -6.36 -42.90 -44.69  [rand]  [f=39]
   o=70 v= 0.959623:  26.64  -1.54 -16.14 -11.26   4.41  -9.36  [rand]  [f=50]
   o=71 v= 0.965729: -33.95  13.33   6.34  12.23   8.62 -27.35  [rand]  [f=63]
   o=72 v= 0.963384: -30.64  11.41  -2.39  12.69   8.84 -40.19  [rand]  [f=48]
   o=73 v= 0.969668:  19.90  -7.68   9.29  21.12  -3.19  12.64  [rand]  [f=46]
   o=74 v= 0.967841:  11.26  25.11 -28.76  29.04  30.92  30.10  [grid]  [f=45]
   o=75 v= 0.966043: -25.36  22.65   4.48  32.95   5.30 -32.00  [grid]  [f=49]
   o=76 v= 0.964970:   1.24   3.65   0.20  32.05  29.05 -27.59  [grid]  [f=55]
   o=77 v= 0.971437:  15.04 -10.37  -9.70  14.96  14.06  33.96  [rand]  [f=40]
   o=78 v= 0.968484: -15.99  -7.79   6.44  17.53   0.51 -11.74  [rand]  [f=52]
   o=79 v= 0.965610: -22.60  25.64  -1.89  44.47   8.64 -25.84  [rand]  [f=71]
   o=80 v= 0.956487:  -1.74  -6.54 -11.92   5.64  -5.15  24.55  [grid]  [f=59]
   o=81 v= 0.967044: -16.61  15.46  -2.82  28.62  19.16 -11.63  [rand]  [f=57]
   o=82 v= 0.970148: -30.03 -27.45  22.04   6.97  18.77 -38.90  [rand]  [f=44]
   o=83 v= 0.958055:  20.18  -3.75 -21.29  -0.20  -3.01 -30.76  [rand]  [f=57]
   o=84 v= 0.971545: -10.79  36.31 -41.91  17.90  10.08 -24.81  [rand]  [f=41]
   o=85 v= 0.948859:  20.25  -0.45 -16.04 -11.94  -0.80 -20.69  [grid]  [f=77]
   o=86 v= 0.966518: -18.36  -4.79 -11.63 -34.42 -26.12  12.47  [rand]  [f=53]
   o=87 v= 0.972623:  18.49  24.96   4.08  20.91   9.17 -39.99  [rand]  [f=37]
 + - saving #34 for use with twobest
 + - skip #85 for twobest: too close to set #34
 + - skip #67 for twobest: too close to set #34
 + - skip #23 for twobest: too close to set #85
 + - saving #63 for use with twobest
 + - saving # 5 for use with twobest
 + - saving #31 for use with twobest
 + - saving #14 for use with twobest
 + - skip # 8 for twobest: too close to set #31
 + - saving #54 for use with twobest
 + - saving # 6 for use with twobest
 + - saving # 3 for use with twobest
 + - saving #80 for use with twobest
 + - skip #13 for twobest: too close to set #80
 + - saving # 9 for use with twobest
 + - saving #61 for use with twobest
 + - saving #43 for use with twobest
 + - saving # 4 for use with twobest
 + - saving #38 for use with twobest
 + - saving #50 for use with twobest
 + - saving #15 for use with twobest
 + - saving #26 for use with twobest
 + - skip # 7 for twobest: too close to set #38
 + - saving #17 for use with twobest
 + - saving #83 for use with twobest
 + - saving #55 for use with twobest
 + - saving #27 for use with twobest
 + - saving #11 for use with twobest
 + - saving #70 for use with twobest
 + - saving #18 for use with twobest
 + - saving # 1 for use with twobest
 + - skip # 0 for twobest: too close to set # 4
 + - saving #28 for use with twobest
 + - saving #21 for use with twobest
 + - saving #58 for use with twobest
 + - saving #10 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.09
 + - Smoothing source; radius=2.09
 + !source mask fill: ubot=270.807 usiz=395.692
 + - retaining old weight image
 + - using 79340 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 69363 total points stored in 139 'TOHD(14.0453)' bloks (0 duplicates)
 + - param set #1 has cost=0.956118 [o=34 t=0]
 + -- Parameters = 20.4018 -0.6850 -18.2398 -10.9734 -2.0194 -23.7693 0.9984 1.0018 0.9886 -0.0018 0.0015 -0.0028
 + - param set #2 has cost=0.962986 [o=63 t=1]
 + -- Parameters = -18.8451 30.5223 -26.9144 18.2350 20.9235 37.9328 1.0015 1.0004 1.0007 0.0003 -0.0002 0.0015
 + - param set #3 has cost=0.960267 [o=5 t=2]
 + -- Parameters = 26.9452 0.6540 -13.5860 -23.2400 -3.5244 -5.9598 0.9997 0.9996 1.0014 0.0003 0.0001 -0.0002
 + - param set #4 has cost=0.958689 [o=31 t=3]
 + -- Parameters = 26.0878 -0.0539 -15.5808 -10.1136 -4.0385 -11.1331 0.9989 0.9980 0.9961 -0.0001 -0.0005 -0.0007
 + - param set #5 has cost=0.959168 [o=14 t=4]
 + -- Parameters = 5.3001 2.0797 -15.8383 -28.4294 6.1453 -32.8498 1.0170 1.0012 0.9916 0.0010 0.0002 0.0011
 + - param set #6 has cost=0.961115 [o=54 t=5]
 + -- Parameters = 14.2249 -6.1650 -20.7680 -12.9748 -6.6083 -33.5844 0.9949 0.9947 1.0090 0.0012 0.0177 0.0018
 + - param set #7 has cost=0.962467 [o=6 t=6]
 + -- Parameters = 29.7104 2.8271 -12.5030 -28.1368 -3.3685 -6.0393 0.9988 0.9997 1.0038 0.0001 -0.0000 -0.0001
 + - param set #8 has cost=0.962772 [o=3 t=7]
 + -- Parameters = 29.8901 3.0922 -11.1608 -32.1284 -2.1366 4.2849 0.9999 0.9988 1.0030 -0.0001 -0.0005 -0.0009
 + - param set #9 has cost=0.961956 [o=80 t=8]
 + -- Parameters = -2.1013 -6.0205 -12.0945 5.5331 -5.1874 25.1251 0.9978 0.9977 0.9986 0.0127 -0.0015 0.0006
 + - param set #10 has cost=0.964855 [o=9 t=9]
 + -- Parameters = -2.5174 4.8109 1.1986 27.9702 35.5195 -7.8375 0.9974 0.9977 1.0046 0.0000 -0.0014 -0.0009
 + - param set #11 has cost=0.960053 [o=61 t=10]
 + -- Parameters = -2.0778 3.2486 -14.8657 -4.7956 3.7346 25.4617 0.9829 1.0048 1.0012 0.0133 0.0001 0.0006
 + - param set #12 has cost=0.962485 [o=43 t=11]
 + -- Parameters = 27.8154 -3.5074 -16.1209 -21.8597 -9.2066 -1.0410 1.0046 1.0046 1.0074 0.0015 0.0025 0.0006
 + - param set #13 has cost=0.962587 [o=4 t=12]
 + -- Parameters = 26.0702 -4.3722 -16.0120 -14.8427 -8.7197 -8.8935 1.0071 1.0013 1.0092 0.0017 0.0157 0.0016
 + - param set #14 has cost=0.966396 [o=38 t=13]
 + -- Parameters = -3.5687 5.7131 -4.1203 41.9870 23.2471 -21.2065 1.0047 1.0023 1.0084 -0.0024 0.0015 -0.0004
 + - param set #15 has cost=0.965766 [o=50 t=14]
 + -- Parameters = -2.1112 4.6343 0.6841 38.5358 7.1405 -29.7456 1.0066 0.9973 0.9787 0.0017 -0.0035 -0.0000
 + - param set #16 has cost=0.960287 [o=15 t=15]
 + -- Parameters = -1.9542 -7.5576 -15.6630 -2.9532 20.3929 24.8462 1.0073 1.0507 1.0049 0.0015 0.0016 0.0021
 + - param set #17 has cost=0.964726 [o=26 t=16]
 + -- Parameters = 29.5034 -8.8333 -4.5312 -27.7305 -11.7974 4.8561 1.0016 1.0028 1.0019 -0.0006 0.0013 0.0129
*[#17782=0.939218] *[#17783=0.922604] *[#17787=0.921417] *[#17788=0.918771] *[#17789=0.912373] *[#17790=0.9069] *[#17795=0.906374] *[#17797=0.905275] *[#17798=0.904529] *[#17799=0.903987] *[#17801=0.903312] *[#17802=0.902952] *[#17804=0.902534] *[#17807=0.902099] *[#17808=0.901373] *[#17809=0.900052] *[#17810=0.896441] *[#17813=0.894275] *[#17816=0.893485] *[#17818=0.891966] *[#17819=0.891067] *[#17820=0.890634] *[#17821=0.890361] *[#17824=0.889654] *[#17826=0.888898] *[#17830=0.88871] *[#17831=0.88843] *[#17834=0.887499] *[#17837=0.88717] *[#17838=0.886516] *[#17841=0.886115] *[#17844=0.88588] *[#17847=0.885765] *[#17850=0.885358] *[#17852=0.884899] *[#17854=0.884096] *[#17855=0.883659] *[#17857=0.882921] *[#17858=0.882444] 
 + - param set #18 has cost=0.882444 [o=-1 t=-1]
 + -- Parameters = 3.8202 -0.1225 -1.8682 -8.0779 0.1799 -2.1240 0.9628 0.9423 0.9178 -0.0115 -0.0152 -0.0063
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.241 
 + --- dist(#3,#1) = 0.278 
 + --- dist(#4,#1) = 0.341 
 + --- dist(#5,#1) = 0.307 
 + --- dist(#6,#1) = 0.289 
 + --- dist(#7,#1) = 0.3 
 + --- dist(#8,#1) = 0.35 
 + --- dist(#9,#1) = 0.303 
 + --- dist(#10,#1) = 0.324 
 + --- dist(#11,#1) = 0.3 
 + --- dist(#12,#1) = 0.278 
 + --- dist(#13,#1) = 0.326 
 + --- dist(#14,#1) = 0.445 
 + --- dist(#15,#1) = 0.321 
 + --- dist(#16,#1) = 0.401 
 + --- dist(#17,#1) = 0.518 
 + --- dist(#18,#1) = 0.556 
++ Start refinement #2 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.62
 + - Smoothing source; radius=1.62
 + !source mask fill: ubot=270.807 usiz=395.692
 + - retaining old weight image
 + - using 79340 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 69391 total points stored in 141 'TOHD(13.984)' bloks (0 duplicates)
 + - param set #1 has cost=0.883273 [o=-1 t=-1]
 + -- Parameters = 4.1600 -0.0163 -1.5810 -8.7086 -0.8745 -0.4688 0.9618 0.9705 0.8589 -0.0285 -0.0465 -0.0520
 + - param set #2 has cost=0.960720 [o=34 t=0]
 + -- Parameters = 20.8695 -0.7545 -18.1916 -10.9183 -1.8467 -24.1993 1.0350 1.0054 0.9835 -0.0001 0.0042 -0.0029
 + - param set #3 has cost=0.965505 [o=31 t=3]
 + -- Parameters = 26.0561 0.0137 -15.6254 -10.0768 -4.0082 -11.1610 0.9995 0.9980 0.9960 -0.0001 0.0078 -0.0008
 + - param set #4 has cost=0.967071 [o=14 t=4]
 + -- Parameters = 5.8184 1.8855 -15.4599 -26.9881 6.8508 -34.0939 1.0204 1.0006 0.9923 -0.0041 0.0026 0.0136
 + - param set #5 has cost=0.964676 [o=61 t=10]
 + -- Parameters = -4.0976 3.1390 -15.6461 -2.2597 3.5159 26.4254 0.9499 1.0087 0.9898 0.0250 -0.0069 0.0044
 + - param set #6 has cost=0.966600 [o=5 t=2]
 + -- Parameters = 27.0476 0.6028 -13.6300 -23.1409 -3.4876 -5.9582 0.9974 0.9990 1.0005 0.0003 -0.0002 -0.0005
 + - param set #7 has cost=0.967540 [o=15 t=15]
 + -- Parameters = -1.8675 -7.5552 -15.6823 -2.8925 20.4180 24.6957 1.0101 1.0511 1.0058 0.0015 0.0011 0.0103
 + - param set #8 has cost=0.966796 [o=54 t=5]
 + -- Parameters = 15.0263 -6.1537 -21.0045 -12.7837 -6.9308 -34.1325 1.0015 0.9934 1.0100 0.0018 0.0276 0.0008
 + - param set #9 has cost=0.967951 [o=80 t=8]
 + -- Parameters = -2.2548 -6.1218 -12.1157 5.8603 -5.2199 25.4879 0.9951 0.9956 0.9973 0.0224 -0.0013 0.0005
 + - param set #10 has cost=0.967664 [o=6 t=6]
 + -- Parameters = 28.9461 3.0218 -12.5364 -25.1800 -2.2536 -6.1782 0.9999 0.9874 1.0116 -0.0016 0.0010 0.0016
 + - param set #11 has cost=0.966894 [o=43 t=11]
 + -- Parameters = 27.6484 -3.4227 -16.1910 -21.7431 -9.1302 -1.1563 1.0050 1.0008 1.0076 0.0009 0.0030 0.0006
 + - param set #12 has cost=0.967079 [o=4 t=12]
 + -- Parameters = 25.9154 -4.1490 -15.8588 -15.4994 -7.4653 -8.9120 1.0092 1.0294 1.0064 0.0024 0.0155 0.0020
 + - param set #13 has cost=0.968519 [o=3 t=7]
 + -- Parameters = 29.9649 2.9932 -11.1293 -32.2474 -2.6454 3.9215 1.0013 0.9980 1.0099 0.0001 -0.0039 -0.0009
 + - param set #14 has cost=0.966524 [o=63 t=1]
 + -- Parameters = -18.5474 30.5176 -26.9047 18.2077 20.9450 37.9270 1.0013 1.0001 1.0006 0.0003 -0.0003 0.0015
 + - param set #15 has cost=0.968216 [o=26 t=16]
 + -- Parameters = 29.4013 -8.4643 -5.0939 -27.2456 -12.2573 4.2536 1.0151 0.9837 1.0172 -0.0073 0.0023 0.0170
 + - param set #16 has cost=0.968421 [o=9 t=9]
 + -- Parameters = -2.4375 5.6072 1.4349 28.0430 36.3432 -10.0440 1.0012 0.9828 1.0128 0.0014 -0.0019 0.0006
 + - param set #17 has cost=0.971242 [o=50 t=14]
 + -- Parameters = -2.5515 4.7220 0.3101 39.3051 6.6779 -29.7712 1.0138 1.0192 0.9651 -0.0113 -0.0065 -0.0137
 + - param set #18 has cost=0.972218 [o=38 t=13]
 + -- Parameters = -3.0430 5.3954 -3.1849 42.1062 23.0337 -25.6563 1.0164 0.9973 1.0228 -0.0042 0.0039 -0.0020
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.264 
 + --- dist(#3,#1) = 0.299 
 + --- dist(#4,#1) = 0.274 
 + --- dist(#5,#1) = 0.427 
 + --- dist(#6,#1) = 0.286 
 + --- dist(#7,#1) = 0.374 
 + --- dist(#8,#1) = 0.294 
 + --- dist(#9,#1) = 0.374 
 + --- dist(#10,#1) = 0.279 
 + --- dist(#11,#1) = 0.28 
 + --- dist(#12,#1) = 0.31 
 + --- dist(#13,#1) = 0.288 
 + --- dist(#14,#1) = 0.316 
 + --- dist(#15,#1) = 0.414 
 + --- dist(#16,#1) = 0.323 
 + --- dist(#17,#1) = 0.533 
 + --- dist(#18,#1) = 0.565 
++ Start refinement #3 on 18 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.26
 + - Smoothing source; radius=1.26
 + !source mask fill: ubot=270.807 usiz=395.692
 + - retaining old weight image
 + - using 79340 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 70768 total points stored in 146 'TOHD(13.9467)' bloks (0 duplicates)
 + - param set #1 has cost=0.895016 [o=-1 t=-1]
 + -- Parameters = 4.1534 -0.0875 -1.4738 -8.5356 -1.1751 -0.6595 0.9590 0.9615 0.8608 -0.0336 -0.0487 -0.0493
 + - param set #2 has cost=0.965005 [o=34 t=0]
 + -- Parameters = 20.6543 -1.0515 -17.9656 -10.9765 -1.9365 -24.0125 1.0351 1.0100 0.9855 -0.0005 0.0046 -0.0035
 + - param set #3 has cost=0.969175 [o=61 t=10]
 + -- Parameters = -4.1603 3.0867 -15.6990 -2.3097 3.6004 26.4468 0.9499 1.0102 0.9889 0.0252 -0.0065 0.0024
 + - param set #4 has cost=0.969080 [o=31 t=3]
 + -- Parameters = 26.0630 0.0397 -15.6227 -10.0620 -4.0011 -11.1720 0.9995 0.9982 0.9957 0.0056 0.0079 -0.0008
 + - param set #5 has cost=0.970908 [o=63 t=1]
 + -- Parameters = -18.5262 30.5745 -26.8527 18.1301 21.0450 37.9957 1.0014 1.0001 1.0003 0.0004 -0.0002 0.0014
 + - param set #6 has cost=0.969703 [o=5 t=2]
 + -- Parameters = 27.0461 0.6161 -13.6148 -23.1568 -3.4939 -5.9596 0.9975 0.9990 1.0005 0.0004 -0.0002 -0.0005
 + - param set #7 has cost=0.969155 [o=54 t=5]
 + -- Parameters = 15.1677 -5.7429 -20.8758 -14.6250 -7.5914 -33.7648 1.0045 0.9925 1.0125 0.0012 0.0283 0.0024
 + - param set #8 has cost=0.971259 [o=43 t=11]
 + -- Parameters = 27.6433 -3.4095 -16.1885 -21.6995 -9.1849 -1.1909 1.0049 1.0008 1.0075 0.0010 0.0030 0.0001
 + - param set #9 has cost=0.967580 [o=14 t=4]
 + -- Parameters = 6.1939 1.8570 -16.6949 -27.2535 7.4489 -35.2904 1.0208 1.0010 0.9564 -0.0103 0.0008 0.0110
 + - param set #10 has cost=0.969947 [o=4 t=12]
 + -- Parameters = 26.2061 -3.8483 -15.8698 -15.2337 -7.3538 -8.5272 1.0071 1.0278 1.0064 0.0023 0.0062 0.0020
 + - param set #11 has cost=0.971216 [o=15 t=15]
 + -- Parameters = -1.8585 -7.5922 -15.6545 -2.9370 20.3826 24.5832 1.0117 1.0511 1.0054 0.0009 0.0005 0.0106
 + - param set #12 has cost=0.971094 [o=6 t=6]
 + -- Parameters = 28.9260 3.0737 -12.5390 -25.1754 -2.2451 -6.1785 1.0003 0.9878 1.0116 -0.0016 0.0009 0.0017
 + - param set #13 has cost=0.972413 [o=80 t=8]
 + -- Parameters = -1.9088 -5.6606 -11.9279 6.0548 -5.3894 25.6207 0.9962 0.9905 1.0045 0.0232 -0.0017 -0.0000
 + - param set #14 has cost=0.971203 [o=26 t=16]
 + -- Parameters = 29.5135 -8.5718 -5.5496 -27.2294 -11.8484 3.5473 1.0121 0.9878 1.0454 -0.0139 0.0022 0.0169
 + - param set #15 has cost=0.972043 [o=9 t=9]
 + -- Parameters = -2.6403 5.4888 1.3542 28.3186 36.5070 -9.8854 1.0084 0.9810 1.0117 0.0037 -0.0051 0.0003
 + - param set #16 has cost=0.971996 [o=3 t=7]
 + -- Parameters = 30.0113 3.0082 -11.0792 -32.4016 -2.9397 3.6425 1.0005 0.9943 1.0095 -0.0019 -0.0039 -0.0009
 + - param set #17 has cost=0.971451 [o=50 t=14]
 + -- Parameters = -2.7991 5.5622 0.1620 39.9341 8.2957 -30.8223 1.0227 0.9971 0.9528 -0.0088 -0.0092 -0.0167
 + - param set #18 has cost=0.974957 [o=38 t=13]
 + -- Parameters = -3.0701 5.1456 -3.0911 42.0126 23.0952 -25.9280 1.0156 1.0029 1.0381 -0.0051 0.0039 -0.0069
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.259 
 + --- dist(#3,#1) = 0.385 
 + --- dist(#4,#1) = 0.274 
 + --- dist(#5,#1) = 0.368 
 + --- dist(#6,#1) = 0.301 
 + --- dist(#7,#1) = 0.286 
 + --- dist(#8,#1) = 0.276 
 + --- dist(#9,#1) = 0.43 
 + --- dist(#10,#1) = 0.31 
 + --- dist(#11,#1) = 0.317 
 + --- dist(#12,#1) = 0.28 
 + --- dist(#13,#1) = 0.294 
 + --- dist(#14,#1) = 0.539 
 + --- dist(#15,#1) = 0.323 
 + --- dist(#16,#1) = 0.419 
 + --- dist(#17,#1) = 0.292 
 + --- dist(#18,#1) = 0.562 
 + - Total coarse refinement net CPU time = 0.0 s; 5304 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=270.807 usiz=395.692
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 19 cases
 + 70478 total points stored in 145 'TOHD(13.9254)' bloks (0 duplicates)
 + - cost(#1)=0.897712 * [o=-1 t=-1]
 + -- Parameters = 4.1534 -0.0875 -1.4738 -8.5356 -1.1751 -0.6595 0.9590 0.9615 0.8608 -0.0336 -0.0487 -0.0493
 + - cost(#2)=0.966597   [o=34 t=0]
 + -- Parameters = 20.6543 -1.0515 -17.9656 -10.9765 -1.9365 -24.0125 1.0351 1.0100 0.9855 -0.0005 0.0046 -0.0035
 + - cost(#3)=0.969431   [o=14 t=4]
 + -- Parameters = 6.1939 1.8570 -16.6949 -27.2535 7.4489 -35.2904 1.0208 1.0010 0.9564 -0.0103 0.0008 0.0110
 + - cost(#4)=0.970011   [o=31 t=3]
 + -- Parameters = 26.0630 0.0397 -15.6227 -10.0620 -4.0011 -11.1720 0.9995 0.9982 0.9957 0.0056 0.0079 -0.0008
 + - cost(#5)=0.970720   [o=54 t=5]
 + -- Parameters = 15.1677 -5.7429 -20.8758 -14.6250 -7.5914 -33.7648 1.0045 0.9925 1.0125 0.0012 0.0283 0.0024
 + - cost(#6)=0.970389   [o=61 t=10]
 + -- Parameters = -4.1603 3.0867 -15.6990 -2.3097 3.6004 26.4468 0.9499 1.0102 0.9889 0.0252 -0.0065 0.0024
 + - cost(#7)=0.970840   [o=5 t=2]
 + -- Parameters = 27.0461 0.6161 -13.6148 -23.1568 -3.4939 -5.9596 0.9975 0.9990 1.0005 0.0004 -0.0002 -0.0005
 + - cost(#8)=0.970995   [o=4 t=12]
 + -- Parameters = 26.2061 -3.8483 -15.8698 -15.2337 -7.3538 -8.5272 1.0071 1.0278 1.0064 0.0023 0.0062 0.0020
 + - cost(#9)=0.972140   [o=63 t=1]
 + -- Parameters = -18.5262 30.5745 -26.8527 18.1301 21.0450 37.9957 1.0014 1.0001 1.0003 0.0004 -0.0002 0.0014
 + - cost(#10)=0.972188   [o=6 t=6]
 + -- Parameters = 28.9260 3.0737 -12.5390 -25.1754 -2.2451 -6.1785 1.0003 0.9878 1.0116 -0.0016 0.0009 0.0017
 + - cost(#11)=0.972749   [o=26 t=16]
 + -- Parameters = 29.5135 -8.5718 -5.5496 -27.2294 -11.8484 3.5473 1.0121 0.9878 1.0454 -0.0139 0.0022 0.0169
 + - cost(#12)=0.971874   [o=15 t=15]
 + -- Parameters = -1.8585 -7.5922 -15.6545 -2.9370 20.3826 24.5832 1.0117 1.0511 1.0054 0.0009 0.0005 0.0106
 + - cost(#13)=0.972076   [o=43 t=11]
 + -- Parameters = 27.6433 -3.4095 -16.1885 -21.6995 -9.1849 -1.1909 1.0049 1.0008 1.0075 0.0010 0.0030 0.0001
 + - cost(#14)=0.973058   [o=50 t=14]
 + -- Parameters = -2.7991 5.5622 0.1620 39.9341 8.2957 -30.8223 1.0227 0.9971 0.9528 -0.0088 -0.0092 -0.0167
 + - cost(#15)=0.973063   [o=3 t=7]
 + -- Parameters = 30.0113 3.0082 -11.0792 -32.4016 -2.9397 3.6425 1.0005 0.9943 1.0095 -0.0019 -0.0039 -0.0009
 + - cost(#16)=0.973071   [o=9 t=9]
 + -- Parameters = -2.6403 5.4888 1.3542 28.3186 36.5070 -9.8854 1.0084 0.9810 1.0117 0.0037 -0.0051 0.0003
 + - cost(#17)=0.973346   [o=80 t=8]
 + -- Parameters = -1.9088 -5.6606 -11.9279 6.0548 -5.3894 25.6207 0.9962 0.9905 1.0045 0.0232 -0.0017 -0.0000
 + - cost(#18)=0.976191   [o=38 t=13]
 + -- Parameters = -3.0701 5.1456 -3.0911 42.0126 23.0952 -25.9280 1.0156 1.0029 1.0381 -0.0051 0.0039 -0.0069
 + - cost(#19)=0.994215   [o=-2 t=-2]
 + -- Parameters = 2.6462 -2.1432 -5.8041 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 19 cases
 + - cost(#1)=0.897397 * [o=-1 t=-1]
 + -- Parameters = 4.1252 -0.1283 -1.5108 -8.8580 -1.4035 -0.7410 0.9601 0.9602 0.8633 -0.0413 -0.0484 -0.0493
 + - cost(#2)=0.966552   [o=34 t=0]
 + -- Parameters = 20.6719 -1.0752 -17.9600 -10.9895 -1.9164 -24.0216 1.0348 1.0119 0.9858 -0.0004 0.0046 -0.0035
 + - cost(#3)=0.968993   [o=14 t=4]
 + -- Parameters = 6.2214 1.8168 -16.6492 -27.4465 7.5545 -35.1390 1.0222 1.0031 0.9609 -0.0182 0.0001 0.0108
 + - cost(#4)=0.969181   [o=31 t=3]
 + -- Parameters = 26.1749 0.2556 -15.8144 -10.0740 -3.8502 -10.9811 0.9988 0.9959 0.9728 0.0059 0.0083 -0.0008
 + - cost(#5)=0.970691   [o=54 t=5]
 + -- Parameters = 15.1978 -5.7344 -20.8668 -14.6378 -7.5494 -33.8054 1.0045 0.9925 1.0119 0.0003 0.0283 0.0023
 + - cost(#6)=0.970368   [o=61 t=10]
 + -- Parameters = -4.1608 3.0676 -15.7019 -2.2915 3.5888 26.4358 0.9498 1.0109 0.9893 0.0254 -0.0066 0.0022
 + - cost(#7)=0.970787   [o=5 t=2]
 + -- Parameters = 27.0388 0.6084 -13.5942 -23.1542 -3.5028 -5.9590 0.9977 0.9989 1.0004 0.0019 -0.0001 -0.0005
 + - cost(#8)=0.970803   [o=4 t=12]
 + -- Parameters = 26.2136 -3.8288 -15.8500 -15.2319 -7.3251 -8.5265 1.0066 1.0282 1.0066 0.0022 0.0061 0.0095
 + - cost(#9)=0.970257   [o=63 t=1]
 + -- Parameters = -18.4975 31.1437 -26.5125 17.6149 21.4044 38.2807 1.0112 0.9963 1.0011 -0.0099 0.0012 0.0004
 + - cost(#10)=0.972163   [o=6 t=6]
 + -- Parameters = 28.9207 3.0792 -12.5786 -25.1826 -2.2279 -6.1837 1.0004 0.9876 1.0113 -0.0009 0.0001 0.0017
 + - cost(#11)=0.972737   [o=26 t=16]
 + -- Parameters = 29.5182 -8.5748 -5.6110 -27.2309 -11.8689 3.5929 1.0121 0.9877 1.0450 -0.0139 0.0024 0.0171
 + - cost(#12)=0.971178   [o=15 t=15]
 + -- Parameters = -1.9598 -7.1075 -15.2834 -2.6347 20.1264 23.7474 1.0116 1.0528 1.0067 -0.0011 -0.0021 0.0137
 + - cost(#13)=0.970883   [o=43 t=11]
 + -- Parameters = 26.9656 -2.5604 -15.7648 -20.5602 -9.1731 -1.2901 1.0077 1.0017 1.0074 0.0005 0.0047 -0.0011
 + - cost(#14)=0.972102   [o=50 t=14]
 + -- Parameters = -3.1538 5.4031 0.0466 39.8945 8.1111 -30.7864 1.0284 0.9949 0.9526 -0.0080 -0.0104 -0.0249
 + - cost(#15)=0.973054   [o=3 t=7]
 + -- Parameters = 30.0097 2.9996 -11.0717 -32.4021 -2.9346 3.6498 1.0005 0.9943 1.0096 -0.0011 -0.0040 -0.0009
 + - cost(#16)=0.972453   [o=9 t=9]
 + -- Parameters = -2.6573 5.3317 1.4672 28.3536 36.3178 -9.8965 1.0090 0.9808 1.0134 0.0058 -0.0140 -0.0016
 + - cost(#17)=0.972980   [o=80 t=8]
 + -- Parameters = -1.8363 -5.4995 -11.8910 6.1670 -5.9803 25.8626 0.9955 0.9926 1.0085 0.0234 -0.0017 -0.0023
 + - cost(#18)=0.976087   [o=38 t=13]
 + -- Parameters = -3.0348 5.0588 -3.1193 41.9520 22.9138 -25.8188 1.0152 1.0034 1.0367 -0.0053 0.0042 -0.0072
 + - cost(#19)=0.916431   [o=-2 t=-2]
 + -- Parameters = 4.6034 0.3143 -2.4991 -8.0796 0.5578 -1.6598 0.9997 0.9848 0.9642 0.0167 0.0039 -0.0033
 + - case #1 [o=-1 t=-1] is now the best
 + - Initial  cost = 0.897397
 + - Initial fine Parameters = 4.1252 -0.1283 -1.5108 -8.8580 -1.4035 -0.7410 0.9601 0.9602 0.8633 -0.0413 -0.0484 -0.0493
 + - Finalish cost = 0.896927 ; 535 funcs
 + - ini Finalish Parameters = 4.1265 -0.1740 -1.4907 -9.0771 -1.5517 -0.6721 0.9599 0.9497 0.8683 -0.0508 -0.0445 -0.0524
 + - Final    cost = 0.896927 ; 268 funcs
 + Final fine fit Parameters:
       x-shift=  4.1247   y-shift= -0.1758   z-shift= -1.4905  ...  enorm=  4.3892 mm
       z-angle= -9.0766   x-angle= -1.5565   y-angle= -0.6718  ...  total=  9.2243 deg
       x-scale=  0.9599   y-scale=  0.9497   z-scale=  0.8683  ...  vol3D=  0.7915 = base bigger than source
     y/x-shear= -0.0508 z/x-shear= -0.0445 z/y-shear= -0.0524
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 4.1247 -0.1758 -1.4905 -9.0766 -1.5565 -0.6718 0.9599 0.9497 0.8683 -0.0508 -0.0445 -0.0524
++ Unloading unneeded data
++ Output dataset ./MPRAGE.GA06_unif_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./MPRAGE.GA06_unif_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 30.2
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GA06_unif_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GA06_unif_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5028206 voxels in -source_automask+2
++ Zero-pad: zbot=6 ztop=0
++ 79340 voxels [12.7%] in weight mask
++ Number of points for matching = 79340
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 42.638 50.425 40.448 (index)
 + source center of mass = 165.085 192.378 129.758 (index)
 + source-target CM = 0.156 -1.458 -2.714 (xyz)
 + estimated center of mass shifts = 0.156 -1.458 -2.714
++ shift param auto-range: -71.3..71.6 -80.7..77.8 -70.7..65.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -9.843628 .. 10.156372  center = 0.156372
 + Range param#2 [y-shift] = -11.458313 .. 8.541687  center = -1.458313
 + Range param#3 [z-shift] = -12.713615 .. 7.286385  center = -2.713615
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -39.843628 .. 40.156372  center = 0.156372
 + Range param#2 [y-shift] = -41.458313 .. 38.541687  center = -1.458313
 + Range param#3 [z-shift] = -42.713615 .. 37.286385  center = -2.713615
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -39.844 ..   40.156
 +       y-shift =  -41.458 ..   38.542
 +       z-shift =  -42.714 ..   37.286
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5028206 [out of 32555488] voxels
 + base mask has 99397 [out of 624960] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=293.736 usiz=383.115
 + - copying weight image
 + - using 79340 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 315.591 .. 1078.16; base clip 2750.26 .. 9936.82
 +  - versus source range 0 .. 1116.5; base range 0 .. 12679
 + 70478 total points stored in 145 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_min_outlier_ts_ns_wt+orig -source ./MPRAGE.GA06_unif_flip_al_junk+orig -base ./vr_base_min_outlier_ts_ns+orig -cmass -master BASE -mast_dxyz 0.700000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./MPRAGE.GA06_unif_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 5938385 voxels in -source_automask+2
++ Zero-pad: zbot=6 ztop=0
++ 79340 voxels [12.7%] in weight mask
++ Number of points for matching = 79340
++ Local correlation: blok type = 'TOHD(13.8895)'
++ base center of mass = 42.638 50.425 40.448 (index)
 + source center of mass = 164.486 192.141 126.640 (index)
 + source-target CM = -0.263 -1.624 -4.896 (xyz)
 + estimated center of mass shifts = -0.263 -1.624 -4.896
++ shift param auto-range: -71.7..71.2 -80.9..77.6 -72.9..63.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.263313 .. 9.736687  center = -0.263313
 + Range param#2 [y-shift] = -11.624405 .. 8.375595  center = -1.624405
 + Range param#3 [z-shift] = -14.896301 .. 5.103699  center = -4.896301
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.263313 .. 39.736687  center = -0.263313
 + Range param#2 [y-shift] = -41.624405 .. 38.375595  center = -1.624405
 + Range param#3 [z-shift] = -44.896301 .. 35.103699  center = -4.896301
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000085
++ Final parameter search ranges:
 +       x-shift =  -40.263 ..   39.737
 +       y-shift =  -41.624 ..   38.376
 +       z-shift =  -44.896 ..   35.104
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.7 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 5938385 [out of 32555488] voxels
 + base mask has 99397 [out of 624960] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=308.052 usiz=376.051
 + - copying weight image
 + - using 79340 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 317.897 .. 1080.48; base clip 2750.26 .. 9936.82
 +  - versus source range 0 .. 1133.35; base range 0 .. 12679
 + 70478 total points stored in 145 'TOHD(13.9254)' bloks (0 duplicates)
++ -allcostX1D finished
No flip cost is 0.788452 for lpa cost function
Flip cost is 0.898714 for lpa cost function
Data does not need flipping
#++ Creating final output: skullstripped anat data
copying from dataset /mnt/ext5/GA/fmri_data/preproc_data/GA06/MPRAGE.GA06_unif_unflipped_ns+orig to /mnt/ext5/GA/fmri_data/preproc_data/GA06/MPRAGE.GA06_unif_ns+orig
#Script is running (command trimmed):
  3dcopy ./MPRAGE.GA06_unif_unflipped_ns+orig MPRAGE.GA06_unif_ns
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat MPRAGE.GA06_unif+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base \
 0 -epi_strip 3dAutomask -cost lpa -giant_move -check_flip -volreg off \
 -tshift off" \
 ./MPRAGE.GA06_unif_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_MPRAGE.GA06_unif*

# Finished alignment successfully

auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input MPRAGE.GA06_unif_ns+orig -skull_strip_input no -unifize_input no
/usr/local/afni/abin/afnipy/lib_afni1D.py:1302: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?
  print('** uncensor from vec: nt = %d, but nocen len = %d' \
#++ auto_warp.py version: 0.06
# Output directory /mnt/ext5/GA/fmri_data/preproc_data/GA06/awpy/
#Script is running:
  mkdir /mnt/ext5/GA/fmri_data/preproc_data/GA06/awpy/
cd /mnt/ext5/GA/fmri_data/preproc_data/GA06/awpy/
#Script is running (command trimmed):
  3dcopy /mnt/ext5/GA/fmri_data/preproc_data/GA06/MPRAGE.GA06_unif_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#Script is running (command trimmed):
  3dcopy /usr/local/afni/abin/MNI152_2009_template_SSW.nii.gz ./base.nii
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GA06/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GA06/awpy/anat.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK -> __ats_tmp__anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ anat already stripped, re-using
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_15pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 1585.350100 ...
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (cubic final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m -base dataset __ats_tmp__ref_base.nii_15pad+tlrc has 5 sub-bricks; will only use #0
RMS[0] = 430.013 285.463   ITER = 5/50
430.013

Warping has converged.

++ 3dcopy: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ output dataset: ./__ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_pre.anat_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
Cleanup ...
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GA06/awpy/anat.aff.nii
#Script is running:
  3dAttribute DELTA /mnt/ext5/GA/fmri_data/preproc_data/GA06/awpy/base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.aff.nii ./base.nii
#++ Aligning /mnt/ext5/GA/fmri_data/preproc_data/GA06/awpy/base.nii data to /mnt/ext5/GA/fmri_data/preproc_data/GA06/awpy/anat.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.aff.nii 
++ OpenMP thread count = 15
++ 3dQwarp: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ base dataset has more than 1 sub-brick: ignoring all but the first
++ base dataset has more than 1 sub-brick: ignoring all but the first [0]
++ Dataset final zero-pad: xbot=3 xtop=3  ybot=4 ytop=6  zbot=19 ztop=3 voxels
++ Weightizing the base image: FWHM = 4.5 (vox)
++ +++++++++++ Begin warp optimization:  base=/mnt/ext5/GA/fmri_data/preproc_data/GA06/awpy/base.nii  source=/mnt/ext5/GA/fmri_data/preproc_data/GA06/awpy/anat.aff.nii
++ AFNI warpomatic: 199 x 239 x 215 volume ; autobbox = 22..176 24..214 20..183 [clock= 3s 602ms]
lev=0 3..195 1..237 1..203: [first cost=-0.63349] ..... done [cost:-0.63349==>-0.70763]
lev=1 patch=145x177x153 [clock= 42s 957ms]........:[cost=-0.72517]:........done [cost:-0.70763==>-0.73139 ; 16 patches optimized, 0 skipped, bbox=5:193,4:235,3:202]
lev=2 patch=109x133x115 [clock= 58s 752ms]........done [cost:-0.73139==>-0.75922 ; 8 patches optimized, 0 skipped, bbox=5:193,4:235,3:202]
lev=3 patch=81x99x85 [clock= 1m 4s 193ms].......done [cost:-0.75922==>-0.81713 ; 23 patches optimized, 4 skipped, bbox=5:193,4:235,3:202]
lev=4 patch=61x75x65 [clock= 1m 17s 441ms]............done [cost:-0.81713==>-0.90165 ; 88 patches optimized, 37 skipped, bbox=5:193,4:235,3:202]
lev=5 patch=45x57x49 [clock= 1m 38s 257ms].................done [cost:-0.90165==>-0.96553 ; 169 patches optimized, 83 skipped, bbox=5:193,4:235,3:202]
lev=6 patch=35x43x37 [clock= 1m 56s 234ms].....................done [cost:-0.96553==>-1.01578 ; 438 patches optimized, 291 skipped, bbox=5:193,4:235,3:202]
lev=7 patch=25x25x25 [clock= 2m 17s 366ms]...........................................done [cost:-1.01578==>-1.11034 ; 1432 patches optimized, 908 skipped, bbox=5:193,4:235,3:202]
++ ====== total number of parameters 'optimized' = 26238
 +      initial unpenalized cost = -0.633492
 +        final unpenalized cost = -1.11971
 +        final penalized   cost = -1.11034
++ Output dataset ./anat.aff.qw.nii
++ Output dataset ./anat.aff.qw_WARP.nii
++ ===== clock time = 2m 51s 629ms
#++ Applying warps to /mnt/ext5/GA/fmri_data/preproc_data/GA06/MPRAGE.GA06_unif_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.aff.qw_WARP.nii anat.aff.Xat.1D" -master ./base.nii -source /mnt/ext5/GA/fmri_data/preproc_data/GA06/MPRAGE.GA06_unif_ns+orig -prefix ./MPRAGE.GA06_unif_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/mnt/ext5/GA/fmri_data/preproc_data/GA06/MPRAGE.GA06_unif_ns+orig'
++ Processing -nwarp 
++ Warping:.Z
++ Output dataset ./MPRAGE.GA06_unif_ns.aw.nii
++ total Elapsed time = 6.0 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input \
 MPRAGE.GA06_unif_ns+orig -skull_strip_input no -unifize_input no" \
 ./MPRAGE.GA06_unif_ns.aw.nii


3dbucket -DAFNI_NIFTI_VIEW=tlrc -prefix MPRAGE.GA06_unif_ns awpy/MPRAGE.GA06_unif_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
mv awpy/anat.aff.Xat.1D .
mv awpy/anat.aff.qw_WARP.nii .
if ( ! -f MPRAGE.GA06_unif_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb03.GA06.r01.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GA06.r01.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 87141 voxels
 + 9985 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.245  pitch=-0.573  yaw=-0.436  dS=-0.290  dL=-0.413  dP=-0.133
++ Mean: roll=-0.074  pitch=-0.192  yaw=-0.194  dS=-0.019  dL=-0.169  dP=+0.029
++ Max : roll=+0.211  pitch=+0.197  yaw=+0.336  dS=+0.338  dL=+0.618  dP=+0.237
++ Max displacements (mm) for each sub-brick:
 1.09(0.00) 1.08(0.11) 1.08(0.06) 1.07(0.05) 1.08(0.06) 1.05(0.11) 0.99(0.11) 0.95(0.06) 0.98(0.15) 0.91(0.10) 0.82(0.13) 0.79(0.11) 0.56(0.28) 0.46(0.58) 0.50(0.33) 0.57(0.19) 0.55(0.16) 0.49(0.17) 0.52(0.11) 0.56(0.21) 0.45(0.33) 0.44(0.11) 0.49(0.05) 0.51(0.16) 0.45(0.06) 0.40(0.08) 0.39(0.16) 0.42(0.03) 0.44(0.08) 0.49(0.09) 0.51(0.05) 0.55(0.19) 0.56(0.10) 0.42(0.27) 0.47(0.15) 0.44(0.08) 0.44(0.11) 0.59(0.21) 0.59(0.08) 0.44(0.22) 0.58(0.16) 0.46(0.22) 0.41(0.09) 0.43(0.06) 0.37(0.09) 0.38(0.06) 0.37(0.07) 0.42(0.13) 0.42(0.06) 0.42(0.05) 0.41(0.12) 0.36(0.06) 0.43(0.13) 0.40(0.06) 0.42(0.02) 0.40(0.13) 0.41(0.04) 0.38(0.06) 0.41(0.06) 0.42(0.04) 0.42(0.05) 0.37(0.09) 0.39(0.05) 0.41(0.08) 0.39(0.06) 0.45(0.08) 0.41(0.07) 0.42(0.05) 0.38(0.09) 0.41(0.07) 0.40(0.06) 0.43(0.09) 0.43(0.10) 0.42(0.10) 0.43(0.13) 0.41(0.06) 0.43(0.11) 0.42(0.10) 0.43(0.06) 0.39(0.11) 0.44(0.09) 0.47(0.06) 0.43(0.06) 0.45(0.13) 0.42(0.06) 0.41(0.09) 0.42(0.05) 0.43(0.07) 0.44(0.08) 0.44(0.03) 0.42(0.08) 0.43(0.10) 0.43(0.04) 0.48(0.10) 0.46(0.06) 0.50(0.14) 0.45(0.09) 0.45(0.05) 0.51(0.11) 0.51(0.07) 0.50(0.06) 0.49(0.11) 0.47(0.05) 0.45(0.05) 0.46(0.14) 0.48(0.04) 0.49(0.07) 0.45(0.08) 0.44(0.05) 0.44(0.11) 0.46(0.06) 0.50(0.05) 0.45(0.06) 0.43(0.10) 0.37(0.09) 0.38(0.11) 0.39(0.05) 0.38(0.08) 0.36(0.09) 0.32(0.09) 0.27(0.06) 0.28(0.06) 0.27(0.11) 0.33(0.10) 0.32(0.10) 0.30(0.11) 0.23(0.11) 0.22(0.09) 0.25(0.08) 0.27(0.09) 0.27(0.07) 0.24(0.11) 0.27(0.06) 0.21(0.16) 0.20(0.11) 0.26(0.20) 0.20(0.09) 0.16(0.07) 0.16(0.10) 0.17(0.06) 0.18(0.13) 0.16(0.06) 0.15(0.07) 0.15(0.04) 0.20(0.10) 0.21(0.07) 0.24(0.10) 0.31(0.10) 0.22(0.11) 0.25(0.09) 0.26(0.11) 0.27(0.13) 0.25(0.08) 0.19(0.09) 0.26(0.11) 0.22(0.11) 0.23(0.18) 0.24(0.11) 0.20(0.09) 0.16(0.13) 0.21(0.07) 0.23(0.06) 0.19(0.05) 0.24(0.11) 0.21(0.15) 0.30(0.19) 0.35(0.10) 0.20(0.18) 0.21(0.08) 0.23(0.10) 0.21(0.05) 0.20(0.09) 0.27(0.12) 0.29(0.07) 0.33(0.07) 0.29(0.04) 0.24(0.10) 0.21(0.06) 0.20(0.05) 0.28(0.13) 0.36(0.10) 0.19(0.20) 0.22(0.14) 0.21(0.10) 0.21(0.10) 0.17(0.08) 0.21(0.13) 0.19(0.12) 0.17(0.07) 0.18(0.06) 0.19(0.06) 0.13(0.06) 0.16(0.07) 0.19(0.06) 0.23(0.18) 0.34(0.21) 0.29(0.13) 0.28(0.19) 0.33(0.11) 0.37(0.15) 0.38(0.04) 0.30(0.11) 0.20(0.11) 0.17(0.11) 0.21(0.16) 0.28(0.19) 0.32(0.06) 0.28(0.08) 0.27(0.05) 0.23(0.05) 0.22(0.08) 0.24(0.07) 0.28(0.15) 0.29(0.22) 0.20(0.14) 0.00(0.20) 0.05(0.05) 0.07(0.09) 0.16(0.19) 0.25(0.09) 0.26(0.06) 0.24(0.13) 0.24(0.05) 0.20(0.09) 0.23(0.13) 0.24(0.06) 0.32(0.11) 0.32(0.06) 0.30(0.06) 0.27(0.04) 0.25(0.03) 0.23(0.03) 0.26(0.05) 0.26(0.04) 0.25(0.08) 0.14(0.19) 0.13(0.13) 0.26(0.24) 0.25(0.09) 0.39(0.18) 0.31(0.17) 0.31(0.11) 0.32(0.10) 0.28(0.08) 0.33(0.06) 0.39(0.14) 0.44(0.09) 0.38(0.08) 0.34(0.06) 0.37(0.10) 0.35(0.09) 0.20(0.22) 0.34(0.19) 0.38(0.11) 0.31(0.10) 0.32(0.09) 0.34(0.04) 0.37(0.05) 0.34(0.07) 0.19(0.16) 0.31(0.16) 0.30(0.12) 0.36(0.09) 0.37(0.02) 0.38(0.04) 0.33(0.09) 0.32(0.07) 0.35(0.14) 0.34(0.23) 0.39(0.07) 0.31(0.12) 0.32(0.02) 0.36(0.13) 0.37(0.08) 0.52(0.20) 0.49(0.05) 0.49(0.07) 0.45(0.05) 0.40(0.09) 0.41(0.04) 0.46(0.11) 0.41(0.09) 0.37(0.08) 0.36(0.06) 0.37(0.04) 0.37(0.05) 0.38(0.02) 0.41(0.04) 0.47(0.10) 0.56(0.17) 0.49(0.09) 0.49(0.06) 0.48(0.03) 0.50(0.08) 0.49(0.04) 0.45(0.04) 0.42(0.07) 0.42(0.06) 0.41(0.04) 0.46(0.10) 0.49(0.09) 0.53(0.09) 0.45(0.10) 0.48(0.05) 0.45(0.04) 0.53(0.12) 0.57(0.06) 0.54(0.04) 0.49(0.07) 0.52(0.06) 0.53(0.05) 0.56(0.05) 0.58(0.05) 0.50(0.13) 0.30(0.25) 0.44(0.27) 0.48(0.15) 0.54(0.12) 0.44(0.16) 0.27(0.27) 0.33(0.09) 0.47(0.29) 0.45(0.05) 0.46(0.12) 0.50(0.11) 0.47(0.10) 0.47(0.05) 0.46(0.06) 0.50(0.05) 0.43(0.21) 0.43(0.07) 0.47(0.11) 0.45(0.10) 0.45(0.06) 0.47(0.04) 0.47(0.10) 0.48(0.10) 0.45(0.13) 0.47(0.06) 0.47(0.05) 0.47(0.04) 0.45(0.05) 0.50(0.09) 0.53(0.05) 0.54(0.06) 0.53(0.10) 0.53(0.07) 0.52(0.04) 0.58(0.13) 0.60(0.05) 0.57(0.09) 0.59(0.07) 0.60(0.04) 0.62(0.08) 0.60(0.08) 0.59(0.04) 0.56(0.11) 0.54(0.03) 0.52(0.05) 0.56(0.06) 0.61(0.06) 0.59(0.08) 0.58(0.06) 0.59(0.04) 0.58(0.04) 0.59(0.10) 0.63(0.07) 0.67(0.07) 0.72(0.11) 0.69(0.11) 0.67(0.03) 0.63(0.06) 0.65(0.07) 0.66(0.07) 0.59(0.14) 0.67(0.14) 0.67(0.06) 0.70(0.05) 0.69(0.06) 0.69(0.05) 0.66(0.19) 0.70(0.07) 0.70(0.06) 0.71(0.05) 0.67(0.09) 0.66(0.07) 0.63(0.12) 0.60(0.07) 0.62(0.09) 0.67(0.17) 0.61(0.07) 0.58(0.06) 0.56(0.14) 0.58(0.05) 0.54(0.07) 0.47(0.10) 0.50(0.06) 0.52(0.09) 0.56(0.06) 0.61(0.07) 0.67(0.09) 0.69(0.04) 0.67(0.06) 0.72(0.06) 0.74(0.08) 0.77(0.03) 0.78(0.07) 0.82(0.06) 0.79(0.09) 0.76(0.04) 0.75(0.12) 0.72(0.08) 0.69(0.08) 0.61(0.10) 0.62(0.06) 0.65(0.15) 0.71(0.20) 0.71(0.26) 0.63(0.14) 0.51(0.14) 0.52(0.08) 0.50(0.13) 0.55(0.05) 0.54(0.06) 0.41(0.16) 0.44(0.05) 0.44(0.04) 0.50(0.12) 0.52(0.06) 0.49(0.11) 0.50(0.07) 0.49(0.06) 0.55(0.08) 0.54(0.05) 0.55(0.05) 0.57(0.04) 0.58(0.10) 0.60(0.04) 0.60(0.06) 0.64(0.07) 0.62(0.05) 0.61(0.05) 0.62(0.04) 0.61(0.05) 0.67(0.11) 0.75(0.09) 0.81(0.08) 0.82(0.06) 0.83(0.03) 0.82(0.02) 0.83(0.11) 0.84(0.08) 0.82(0.10) 0.79(0.06) 0.75(0.06) 0.75(0.09) 0.78(0.08) 0.71(0.08) 0.71(0.05) 0.69(0.13) 0.69(0.01) 0.70(0.08) 0.70(0.04) 0.72(0.05) 0.71(0.08) 0.73(0.04) 0.71(0.09) 0.71(0.03) 0.69(0.07) 0.72(0.05) 0.71(0.06) 0.71(0.05) 0.72(0.06) 0.71(0.04) 0.75(0.08) 0.76(0.08) 0.78(0.10) 0.77(0.08) 0.79(0.06) 0.77(0.04) 0.80(0.13) 0.81(0.06) 0.82(0.07) 0.79(0.07) 0.78(0.05) 0.77(0.05) 0.76(0.08) 0.80(0.07) 0.78(0.07) 0.74(0.06) 0.72(0.06) 0.72(0.07) 0.67(0.10) 0.70(0.06) 0.72(0.05) 0.71(0.07) 0.71(0.08) 0.74(0.03) 0.77(0.07) 0.77(0.09) 0.80(0.06) 0.79(0.08) 0.80(0.06) 0.82(0.09) 0.83(0.02) 0.85(0.04) 0.81(0.13) 0.84(0.03) 0.80(0.04) 0.80(0.10) 0.84(0.06) 0.84(0.04) 0.84(0.05) 0.84(0.08) 0.82(0.05) 0.82(0.04) 0.84(0.13) 0.81(0.07) 0.82(0.08) 0.76(0.11) 0.74(0.11) 0.73(0.05) 0.72(0.10) 0.75(0.05) 0.72(0.09) 0.73(0.03) 0.74(0.12) 0.72(0.08) 0.75(0.05) 0.79(0.09) 0.79(0.08) 0.81(0.06) 0.81(0.08) 0.80(0.03) 0.83(0.06) 0.86(0.09) 0.89(0.05) 0.89(0.11) 0.86(0.05) 0.81(0.08) 0.82(0.08) 0.83(0.06) 0.80(0.06) 0.80(0.08) 0.74(0.09) 0.74(0.05) 0.74(0.04) 0.72(0.05) 0.73(0.03) 0.74(0.06) 0.75(0.08) 0.76(0.04) 0.77(0.02) 0.79(0.09) 0.83(0.07) 0.80(0.07) 0.82(0.05) 0.79(0.07) 0.78(0.06) 0.81(0.07) 0.84(0.06) 0.83(0.06) 0.83(0.04) 0.80(0.05) 0.79(0.02) 0.80(0.04) 0.84(0.05) 0.85(0.02) 0.85(0.08) 0.84(0.05) 0.81(0.04) 0.83(0.04) 0.84(0.08) 0.88(0.08) 0.87(0.06) 0.84(0.10) 0.86(0.17) 0.84(0.07) 0.83(0.05) 0.82(0.06) 0.82(0.04) 0.80(0.07) 0.78(0.07) 0.73(0.11) 0.75(0.11) 0.74(0.03) 0.72(0.04) 0.69(0.04) 0.67(0.08) 0.66(0.05) 0.68(0.11) 0.71(0.04) 0.69(0.05) 0.68(0.06) 0.67(0.15) 0.66(0.05) 0.66(0.04) 0.68(0.08) 0.66(0.05) 0.68(0.08) 0.66(0.05) 0.67(0.05) 0.68(0.12) 0.69(0.09) 0.72(0.08) 0.69(0.10) 0.69(0.05) 0.67(0.05) 0.68(0.09) 0.70(0.07) 0.72(0.06) 0.71(0.02) 0.72(0.09) 0.72(0.07) 0.73(0.04) 0.75(0.13) 0.74(0.06) 0.72(0.03) 0.68(0.10) 0.68(0.03) 0.67(0.02) 0.72(0.14) 0.73(0.08) 0.68(0.09) 0.67(0.05) 0.68(0.08) 0.71(0.03) 0.73(0.09) 0.76(0.05) 0.76(0.10) 0.73(0.11) 0.75(0.04) 0.77(0.04) 0.79(0.15) 0.79(0.04) 0.81(0.09) 0.77(0.08) 0.76(0.06) 0.76(0.04) 0.78(0.07) 0.86(0.11) 0.86(0.04) 0.84(0.05) 0.84(0.10) 0.82(0.05) 0.80(0.04) 0.82(0.07) 0.80(0.05) 0.83(0.09) 0.82(0.06) 0.80(0.08) 0.81(0.07) 0.79(0.07) 0.82(0.11) 0.80(0.25) 0.68(0.20) 0.64(0.12) 0.66(0.03) 0.68(0.06) 0.72(0.08) 0.78(0.07) 0.77(0.11) 0.74(0.08) 0.74(0.08) 0.74(0.06) 0.76(0.14) 0.78(0.10) 0.80(0.06) 0.77(0.07) 0.74(0.08) 0.77(0.07) 0.73(0.08) 0.73(0.03) 0.75(0.03) 0.80(0.08) 0.79(0.09) 0.76(0.04) 0.77(0.09) 0.77(0.03) 0.74(0.03) 0.76(0.08) 0.82(0.12) 0.75(0.10) 0.77(0.13) 0.76(0.12) 0.73(0.05) 0.73(0.05) 0.74(0.06) 0.74(0.05) 0.71(0.09) 0.70(0.04) 0.71(0.09) 0.69(0.09) 0.68(0.05) 0.72(0.07) 0.71(0.06) 0.72(0.06) 0.74(0.07) 0.73(0.04) 0.74(0.05) 0.74(0.13) 0.77(0.06) 0.78(0.12) 0.75(0.03) 0.76(0.10) 0.77(0.07) 0.78(0.06) 0.78(0.09) 0.79(0.03) 0.77(0.05) 0.77(0.07) 0.76(0.05) 0.76(0.03) 0.77(0.08) 0.79(0.09) 0.74(0.09) 0.72(0.05) 0.71(0.15) 0.73(0.04) 0.71(0.03) 0.74(0.11) 0.76(0.04) 0.70(0.12) 0.70(0.08) 0.70(0.04) 0.72(0.06) 0.72(0.09) 0.71(0.08) 0.68(0.11) 0.72(0.07) 0.75(0.04) 0.72(0.12) 0.75(0.09) 0.72(0.10) 0.67(0.10) 0.65(0.12) 0.65(0.02) 0.66(0.04) 0.72(0.16) 0.78(0.10) 0.73(0.11) 0.74(0.03) 0.73(0.12) 0.75(0.07) 0.78(0.03) 0.82(0.13) 0.85(0.07) 0.79(0.11) 0.74(0.11) 0.73(0.02) 0.72(0.03) 0.71(0.10) 0.74(0.12) 0.75(0.14) 0.69(0.09) 0.66(0.09) 0.65(0.03) 0.69(0.11) 0.73(0.07) 0.72(0.04) 0.69(0.08) 0.67(0.03) 0.66(0.06) 0.63(0.05) 0.67(0.07) 0.68(0.06) 0.70(0.06) 0.70(0.20) 0.70(0.05) 0.70(0.04) 0.71(0.10) 0.71(0.05) 0.74(0.11) 0.68(0.11) 0.68(0.04) 0.67(0.05) 0.67(0.02) 0.68(0.02) 0.73(0.08) 0.76(0.10) 0.71(0.08) 0.70(0.08) 0.68(0.10) 0.67(0.05) 0.68(0.04) 0.74(0.14) 0.73(0.16) 0.64(0.15) 0.63(0.05) 0.62(0.14) 0.60(0.06) 0.63(0.06) 0.70(0.10) 0.67(0.05) 0.63(0.08) 0.65(0.08) 0.60(0.10) 0.61(0.05) 0.63(0.09) 0.67(0.08) 0.71(0.06) 0.65(0.07) 0.61(0.12) 0.61(0.04) 0.62(0.07) 0.65(0.10) 0.68(0.03) 0.63(0.08) 0.62(0.08) 0.59(0.06) 0.62(0.06) 0.62(0.05) 0.68(0.10) 0.59(0.10) 0.58(0.06) 0.58(0.07) 0.58(0.05) 0.64(0.09) 0.64(0.05) 0.59(0.13) 0.54(0.12) 0.57(0.05) 0.56(0.05) 0.64(0.17) 0.65(0.07) 0.65(0.06) 0.61(0.07) 0.59(0.05) 0.59(0.06) 0.58(0.06) 0.61(0.07) 0.65(0.06) 0.64(0.08) 0.61(0.09) 0.62(0.07) 0.58(0.08) 0.60(0.14) 0.63(0.05) 0.70(0.14) 0.61(0.11) 0.60(0.07) 0.59(0.09) 0.61(0.06) 0.64(0.08) 0.67(0.16) 0.66(0.08) 0.54(0.14) 0.60(0.10) 0.57(0.09) 0.63(0.08) 0.65(0.11) 0.68(0.09) 0.68(0.13) 0.69(0.12) 0.65(0.15) 0.66(0.25) 0.88(0.32) 0.90(0.30) 0.93(0.17) 0.81(0.17) 0.89(0.20) 0.92(0.12) 1.01(0.15) 1.01(0.08) 0.97(0.22) 0.87(0.12) 0.88(0.15) 0.93(0.24) 1.12(0.29) 1.19(0.27) 1.02(0.21) 1.02(0.06) 0.96(0.09) 1.04(0.11) 1.14(0.11) 1.16(0.10) 1.10(0.10) 0.91(0.20) 0.89(0.12) 0.95(0.09) 1.04(0.16) 1.08(0.14) 1.08(0.16) 1.05(0.06) 0.95(0.12) 0.88(0.08) 0.91(0.06) 0.97(0.13) 1.06(0.09) 1.00(0.14) 0.95(0.07) 0.90(0.05) 0.87(0.04) 0.88(0.03) 0.96(0.12) 1.00(0.08) 1.03(0.06) 1.00(0.05) 0.88(0.16) 0.88(0.06) 0.88(0.03) 0.97(0.10) 1.00(0.07) 1.01(0.07) 0.95(0.08) 0.91(0.04) 0.89(0.04) 0.87(0.04) 0.91(0.04) 0.95(0.08) 1.01(0.09) 1.05(0.10) 0.92(0.22) 1.03(0.15) 1.01(0.09) 1.01(0.12) 1.09(0.15) 1.11(0.05) 1.06(0.14) 1.01(0.12) 0.98(0.08) 0.97(0.07) 1.07(0.21) 1.08(0.04) 1.08(0.04) 0.99(0.11) 0.97(0.14) 0.97(0.14) 0.89(0.12) 0.93(0.06) 0.97(0.14) 1.07(0.11) 0.96(0.15) 0.91(0.09) 0.84(0.10) 0.86(0.08) 0.92(0.08) 0.97(0.13) 1.05(0.23) 1.05(0.12) 0.96(0.13) 0.97(0.13) 0.96(0.05) 0.94(0.07) 0.93(0.21) 0.98(0.09) 1.01(0.23) 1.06(0.10) 1.00(0.14) 1.04(0.16) 0.99(0.08) 0.97(0.08) 0.93(0.10) 0.93(0.07) 0.90(0.09) 0.85(0.19) 0.76(0.17) 0.77(0.10) 0.79(0.08) 0.78(0.09) 0.78(0.07) 0.82(0.08) 0.79(0.05) 0.82(0.14) 0.87(0.08) 0.91(0.07) 0.89(0.06) 0.84(0.07) 0.85(0.04) 0.82(0.05) 0.85(0.12) 0.87(0.07) 0.88(0.06) 0.89(0.12) 0.90(0.06) 0.91(0.10) 0.91(0.10) 0.97(0.10) 0.95(0.04) 0.90(0.10) 0.82(0.13) 0.82(0.12) 0.85(0.08) 0.95(0.11) 0.89(0.17) 1.00(0.19) 0.93(0.11) 0.89(0.06) 0.91(0.10) 0.93(0.12) 1.02(0.14) 0.91(0.28) 0.86(0.07) 0.89(0.05) 0.91(0.11) 0.93(0.12) 0.91(0.06) 0.89(0.06) 0.84(0.19) 0.85(0.07) 0.86(0.04) 0.94(0.14) 0.95(0.10) 0.89(0.09) 0.88(0.09) 0.90(0.09) 0.91(0.13) 0.93(0.20) 0.89(0.17) 0.84(0.18) 0.74(0.15) 0.87(0.17) 0.86(0.12) 0.84(0.10) 0.87(0.05) 0.90(0.04) 0.90(0.06) 0.91(0.14) 0.79(0.26) 0.81(0.03) 0.84(0.15) 0.83(0.07) 0.85(0.05) 0.91(0.07) 0.97(0.12) 0.97(0.07) 0.90(0.08) 0.93(0.05) 0.84(0.09) 0.90(0.07) 0.95(0.08) 0.97(0.07) 0.96(0.06) 0.96(0.08) 1.00(0.11) 1.01(0.05) 1.04(0.05) 1.09(0.14) 1.01(0.14) 0.84(0.26) 0.90(0.09) 0.79(0.23) 0.86(0.21) 0.99(0.16) 1.03(0.11) 0.98(0.06) 0.99(0.04) 1.04(0.06) 1.04(0.04) 1.02(0.08) 1.04(0.17) 1.05(0.05) 1.12(0.10) 1.19(0.15) 1.09(0.12) 1.10(0.10) 1.17(0.12) 1.14(0.05) 1.15(0.06) 1.10(0.12) 1.13(0.05) 1.05(0.09) 0.98(0.19) 0.86(0.15) 0.80(0.08) 0.93(0.20) 0.86(0.31) 0.99(0.15) 1.02(0.13) 0.98(0.07) 0.95(0.05) 0.94(0.03) 0.90(0.11) 0.94(0.05) 0.94(0.07) 0.97(0.08) 0.95(0.06) 0.86(0.10) 0.88(0.06) 0.93(0.07) 0.88(0.11) 0.92(0.49) 0.84(0.28) 0.97(0.33) 0.86(0.18) 0.75(0.26) 0.65(0.16) 0.67(0.18) 0.59(0.16) 0.71(0.12) 0.66(0.40) 0.56(0.29) 0.52(0.17) 0.58(0.08) 0.57(0.05) 0.56(0.04)
++ Max displacement in automask = 1.19 (mm) at sub-brick 869
++ Max delta displ  in automask = 0.58 (mm) at sub-brick 13
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb03.GA06.r01.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GA06_unif_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master MPRAGE.GA06_unif_ns+tlrc -dxyz 2.5 -source pb02.GA06.r01.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA06_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GA06.r01.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 626.8 sec
3dNwarpApply -master MPRAGE.GA06_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA06_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb03.GA06.r02.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GA06.r02.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 87262 voxels
 + 10019 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.064  pitch=-0.497  yaw=-0.100  dS=-0.316  dL=-0.053  dP=-0.321
++ Mean: roll=+0.065  pitch=-0.177  yaw=+0.076  dS=+0.243  dL=+0.199  dP=-0.116
++ Max : roll=+0.211  pitch=+0.003  yaw=+0.275  dS=+0.797  dL=+0.386  dP=+0.123
++ Max displacements (mm) for each sub-brick:
 0.90(0.00) 0.95(0.06) 0.99(0.07) 1.03(0.05) 1.11(0.08) 1.04(0.08) 1.05(0.08) 1.06(0.08) 1.06(0.07) 1.04(0.05) 1.03(0.09) 1.01(0.08) 0.97(0.06) 1.04(0.08) 0.99(0.12) 0.98(0.09) 0.93(0.05) 1.03(0.14) 1.03(0.11) 1.00(0.11) 0.93(0.11) 0.93(0.10) 0.93(0.05) 0.94(0.08) 0.99(0.10) 0.96(0.05) 0.91(0.06) 0.90(0.04) 0.87(0.12) 0.87(0.04) 0.91(0.06) 0.97(0.14) 0.92(0.06) 0.91(0.07) 0.89(0.08) 0.90(0.08) 0.89(0.04) 0.95(0.12) 0.94(0.07) 0.89(0.08) 0.83(0.12) 0.82(0.07) 0.84(0.05) 0.87(0.12) 0.85(0.07) 0.78(0.07) 0.79(0.05) 0.74(0.12) 0.79(0.08) 0.79(0.08) 0.86(0.13) 0.76(0.11) 0.74(0.07) 0.70(0.10) 0.70(0.03) 0.73(0.10) 0.80(0.12) 0.75(0.06) 0.70(0.06) 0.66(0.09) 0.69(0.05) 0.71(0.04) 0.81(0.13) 0.82(0.03) 0.75(0.08) 0.70(0.10) 0.76(0.13) 0.79(0.06) 0.79(0.20) 0.80(0.07) 0.79(0.10) 0.74(0.06) 0.64(0.14) 0.72(0.08) 0.71(0.06) 0.78(0.10) 0.64(0.18) 0.61(0.15) 0.63(0.08) 0.66(0.13) 0.70(0.11) 0.74(0.07) 0.64(0.12) 0.60(0.11) 0.63(0.04) 0.59(0.07) 0.70(0.19) 0.67(0.07) 0.65(0.04) 0.59(0.10) 0.60(0.05) 0.62(0.04) 0.68(0.09) 0.73(0.07) 0.71(0.07) 0.68(0.07) 0.67(0.09) 0.76(0.12) 0.72(0.13) 0.72(0.09) 0.67(0.05) 0.67(0.06) 0.67(0.06) 0.66(0.02) 0.70(0.06) 0.70(0.10) 0.66(0.05) 0.61(0.06) 0.56(0.13) 0.60(0.05) 0.61(0.04) 0.67(0.10) 0.60(0.07) 0.62(0.05) 0.57(0.10) 0.61(0.04) 0.57(0.05) 0.67(0.17) 0.65(0.04) 0.67(0.03) 0.60(0.10) 0.60(0.07) 0.61(0.05) 0.64(0.04) 0.66(0.07) 0.66(0.04) 0.62(0.06) 0.63(0.07) 0.63(0.05) 0.67(0.08) 0.71(0.06) 0.71(0.04) 0.62(0.10) 0.64(0.09) 0.61(0.05) 0.62(0.07) 0.71(0.09) 0.64(0.11) 0.59(0.08) 0.57(0.09) 0.57(0.02) 0.59(0.02) 0.64(0.12) 0.66(0.04) 0.59(0.07) 0.56(0.08) 0.57(0.07) 0.59(0.04) 0.69(0.12) 0.68(0.07) 0.56(0.18) 0.54(0.08) 0.54(0.12) 0.68(0.17) 0.69(0.07) 0.70(0.12) 0.68(0.10) 0.59(0.13) 0.59(0.10) 0.67(0.11) 0.68(0.15) 0.76(0.14) 0.74(0.08) 0.68(0.14) 0.71(0.03) 0.68(0.07) 0.69(0.03) 0.68(0.05) 0.76(0.13) 0.69(0.09) 0.73(0.09) 0.65(0.13) 0.69(0.06) 0.71(0.08) 0.80(0.14) 0.74(0.06) 0.72(0.08) 0.72(0.08) 0.73(0.03) 0.73(0.02) 0.77(0.10) 0.81(0.06) 0.75(0.05) 0.71(0.08) 0.71(0.06) 0.70(0.09) 0.72(0.03) 0.77(0.09) 0.78(0.04) 0.73(0.07) 0.72(0.06) 0.74(0.06) 0.74(0.04) 0.81(0.13) 0.80(0.04) 0.80(0.03) 0.73(0.12) 0.74(0.04) 0.74(0.03) 0.81(0.10) 0.83(0.07) 0.78(0.07) 0.77(0.08) 0.76(0.09) 0.78(0.04) 0.83(0.09) 0.86(0.07) 0.82(0.06) 0.77(0.09) 0.72(0.12) 0.78(0.07) 0.76(0.05) 0.83(0.14) 0.86(0.07) 0.79(0.10) 0.78(0.06) 0.81(0.06) 0.81(0.03) 0.82(0.10) 0.82(0.07) 0.80(0.09) 0.73(0.11) 0.73(0.10) 0.75(0.03) 0.76(0.05) 0.81(0.10) 0.85(0.10) 0.87(0.06) 0.76(0.16) 0.79(0.08) 0.78(0.07) 0.80(0.05) 0.83(0.09) 0.82(0.05) 0.74(0.09) 0.70(0.10) 0.70(0.08) 0.73(0.08) 0.75(0.09) 0.76(0.06) 0.70(0.08) 0.69(0.07) 0.70(0.06) 0.72(0.06) 0.71(0.03) 0.76(0.12) 0.79(0.04) 0.75(0.05) 0.70(0.11) 0.73(0.08) 0.73(0.06) 0.76(0.04) 0.78(0.08) 0.79(0.03) 0.77(0.03) 0.73(0.10) 0.74(0.03) 0.73(0.08) 0.78(0.15) 0.82(0.07) 0.98(0.17) 0.75(0.23) 0.66(0.13) 0.63(0.11) 0.69(0.07) 0.74(0.08) 0.78(0.06) 0.79(0.08) 0.73(0.07) 0.71(0.04) 0.66(0.13) 0.69(0.05) 0.67(0.07) 0.74(0.12) 0.75(0.07) 0.70(0.07) 0.65(0.10) 0.64(0.06) 0.65(0.05) 0.68(0.04) 0.73(0.10) 0.74(0.06) 0.66(0.08) 0.65(0.07) 0.66(0.05) 0.67(0.07) 0.72(0.07) 0.78(0.09) 0.75(0.07) 0.69(0.08) 0.70(0.06) 0.67(0.10) 0.70(0.04) 0.69(0.04) 0.75(0.13) 0.73(0.03) 0.71(0.04) 0.64(0.13) 0.70(0.07) 0.66(0.07) 0.74(0.13) 0.75(0.06) 0.79(0.09) 0.68(0.13) 0.63(0.17) 0.65(0.07) 0.66(0.03) 0.69(0.06) 0.72(0.07) 0.75(0.06) 0.65(0.10) 0.63(0.10) 0.62(0.08) 0.63(0.03) 0.68(0.11) 0.71(0.07) 0.70(0.06) 0.65(0.08) 0.61(0.10) 0.65(0.05) 0.63(0.05) 0.68(0.09) 0.74(0.07) 0.77(0.07) 0.66(0.12) 0.68(0.05) 0.67(0.07) 0.68(0.02) 0.73(0.09) 0.75(0.04) 0.70(0.05) 0.66(0.05) 0.64(0.08) 0.65(0.06) 0.68(0.06) 0.73(0.10) 0.72(0.06) 0.64(0.08) 0.67(0.05) 0.64(0.10) 0.70(0.14) 0.73(0.10) 0.67(0.06) 0.63(0.09) 0.64(0.08) 0.64(0.03) 0.69(0.10) 0.74(0.07) 0.75(0.02) 0.64(0.12) 0.63(0.10) 0.65(0.05) 0.65(0.04) 0.66(0.04) 0.73(0.11) 0.76(0.08) 0.69(0.08) 0.67(0.04) 0.65(0.12) 0.69(0.12) 0.77(0.17) 0.79(0.07) 0.65(0.16) 0.64(0.14) 0.71(0.11) 0.64(0.08) 0.71(0.13) 0.75(0.06) 0.60(0.16) 0.55(0.06) 0.49(0.08) 0.54(0.07) 0.51(0.04) 0.60(0.12) 0.65(0.07) 0.54(0.11) 0.50(0.11) 0.51(0.10) 0.52(0.05) 0.57(0.08) 0.64(0.10) 0.65(0.03) 0.61(0.08) 0.53(0.14) 0.58(0.06) 0.58(0.03) 0.64(0.06) 0.70(0.09) 0.70(0.06) 0.70(0.06) 0.70(0.05) 0.58(0.14) 0.56(0.04) 0.58(0.04) 0.66(0.11) 0.69(0.05) 0.56(0.14) 0.51(0.08) 0.53(0.06) 0.56(0.04) 0.56(0.02) 0.59(0.05) 0.65(0.09) 0.59(0.08) 0.57(0.07) 0.54(0.06) 0.49(0.08) 0.23(0.40) 0.28(0.08) 0.34(0.09) 0.68(0.46) 0.87(0.26) 0.66(0.33) 0.78(0.12) 0.74(0.07) 0.63(0.25) 0.81(0.22) 0.87(0.19) 0.86(0.04) 0.84(0.13) 0.81(0.05) 0.75(0.08) 0.73(0.12) 0.76(0.07) 0.71(0.09) 0.68(0.05) 0.72(0.08) 0.76(0.08) 0.79(0.03) 0.75(0.08) 0.67(0.14) 0.67(0.10) 0.68(0.04) 0.69(0.07) 0.72(0.10) 0.71(0.04) 0.70(0.07) 0.66(0.14) 0.71(0.05) 0.67(0.06) 0.69(0.05) 0.69(0.03) 0.77(0.11) 0.68(0.12) 0.68(0.06) 0.68(0.08) 0.71(0.05) 0.70(0.04) 0.78(0.17) 0.75(0.06) 0.78(0.09) 0.67(0.13) 0.69(0.10) 0.65(0.13) 0.70(0.12) 0.76(0.07) 0.87(0.12) 0.78(0.13) 0.76(0.06) 0.72(0.14) 0.68(0.05) 0.67(0.06) 0.73(0.13) 0.63(0.20) 0.63(0.14) 0.66(0.17) 0.67(0.07) 0.67(0.05) 0.74(0.11) 0.75(0.06) 0.68(0.08) 0.68(0.10) 0.75(0.10) 0.71(0.04) 0.76(0.11) 0.79(0.08) 0.77(0.07) 0.70(0.08) 0.70(0.08) 0.71(0.03) 0.74(0.03) 0.76(0.05) 0.80(0.11) 0.69(0.12) 0.69(0.05) 0.67(0.14) 0.71(0.05) 0.75(0.07) 0.85(0.12) 0.89(0.09) 0.86(0.09) 0.80(0.09) 0.79(0.04) 0.76(0.09) 0.82(0.07) 0.79(0.05) 0.65(0.18) 0.57(0.14) 0.53(0.12) 0.56(0.07) 0.57(0.02) 0.65(0.12) 0.68(0.05) 0.64(0.06) 0.59(0.06) 0.58(0.08) 0.58(0.06) 0.58(0.07) 0.66(0.10) 0.70(0.06) 0.62(0.09) 0.57(0.08) 0.58(0.07) 0.58(0.04) 0.63(0.11) 0.66(0.10) 0.65(0.05) 0.57(0.09) 0.57(0.11) 0.63(0.11) 0.65(0.09) 0.73(0.12) 0.72(0.06) 0.63(0.10) 0.57(0.17) 0.61(0.04) 0.62(0.06) 0.69(0.12) 0.71(0.07) 0.61(0.12) 0.56(0.12) 0.56(0.05) 0.56(0.03) 0.62(0.10) 0.64(0.06) 0.66(0.06) 0.57(0.10) 0.56(0.08) 0.57(0.05) 0.60(0.06) 0.68(0.11) 0.75(0.11) 0.64(0.12) 0.62(0.11) 0.60(0.10) 0.60(0.07) 0.69(0.15) 0.68(0.04) 0.72(0.06) 0.64(0.10) 0.66(0.05) 0.63(0.05) 0.69(0.09) 0.68(0.04) 0.70(0.07) 0.61(0.11) 0.63(0.04) 0.63(0.05) 0.66(0.04) 0.67(0.03) 0.71(0.08) 0.66(0.06) 0.61(0.08) 0.60(0.09) 0.63(0.05) 0.61(0.03) 0.72(0.14) 0.69(0.05) 0.65(0.07) 0.61(0.06) 0.60(0.08) 0.59(0.06) 0.63(0.06) 0.65(0.06) 0.68(0.07) 0.56(0.13) 0.55(0.07) 0.53(0.10) 0.57(0.04) 0.57(0.03) 0.63(0.09) 0.66(0.05) 0.60(0.07) 0.60(0.07) 0.59(0.07) 0.59(0.06) 0.60(0.05) 0.67(0.10) 0.65(0.04) 0.59(0.10) 0.57(0.06) 0.58(0.05) 0.59(0.04) 0.62(0.05) 0.70(0.15) 0.77(0.11) 0.63(0.17) 0.64(0.09) 0.65(0.09) 0.85(0.26) 0.93(0.20) 1.08(0.17) 0.82(0.28) 0.77(0.25) 0.79(0.03) 0.81(0.07) 0.78(0.20) 0.87(0.14) 0.76(0.11) 0.70(0.09) 0.68(0.09) 0.69(0.08) 0.71(0.03) 0.75(0.11) 0.78(0.08) 0.76(0.03) 0.71(0.09) 0.71(0.07) 0.73(0.04) 0.74(0.05) 0.79(0.11) 0.75(0.08) 0.79(0.10) 0.71(0.10) 0.69(0.09) 0.70(0.06) 0.57(0.18) 0.65(0.12) 0.69(0.07) 0.75(0.09) 0.71(0.05) 0.64(0.12) 0.63(0.08) 0.66(0.04) 0.64(0.06) 0.64(0.03) 0.63(0.04) 0.68(0.11) 0.70(0.06) 0.67(0.07) 0.61(0.08) 0.62(0.08) 0.62(0.05) 0.63(0.05) 0.66(0.06) 0.71(0.08) 0.67(0.06) 0.64(0.08) 0.63(0.08) 0.66(0.10) 0.71(0.10) 0.70(0.05) 0.76(0.18) 0.74(0.11) 0.80(0.10) 0.76(0.12) 0.69(0.23) 0.61(0.20) 0.76(0.24) 0.74(0.35) 0.74(0.10) 0.60(0.18) 0.61(0.31) 0.55(0.09) 0.60(0.09) 0.54(0.08) 0.54(0.04) 0.50(0.09) 0.50(0.02) 0.53(0.07) 0.56(0.19) 0.63(0.15) 0.71(0.15) 0.79(0.22) 0.86(0.14) 0.88(0.12) 0.90(0.12) 0.93(0.03) 0.92(0.14) 0.88(0.10) 0.86(0.19) 0.64(0.29) 0.60(0.12) 0.65(0.31) 0.61(0.15) 0.64(0.12) 0.67(0.21) 0.77(0.12) 0.89(0.13) 0.85(0.09) 0.82(0.05) 0.79(0.09) 0.78(0.07) 0.75(0.06) 0.78(0.11) 0.79(0.06) 0.76(0.09) 0.68(0.09) 0.68(0.08) 0.70(0.03) 0.69(0.02) 0.77(0.14) 0.70(0.08) 0.67(0.06) 0.66(0.06) 0.66(0.06) 0.68(0.05) 0.65(0.04) 0.66(0.02) 0.72(0.10) 0.74(0.05) 0.74(0.07) 0.67(0.09) 0.68(0.09) 0.68(0.09) 0.70(0.04) 0.76(0.07) 0.72(0.05) 0.81(0.13) 0.76(0.06) 0.72(0.07) 0.70(0.10) 0.71(0.05) 0.74(0.09) 0.78(0.05) 0.84(0.08) 1.01(0.26) 1.12(0.15) 1.01(0.16) 0.81(0.25) 0.75(0.13) 0.82(0.15) 1.03(0.27) 1.01(0.12) 0.99(0.07) 0.96(0.05) 0.87(0.24) 0.86(0.08) 0.79(0.09) 0.77(0.04) 0.73(0.08) 0.73(0.10) 0.71(0.04) 0.78(0.11) 0.79(0.06) 0.75(0.07) 0.73(0.09) 0.75(0.05) 0.78(0.05) 0.78(0.06) 0.83(0.07) 0.87(0.05) 0.78(0.15) 0.78(0.15) 0.78(0.09) 0.69(0.20) 0.78(0.10) 0.73(0.14) 0.77(0.08) 0.67(0.15) 0.64(0.07) 0.65(0.06) 0.66(0.02) 0.69(0.05) 0.73(0.08) 0.76(0.07) 0.67(0.11) 0.68(0.10) 0.64(0.08) 0.63(0.06) 0.65(0.07) 0.65(0.05) 0.63(0.05) 0.56(0.10) 0.58(0.07) 0.57(0.06) 0.60(0.05) 0.66(0.11) 0.70(0.08) 0.76(0.16) 0.80(0.09) 0.88(0.30) 0.81(0.16) 0.87(0.16) 0.95(0.10) 1.02(0.12) 1.04(0.11) 0.96(0.12) 0.98(0.09) 0.90(0.14) 0.73(0.23) 0.72(0.22) 0.71(0.04) 0.67(0.11) 0.64(0.08) 0.63(0.07) 0.61(0.10) 0.64(0.07) 0.67(0.06) 0.72(0.10) 0.69(0.07) 0.74(0.10) 0.92(0.37) 1.02(0.14) 1.11(0.11) 1.24(0.15) 1.27(0.13) 1.19(0.17) 1.10(0.20) 1.01(0.19) 1.04(0.07) 1.03(0.10) 0.91(0.35) 0.81(0.12) 0.73(0.10) 0.72(0.07) 0.73(0.13) 0.73(0.03) 0.72(0.04) 0.72(0.13) 0.72(0.13) 0.73(0.09) 0.72(0.10) 0.72(0.11) 0.69(0.06) 0.69(0.10) 0.69(0.06) 0.68(0.07) 0.64(0.08) 0.66(0.08) 0.69(0.08) 0.69(0.04) 0.69(0.03) 0.68(0.10) 0.67(0.07) 0.69(0.06) 0.68(0.11) 0.67(0.10) 0.67(0.05) 0.69(0.08) 0.71(0.07) 0.71(0.07) 0.70(0.07) 0.68(0.05) 0.66(0.13) 0.66(0.08) 0.67(0.11) 0.60(0.15) 0.58(0.06) 0.60(0.06) 0.62(0.02) 0.63(0.04) 0.64(0.09) 0.64(0.03) 0.59(0.09) 0.63(0.17) 0.62(0.15) 0.66(0.08) 0.62(0.11) 0.66(0.11) 0.64(0.03) 0.69(0.07) 0.67(0.15) 0.72(0.11) 0.74(0.07) 0.62(0.14) 0.60(0.09) 0.62(0.08) 0.65(0.12) 0.67(0.10) 0.64(0.06) 0.69(0.08) 0.65(0.05) 0.65(0.13) 0.62(0.07) 0.63(0.07) 0.63(0.07) 0.68(0.16) 0.71(0.06) 0.70(0.04) 0.71(0.14) 0.67(0.07) 0.69(0.11) 0.72(0.04) 0.72(0.13) 0.73(0.05) 0.70(0.05) 0.64(0.15) 0.62(0.06) 0.65(0.12) 0.67(0.15) 0.66(0.06) 0.68(0.03) 0.64(0.10) 0.66(0.08) 0.63(0.07) 0.70(0.10) 0.73(0.08) 0.73(0.19) 0.71(0.08) 0.67(0.07) 0.69(0.10) 0.69(0.08) 0.69(0.10) 0.71(0.08) 0.72(0.12) 0.72(0.08) 0.68(0.10) 0.64(0.16) 0.67(0.07) 0.66(0.17) 0.71(0.15) 0.72(0.06) 0.73(0.08) 0.73(0.02) 0.75(0.05) 0.72(0.10) 0.70(0.02) 0.69(0.07) 0.73(0.11) 0.73(0.12) 0.71(0.05) 0.71(0.04) 0.70(0.08) 0.67(0.04) 0.64(0.08) 0.68(0.12) 0.64(0.06) 0.64(0.07) 0.65(0.02) 0.63(0.07) 0.61(0.10) 0.61(0.11) 0.66(0.07) 0.65(0.09) 0.65(0.07) 0.67(0.09) 0.67(0.03) 0.64(0.12) 0.63(0.06) 0.64(0.04) 0.64(0.11) 0.64(0.05) 0.65(0.06) 0.63(0.04) 0.63(0.09) 0.61(0.05) 0.65(0.08) 0.65(0.07) 0.65(0.07) 0.67(0.02) 0.67(0.07) 0.62(0.07) 0.59(0.06) 0.64(0.13) 0.64(0.08) 0.64(0.05) 0.65(0.04) 0.63(0.14) 0.61(0.08) 0.65(0.07) 0.68(0.09) 0.65(0.13) 0.65(0.07) 0.65(0.05) 0.63(0.14) 0.63(0.08) 0.66(0.05) 0.65(0.11) 0.63(0.06) 0.60(0.06) 0.60(0.06) 0.61(0.07) 0.63(0.07) 0.69(0.10) 0.72(0.10) 0.65(0.09) 0.58(0.10) 0.56(0.07) 0.56(0.08) 0.70(0.15) 0.75(0.09) 0.70(0.14) 0.66(0.07) 0.58(0.11) 0.60(0.08) 0.63(0.04) 0.63(0.09) 0.66(0.06) 0.68(0.10) 0.73(0.13) 0.75(0.08) 0.77(0.04) 0.74(0.08) 0.70(0.14) 0.67(0.09) 0.64(0.07) 0.64(0.10) 0.64(0.05) 0.61(0.11) 0.61(0.09) 0.61(0.10) 0.64(0.06) 0.66(0.14) 0.64(0.08) 0.62(0.06) 0.67(0.12) 0.62(0.19) 0.69(0.14) 0.75(0.08) 0.65(0.15) 0.59(0.09) 0.59(0.08) 0.60(0.03) 0.59(0.04) 0.59(0.10) 0.64(0.06) 0.63(0.10) 0.57(0.18) 0.60(0.10) 0.62(0.02) 0.61(0.03) 0.59(0.14) 0.60(0.06) 0.69(0.09) 0.65(0.08) 0.63(0.08) 0.64(0.07) 0.60(0.08) 0.63(0.07) 0.62(0.14) 0.61(0.06) 0.64(0.09) 0.66(0.07) 0.65(0.09) 0.65(0.05) 0.63(0.06) 0.60(0.10) 0.58(0.08) 0.60(0.13) 0.64(0.07) 0.68(0.07) 0.69(0.23) 0.69(0.15) 0.61(0.20) 0.70(0.48) 0.69(0.11) 0.85(0.20) 0.96(0.15) 1.07(0.14) 1.02(0.06) 1.01(0.12) 0.97(0.06) 0.97(0.05) 1.03(0.07) 0.97(0.08) 1.01(0.08) 1.02(0.10) 1.08(0.10) 0.97(0.12) 0.96(0.04) 0.95(0.07) 0.96(0.05) 0.93(0.07) 0.90(0.08) 0.76(0.16) 0.97(0.22) 0.68(0.41) 0.68(0.18) 0.68(0.10) 0.71(0.04) 0.76(0.07) 0.82(0.09) 0.80(0.06) 0.84(0.06) 0.77(0.07) 0.73(0.10) 0.73(0.03) 0.70(0.08) 0.74(0.08) 0.71(0.06) 0.77(0.11) 0.82(0.13) 0.84(0.08) 0.75(0.11) 0.76(0.10) 0.72(0.10) 0.75(0.06) 0.72(0.05) 0.73(0.04) 0.75(0.03) 0.72(0.03) 0.74(0.10) 0.78(0.09) 0.80(0.08) 0.71(0.09)
++ Max displacement in automask = 1.27 (mm) at sub-brick 806
++ Max delta displ  in automask = 0.48 (mm) at sub-brick 1045
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb03.GA06.r02.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GA06_unif_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master MPRAGE.GA06_unif_ns+tlrc -dxyz 2.5 -source pb02.GA06.r02.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA06_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GA06.r02.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 620.0 sec
3dNwarpApply -master MPRAGE.GA06_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA06_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb03.GA06.r03.blip+orig
++ 3dvolreg: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb03.GA06.r03.blip+orig.BRIK
++ Edging: x=4 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 86913 voxels
 + 9993 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 1096 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..700..701..702..703..704..705..706..707..708..709..710..711..712..713..714..715..716..717..718..719..720..721..722..723..724..725..726..727..728..729..730..731..732..733..734..735..736..737..738..739..740..741..742..743..744..745..746..747..748..749..750..751..752..753..754..755..756..757..758..759..760..761..762..763..764..765..766..767..768..769..770..771..772..773..774..775..776..777..778..779..780..781..782..783..784..785..786..787..788..789..790..791..792..793..794..795..796..797..798..799..800..801..802..803..804..805..806..807..808..809..810..811..812..813..814..815..816..817..818..819..820..821..822..823..824..825..826..827..828..829..830..831..832..833..834..835..836..837..838..839..840..841..842..843..844..845..846..847..848..849..850..851..852..853..854..855..856..857..858..859..860..861..862..863..864..865..866..867..868..869..870..871..872..873..874..875..876..877..878..879..880..881..882..883..884..885..886..887..888..889..890..891..892..893..894..895..896..897..898..899..900..901..902..903..904..905..906..907..908..909..910..911..912..913..914..915..916..917..918..919..920..921..922..923..924..925..926..927..928..929..930..931..932..933..934..935..936..937..938..939..940..941..942..943..944..945..946..947..948..949..950..951..952..953..954..955..956..957..958..959..960..961..962..963..964..965..966..967..968..969..970..971..972..973..974..975..976..977..978..979..980..981..982..983..984..985..986..987..988..989..990..991..992..993..994..995..996..997..998..999..1000..1001..1002..1003..1004..1005..1006..1007..1008..1009..1010..1011..1012..1013..1014..1015..1016..1017..1018..1019..1020..1021..1022..1023..1024..1025..1026..1027..1028..1029..1030..1031..1032..1033..1034..1035..1036..1037..1038..1039..1040..1041..1042..1043..1044..1045..1046..1047..1048..1049..1050..1051..1052..1053..1054..1055..1056..1057..1058..1059..1060..1061..1062..1063..1064..1065..1066..1067..1068..1069..1070..1071..1072..1073..1074..1075..1076..1077..1078..1079..1080..1081..1082..1083..1084..1085..1086..1087..1088..1089..1090..1091..1092..1093..1094..1095..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.179  pitch=-0.288  yaw=-0.278  dS=+1.532  dL=+0.000  dP=-0.599
++ Mean: roll=+0.310  pitch=+0.406  yaw=+0.165  dS=+2.601  dL=+0.157  dP=-0.148
++ Max : roll=+0.450  pitch=+1.277  yaw=+0.407  dS=+3.520  dL=+0.490  dP=+0.327
++ Max displacements (mm) for each sub-brick:
 2.80(0.00) 2.78(0.04) 2.79(0.14) 2.80(0.06) 2.79(0.04) 2.89(0.13) 2.86(0.12) 2.86(0.07) 2.87(0.06) 2.86(0.05) 2.84(0.04) 2.84(0.11) 2.85(0.04) 2.88(0.05) 2.89(0.05) 2.92(0.05) 2.89(0.11) 2.84(0.10) 2.85(0.06) 2.91(0.13) 3.03(0.13) 3.11(0.08) 3.05(0.07) 3.02(0.10) 3.01(0.03) 3.02(0.13) 3.12(0.11) 3.09(0.14) 3.12(0.08) 3.04(0.09) 3.01(0.09) 2.97(0.06) 3.03(0.09) 3.05(0.02) 3.10(0.05) 3.02(0.11) 3.02(0.10) 2.94(0.09) 3.04(0.12) 3.07(0.11) 3.12(0.05) 3.06(0.07) 3.02(0.09) 2.95(0.09) 3.07(0.14) 3.09(0.14) 3.18(0.14) 3.12(0.06) 3.11(0.12) 3.07(0.07) 3.11(0.10) 3.13(0.09) 3.19(0.06) 3.16(0.05) 3.11(0.13) 3.06(0.07) 3.06(0.10) 3.08(0.07) 3.12(0.05) 3.14(0.05) 3.09(0.12) 3.03(0.12) 2.98(0.07) 3.04(0.14) 3.10(0.07) 3.14(0.07) 3.10(0.10) 3.06(0.09) 3.03(0.04) 3.11(0.11) 3.18(0.10) 3.21(0.06) 3.15(0.10) 3.08(0.09) 3.06(0.03) 3.12(0.11) 3.16(0.05) 3.19(0.06) 3.11(0.14) 3.06(0.07) 3.03(0.04) 3.11(0.12) 3.14(0.07) 3.08(0.10) 3.01(0.19) 3.00(0.04) 2.98(0.08) 3.07(0.10) 3.10(0.05) 3.12(0.06) 3.04(0.14) 3.02(0.07) 3.05(0.04) 3.08(0.13) 3.07(0.08) 3.05(0.05) 2.99(0.12) 2.97(0.05) 3.00(0.06) 3.06(0.12) 3.08(0.03) 3.08(0.05) 3.02(0.09) 3.05(0.06) 3.03(0.09) 3.12(0.09) 3.13(0.05) 3.17(0.05) 3.13(0.06) 3.07(0.10) 3.06(0.09) 3.09(0.04) 3.11(0.06) 3.14(0.03) 3.13(0.04) 3.07(0.11) 3.03(0.06) 3.01(0.07) 3.08(0.07) 3.12(0.07) 3.14(0.04) 3.17(0.08) 3.12(0.06) 3.11(0.03) 3.18(0.09) 3.20(0.09) 3.20(0.05) 3.15(0.09) 3.10(0.05) 3.11(0.07) 3.18(0.16) 3.23(0.07) 3.25(0.07) 3.18(0.12) 3.13(0.06) 3.10(0.05) 3.19(0.16) 3.25(0.07) 3.26(0.07) 3.21(0.13) 3.14(0.08) 3.12(0.08) 3.17(0.14) 3.24(0.07) 3.27(0.06) 3.29(0.05) 3.19(0.10) 3.12(0.21) 3.04(0.12) 3.11(0.09) 3.21(0.10) 3.25(0.09) 3.22(0.10) 3.15(0.14) 3.14(0.03) 3.17(0.09) 3.22(0.11) 3.26(0.04) 3.25(0.06) 3.14(0.16) 3.07(0.08) 3.08(0.04) 3.16(0.10) 3.22(0.06) 3.25(0.07) 3.18(0.14) 3.13(0.05) 3.18(0.07) 3.19(0.12) 3.27(0.08) 3.24(0.05) 3.21(0.13) 3.15(0.07) 3.20(0.09) 3.20(0.07) 3.26(0.07) 3.25(0.03) 3.21(0.12) 3.16(0.06) 3.16(0.05) 3.21(0.09) 3.24(0.04) 3.27(0.06) 3.24(0.07) 3.18(0.08) 3.15(0.06) 3.16(0.08) 3.19(0.05) 3.24(0.07) 3.24(0.04) 3.23(0.02) 3.16(0.12) 3.13(0.07) 3.13(0.06) 3.19(0.08) 3.25(0.06) 3.27(0.04) 3.21(0.11) 3.15(0.06) 3.13(0.05) 3.20(0.10) 3.23(0.05) 3.25(0.06) 3.16(0.13) 3.27(0.12) 3.26(0.12) 3.31(0.06) 3.33(0.03) 3.33(0.05) 3.27(0.10) 3.23(0.08) 3.17(0.07) 3.31(0.18) 3.32(0.08) 3.34(0.04) 3.28(0.11) 3.27(0.09) 3.21(0.07) 3.31(0.11) 3.32(0.08) 3.37(0.07) 3.31(0.07) 3.27(0.12) 3.18(0.12) 3.21(0.08) 3.26(0.05) 3.32(0.12) 3.29(0.12) 3.23(0.07) 3.26(0.05) 3.30(0.07) 3.32(0.05) 3.33(0.06) 3.31(0.08) 3.28(0.06) 3.27(0.05) 3.31(0.10) 3.39(0.08) 3.39(0.07) 3.37(0.10) 3.29(0.08) 3.27(0.06) 3.28(0.11) 3.36(0.08) 3.40(0.05) 3.37(0.05) 3.31(0.16) 3.26(0.07) 3.26(0.06) 3.32(0.08) 3.38(0.07) 3.38(0.03) 3.33(0.09) 3.27(0.06) 3.27(0.05) 3.32(0.12) 3.41(0.10) 3.35(0.13) 3.30(0.15) 3.25(0.09) 3.21(0.11) 3.27(0.09) 3.35(0.12) 3.39(0.04) 3.32(0.10) 3.29(0.08) 3.29(0.06) 3.37(0.12) 3.38(0.09) 3.43(0.06) 3.33(0.14) 3.28(0.08) 3.25(0.08) 3.27(0.14) 3.36(0.10) 3.39(0.04) 3.42(0.03) 3.38(0.08) 3.29(0.11) 3.30(0.06) 3.32(0.09) 3.35(0.11) 3.46(0.12) 3.46(0.05) 3.35(0.11) 3.33(0.15) 3.37(0.16) 3.44(0.08) 3.50(0.07) 3.52(0.03) 3.52(0.06) 3.42(0.15) 3.37(0.06) 3.40(0.05) 3.45(0.11) 3.48(0.06) 3.49(0.04) 3.52(0.05) 3.48(0.05) 3.49(0.10) 3.41(0.09) 3.44(0.08) 3.47(0.06) 3.52(0.09) 3.55(0.03) 3.58(0.03) 3.56(0.04) 3.53(0.09) 3.45(0.08) 3.46(0.04) 3.50(0.09) 3.56(0.12) 3.58(0.04) 3.60(0.08) 3.58(0.11) 3.50(0.10) 3.42(0.14) 3.37(0.11) 3.41(0.07) 3.45(0.08) 3.49(0.07) 3.46(0.06) 3.43(0.11) 3.36(0.15) 3.22(0.18) 3.26(0.09) 3.24(0.12) 3.18(0.14) 3.06(0.23) 3.09(0.26) 3.10(0.18) 3.15(0.08) 3.24(0.11) 3.21(0.05) 3.11(0.15) 3.09(0.11) 3.13(0.15) 3.19(0.06) 3.25(0.06) 3.27(0.03) 3.29(0.02) 3.25(0.09) 3.21(0.08) 3.22(0.08) 3.27(0.07) 3.33(0.06) 3.36(0.07) 3.35(0.03) 3.36(0.09) 3.31(0.08) 3.28(0.06) 3.32(0.05) 3.38(0.10) 3.41(0.05) 3.41(0.08) 3.33(0.17) 3.29(0.04) 3.28(0.06) 3.34(0.09) 3.41(0.08) 3.45(0.07) 3.42(0.07) 3.35(0.08) 3.30(0.07) 3.33(0.10) 3.41(0.09) 3.43(0.06) 3.45(0.06) 3.37(0.09) 3.34(0.10) 3.26(0.08) 3.32(0.07) 3.36(0.06) 3.42(0.10) 3.43(0.04) 3.47(0.06) 3.39(0.10) 3.35(0.09) 3.30(0.06) 3.35(0.10) 3.40(0.05) 3.44(0.09) 3.45(0.02) 3.45(0.03) 3.39(0.07) 3.36(0.09) 3.34(0.09) 3.40(0.07) 3.41(0.10) 3.41(0.09) 3.31(0.11) 3.26(0.13) 3.16(0.11) 3.22(0.09) 3.31(0.09) 3.35(0.11) 3.40(0.10) 3.47(0.09) 3.42(0.08) 3.34(0.12) 3.32(0.10) 3.37(0.10) 3.44(0.11) 3.45(0.03) 3.47(0.05) 3.42(0.09) 3.38(0.04) 3.32(0.08) 3.33(0.10) 3.39(0.07) 3.42(0.08) 3.42(0.05) 3.37(0.09) 3.29(0.11) 3.30(0.04) 3.31(0.07) 3.39(0.11) 3.46(0.08) 3.45(0.03) 3.40(0.08) 3.32(0.10) 3.32(0.07) 3.36(0.08) 3.44(0.14) 3.46(0.08) 3.48(0.05) 3.44(0.12) 3.39(0.05) 3.35(0.07) 3.40(0.13) 3.47(0.08) 3.44(0.14) 3.38(0.17) 3.25(0.14) 3.23(0.12) 3.30(0.22) 3.40(0.30) 3.43(0.28) 3.32(0.11) 3.29(0.15) 3.30(0.05) 3.30(0.08) 3.37(0.16) 3.41(0.05) 3.46(0.06) 3.46(0.05) 3.42(0.06) 3.38(0.10) 3.36(0.04) 3.37(0.08) 3.42(0.06) 3.41(0.13) 3.41(0.13) 3.43(0.06) 3.47(0.22) 3.49(0.33) 3.46(0.11) 3.46(0.05) 3.47(0.03) 3.44(0.16) 3.48(0.08) 3.45(0.07) 3.36(0.10) 3.36(0.05) 3.48(0.19) 3.52(0.08) 3.58(0.07) 3.59(0.04) 3.58(0.06) 3.51(0.09) 3.48(0.03) 3.49(0.09) 3.55(0.13) 3.62(0.07) 3.64(0.05) 3.66(0.03) 3.60(0.08) 3.54(0.07) 3.50(0.10) 3.54(0.06) 3.59(0.08) 3.61(0.04) 3.62(0.03) 3.56(0.07) 3.47(0.11) 3.43(0.08) 3.41(0.13) 3.50(0.10) 3.55(0.11) 3.61(0.07) 3.61(0.02) 3.60(0.05) 3.53(0.10) 3.51(0.07) 3.54(0.09) 3.63(0.15) 3.64(0.05) 3.64(0.03) 3.58(0.08) 3.46(0.15) 3.36(0.15) 3.39(0.21) 3.46(0.09) 3.38(0.12) 3.31(0.10) 3.35(0.06) 3.26(0.11) 3.27(0.12) 3.27(0.05) 3.29(0.09) 3.33(0.08) 3.35(0.07) 3.37(0.07) 3.32(0.05) 3.29(0.10) 3.24(0.06) 3.25(0.15) 3.27(0.08) 3.29(0.05) 3.32(0.05) 3.26(0.10) 3.28(0.09) 3.28(0.04) 3.41(0.16) 3.41(0.08) 3.47(0.07) 3.42(0.09) 3.36(0.09) 3.37(0.08) 3.36(0.17) 3.42(0.08) 3.47(0.06) 3.48(0.02) 3.45(0.04) 3.41(0.11) 3.35(0.10) 3.33(0.11) 3.36(0.05) 3.42(0.15) 3.45(0.07) 3.38(0.11) 3.38(0.15) 3.36(0.04) 3.40(0.07) 3.44(0.10) 3.52(0.12) 3.43(0.19) 3.33(0.11) 3.34(0.06) 3.45(0.12) 3.53(0.13) 3.56(0.06) 3.57(0.06) 3.61(0.07) 3.58(0.05) 3.54(0.15) 3.54(0.16) 3.62(0.12) 3.66(0.11) 3.71(0.06) 3.68(0.04) 3.66(0.12) 3.62(0.08) 3.57(0.09) 3.60(0.11) 3.64(0.07) 3.62(0.06) 3.66(0.11) 3.67(0.23) 3.69(0.13) 3.65(0.08) 3.77(0.16) 3.87(0.12) 3.90(0.08) 3.95(0.07) 3.94(0.06) 3.89(0.09) 3.83(0.06) 3.75(0.11) 3.79(0.12) 3.82(0.04) 3.86(0.07) 3.89(0.11) 3.85(0.13) 3.85(0.18) 3.78(0.17) 3.81(0.07) 3.82(0.04) 3.83(0.10) 3.81(0.13) 3.68(0.19) 3.69(0.16) 3.57(0.32) 3.50(0.17) 3.57(0.11) 3.54(0.17) 3.49(0.11) 3.44(0.11) 3.43(0.04) 3.45(0.12) 3.47(0.14) 3.50(0.07) 3.40(0.11) 3.51(0.15) 3.51(0.07) 3.55(0.15) 3.45(0.11) 3.39(0.09) 3.38(0.05) 3.39(0.11) 3.27(0.27) 3.21(0.23) 3.29(0.16) 3.31(0.07) 3.35(0.06) 3.31(0.10) 3.22(0.14) 3.22(0.06) 3.24(0.12) 3.30(0.07) 3.32(0.08) 3.37(0.07) 3.33(0.07) 3.29(0.08) 3.25(0.10) 3.32(0.18) 3.42(0.10) 3.45(0.05) 3.44(0.05) 3.42(0.05) 3.40(0.05) 3.38(0.05) 3.34(0.06) 3.33(0.11) 3.35(0.06) 3.41(0.10) 3.43(0.05) 3.44(0.02) 3.41(0.10) 3.37(0.07) 3.34(0.09) 3.30(0.14) 3.36(0.08) 3.38(0.09) 3.43(0.07) 3.42(0.05) 3.39(0.12) 3.35(0.07) 3.29(0.08) 3.19(0.16) 3.25(0.08) 3.28(0.09) 3.28(0.17) 3.17(0.15) 3.18(0.11) 3.24(0.07) 3.28(0.12) 3.33(0.07) 3.36(0.08) 3.29(0.13) 3.24(0.06) 3.27(0.13) 3.37(0.12) 3.44(0.07) 3.49(0.05) 3.45(0.09) 3.41(0.07) 3.34(0.10) 3.33(0.12) 3.43(0.11) 3.39(0.13) 3.39(0.13) 3.40(0.02) 3.33(0.10) 3.29(0.10) 3.22(0.11) 3.32(0.12) 3.34(0.03) 3.39(0.08) 3.45(0.07) 3.46(0.10) 3.37(0.10) 3.34(0.07) 3.33(0.10) 3.39(0.13) 3.40(0.07) 3.44(0.08) 3.38(0.11) 3.34(0.06) 3.31(0.05) 3.36(0.09) 3.50(0.16) 3.53(0.11) 3.51(0.09) 3.45(0.06) 3.39(0.12) 3.38(0.14) 3.45(0.11) 3.49(0.11) 3.53(0.05) 3.55(0.05) 3.52(0.10) 3.43(0.12) 3.37(0.11) 3.37(0.19) 3.46(0.11) 3.52(0.06) 3.53(0.03) 3.52(0.03) 3.49(0.08) 3.44(0.06) 3.41(0.06) 3.46(0.10) 3.53(0.08) 3.55(0.10) 3.56(0.05) 3.50(0.06) 3.39(0.17) 3.36(0.04) 3.35(0.14) 3.44(0.16) 3.52(0.09) 3.49(0.05) 3.52(0.10) 3.43(0.15) 3.34(0.17) 3.37(0.12) 3.43(0.15) 3.52(0.09) 3.55(0.10) 3.48(0.16) 3.41(0.09) 3.39(0.03) 3.45(0.10) 3.52(0.10) 3.55(0.05) 3.49(0.11) 3.24(0.37) 3.16(0.14) 3.04(0.19) 2.97(0.20) 3.08(0.22) 3.14(0.36) 3.14(0.14) 3.18(0.08) 3.18(0.07) 3.15(0.13) 3.24(0.10) 3.24(0.11) 3.31(0.11) 3.29(0.05) 3.27(0.07) 3.27(0.10) 3.21(0.16) 3.27(0.07) 3.35(0.13) 3.41(0.08) 3.42(0.02) 3.39(0.11) 3.39(0.03) 3.36(0.07) 3.34(0.07) 3.37(0.06) 3.37(0.07) 3.42(0.07) 3.39(0.05) 3.40(0.10) 3.33(0.09) 3.31(0.11) 3.35(0.06) 3.37(0.13) 3.42(0.07) 3.39(0.06) 3.39(0.07) 3.35(0.07) 3.40(0.09) 3.40(0.07) 3.43(0.05) 3.41(0.04) 3.41(0.12) 3.33(0.12) 3.33(0.15) 3.29(0.06) 3.31(0.15) 3.36(0.06) 3.44(0.10) 3.49(0.06) 3.48(0.06) 3.48(0.05) 3.51(0.10) 3.51(0.10) 3.50(0.15) 3.52(0.08) 3.56(0.07) 3.58(0.04) 3.58(0.03) 3.55(0.08) 3.50(0.08) 3.44(0.10) 3.36(0.10) 3.25(0.25) 3.40(0.26) 3.22(0.32) 3.28(0.23) 3.23(0.10) 3.04(0.21) 3.02(0.16) 2.99(0.12) 2.98(0.08) 3.04(0.09) 3.05(0.07) 3.01(0.05) 2.97(0.11) 2.95(0.06) 2.95(0.09) 3.00(0.12) 3.05(0.07) 3.07(0.05) 3.04(0.12) 3.03(0.07) 3.00(0.10) 3.00(0.14) 3.07(0.08) 3.11(0.11) 3.12(0.06) 3.09(0.05) 3.02(0.10) 2.98(0.07) 2.96(0.12) 3.07(0.15) 3.07(0.05) 3.08(0.04) 3.09(0.10) 3.01(0.11) 2.98(0.08) 3.03(0.15) 3.08(0.08) 3.12(0.06) 3.10(0.07) 3.00(0.13) 3.01(0.06) 3.00(0.18) 3.09(0.11) 3.08(0.12) 3.03(0.13) 3.02(0.11) 2.95(0.11) 2.94(0.09) 2.98(0.09) 3.01(0.04) 3.03(0.07) 3.03(0.12) 2.92(0.12) 2.94(0.09) 2.90(0.11) 2.94(0.14) 2.97(0.12) 3.01(0.10) 2.98(0.14) 2.93(0.09) 2.90(0.06) 3.00(0.11) 3.05(0.07) 3.09(0.06) 3.15(0.09) 3.12(0.10) 3.05(0.10) 3.05(0.14) 3.10(0.07) 3.17(0.10) 3.19(0.02) 3.23(0.08) 3.20(0.05) 3.14(0.11) 3.08(0.07) 3.07(0.09) 3.08(0.10) 3.08(0.08) 3.13(0.09) 3.09(0.12) 3.00(0.09) 3.02(0.13) 3.01(0.11) 3.06(0.09) 3.11(0.06) 3.12(0.07) 3.10(0.12) 3.05(0.09) 3.02(0.09) 3.06(0.11) 3.13(0.07) 3.17(0.05) 3.18(0.03) 3.12(0.11) 3.05(0.09) 3.02(0.13) 3.07(0.06) 3.13(0.09) 3.18(0.07) 3.22(0.05) 3.20(0.09) 3.17(0.07) 3.12(0.08) 3.11(0.16) 3.16(0.07) 3.17(0.09) 3.19(0.08) 3.22(0.07) 3.19(0.09) 3.07(0.15) 3.04(0.09) 3.08(0.15) 3.15(0.09) 3.22(0.07) 3.25(0.03) 3.22(0.05) 3.15(0.12) 3.10(0.06) 3.15(0.12) 3.12(0.15) 3.05(0.13) 3.08(0.08) 3.11(0.28) 3.15(0.37) 3.13(0.08) 3.08(0.23) 3.04(0.12) 3.02(0.21) 3.03(0.08) 3.12(0.21) 3.28(0.51) 3.36(0.13) 3.35(0.16) 3.38(0.07) 3.40(0.06) 3.47(0.12) 3.52(0.14) 3.61(0.11) 3.67(0.10) 3.62(0.12) 3.51(0.15) 3.44(0.07) 3.43(0.11) 3.49(0.06) 3.51(0.07) 3.44(0.12) 3.40(0.06) 3.37(0.09) 3.31(0.09) 3.38(0.10) 3.40(0.06) 3.42(0.06) 3.45(0.04) 3.39(0.07) 3.37(0.06) 3.33(0.06) 3.35(0.11) 3.39(0.07) 3.39(0.04) 3.41(0.05) 3.46(0.07) 3.47(0.05) 3.42(0.11) 3.43(0.09) 3.38(0.06) 3.37(0.08) 3.41(0.07) 3.41(0.04) 3.41(0.06) 3.38(0.15) 3.33(0.10) 3.34(0.06) 3.28(0.12) 3.33(0.09) 3.35(0.08) 3.39(0.09) 3.34(0.07) 3.36(0.12) 3.34(0.06) 3.33(0.12) 3.40(0.08) 3.38(0.05) 3.41(0.04) 3.45(0.08) 3.44(0.06) 3.36(0.11) 3.32(0.13) 3.31(0.04) 3.23(0.12) 3.27(0.12) 3.28(0.06) 3.33(0.11) 3.30(0.11) 3.26(0.12) 3.24(0.10) 3.28(0.12) 3.34(0.13) 3.38(0.04) 3.40(0.04) 3.38(0.06) 3.34(0.06) 3.33(0.05) 3.26(0.08) 3.31(0.09) 3.33(0.04) 3.32(0.04) 3.29(0.14) 3.22(0.13) 3.27(0.11) 3.28(0.10) 3.53(0.46) 3.53(0.20) 3.55(0.17) 3.63(0.13) 3.63(0.06) 3.62(0.07) 3.60(0.08) 3.66(0.10) 3.66(0.06) 3.54(0.17) 3.53(0.08) 3.56(0.09) 3.59(0.06) 3.60(0.06) 3.60(0.07) 3.60(0.08) 3.62(0.07) 3.53(0.10) 3.57(0.10) 3.59(0.08) 3.66(0.09) 3.67(0.02) 3.67(0.07) 3.64(0.05) 3.68(0.11) 3.62(0.09) 3.60(0.06) 3.59(0.08) 3.61(0.09) 3.57(0.14) 3.63(0.17) 3.70(0.10) 3.66(0.09) 3.65(0.13) 3.65(0.07) 3.68(0.03) 3.67(0.05) 3.76(0.10) 3.69(0.07) 3.76(0.13) 3.73(0.05) 3.81(0.11) 3.64(0.18) 3.57(0.14) 3.51(0.10) 3.49(0.10) 3.45(0.09) 3.33(0.21) 3.25(0.15) 3.21(0.23) 3.47(0.85) 3.49(0.59) 3.62(0.55) 3.80(0.32) 3.83(0.17) 3.67(0.21) 3.45(0.60) 3.04(0.98) 3.31(0.45) 3.29(0.15) 3.22(0.08) 2.99(0.24) 2.93(0.20) 2.94(0.33) 3.04(0.13) 3.08(0.09) 3.15(0.08) 3.17(0.16) 3.20(0.17) 3.17(0.10) 3.00(0.19) 2.83(0.20) 2.88(0.18) 2.98(0.18) 2.93(0.06) 2.98(0.18) 2.92(0.08) 2.98(0.09) 2.94(0.10) 2.94(0.10) 2.91(0.10) 2.95(0.05) 2.87(0.09) 2.91(0.07) 2.87(0.05) 2.88(0.07)
++ Max displacement in automask = 3.95 (mm) at sub-brick 574
++ Max delta displ  in automask = 0.98 (mm) at sub-brick 1067
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb03.GA06.r03.blip+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.aff.Xat.1D MPRAGE.GA06_unif_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master MPRAGE.GA06_unif_ns+tlrc -dxyz 2.5 -source pb02.GA06.r03.tshift+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D   
                 blip_warp_For_WARP+orig -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA06_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'pb02.GA06.r03.tshift+orig'
++ Processing -nwarp 
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 645.3 sec
3dNwarpApply -master MPRAGE.GA06_unif_ns+tlrc -dxyz 2.5 -source rm.epi.all1+orig -nwarp anat.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'MPRAGE.GA06_unif_ns+tlrc'
++ output grid size = 2.5 mm
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GA06.r01.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.GA06.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.GA06.r02.volreg
++ 3dcalc: AFNI version=AFNI_21.2.04 (Jul 28 2021) [64-bit]
++ Authored by: A cast of thousands
